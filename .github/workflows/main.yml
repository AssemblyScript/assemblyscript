name: CI
on: [push, pull_request]
jobs:
  test:
    name: "Test on node: ${{ matrix.node_version }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: ["lts/*", "node"]
    steps:
    - uses: actions/checkout@v1
    - name: Set up node
      run: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
        export NVM_DIR="$HOME/.nvm"
        chmod +x $NVM_DIR/nvm.sh
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install ${{ matrix.node_version }}
        nvm use ${{ matrix.node_version }}
        npm -g install npm
        export PATH
    - name: Install dependencies
      run: node -v && npm ci --no-audit
    - name: Clean
      run: npm run clean
    - name: Test
      run: npm test
    - name: Build
      run: npm run build
    - name: Test
      run: npm test
  test-canary:
    name: "Test on node: canary"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up node
      env:
        NVM_NODEJS_ORG_MIRROR: https://nodejs.org/download/v8-canary/
      run: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
        export NVM_DIR="$HOME/.nvm"
        chmod +x $NVM_DIR/nvm.sh
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install node
        nvm use node
        npm -g install npm
        export PATH
    - name: Install dependencies
      run: node -v && npm ci --no-audit
    - name: Clean
      run: npm run clean
    - name: Test
      env:
        ASC_FEATURES: mutable-globals,simd,threads,reference-types,bigint-integration
      run: npm run test:compiler rt/flags features/js-bigint-integration features/reference-types features/simd features/threads

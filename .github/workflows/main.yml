name: CI
on: [push]
jobs:
  test:
    name: "Test on node '${{ matrix.node_version }}'"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: ["lts/*", "node"]
    steps:
    - uses: actions/checkout@v1
    - name: Set up node
      run: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
        export NVM_DIR="$HOME/.nvm"
        chmod +x $NVM_DIR/nvm.sh
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install ${{ matrix.node_version }}
        nvm use ${{ matrix.node_version }}
        node -v
        npm -g install npm
    - name: Install dependencies
      run: npm ci --no-audit
    - name: Test sources
      run: |
        npm run clean
        npm test
    - name: Test bundle
      run: |
        npm run build
        npm test
  test-canary:
    name: "Test experimental features on node 'canary'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up node
      env:
        NVM_NODEJS_ORG_MIRROR: https://nodejs.org/download/v8-canary/
      run: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
        export NVM_DIR="$HOME/.nvm"
        chmod +x $NVM_DIR/nvm.sh
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install node
        nvm use node
        node -v
        npm -g install npm
    - name: Install dependencies
      run: npm ci --no-audit
    - name: Test
      env:
        ASC_FEATURES: mutable-globals,simd,threads,reference-types,bigint-integration
      run: |
        npm run clean
        npm run test:compiler rt/flags features/threads

(module
 (type $v (func))
 (type $ii (func (param i32) (result i32)))
 (type $iii (func (param i32 i32) (result i32)))
 (type $iiiiv (func (param i32 i32 i32 i32)))
 (type $iiiv (func (param i32 i32 i32)))
 (type $iiv (func (param i32 i32)))
 (type $iiiiii (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $iv (func (param i32)))
 (type $iiii (func (param i32 i32 i32) (result i32)))
 (type $iiiiiv (func (param i32 i32 i32 i32 i32)))
 (type $iiF (func (param i32 i32) (result f64)))
 (import "env" "abort" (func $~lib/env/abort (param i32 i32 i32 i32)))
 (memory $0 1)
 (data (i32.const 8) "\03\00\00\001\002\003\00")
 (data (i32.const 24) "\03\00\00\00f\00o\00o\00")
 (data (i32.const 40) "\0d\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00")
 (data (i32.const 72) "\1c\00\00\00~\00l\00i\00b\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00")
 (data (i32.const 136) "\1b\00\00\00~\00l\00i\00b\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s\00")
 (data (i32.const 200) "\0e\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s\00")
 (data (i32.const 232) "\03\00\00\00b\00a\00r\00")
 (data (i32.const 248) "\04\00\00\00f\00l\00a\00g\00")
 (data (i32.const 264) "\03\00\00\00b\00a\00z\00")
 (data (i32.const 280) "\06\00\00\00f\00o\00o\00b\00a\00r\00")
 (data (i32.const 296) "\03\00\00\00a\00r\00r\00")
 (data (i32.const 312) "\00\00\00\00")
 (data (i32.const 320) "\01\00\00\000\00")
 (data (i32.const 328) "\17\00\00\00~\00l\00i\00b\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s\00")
 (data (i32.const 384) "\90\01\00\00\00\00\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 896) "\80\01\00\00d\00\00\00")
 (data (i32.const 904) "\01\00\00\00,\00")
 (data (i32.const 912) "\1e\00\00\00D\00o\00c\00u\00m\00e\00n\00t\00 \00e\00r\00r\00o\00r\00:\00 \00S\00i\00z\00e\00 \00<\00 \005\00 \00b\00y\00t\00e\00s\00")
 (data (i32.const 976) "\0f\00\00\00b\00s\00o\00n\00/\00d\00e\00c\00o\00d\00e\00r\00.\00t\00s\00")
 (data (i32.const 1016) "\1d\00\00\00D\00o\00c\00u\00m\00e\00n\00t\00 \00e\00r\00r\00o\00r\00:\00 \00S\00i\00z\00e\00 \00m\00i\00s\00m\00a\00t\00c\00h\00")
 (data (i32.const 1080) "#\00\00\00D\00o\00c\00u\00m\00e\00n\00t\00 \00e\00r\00r\00o\00r\00:\00 \00M\00i\00s\00s\00i\00n\00g\00 \00t\00e\00r\00m\00i\00n\00a\00t\00i\00o\00n\00")
 (data (i32.const 1160) " \00\00\00D\00o\00c\00u\00m\00e\00n\00t\00 \00e\00r\00r\00o\00r\00:\00 \00I\00l\00l\00e\00g\00a\00l\00 \00k\00e\00y\00 \00n\00a\00m\00e\00")
 (data (i32.const 1232) "\04\00\00\00n\00u\00l\00l\00")
 (data (i32.const 1248) "\18\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00s\00t\00r\00i\00n\00g\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 1304) "\04\00\00\00 \00:\00 \00\"\00")
 (data (i32.const 1320) "\01\00\00\00\"\00")
 (data (i32.const 1328) "\18\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00o\00b\00j\00e\00c\00t\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 1384) "\16\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00a\00r\00r\00a\00y\00 \00f\00i\00e\00l\00d\00")
 (data (i32.const 1432) "\1c\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00b\00y\00t\00e\00 \00a\00r\00r\00a\00y\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 1496) "\03\00\00\00 \00:\00 \00")
 (data (i32.const 1512) "\19\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00b\00o\00o\00l\00e\00a\00n\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 1568) "\04\00\00\00t\00r\00u\00e\00")
 (data (i32.const 1584) "\05\00\00\00f\00a\00l\00s\00e\00")
 (data (i32.const 1600) "\19\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00i\00n\00t\00e\00g\00e\00r\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 1656) "\1e\00\00\00P\00a\00r\00s\00i\00n\00g\00 \00e\00r\00r\00o\00r\00:\00 \00U\00n\00k\00n\00o\00w\00n\00 \00e\00l\00e\00m\00e\00n\00t\00")
 (data (i32.const 1720) "\16\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00n\00u\00l\00l\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 1768) "\07\00\00\00t\00e\00s\00t\00.\00t\00s\00")
 (data (i32.const 1792) "\01\00\00\00x\00")
 (data (i32.const 1800) "\01\00\00\00y\00")
 (data (i32.const 1808) "\10\00\00\000\001\002\003\004\005\006\007\008\009\00A\00B\00C\00D\00E\00F\00")
 (data (i32.const 1848) "\10\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00")
 (data (i32.const 1888) "\06\00\00\00r\00e\00s\00u\00l\00t\00")
 (table $0 1 anyfunc)
 (elem (i32.const 0) $null)
 (global $~lib/internal/allocator/AL_BITS i32 (i32.const 3))
 (global $~lib/internal/allocator/AL_SIZE i32 (i32.const 8))
 (global $~lib/internal/allocator/AL_MASK i32 (i32.const 7))
 (global $~lib/internal/allocator/MAX_SIZE_32 i32 (i32.const 1073741824))
 (global $~lib/allocator/arena/startOffset (mut i32) (i32.const 0))
 (global $~lib/allocator/arena/offset (mut i32) (i32.const 0))
 (global $bson/encoder/START_SIZE i32 (i32.const 32))
 (global $bson/encoder/GROWTH_MULT i32 (i32.const 2))
 (global $~lib/internal/arraybuffer/HEADER_SIZE i32 (i32.const 8))
 (global $~lib/internal/arraybuffer/MAX_BLENGTH i32 (i32.const 1073741816))
 (global $~lib/internal/string/HEADER_SIZE i32 (i32.const 4))
 (global $~argc (mut i32) (i32.const 0))
 (global $ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $~lib/internal/string/MAX_LENGTH i32 (i32.const 536870910))
 (global $~lib/internal/string/CharCode.PLUS i32 (i32.const 43))
 (global $~lib/internal/string/CharCode.MINUS i32 (i32.const 45))
 (global $~lib/internal/string/CharCode.DOT i32 (i32.const 46))
 (global $~lib/internal/string/CharCode._0 i32 (i32.const 48))
 (global $~lib/internal/string/CharCode._1 i32 (i32.const 49))
 (global $~lib/internal/string/CharCode._2 i32 (i32.const 50))
 (global $~lib/internal/string/CharCode._3 i32 (i32.const 51))
 (global $~lib/internal/string/CharCode._4 i32 (i32.const 52))
 (global $~lib/internal/string/CharCode._5 i32 (i32.const 53))
 (global $~lib/internal/string/CharCode._6 i32 (i32.const 54))
 (global $~lib/internal/string/CharCode._7 i32 (i32.const 55))
 (global $~lib/internal/string/CharCode._8 i32 (i32.const 56))
 (global $~lib/internal/string/CharCode._9 i32 (i32.const 57))
 (global $~lib/internal/string/CharCode.A i32 (i32.const 65))
 (global $~lib/internal/string/CharCode.B i32 (i32.const 66))
 (global $~lib/internal/string/CharCode.E i32 (i32.const 69))
 (global $~lib/internal/string/CharCode.N i32 (i32.const 78))
 (global $~lib/internal/string/CharCode.O i32 (i32.const 79))
 (global $~lib/internal/string/CharCode.X i32 (i32.const 88))
 (global $~lib/internal/string/CharCode.Z i32 (i32.const 90))
 (global $~lib/internal/string/CharCode.a i32 (i32.const 97))
 (global $~lib/internal/string/CharCode.b i32 (i32.const 98))
 (global $~lib/internal/string/CharCode.e i32 (i32.const 101))
 (global $~lib/internal/string/CharCode.n i32 (i32.const 110))
 (global $~lib/internal/string/CharCode.o i32 (i32.const 111))
 (global $~lib/internal/string/CharCode.x i32 (i32.const 120))
 (global $~lib/internal/string/CharCode.z i32 (i32.const 122))
 (global $NaN f64 (f64.const nan:0x8000000000000))
 (global $HEAP_BASE i32 (i32.const 1904))
 (export "memory" (memory $0))
 (export "table" (table $0))
 (export "runTest" (func $test/runTest))
 (start $start)
 (func $~lib/allocator/arena/__memory_allocate (; 1 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  get_local $0
  get_global $~lib/internal/allocator/MAX_SIZE_32
  i32.gt_u
  if
   unreachable
  end
  get_global $~lib/allocator/arena/offset
  set_local $1
  get_local $1
  get_local $0
  tee_local $2
  i32.const 1
  tee_local $3
  get_local $2
  get_local $3
  i32.gt_u
  select
  i32.add
  get_global $~lib/internal/allocator/AL_MASK
  i32.add
  get_global $~lib/internal/allocator/AL_MASK
  i32.const -1
  i32.xor
  i32.and
  set_local $4
  current_memory
  set_local $5
  get_local $4
  get_local $5
  i32.const 16
  i32.shl
  i32.gt_u
  if
   get_local $4
   get_local $1
   i32.sub
   i32.const 65535
   i32.add
   i32.const 65535
   i32.const -1
   i32.xor
   i32.and
   i32.const 16
   i32.shr_u
   set_local $2
   get_local $5
   tee_local $3
   get_local $2
   tee_local $6
   get_local $3
   get_local $6
   i32.gt_s
   select
   set_local $3
   get_local $3
   grow_memory
   i32.const 0
   i32.lt_s
   if
    get_local $2
    grow_memory
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
  end
  get_local $4
  set_global $~lib/allocator/arena/offset
  get_local $1
 )
 (func $~lib/memory/memory.allocate (; 2 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $~lib/allocator/arena/__memory_allocate
  return
 )
 (func $~lib/internal/arraybuffer/computeSize (; 3 ;) (type $ii) (param $0 i32) (result i32)
  i32.const 1
  i32.const 32
  get_local $0
  get_global $~lib/internal/arraybuffer/HEADER_SIZE
  i32.add
  i32.const 1
  i32.sub
  i32.clz
  i32.sub
  i32.shl
 )
 (func $~lib/internal/arraybuffer/allocateUnsafe (; 4 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  get_local $0
  get_global $~lib/internal/arraybuffer/MAX_BLENGTH
  i32.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 72
   i32.const 26
   i32.const 2
   call $~lib/env/abort
   unreachable
  end
  block $~lib/memory/memory.allocate|inlined.0 (result i32)
   get_local $0
   call $~lib/internal/arraybuffer/computeSize
   set_local $2
   get_local $2
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.0
  end
  set_local $1
  get_local $1
  get_local $0
  i32.store
  get_local $1
 )
 (func $~lib/internal/memory/memset (; 5 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  get_local $2
  i32.eqz
  if
   return
  end
  get_local $0
  get_local $1
  i32.store8
  get_local $0
  get_local $2
  i32.add
  i32.const 1
  i32.sub
  get_local $1
  i32.store8
  get_local $2
  i32.const 2
  i32.le_u
  if
   return
  end
  get_local $0
  i32.const 1
  i32.add
  get_local $1
  i32.store8
  get_local $0
  i32.const 2
  i32.add
  get_local $1
  i32.store8
  get_local $0
  get_local $2
  i32.add
  i32.const 2
  i32.sub
  get_local $1
  i32.store8
  get_local $0
  get_local $2
  i32.add
  i32.const 3
  i32.sub
  get_local $1
  i32.store8
  get_local $2
  i32.const 6
  i32.le_u
  if
   return
  end
  get_local $0
  i32.const 3
  i32.add
  get_local $1
  i32.store8
  get_local $0
  get_local $2
  i32.add
  i32.const 4
  i32.sub
  get_local $1
  i32.store8
  get_local $2
  i32.const 8
  i32.le_u
  if
   return
  end
  i32.const 0
  get_local $0
  i32.sub
  i32.const 3
  i32.and
  set_local $3
  get_local $0
  get_local $3
  i32.add
  set_local $0
  get_local $2
  get_local $3
  i32.sub
  set_local $2
  get_local $2
  i32.const -4
  i32.and
  set_local $2
  i32.const -1
  i32.const 255
  i32.div_u
  get_local $1
  i32.const 255
  i32.and
  i32.mul
  set_local $4
  get_local $0
  get_local $4
  i32.store
  get_local $0
  get_local $2
  i32.add
  i32.const 4
  i32.sub
  get_local $4
  i32.store
  get_local $2
  i32.const 8
  i32.le_u
  if
   return
  end
  get_local $0
  i32.const 4
  i32.add
  get_local $4
  i32.store
  get_local $0
  i32.const 8
  i32.add
  get_local $4
  i32.store
  get_local $0
  get_local $2
  i32.add
  i32.const 12
  i32.sub
  get_local $4
  i32.store
  get_local $0
  get_local $2
  i32.add
  i32.const 8
  i32.sub
  get_local $4
  i32.store
  get_local $2
  i32.const 24
  i32.le_u
  if
   return
  end
  get_local $0
  i32.const 12
  i32.add
  get_local $4
  i32.store
  get_local $0
  i32.const 16
  i32.add
  get_local $4
  i32.store
  get_local $0
  i32.const 20
  i32.add
  get_local $4
  i32.store
  get_local $0
  i32.const 24
  i32.add
  get_local $4
  i32.store
  get_local $0
  get_local $2
  i32.add
  i32.const 28
  i32.sub
  get_local $4
  i32.store
  get_local $0
  get_local $2
  i32.add
  i32.const 24
  i32.sub
  get_local $4
  i32.store
  get_local $0
  get_local $2
  i32.add
  i32.const 20
  i32.sub
  get_local $4
  i32.store
  get_local $0
  get_local $2
  i32.add
  i32.const 16
  i32.sub
  get_local $4
  i32.store
  i32.const 24
  get_local $0
  i32.const 4
  i32.and
  i32.add
  set_local $3
  get_local $0
  get_local $3
  i32.add
  set_local $0
  get_local $2
  get_local $3
  i32.sub
  set_local $2
  get_local $4
  i64.extend_u/i32
  get_local $4
  i64.extend_u/i32
  i64.const 32
  i64.shl
  i64.or
  set_local $5
  block $break|0
   loop $continue|0
    get_local $2
    i32.const 32
    i32.ge_u
    if
     block
      get_local $0
      get_local $5
      i64.store
      get_local $0
      i32.const 8
      i32.add
      get_local $5
      i64.store
      get_local $0
      i32.const 16
      i32.add
      get_local $5
      i64.store
      get_local $0
      i32.const 24
      i32.add
      get_local $5
      i64.store
      get_local $2
      i32.const 32
      i32.sub
      set_local $2
      get_local $0
      i32.const 32
      i32.add
      set_local $0
     end
     br $continue|0
    end
   end
  end
 )
 (func $~lib/array/Array<i32>#constructor (; 6 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $1
  i32.const 268435454
  i32.gt_u
  if
   i32.const 0
   i32.const 40
   i32.const 45
   i32.const 39
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  i32.const 2
  i32.shl
  set_local $2
  get_local $2
  call $~lib/internal/arraybuffer/allocateUnsafe
  set_local $3
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $4
    get_local $4
    i32.const 0
    i32.store
    get_local $4
    i32.const 0
    i32.store offset=4
    get_local $4
   end
   tee_local $0
  end
  tee_local $0
  get_local $3
  i32.store
  get_local $0
  get_local $1
  i32.store offset=4
  get_local $3
  get_global $~lib/internal/arraybuffer/HEADER_SIZE
  i32.add
  set_local $4
  i32.const 0
  set_local $5
  get_local $4
  get_local $5
  get_local $2
  call $~lib/internal/memory/memset
  get_local $0
 )
 (func $~lib/internal/typedarray/TypedArray<u8>#constructor (; 7 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $1
  i32.const 1073741816
  i32.gt_u
  if
   i32.const 0
   i32.const 136
   i32.const 23
   i32.const 34
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  i32.const 0
  i32.shl
  set_local $2
  get_local $2
  call $~lib/internal/arraybuffer/allocateUnsafe
  set_local $3
  get_local $3
  get_global $~lib/internal/arraybuffer/HEADER_SIZE
  i32.add
  set_local $4
  i32.const 0
  set_local $5
  get_local $4
  get_local $5
  get_local $2
  call $~lib/internal/memory/memset
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 12
    call $~lib/memory/memory.allocate
    set_local $5
    get_local $5
    i32.const 0
    i32.store
    get_local $5
    i32.const 0
    i32.store offset=4
    get_local $5
    i32.const 0
    i32.store offset=8
    get_local $5
   end
   tee_local $0
  end
  tee_local $0
  get_local $3
  i32.store
  get_local $0
  i32.const 0
  i32.store offset=4
  get_local $0
  get_local $2
  i32.store offset=8
  get_local $0
 )
 (func $~lib/internal/typedarray/TypedArray<u8>#__get (; 8 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  get_local $1
  get_local $0
  i32.load offset=8
  i32.const 0
  i32.shr_u
  i32.ge_u
  if
   i32.const 0
   i32.const 136
   i32.const 39
   i32.const 63
   call $~lib/env/abort
   unreachable
  end
  block $~lib/internal/arraybuffer/LOAD<u8,u8>|inlined.0 (result i32)
   get_local $0
   i32.load
   set_local $2
   get_local $0
   i32.load offset=4
   set_local $3
   get_local $2
   get_local $1
   i32.const 0
   i32.shl
   i32.add
   get_local $3
   i32.add
   i32.load8_u offset=8
  end
 )
 (func $~lib/internal/typedarray/TypedArray<u8>#__set (; 9 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  get_local $1
  get_local $0
  i32.load offset=8
  i32.const 0
  i32.shr_u
  i32.ge_u
  if
   i32.const 0
   i32.const 136
   i32.const 50
   i32.const 63
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load
  set_local $3
  get_local $0
  i32.load offset=4
  set_local $4
  get_local $3
  get_local $1
  i32.const 0
  i32.shl
  i32.add
  get_local $4
  i32.add
  get_local $2
  i32.store8 offset=8
 )
 (func $bson/encoder/BSONEncoder#growIfNeeded (; 10 ;) (type $iiv) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.1 (result i32)
   get_local $0
   i32.load offset=4
   set_local $2
   get_local $2
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  get_local $0
  i32.load offset=8
  get_local $1
  i32.add
  i32.ge_s
  if
   return
  end
  get_local $0
  i32.load offset=4
  set_local $2
  get_local $0
  i32.const 0
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.2 (result i32)
   get_local $0
   i32.load offset=4
   set_local $3
   get_local $3
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  get_global $bson/encoder/GROWTH_MULT
  i32.mul
  call $~lib/internal/typedarray/TypedArray<u8>#constructor
  i32.store offset=4
  block $break|0
   i32.const 0
   set_local $3
   loop $repeat|0
    get_local $3
    block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.4 (result i32)
     get_local $2
     i32.load offset=8
     i32.const 0
     i32.shr_u
    end
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $0
    i32.load offset=4
    get_local $3
    get_local $2
    get_local $3
    call $~lib/internal/typedarray/TypedArray<u8>#__get
    i32.const 255
    i32.and
    call $~lib/internal/typedarray/TypedArray<u8>#__set
    get_local $3
    i32.const 1
    i32.add
    set_local $3
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $bson/encoder/BSONEncoder#writeByte (; 11 ;) (type $iiv) (param $0 i32) (param $1 i32)
  (local $2 i32)
  get_local $0
  i32.const 1
  call $bson/encoder/BSONEncoder#growIfNeeded
  get_local $0
  i32.load offset=4
  block (result i32)
   get_local $0
   get_local $0
   i32.load offset=8
   tee_local $2
   i32.const 1
   i32.add
   i32.store offset=8
   get_local $2
  end
  get_local $1
  call $~lib/internal/typedarray/TypedArray<u8>#__set
 )
 (func $~lib/string/String#charCodeAt (; 12 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $0
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 200
   i32.const 75
   i32.const 4
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  get_local $0
  i32.load
  i32.ge_u
  if
   i32.const -1
   return
  end
  get_local $0
  get_local $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u offset=4
 )
 (func $bson/encoder/BSONEncoder#cstring (; 13 ;) (type $iiv) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  block $break|0
   block
    i32.const 0
    set_local $2
    get_local $1
    i32.load
    set_local $3
   end
   loop $repeat|0
    get_local $2
    get_local $3
    i32.lt_s
    i32.eqz
    br_if $break|0
    block
     get_local $1
     get_local $2
     call $~lib/string/String#charCodeAt
     set_local $4
     get_local $4
     i32.const 128
     i32.lt_s
     if
      get_local $0
      get_local $4
      call $bson/encoder/BSONEncoder#writeByte
     else      
      get_local $4
      i32.const 2048
      i32.lt_s
      if
       get_local $0
       get_local $4
       i32.const 6
       i32.shr_u
       i32.const 192
       i32.or
       call $bson/encoder/BSONEncoder#writeByte
       get_local $0
       get_local $4
       i32.const 63
       i32.and
       i32.const 128
       i32.or
       call $bson/encoder/BSONEncoder#writeByte
      else       
       get_local $0
       get_local $4
       i32.const 12
       i32.shr_u
       i32.const 224
       i32.or
       call $bson/encoder/BSONEncoder#writeByte
       get_local $0
       get_local $4
       i32.const 6
       i32.shr_u
       i32.const 63
       i32.and
       i32.const 128
       i32.or
       call $bson/encoder/BSONEncoder#writeByte
       get_local $0
       get_local $4
       i32.const 63
       i32.and
       i32.const 128
       i32.or
       call $bson/encoder/BSONEncoder#writeByte
      end
     end
    end
    get_local $2
    i32.const 1
    i32.add
    set_local $2
    br $repeat|0
    unreachable
   end
   unreachable
  end
  get_local $0
  i32.const 0
  call $bson/encoder/BSONEncoder#writeByte
 )
 (func $bson/encoder/BSONEncoder#int32 (; 14 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $2
  i32.const -1
  i32.eq
  if
   get_local $0
   i32.const 4
   call $bson/encoder/BSONEncoder#growIfNeeded
   get_local $0
   i32.load offset=8
   set_local $2
   get_local $0
   get_local $0
   i32.load offset=8
   i32.const 4
   i32.add
   i32.store offset=8
  end
  get_local $0
  i32.load offset=4
  get_local $2
  get_local $1
  i32.const 255
  i32.and
  call $~lib/internal/typedarray/TypedArray<u8>#__set
  get_local $0
  i32.load offset=4
  get_local $2
  i32.const 1
  i32.add
  get_local $1
  i32.const 8
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/internal/typedarray/TypedArray<u8>#__set
  get_local $0
  i32.load offset=4
  get_local $2
  i32.const 2
  i32.add
  get_local $1
  i32.const 16
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/internal/typedarray/TypedArray<u8>#__set
  get_local $0
  i32.load offset=4
  get_local $2
  i32.const 3
  i32.add
  get_local $1
  i32.const 24
  i32.shr_u
  i32.const 255
  i32.and
  call $~lib/internal/typedarray/TypedArray<u8>#__set
 )
 (func $bson/encoder/BSONEncoder#int32|trampoline (; 15 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  block $1of1
   block $0of1
    block $outOfRange
     get_global $~argc
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const -1
   set_local $2
  end
  get_local $0
  get_local $1
  get_local $2
  call $bson/encoder/BSONEncoder#int32
 )
 (func $bson/encoder/BSONEncoder#setInteger (; 16 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $0
  i32.const 16
  call $bson/encoder/BSONEncoder#writeByte
  get_local $0
  get_local $1
  call $bson/encoder/BSONEncoder#cstring
  i32.const 1
  set_global $~argc
  get_local $0
  get_local $2
  i32.const 0
  call $bson/encoder/BSONEncoder#int32|trampoline
 )
 (func $bson/encoder/BSONEncoder#setBoolean (; 17 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $0
  i32.const 8
  call $bson/encoder/BSONEncoder#writeByte
  get_local $0
  get_local $1
  call $bson/encoder/BSONEncoder#cstring
  get_local $0
  get_local $2
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 1
  else   
   i32.const 0
  end
  call $bson/encoder/BSONEncoder#writeByte
 )
 (func $~lib/internal/string/compareUnsafe (; 18 ;) (type $iiiiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  i32.const 0
  set_local $5
  get_local $0
  get_local $1
  i32.const 1
  i32.shl
  i32.add
  set_local $6
  get_local $2
  get_local $3
  i32.const 1
  i32.shl
  i32.add
  set_local $7
  block $break|0
   loop $continue|0
    get_local $4
    if (result i32)
     get_local $6
     i32.load16_u offset=4
     get_local $7
     i32.load16_u offset=4
     i32.sub
     tee_local $5
     i32.eqz
    else     
     get_local $4
    end
    if
     block
      get_local $4
      i32.const 1
      i32.sub
      set_local $4
      get_local $6
      i32.const 2
      i32.add
      set_local $6
      get_local $7
      i32.const 2
      i32.add
      set_local $7
     end
     br $continue|0
    end
   end
  end
  get_local $5
 )
 (func $~lib/string/String.__eq (; 19 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  get_local $1
  i32.eq
  if
   i32.const 1
   return
  end
  get_local $0
  i32.const 0
  i32.eq
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load
  set_local $3
  get_local $3
  get_local $1
  i32.load
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.const 0
  get_local $1
  i32.const 0
  get_local $3
  call $~lib/internal/string/compareUnsafe
  i32.eqz
 )
 (func $~lib/string/String.__ne (; 20 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $0
  get_local $1
  call $~lib/string/String.__eq
  i32.eqz
 )
 (func $bson/encoder/BSONEncoder#setString (; 21 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  get_local $0
  i32.const 2
  call $bson/encoder/BSONEncoder#writeByte
  get_local $0
  get_local $1
  call $bson/encoder/BSONEncoder#cstring
  get_local $0
  i32.load offset=8
  set_local $3
  get_local $0
  get_local $0
  i32.load offset=8
  i32.const 4
  i32.add
  i32.store offset=8
  get_local $0
  get_local $2
  call $bson/encoder/BSONEncoder#cstring
  get_local $0
  get_local $0
  i32.load offset=8
  get_local $3
  i32.sub
  i32.const 4
  i32.sub
  get_local $3
  call $bson/encoder/BSONEncoder#int32
 )
 (func $bson/encoder/BSONEncoder#setNull (; 22 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $0
  i32.const 10
  call $bson/encoder/BSONEncoder#writeByte
  get_local $0
  get_local $1
  call $bson/encoder/BSONEncoder#cstring
 )
 (func $bson/encoder/BSONEncoder#setUint8Array (; 23 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  get_local $0
  i32.const 5
  call $bson/encoder/BSONEncoder#writeByte
  get_local $0
  get_local $1
  call $bson/encoder/BSONEncoder#cstring
  i32.const 1
  set_global $~argc
  get_local $0
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.5 (result i32)
   get_local $2
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.const 0
  call $bson/encoder/BSONEncoder#int32|trampoline
  get_local $0
  i32.const 0
  call $bson/encoder/BSONEncoder#writeByte
  block $break|0
   i32.const 0
   set_local $3
   loop $repeat|0
    get_local $3
    block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.7 (result i32)
     get_local $2
     i32.load offset=8
     i32.const 0
     i32.shr_u
    end
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $0
    get_local $2
    get_local $3
    call $~lib/internal/typedarray/TypedArray<u8>#__get
    i32.const 255
    i32.and
    call $bson/encoder/BSONEncoder#writeByte
    get_local $3
    i32.const 1
    i32.add
    set_local $3
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $~lib/internal/memory/memcpy (; 24 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  block $break|0
   loop $continue|0
    get_local $2
    if (result i32)
     get_local $1
     i32.const 3
     i32.and
    else     
     get_local $2
    end
    if
     block
      block (result i32)
       get_local $0
       tee_local $5
       i32.const 1
       i32.add
       set_local $0
       get_local $5
      end
      block (result i32)
       get_local $1
       tee_local $5
       i32.const 1
       i32.add
       set_local $1
       get_local $5
      end
      i32.load8_u
      i32.store8
      get_local $2
      i32.const 1
      i32.sub
      set_local $2
     end
     br $continue|0
    end
   end
  end
  get_local $0
  i32.const 3
  i32.and
  i32.const 0
  i32.eq
  if
   block $break|1
    loop $continue|1
     get_local $2
     i32.const 16
     i32.ge_u
     if
      block
       get_local $0
       get_local $1
       i32.load
       i32.store
       get_local $0
       i32.const 4
       i32.add
       get_local $1
       i32.const 4
       i32.add
       i32.load
       i32.store
       get_local $0
       i32.const 8
       i32.add
       get_local $1
       i32.const 8
       i32.add
       i32.load
       i32.store
       get_local $0
       i32.const 12
       i32.add
       get_local $1
       i32.const 12
       i32.add
       i32.load
       i32.store
       get_local $1
       i32.const 16
       i32.add
       set_local $1
       get_local $0
       i32.const 16
       i32.add
       set_local $0
       get_local $2
       i32.const 16
       i32.sub
       set_local $2
      end
      br $continue|1
     end
    end
   end
   get_local $2
   i32.const 8
   i32.and
   if
    get_local $0
    get_local $1
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    get_local $1
    i32.const 4
    i32.add
    i32.load
    i32.store
    get_local $0
    i32.const 8
    i32.add
    set_local $0
    get_local $1
    i32.const 8
    i32.add
    set_local $1
   end
   get_local $2
   i32.const 4
   i32.and
   if
    get_local $0
    get_local $1
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    set_local $0
    get_local $1
    i32.const 4
    i32.add
    set_local $1
   end
   get_local $2
   i32.const 2
   i32.and
   if
    get_local $0
    get_local $1
    i32.load16_u
    i32.store16
    get_local $0
    i32.const 2
    i32.add
    set_local $0
    get_local $1
    i32.const 2
    i32.add
    set_local $1
   end
   get_local $2
   i32.const 1
   i32.and
   if
    block (result i32)
     get_local $0
     tee_local $5
     i32.const 1
     i32.add
     set_local $0
     get_local $5
    end
    block (result i32)
     get_local $1
     tee_local $5
     i32.const 1
     i32.add
     set_local $1
     get_local $5
    end
    i32.load8_u
    i32.store8
   end
   return
  end
  get_local $2
  i32.const 32
  i32.ge_u
  if
   block $break|2
    block $case2|2
     block $case1|2
      block $case0|2
       get_local $0
       i32.const 3
       i32.and
       set_local $5
       get_local $5
       i32.const 1
       i32.eq
       br_if $case0|2
       get_local $5
       i32.const 2
       i32.eq
       br_if $case1|2
       get_local $5
       i32.const 3
       i32.eq
       br_if $case2|2
       br $break|2
      end
      block
       get_local $1
       i32.load
       set_local $3
       block (result i32)
        get_local $0
        tee_local $5
        i32.const 1
        i32.add
        set_local $0
        get_local $5
       end
       block (result i32)
        get_local $1
        tee_local $5
        i32.const 1
        i32.add
        set_local $1
        get_local $5
       end
       i32.load8_u
       i32.store8
       block (result i32)
        get_local $0
        tee_local $5
        i32.const 1
        i32.add
        set_local $0
        get_local $5
       end
       block (result i32)
        get_local $1
        tee_local $5
        i32.const 1
        i32.add
        set_local $1
        get_local $5
       end
       i32.load8_u
       i32.store8
       block (result i32)
        get_local $0
        tee_local $5
        i32.const 1
        i32.add
        set_local $0
        get_local $5
       end
       block (result i32)
        get_local $1
        tee_local $5
        i32.const 1
        i32.add
        set_local $1
        get_local $5
       end
       i32.load8_u
       i32.store8
       get_local $2
       i32.const 3
       i32.sub
       set_local $2
       block $break|3
        loop $continue|3
         get_local $2
         i32.const 17
         i32.ge_u
         if
          block
           get_local $1
           i32.const 1
           i32.add
           i32.load
           set_local $4
           get_local $0
           get_local $3
           i32.const 24
           i32.shr_u
           get_local $4
           i32.const 8
           i32.shl
           i32.or
           i32.store
           get_local $1
           i32.const 5
           i32.add
           i32.load
           set_local $3
           get_local $0
           i32.const 4
           i32.add
           get_local $4
           i32.const 24
           i32.shr_u
           get_local $3
           i32.const 8
           i32.shl
           i32.or
           i32.store
           get_local $1
           i32.const 9
           i32.add
           i32.load
           set_local $4
           get_local $0
           i32.const 8
           i32.add
           get_local $3
           i32.const 24
           i32.shr_u
           get_local $4
           i32.const 8
           i32.shl
           i32.or
           i32.store
           get_local $1
           i32.const 13
           i32.add
           i32.load
           set_local $3
           get_local $0
           i32.const 12
           i32.add
           get_local $4
           i32.const 24
           i32.shr_u
           get_local $3
           i32.const 8
           i32.shl
           i32.or
           i32.store
           get_local $1
           i32.const 16
           i32.add
           set_local $1
           get_local $0
           i32.const 16
           i32.add
           set_local $0
           get_local $2
           i32.const 16
           i32.sub
           set_local $2
          end
          br $continue|3
         end
        end
       end
       br $break|2
       unreachable
      end
      unreachable
     end
     block
      get_local $1
      i32.load
      set_local $3
      block (result i32)
       get_local $0
       tee_local $5
       i32.const 1
       i32.add
       set_local $0
       get_local $5
      end
      block (result i32)
       get_local $1
       tee_local $5
       i32.const 1
       i32.add
       set_local $1
       get_local $5
      end
      i32.load8_u
      i32.store8
      block (result i32)
       get_local $0
       tee_local $5
       i32.const 1
       i32.add
       set_local $0
       get_local $5
      end
      block (result i32)
       get_local $1
       tee_local $5
       i32.const 1
       i32.add
       set_local $1
       get_local $5
      end
      i32.load8_u
      i32.store8
      get_local $2
      i32.const 2
      i32.sub
      set_local $2
      block $break|4
       loop $continue|4
        get_local $2
        i32.const 18
        i32.ge_u
        if
         block
          get_local $1
          i32.const 2
          i32.add
          i32.load
          set_local $4
          get_local $0
          get_local $3
          i32.const 16
          i32.shr_u
          get_local $4
          i32.const 16
          i32.shl
          i32.or
          i32.store
          get_local $1
          i32.const 6
          i32.add
          i32.load
          set_local $3
          get_local $0
          i32.const 4
          i32.add
          get_local $4
          i32.const 16
          i32.shr_u
          get_local $3
          i32.const 16
          i32.shl
          i32.or
          i32.store
          get_local $1
          i32.const 10
          i32.add
          i32.load
          set_local $4
          get_local $0
          i32.const 8
          i32.add
          get_local $3
          i32.const 16
          i32.shr_u
          get_local $4
          i32.const 16
          i32.shl
          i32.or
          i32.store
          get_local $1
          i32.const 14
          i32.add
          i32.load
          set_local $3
          get_local $0
          i32.const 12
          i32.add
          get_local $4
          i32.const 16
          i32.shr_u
          get_local $3
          i32.const 16
          i32.shl
          i32.or
          i32.store
          get_local $1
          i32.const 16
          i32.add
          set_local $1
          get_local $0
          i32.const 16
          i32.add
          set_local $0
          get_local $2
          i32.const 16
          i32.sub
          set_local $2
         end
         br $continue|4
        end
       end
      end
      br $break|2
      unreachable
     end
     unreachable
    end
    block
     get_local $1
     i32.load
     set_local $3
     block (result i32)
      get_local $0
      tee_local $5
      i32.const 1
      i32.add
      set_local $0
      get_local $5
     end
     block (result i32)
      get_local $1
      tee_local $5
      i32.const 1
      i32.add
      set_local $1
      get_local $5
     end
     i32.load8_u
     i32.store8
     get_local $2
     i32.const 1
     i32.sub
     set_local $2
     block $break|5
      loop $continue|5
       get_local $2
       i32.const 19
       i32.ge_u
       if
        block
         get_local $1
         i32.const 3
         i32.add
         i32.load
         set_local $4
         get_local $0
         get_local $3
         i32.const 8
         i32.shr_u
         get_local $4
         i32.const 24
         i32.shl
         i32.or
         i32.store
         get_local $1
         i32.const 7
         i32.add
         i32.load
         set_local $3
         get_local $0
         i32.const 4
         i32.add
         get_local $4
         i32.const 8
         i32.shr_u
         get_local $3
         i32.const 24
         i32.shl
         i32.or
         i32.store
         get_local $1
         i32.const 11
         i32.add
         i32.load
         set_local $4
         get_local $0
         i32.const 8
         i32.add
         get_local $3
         i32.const 8
         i32.shr_u
         get_local $4
         i32.const 24
         i32.shl
         i32.or
         i32.store
         get_local $1
         i32.const 15
         i32.add
         i32.load
         set_local $3
         get_local $0
         i32.const 12
         i32.add
         get_local $4
         i32.const 8
         i32.shr_u
         get_local $3
         i32.const 24
         i32.shl
         i32.or
         i32.store
         get_local $1
         i32.const 16
         i32.add
         set_local $1
         get_local $0
         i32.const 16
         i32.add
         set_local $0
         get_local $2
         i32.const 16
         i32.sub
         set_local $2
        end
        br $continue|5
       end
      end
     end
     br $break|2
     unreachable
    end
    unreachable
   end
  end
  get_local $2
  i32.const 16
  i32.and
  if
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
  end
  get_local $2
  i32.const 8
  i32.and
  if
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
  end
  get_local $2
  i32.const 4
  i32.and
  if
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
  end
  get_local $2
  i32.const 2
  i32.and
  if
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
  end
  get_local $2
  i32.const 1
  i32.and
  if
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
  end
 )
 (func $~lib/internal/memory/memmove (; 25 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  get_local $0
  get_local $1
  i32.eq
  if
   return
  end
  get_local $1
  get_local $2
  i32.add
  get_local $0
  i32.le_u
  tee_local $3
  if (result i32)
   get_local $3
  else   
   get_local $0
   get_local $2
   i32.add
   get_local $1
   i32.le_u
  end
  if
   get_local $0
   get_local $1
   get_local $2
   call $~lib/internal/memory/memcpy
   return
  end
  get_local $0
  get_local $1
  i32.lt_u
  if
   get_local $1
   i32.const 7
   i32.and
   get_local $0
   i32.const 7
   i32.and
   i32.eq
   if
    block $break|0
     loop $continue|0
      get_local $0
      i32.const 7
      i32.and
      if
       block
        get_local $2
        i32.eqz
        if
         return
        end
        get_local $2
        i32.const 1
        i32.sub
        set_local $2
        block (result i32)
         get_local $0
         tee_local $3
         i32.const 1
         i32.add
         set_local $0
         get_local $3
        end
        block (result i32)
         get_local $1
         tee_local $3
         i32.const 1
         i32.add
         set_local $1
         get_local $3
        end
        i32.load8_u
        i32.store8
       end
       br $continue|0
      end
     end
    end
    block $break|1
     loop $continue|1
      get_local $2
      i32.const 8
      i32.ge_u
      if
       block
        get_local $0
        get_local $1
        i64.load
        i64.store
        get_local $2
        i32.const 8
        i32.sub
        set_local $2
        get_local $0
        i32.const 8
        i32.add
        set_local $0
        get_local $1
        i32.const 8
        i32.add
        set_local $1
       end
       br $continue|1
      end
     end
    end
   end
   block $break|2
    loop $continue|2
     get_local $2
     if
      block
       block (result i32)
        get_local $0
        tee_local $3
        i32.const 1
        i32.add
        set_local $0
        get_local $3
       end
       block (result i32)
        get_local $1
        tee_local $3
        i32.const 1
        i32.add
        set_local $1
        get_local $3
       end
       i32.load8_u
       i32.store8
       get_local $2
       i32.const 1
       i32.sub
       set_local $2
      end
      br $continue|2
     end
    end
   end
  else   
   get_local $1
   i32.const 7
   i32.and
   get_local $0
   i32.const 7
   i32.and
   i32.eq
   if
    block $break|3
     loop $continue|3
      get_local $0
      get_local $2
      i32.add
      i32.const 7
      i32.and
      if
       block
        get_local $2
        i32.eqz
        if
         return
        end
        get_local $0
        get_local $2
        i32.const 1
        i32.sub
        tee_local $2
        i32.add
        get_local $1
        get_local $2
        i32.add
        i32.load8_u
        i32.store8
       end
       br $continue|3
      end
     end
    end
    block $break|4
     loop $continue|4
      get_local $2
      i32.const 8
      i32.ge_u
      if
       block
        get_local $2
        i32.const 8
        i32.sub
        set_local $2
        get_local $0
        get_local $2
        i32.add
        get_local $1
        get_local $2
        i32.add
        i64.load
        i64.store
       end
       br $continue|4
      end
     end
    end
   end
   block $break|5
    loop $continue|5
     get_local $2
     if
      get_local $0
      get_local $2
      i32.const 1
      i32.sub
      tee_local $2
      i32.add
      get_local $1
      get_local $2
      i32.add
      i32.load8_u
      i32.store8
      br $continue|5
     end
    end
   end
  end
 )
 (func $~lib/allocator/arena/__memory_free (; 26 ;) (type $iv) (param $0 i32)
  nop
 )
 (func $~lib/internal/arraybuffer/reallocateUnsafe (; 27 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $0
  i32.load
  set_local $2
  get_local $1
  get_local $2
  i32.gt_s
  if
   get_local $1
   get_global $~lib/internal/arraybuffer/MAX_BLENGTH
   i32.le_s
   i32.eqz
   if
    i32.const 0
    i32.const 72
    i32.const 40
    i32.const 4
    call $~lib/env/abort
    unreachable
   end
   get_local $1
   get_local $2
   call $~lib/internal/arraybuffer/computeSize
   get_global $~lib/internal/arraybuffer/HEADER_SIZE
   i32.sub
   i32.le_s
   if
    get_local $0
    get_local $1
    i32.store
   else    
    get_local $1
    call $~lib/internal/arraybuffer/allocateUnsafe
    set_local $3
    get_local $3
    get_global $~lib/internal/arraybuffer/HEADER_SIZE
    i32.add
    set_local $4
    get_local $0
    get_global $~lib/internal/arraybuffer/HEADER_SIZE
    i32.add
    set_local $5
    get_local $4
    get_local $5
    get_local $2
    call $~lib/internal/memory/memmove
    block $~lib/memory/memory.free|inlined.0
     block
      get_local $0
      call $~lib/allocator/arena/__memory_free
      br $~lib/memory/memory.free|inlined.0
      unreachable
     end
     unreachable
    end
    get_local $3
    set_local $0
   end
   get_local $0
   get_global $~lib/internal/arraybuffer/HEADER_SIZE
   i32.add
   get_local $2
   i32.add
   set_local $3
   i32.const 0
   set_local $5
   get_local $1
   get_local $2
   i32.sub
   set_local $4
   get_local $3
   get_local $5
   get_local $4
   call $~lib/internal/memory/memset
  else   
   get_local $1
   get_local $2
   i32.lt_s
   if
    get_local $1
    i32.const 0
    i32.ge_s
    i32.eqz
    if
     i32.const 0
     i32.const 72
     i32.const 62
     i32.const 4
     call $~lib/env/abort
     unreachable
    end
    get_local $0
    get_local $1
    i32.store
   end
  end
  get_local $0
 )
 (func $~lib/array/Array<i32>#push (; 28 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  get_local $0
  i32.load offset=4
  set_local $2
  get_local $0
  i32.load
  set_local $3
  get_local $3
  i32.load
  i32.const 2
  i32.shr_u
  set_local $4
  get_local $2
  i32.const 1
  i32.add
  set_local $5
  get_local $2
  get_local $4
  i32.ge_u
  if
   get_local $2
   i32.const 268435454
   i32.ge_u
   if
    i32.const 0
    i32.const 40
    i32.const 184
    i32.const 42
    call $~lib/env/abort
    unreachable
   end
   get_local $3
   get_local $5
   i32.const 2
   i32.shl
   call $~lib/internal/arraybuffer/reallocateUnsafe
   set_local $3
   get_local $0
   get_local $3
   i32.store
  end
  get_local $0
  get_local $5
  i32.store offset=4
  i32.const 0
  set_local $6
  get_local $3
  get_local $2
  i32.const 2
  i32.shl
  i32.add
  get_local $6
  i32.add
  get_local $1
  i32.store offset=8
  get_local $5
 )
 (func $bson/encoder/BSONEncoder#pushArray (; 29 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $0
  i32.const 4
  call $bson/encoder/BSONEncoder#writeByte
  get_local $0
  get_local $1
  call $bson/encoder/BSONEncoder#cstring
  get_local $0
  i32.load
  get_local $0
  i32.load offset=8
  call $~lib/array/Array<i32>#push
  drop
  get_local $0
  get_local $0
  i32.load offset=8
  i32.const 4
  i32.add
  i32.store offset=8
 )
 (func $~lib/array/Array<Array<String>>#__get (; 30 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  i32.load
  set_local $2
  get_local $1
  get_local $2
  i32.load
  i32.const 2
  i32.shr_u
  i32.lt_u
  if (result i32)
   i32.const 0
   set_local $3
   get_local $2
   get_local $1
   i32.const 2
   i32.shl
   i32.add
   get_local $3
   i32.add
   i32.load offset=8
  else   
   unreachable
  end
 )
 (func $~lib/array/Array<i32>#__unchecked_set (; 31 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  get_local $0
  i32.load
  set_local $3
  i32.const 0
  set_local $4
  get_local $3
  get_local $1
  i32.const 2
  i32.shl
  i32.add
  get_local $4
  i32.add
  get_local $2
  i32.store offset=8
 )
 (func $~lib/internal/number/decimalCount32 (; 32 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  i32.const 100000
  i32.lt_u
  if
   get_local $0
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    i32.const 2
    get_local $0
    i32.const 10
    i32.lt_u
    select
    return
   else    
    i32.const 4
    i32.const 5
    get_local $0
    i32.const 10000
    i32.lt_u
    select
    set_local $1
    i32.const 3
    get_local $1
    get_local $0
    i32.const 1000
    i32.lt_u
    select
    return
   end
   unreachable
   unreachable
  else   
   get_local $0
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    i32.const 7
    get_local $0
    i32.const 1000000
    i32.lt_u
    select
    return
   else    
    i32.const 9
    i32.const 10
    get_local $0
    i32.const 1000000000
    i32.lt_u
    select
    set_local $1
    i32.const 8
    get_local $1
    get_local $0
    i32.const 100000000
    i32.lt_u
    select
    return
   end
   unreachable
   unreachable
  end
  unreachable
  unreachable
 )
 (func $~lib/internal/string/allocateUnsafe (; 33 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  get_local $0
  i32.const 0
  i32.gt_s
  tee_local $1
  if (result i32)
   get_local $0
   get_global $~lib/internal/string/MAX_LENGTH
   i32.le_s
  else   
   get_local $1
  end
  i32.eqz
  if
   i32.const 0
   i32.const 328
   i32.const 14
   i32.const 2
   call $~lib/env/abort
   unreachable
  end
  block $~lib/memory/memory.allocate|inlined.1 (result i32)
   get_global $~lib/internal/string/HEADER_SIZE
   get_local $0
   i32.const 1
   i32.shl
   i32.add
   set_local $1
   get_local $1
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.1
  end
  set_local $2
  get_local $2
  get_local $0
  i32.store
  get_local $2
 )
 (func $~lib/internal/number/utoa32_lut (; 34 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i64)
  block $~lib/internal/number/DIGITS|inlined.0 (result i32)
   i32.const 896
  end
  i32.load
  set_local $3
  block $break|0
   loop $continue|0
    get_local $1
    i32.const 10000
    i32.ge_u
    if
     block
      get_local $1
      i32.const 10000
      i32.div_u
      set_local $4
      get_local $1
      i32.const 10000
      i32.rem_u
      set_local $5
      get_local $4
      set_local $1
      get_local $5
      i32.const 100
      i32.div_u
      set_local $6
      get_local $5
      i32.const 100
      i32.rem_u
      set_local $7
      block $~lib/internal/arraybuffer/LOAD<u32,u64>|inlined.0 (result i64)
       i32.const 0
       set_local $8
       get_local $3
       get_local $6
       i32.const 2
       i32.shl
       i32.add
       get_local $8
       i32.add
       i64.load32_u offset=8
      end
      set_local $9
      block $~lib/internal/arraybuffer/LOAD<u32,u64>|inlined.1 (result i64)
       i32.const 0
       set_local $8
       get_local $3
       get_local $7
       i32.const 2
       i32.shl
       i32.add
       get_local $8
       i32.add
       i64.load32_u offset=8
      end
      set_local $10
      get_local $2
      i32.const 4
      i32.sub
      set_local $2
      get_local $0
      get_local $2
      i32.const 1
      i32.shl
      i32.add
      get_local $9
      get_local $10
      i64.const 32
      i64.shl
      i64.or
      i64.store offset=4
     end
     br $continue|0
    end
   end
  end
  get_local $1
  i32.const 100
  i32.ge_u
  if
   get_local $1
   i32.const 100
   i32.div_u
   set_local $7
   get_local $1
   i32.const 100
   i32.rem_u
   set_local $6
   get_local $7
   set_local $1
   get_local $2
   i32.const 2
   i32.sub
   set_local $2
   block $~lib/internal/arraybuffer/LOAD<u32,u32>|inlined.0 (result i32)
    i32.const 0
    set_local $5
    get_local $3
    get_local $6
    i32.const 2
    i32.shl
    i32.add
    get_local $5
    i32.add
    i32.load offset=8
   end
   set_local $5
   get_local $0
   get_local $2
   i32.const 1
   i32.shl
   i32.add
   get_local $5
   i32.store offset=4
  end
  get_local $1
  i32.const 10
  i32.ge_u
  if
   get_local $2
   i32.const 2
   i32.sub
   set_local $2
   block $~lib/internal/arraybuffer/LOAD<u32,u32>|inlined.1 (result i32)
    i32.const 0
    set_local $5
    get_local $3
    get_local $1
    i32.const 2
    i32.shl
    i32.add
    get_local $5
    i32.add
    i32.load offset=8
   end
   set_local $5
   get_local $0
   get_local $2
   i32.const 1
   i32.shl
   i32.add
   get_local $5
   i32.store offset=4
  else   
   get_local $2
   i32.const 1
   i32.sub
   set_local $2
   get_global $~lib/internal/string/CharCode._0
   get_local $1
   i32.add
   set_local $5
   get_local $0
   get_local $2
   i32.const 1
   i32.shl
   i32.add
   get_local $5
   i32.store16 offset=4
  end
 )
 (func $~lib/internal/number/itoa32 (; 35 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  i32.eqz
  if
   i32.const 320
   return
  end
  get_local $0
  i32.const 0
  i32.lt_s
  set_local $1
  get_local $1
  if
   i32.const 0
   get_local $0
   i32.sub
   set_local $0
  end
  get_local $0
  call $~lib/internal/number/decimalCount32
  get_local $1
  i32.add
  set_local $2
  get_local $2
  call $~lib/internal/string/allocateUnsafe
  set_local $3
  get_local $3
  get_local $0
  get_local $2
  call $~lib/internal/number/utoa32_lut
  get_local $1
  if
   get_local $3
   get_global $~lib/internal/string/CharCode.MINUS
   i32.store16 offset=4
  end
  get_local $3
 )
 (func $~lib/internal/number/itoa<i32> (; 36 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $~lib/internal/number/itoa32
  return
 )
 (func $~lib/internal/number/itoa_stream<i32> (; 37 ;) (type $iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  get_local $0
  get_local $1
  i32.const 1
  i32.shl
  i32.add
  set_local $0
  get_local $2
  i32.eqz
  if
   get_local $0
   get_global $~lib/internal/string/CharCode._0
   i32.store16 offset=4
   i32.const 1
   return
  end
  i32.const 0
  set_local $3
  get_local $2
  i32.const 0
  i32.lt_s
  set_local $4
  get_local $4
  if
   i32.const 0
   get_local $2
   i32.sub
   set_local $2
  end
  get_local $2
  call $~lib/internal/number/decimalCount32
  get_local $4
  i32.add
  set_local $3
  get_local $0
  get_local $2
  get_local $3
  call $~lib/internal/number/utoa32_lut
  get_local $4
  if
   get_local $0
   get_global $~lib/internal/string/CharCode.MINUS
   i32.store16 offset=4
  end
  get_local $3
 )
 (func $~lib/internal/string/copyUnsafe (; 38 ;) (type $iiiiiv) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  get_local $0
  get_local $1
  i32.const 1
  i32.shl
  i32.add
  get_global $~lib/internal/string/HEADER_SIZE
  i32.add
  set_local $5
  get_local $2
  get_local $3
  i32.const 1
  i32.shl
  i32.add
  get_global $~lib/internal/string/HEADER_SIZE
  i32.add
  set_local $6
  get_local $4
  i32.const 1
  i32.shl
  set_local $7
  get_local $5
  get_local $6
  get_local $7
  call $~lib/internal/memory/memmove
 )
 (func $~lib/string/String#substring (; 39 ;) (type $iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  get_local $0
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 200
   i32.const 269
   i32.const 4
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load
  set_local $3
  get_local $1
  tee_local $4
  i32.const 0
  tee_local $5
  get_local $4
  get_local $5
  i32.gt_s
  select
  tee_local $4
  get_local $3
  tee_local $5
  get_local $4
  get_local $5
  i32.lt_s
  select
  set_local $6
  get_local $2
  tee_local $4
  i32.const 0
  tee_local $5
  get_local $4
  get_local $5
  i32.gt_s
  select
  tee_local $4
  get_local $3
  tee_local $5
  get_local $4
  get_local $5
  i32.lt_s
  select
  set_local $7
  get_local $6
  tee_local $4
  get_local $7
  tee_local $5
  get_local $4
  get_local $5
  i32.lt_s
  select
  set_local $8
  get_local $6
  tee_local $4
  get_local $7
  tee_local $5
  get_local $4
  get_local $5
  i32.gt_s
  select
  set_local $9
  get_local $9
  get_local $8
  i32.sub
  set_local $3
  get_local $3
  i32.eqz
  if
   i32.const 312
   return
  end
  get_local $8
  i32.eqz
  tee_local $4
  if (result i32)
   get_local $9
   get_local $0
   i32.load
   i32.eq
  else   
   get_local $4
  end
  if
   get_local $0
   return
  end
  get_local $3
  call $~lib/internal/string/allocateUnsafe
  set_local $10
  get_local $10
  i32.const 0
  get_local $0
  get_local $8
  get_local $3
  call $~lib/internal/string/copyUnsafe
  get_local $10
 )
 (func $~lib/array/Array<i32>#join (; 40 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  get_local $0
  i32.load offset=4
  i32.const 1
  i32.sub
  set_local $2
  get_local $2
  i32.const 0
  i32.lt_s
  if
   i32.const 312
   return
  end
  i32.const 312
  set_local $3
  get_local $0
  i32.load
  set_local $5
  get_local $1
  i32.load
  set_local $6
  get_local $6
  i32.const 0
  i32.ne
  set_local $7
  get_local $2
  i32.eqz
  if
   block $~lib/internal/arraybuffer/LOAD<i32,i32>|inlined.0 (result i32)
    i32.const 0
    set_local $8
    i32.const 0
    set_local $9
    get_local $5
    get_local $8
    i32.const 2
    i32.shl
    i32.add
    get_local $9
    i32.add
    i32.load offset=8
   end
   call $~lib/internal/number/itoa<i32>
   return
  end
  i32.const 11
  get_local $6
  i32.add
  get_local $2
  i32.mul
  i32.const 11
  i32.add
  set_local $9
  get_local $9
  call $~lib/internal/string/allocateUnsafe
  set_local $8
  i32.const 0
  set_local $10
  block $break|0
   i32.const 0
   set_local $11
   loop $repeat|0
    get_local $11
    get_local $2
    i32.lt_s
    i32.eqz
    br_if $break|0
    block
     block $~lib/internal/arraybuffer/LOAD<i32,i32>|inlined.1 (result i32)
      i32.const 0
      set_local $12
      get_local $5
      get_local $11
      i32.const 2
      i32.shl
      i32.add
      get_local $12
      i32.add
      i32.load offset=8
     end
     set_local $4
     get_local $10
     get_local $8
     get_local $10
     get_local $4
     call $~lib/internal/number/itoa_stream<i32>
     i32.add
     set_local $10
     get_local $7
     if
      get_local $8
      get_local $10
      get_local $1
      i32.const 0
      get_local $6
      call $~lib/internal/string/copyUnsafe
      get_local $10
      get_local $6
      i32.add
      set_local $10
     end
    end
    get_local $11
    i32.const 1
    i32.add
    set_local $11
    br $repeat|0
    unreachable
   end
   unreachable
  end
  block $~lib/internal/arraybuffer/LOAD<i32,i32>|inlined.2 (result i32)
   i32.const 0
   set_local $11
   get_local $5
   get_local $2
   i32.const 2
   i32.shl
   i32.add
   get_local $11
   i32.add
   i32.load offset=8
  end
  set_local $4
  get_local $10
  get_local $8
  get_local $10
  get_local $4
  call $~lib/internal/number/itoa_stream<i32>
  i32.add
  set_local $10
  get_local $8
  set_local $11
  get_local $9
  get_local $10
  i32.gt_s
  if
   get_local $8
   i32.const 0
   get_local $10
   call $~lib/string/String#substring
   set_local $11
   get_local $8
   i32.eqz
   if
    i32.const 0
    i32.const 328
    i32.const 28
    i32.const 4
    call $~lib/env/abort
    unreachable
   end
   block $~lib/memory/memory.free|inlined.1
    block
     get_local $8
     call $~lib/allocator/arena/__memory_free
     br $~lib/memory/memory.free|inlined.1
     unreachable
    end
    unreachable
   end
  end
  get_local $11
  return
 )
 (func $near/near.str<i32> (; 41 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  block (result i32)
   i32.const 0
   i32.const 1
   call $~lib/array/Array<i32>#constructor
   set_local $1
   get_local $1
   i32.const 0
   get_local $0
   call $~lib/array/Array<i32>#__unchecked_set
   get_local $1
  end
  set_local $1
  block $~lib/array/Array<i32>#toString|inlined.0 (result i32)
   get_local $1
   i32.const 904
   call $~lib/array/Array<i32>#join
  end
 )
 (func $~lib/array/Array<String>#__get (; 42 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  i32.load
  set_local $2
  get_local $1
  get_local $2
  i32.load
  i32.const 2
  i32.shr_u
  i32.lt_u
  if (result i32)
   i32.const 0
   set_local $3
   get_local $2
   get_local $1
   i32.const 2
   i32.shl
   i32.add
   get_local $3
   i32.add
   i32.load offset=8
  else   
   unreachable
  end
 )
 (func $main_near/__near_encode_Array_String (; 43 ;) (type $iiv) (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $break|0
   i32.const 0
   set_local $2
   loop $repeat|0
    get_local $2
    block $~lib/array/Array<String>#get:length|inlined.1 (result i32)
     get_local $0
     i32.load offset=4
    end
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $0
    get_local $2
    call $~lib/array/Array<String>#__get
    i32.const 0
    call $~lib/string/String.__ne
    if
     get_local $1
     get_local $2
     call $near/near.str<i32>
     get_local $0
     get_local $2
     call $~lib/array/Array<String>#__get
     call $bson/encoder/BSONEncoder#setString
    else     
     get_local $1
     get_local $2
     call $near/near.str<i32>
     call $bson/encoder/BSONEncoder#setNull
    end
    get_local $2
    i32.const 1
    i32.add
    set_local $2
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $~lib/array/Array<i32>#pop (; 44 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $0
  i32.load offset=4
  set_local $1
  get_local $1
  i32.const 1
  i32.lt_s
  if
   i32.const 0
   i32.const 40
   i32.const 246
   i32.const 20
   call $~lib/env/abort
   unreachable
  end
  block $~lib/internal/arraybuffer/LOAD<i32,i32>|inlined.3 (result i32)
   get_local $0
   i32.load
   set_local $2
   get_local $1
   i32.const 1
   i32.sub
   tee_local $1
   set_local $3
   i32.const 0
   set_local $4
   get_local $2
   get_local $3
   i32.const 2
   i32.shl
   i32.add
   get_local $4
   i32.add
   i32.load offset=8
  end
  set_local $5
  get_local $0
  get_local $1
  i32.store offset=4
  get_local $5
 )
 (func $bson/encoder/BSONEncoder#popArray (; 45 ;) (type $iv) (param $0 i32)
  (local $1 i32)
  get_local $0
  i32.const 0
  call $bson/encoder/BSONEncoder#writeByte
  get_local $0
  i32.load
  call $~lib/array/Array<i32>#pop
  set_local $1
  get_local $0
  get_local $0
  i32.load offset=8
  get_local $1
  i32.sub
  get_local $1
  call $bson/encoder/BSONEncoder#int32
 )
 (func $main_near/__near_encode_Array_Array_String (; 46 ;) (type $iiv) (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $break|0
   i32.const 0
   set_local $2
   loop $repeat|0
    get_local $2
    block $~lib/array/Array<Array<String>>#get:length|inlined.1 (result i32)
     get_local $0
     i32.load offset=4
    end
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $0
    get_local $2
    call $~lib/array/Array<Array<String>>#__get
    i32.const 0
    i32.ne
    if
     get_local $1
     get_local $2
     call $near/near.str<i32>
     call $bson/encoder/BSONEncoder#pushArray
     get_local $0
     get_local $2
     call $~lib/array/Array<Array<String>>#__get
     get_local $1
     call $main_near/__near_encode_Array_String
     get_local $1
     call $bson/encoder/BSONEncoder#popArray
    else     
     get_local $1
     get_local $2
     call $near/near.str<i32>
     call $bson/encoder/BSONEncoder#setNull
    end
    get_local $2
    i32.const 1
    i32.add
    set_local $2
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $main_near/__near_encode_FooBar (; 47 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $1
  i32.const 24
  get_local $0
  i32.load
  call $bson/encoder/BSONEncoder#setInteger
  get_local $1
  i32.const 232
  get_local $0
  i32.load offset=4
  call $bson/encoder/BSONEncoder#setInteger
  get_local $1
  i32.const 248
  get_local $0
  i32.load8_u offset=8
  call $bson/encoder/BSONEncoder#setBoolean
  get_local $0
  i32.load offset=12
  i32.const 0
  call $~lib/string/String.__ne
  if
   get_local $1
   i32.const 264
   get_local $0
   i32.load offset=12
   call $bson/encoder/BSONEncoder#setString
  else   
   get_local $1
   i32.const 264
   call $bson/encoder/BSONEncoder#setNull
  end
  get_local $0
  i32.load offset=16
  i32.const 0
  i32.ne
  if
   get_local $1
   i32.const 280
   get_local $0
   i32.load offset=16
   call $bson/encoder/BSONEncoder#setUint8Array
  else   
   get_local $1
   i32.const 280
   call $bson/encoder/BSONEncoder#setNull
  end
  get_local $0
  i32.load offset=20
  i32.const 0
  i32.ne
  if
   get_local $1
   i32.const 296
   call $bson/encoder/BSONEncoder#pushArray
   get_local $0
   i32.load offset=20
   get_local $1
   call $main_near/__near_encode_Array_Array_String
   get_local $1
   call $bson/encoder/BSONEncoder#popArray
  else   
   get_local $1
   i32.const 296
   call $bson/encoder/BSONEncoder#setNull
  end
 )
 (func $~lib/typedarray/Uint8Array#subarray (; 48 ;) (type $iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.8 (result i32)
   get_local $0
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  set_local $3
  get_local $1
  i32.const 0
  i32.lt_s
  if
   get_local $3
   get_local $1
   i32.add
   tee_local $4
   i32.const 0
   tee_local $5
   get_local $4
   get_local $5
   i32.gt_s
   select
   set_local $1
  else   
   get_local $1
   tee_local $4
   get_local $3
   tee_local $5
   get_local $4
   get_local $5
   i32.lt_s
   select
   set_local $1
  end
  get_local $2
  i32.const 0
  i32.lt_s
  if
   get_local $3
   get_local $2
   i32.add
   tee_local $4
   get_local $1
   tee_local $5
   get_local $4
   get_local $5
   i32.gt_s
   select
   set_local $2
  else   
   get_local $2
   tee_local $4
   get_local $3
   tee_local $5
   get_local $4
   get_local $5
   i32.lt_s
   select
   tee_local $4
   get_local $1
   tee_local $5
   get_local $4
   get_local $5
   i32.gt_s
   select
   set_local $2
  end
  block $~lib/memory/memory.allocate|inlined.2 (result i32)
   i32.const 12
   set_local $4
   get_local $4
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.2
  end
  set_local $4
  get_local $4
  get_local $0
  i32.load
  i32.store
  get_local $4
  get_local $0
  i32.load offset=4
  get_local $1
  i32.const 0
  i32.shl
  i32.add
  i32.store offset=4
  get_local $4
  get_local $2
  get_local $1
  i32.sub
  i32.const 0
  i32.shl
  i32.store offset=8
  get_local $4
 )
 (func $bson/encoder/BSONEncoder#serialize (; 49 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  i32.const 0
  call $bson/encoder/BSONEncoder#writeByte
  get_local $0
  get_local $0
  i32.load offset=8
  i32.const 0
  call $bson/encoder/BSONEncoder#int32
  get_local $0
  i32.load offset=4
  i32.const 0
  get_local $0
  i32.load offset=8
  call $~lib/typedarray/Uint8Array#subarray
 )
 (func $bson/decoder/BSONDecoder<__near_BSONHandler_FooBar>#constructor (; 50 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $2
    get_local $2
    i32.const 0
    i32.store
    get_local $2
    i32.const 0
    i32.store offset=4
    get_local $2
   end
   tee_local $0
  end
  tee_local $0
  get_local $1
  i32.store
  get_local $0
 )
 (func $~lib/string/String.fromCharCode (; 51 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  i32.const 1
  call $~lib/internal/string/allocateUnsafe
  set_local $1
  get_local $1
  get_local $0
  i32.store16 offset=4
  get_local $1
 )
 (func $~lib/string/String#concat (; 52 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $0
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 200
   i32.const 110
   i32.const 4
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  i32.const 0
  i32.eq
  if
   i32.const 1232
   set_local $1
  end
  get_local $0
  i32.load
  set_local $2
  get_local $1
  i32.load
  set_local $3
  get_local $2
  get_local $3
  i32.add
  set_local $4
  get_local $4
  i32.const 0
  i32.eq
  if
   i32.const 312
   return
  end
  get_local $4
  call $~lib/internal/string/allocateUnsafe
  set_local $5
  get_local $5
  i32.const 0
  get_local $0
  i32.const 0
  get_local $2
  call $~lib/internal/string/copyUnsafe
  get_local $5
  get_local $2
  get_local $1
  i32.const 0
  get_local $3
  call $~lib/internal/string/copyUnsafe
  get_local $5
 )
 (func $~lib/string/String.__concat (; 53 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $0
  i32.eqz
  if
   i32.const 1232
   set_local $0
  end
  get_local $0
  get_local $1
  call $~lib/string/String#concat
 )
 (func $bson/decoder/bin2str (; 54 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  i32.const 312
  set_local $1
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.15 (result i32)
   get_local $0
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  set_local $2
  i32.const 0
  set_local $3
  block $break|0
   loop $continue|0
    get_local $3
    get_local $2
    i32.lt_s
    if
     block
      get_local $0
      get_local $3
      call $~lib/internal/typedarray/TypedArray<u8>#__get
      i32.const 255
      i32.and
      set_local $4
      get_local $4
      i32.const 128
      i32.lt_s
      if
       get_local $1
       get_local $4
       call $~lib/string/String.fromCharCode
       call $~lib/string/String.__concat
       set_local $1
       get_local $3
       i32.const 1
       i32.add
       set_local $3
      else       
       get_local $4
       i32.const 191
       i32.gt_s
       tee_local $7
       if (result i32)
        get_local $4
        i32.const 224
        i32.lt_s
       else        
        get_local $7
       end
       if
        get_local $0
        get_local $3
        i32.const 1
        i32.add
        call $~lib/internal/typedarray/TypedArray<u8>#__get
        i32.const 255
        i32.and
        set_local $5
        get_local $1
        get_local $4
        i32.const 31
        i32.and
        i32.const 6
        i32.shl
        get_local $5
        i32.const 63
        i32.and
        i32.or
        call $~lib/string/String.fromCharCode
        call $~lib/string/String.__concat
        set_local $1
        get_local $3
        i32.const 2
        i32.add
        set_local $3
       else        
        get_local $0
        get_local $3
        i32.const 1
        i32.add
        call $~lib/internal/typedarray/TypedArray<u8>#__get
        i32.const 255
        i32.and
        set_local $5
        get_local $0
        get_local $3
        i32.const 2
        i32.add
        call $~lib/internal/typedarray/TypedArray<u8>#__get
        i32.const 255
        i32.and
        set_local $6
        get_local $1
        get_local $4
        i32.const 15
        i32.and
        i32.const 12
        i32.shl
        get_local $5
        i32.const 63
        i32.and
        i32.const 6
        i32.shl
        i32.or
        get_local $6
        i32.const 63
        i32.and
        i32.or
        call $~lib/string/String.fromCharCode
        call $~lib/string/String.__concat
        set_local $1
        get_local $3
        i32.const 3
        i32.add
        set_local $3
       end
      end
     end
     br $continue|0
    end
   end
  end
  get_local $1
 )
 (func $bson/decoder/ThrowingBSONHandler#setString (; 55 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  i32.const 0
  i32.eqz
  if
   i32.const 1248
   get_local $1
   call $~lib/string/String.__concat
   i32.const 1304
   call $~lib/string/String.__concat
   get_local $2
   call $~lib/string/String.__concat
   i32.const 1320
   call $~lib/string/String.__concat
   i32.const 976
   i32.const 45
   i32.const 7
   call $~lib/env/abort
   unreachable
  end
 )
 (func $main_near/__near_BSONHandler_FooBar#setString (; 56 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $1
  i32.const 264
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=8
   get_local $2
   i32.store offset=12
   return
  end
  get_local $0
  get_local $1
  get_local $2
  call $bson/decoder/ThrowingBSONHandler#setString
 )
 (func $~lib/array/Array<Array<String>>#constructor (; 57 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $1
  i32.const 268435454
  i32.gt_u
  if
   i32.const 0
   i32.const 40
   i32.const 45
   i32.const 39
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  i32.const 2
  i32.shl
  set_local $2
  get_local $2
  call $~lib/internal/arraybuffer/allocateUnsafe
  set_local $3
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $4
    get_local $4
    i32.const 0
    i32.store
    get_local $4
    i32.const 0
    i32.store offset=4
    get_local $4
   end
   tee_local $0
  end
  tee_local $0
  get_local $3
  i32.store
  get_local $0
  get_local $1
  i32.store offset=4
  get_local $3
  get_global $~lib/internal/arraybuffer/HEADER_SIZE
  i32.add
  set_local $4
  i32.const 0
  set_local $5
  get_local $4
  get_local $5
  get_local $2
  call $~lib/internal/memory/memset
  get_local $0
 )
 (func $bson/decoder/BSONDecoder<__near_BSONHandler_Array_Array_String>#constructor (; 58 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $2
    get_local $2
    i32.const 0
    i32.store
    get_local $2
    i32.const 0
    i32.store offset=4
    get_local $2
   end
   tee_local $0
  end
  tee_local $0
  get_local $1
  i32.store
  get_local $0
 )
 (func $~lib/array/Array<String>#constructor (; 59 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $1
  i32.const 268435454
  i32.gt_u
  if
   i32.const 0
   i32.const 40
   i32.const 45
   i32.const 39
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  i32.const 2
  i32.shl
  set_local $2
  get_local $2
  call $~lib/internal/arraybuffer/allocateUnsafe
  set_local $3
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $4
    get_local $4
    i32.const 0
    i32.store
    get_local $4
    i32.const 0
    i32.store offset=4
    get_local $4
   end
   tee_local $0
  end
  tee_local $0
  get_local $3
  i32.store
  get_local $0
  get_local $1
  i32.store offset=4
  get_local $3
  get_global $~lib/internal/arraybuffer/HEADER_SIZE
  i32.add
  set_local $4
  i32.const 0
  set_local $5
  get_local $4
  get_local $5
  get_local $2
  call $~lib/internal/memory/memset
  get_local $0
 )
 (func $bson/decoder/BSONDecoder<__near_BSONHandler_Array_String>#constructor (; 60 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $2
    get_local $2
    i32.const 0
    i32.store
    get_local $2
    i32.const 0
    i32.store offset=4
    get_local $2
   end
   tee_local $0
  end
  tee_local $0
  get_local $1
  i32.store
  get_local $0
 )
 (func $~lib/internal/string/parse<f64> (; 61 ;) (type $iiF) (param $0 i32) (param $1 i32) (result f64)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 f64)
  get_local $0
  i32.load
  set_local $2
  get_local $2
  i32.eqz
  if
   f64.const nan:0x8000000000000
   return
  end
  get_local $0
  set_local $3
  get_local $3
  i32.load16_u offset=4
  set_local $4
  get_local $4
  get_global $~lib/internal/string/CharCode.MINUS
  i32.eq
  if
   get_local $2
   i32.const 1
   i32.sub
   tee_local $2
   i32.eqz
   if
    f64.const nan:0x8000000000000
    return
   end
   get_local $3
   i32.const 2
   i32.add
   tee_local $3
   i32.load16_u offset=4
   set_local $4
   f64.const -1
   set_local $5
  else   
   get_local $4
   get_global $~lib/internal/string/CharCode.PLUS
   i32.eq
   if
    get_local $2
    i32.const 1
    i32.sub
    tee_local $2
    i32.eqz
    if
     f64.const nan:0x8000000000000
     return
    end
    get_local $3
    i32.const 2
    i32.add
    tee_local $3
    i32.load16_u offset=4
    set_local $4
    f64.const 1
    set_local $5
   else    
    f64.const 1
    set_local $5
   end
  end
  get_local $1
  i32.eqz
  if
   get_local $4
   get_global $~lib/internal/string/CharCode._0
   i32.eq
   tee_local $6
   if (result i32)
    get_local $2
    i32.const 2
    i32.gt_s
   else    
    get_local $6
   end
   if
    block $break|0
     block $case6|0
      block $case5|0
       block $case4|0
        block $case3|0
         block $case2|0
          block $case1|0
           block $case0|0
            get_local $3
            i32.const 2
            i32.add
            i32.load16_u offset=4
            set_local $6
            get_local $6
            get_global $~lib/internal/string/CharCode.B
            i32.eq
            br_if $case0|0
            get_local $6
            get_global $~lib/internal/string/CharCode.b
            i32.eq
            br_if $case1|0
            get_local $6
            get_global $~lib/internal/string/CharCode.O
            i32.eq
            br_if $case2|0
            get_local $6
            get_global $~lib/internal/string/CharCode.o
            i32.eq
            br_if $case3|0
            get_local $6
            get_global $~lib/internal/string/CharCode.X
            i32.eq
            br_if $case4|0
            get_local $6
            get_global $~lib/internal/string/CharCode.x
            i32.eq
            br_if $case5|0
            br $case6|0
           end
          end
          block
           get_local $3
           i32.const 4
           i32.add
           set_local $3
           get_local $2
           i32.const 2
           i32.sub
           set_local $2
           i32.const 2
           set_local $1
           br $break|0
           unreachable
          end
          unreachable
         end
        end
        block
         get_local $3
         i32.const 4
         i32.add
         set_local $3
         get_local $2
         i32.const 2
         i32.sub
         set_local $2
         i32.const 8
         set_local $1
         br $break|0
         unreachable
        end
        unreachable
       end
      end
      block
       get_local $3
       i32.const 4
       i32.add
       set_local $3
       get_local $2
       i32.const 2
       i32.sub
       set_local $2
       i32.const 16
       set_local $1
       br $break|0
       unreachable
      end
      unreachable
     end
     i32.const 10
     set_local $1
    end
   else    
    i32.const 10
    set_local $1
   end
  else   
   get_local $1
   i32.const 2
   i32.lt_s
   tee_local $6
   if (result i32)
    get_local $6
   else    
    get_local $1
    i32.const 36
    i32.gt_s
   end
   if
    f64.const nan:0x8000000000000
    return
   end
  end
  f64.const 0
  set_local $7
  block $break|1
   loop $continue|1
    block (result i32)
     get_local $2
     tee_local $6
     i32.const 1
     i32.sub
     set_local $2
     get_local $6
    end
    if
     block
      get_local $3
      i32.load16_u offset=4
      set_local $4
      get_local $4
      get_global $~lib/internal/string/CharCode._0
      i32.ge_s
      tee_local $6
      if (result i32)
       get_local $4
       get_global $~lib/internal/string/CharCode._9
       i32.le_s
      else       
       get_local $6
      end
      if
       get_local $4
       get_global $~lib/internal/string/CharCode._0
       i32.sub
       set_local $4
      else       
       get_local $4
       get_global $~lib/internal/string/CharCode.A
       i32.ge_s
       tee_local $6
       if (result i32)
        get_local $4
        get_global $~lib/internal/string/CharCode.Z
        i32.le_s
       else        
        get_local $6
       end
       if
        get_local $4
        get_global $~lib/internal/string/CharCode.A
        i32.const 10
        i32.sub
        i32.sub
        set_local $4
       else        
        get_local $4
        get_global $~lib/internal/string/CharCode.a
        i32.ge_s
        tee_local $6
        if (result i32)
         get_local $4
         get_global $~lib/internal/string/CharCode.z
         i32.le_s
        else         
         get_local $6
        end
        if
         get_local $4
         get_global $~lib/internal/string/CharCode.a
         i32.const 10
         i32.sub
         i32.sub
         set_local $4
        else         
         br $break|1
        end
       end
      end
      get_local $4
      get_local $1
      i32.ge_s
      if
       br $break|1
      end
      get_local $7
      get_local $1
      f64.convert_s/i32
      f64.mul
      get_local $4
      f64.convert_s/i32
      f64.add
      set_local $7
      get_local $3
      i32.const 2
      i32.add
      set_local $3
     end
     br $continue|1
    end
   end
  end
  get_local $5
  get_local $7
  f64.mul
 )
 (func $~lib/string/parseInt (; 62 ;) (type $iiF) (param $0 i32) (param $1 i32) (result f64)
  get_local $0
  get_local $1
  call $~lib/internal/string/parse<f64>
 )
 (func $~lib/array/Array<String>#__set (; 63 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $0
  i32.load
  set_local $3
  get_local $3
  i32.load
  i32.const 2
  i32.shr_u
  set_local $4
  get_local $1
  get_local $4
  i32.ge_u
  if
   get_local $1
   i32.const 268435454
   i32.ge_u
   if
    i32.const 0
    i32.const 40
    i32.const 109
    i32.const 41
    call $~lib/env/abort
    unreachable
   end
   get_local $3
   get_local $1
   i32.const 1
   i32.add
   i32.const 2
   i32.shl
   call $~lib/internal/arraybuffer/reallocateUnsafe
   set_local $3
   get_local $0
   get_local $3
   i32.store
   get_local $0
   get_local $1
   i32.const 1
   i32.add
   i32.store offset=4
  end
  i32.const 0
  set_local $5
  get_local $3
  get_local $1
  i32.const 2
  i32.shl
  i32.add
  get_local $5
  i32.add
  get_local $2
  i32.store offset=8
 )
 (func $main_near/__near_BSONHandler_Array_String#setString (; 64 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $0
  i32.load offset=8
  get_local $1
  i32.const 0
  call $~lib/string/parseInt
  i32.trunc_s/f64
  get_local $2
  call $~lib/array/Array<String>#__set
 )
 (func $bson/decoder/ThrowingBSONHandler#pushObject (; 65 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  i32.const 0
  i32.eqz
  if
   i32.const 1328
   get_local $1
   call $~lib/string/String.__concat
   i32.const 976
   i32.const 71
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  i32.const 1
 )
 (func $bson/decoder/BSONHandler#popObject (; 66 ;) (type $iv) (param $0 i32)
  nop
 )
 (func $bson/decoder/ThrowingBSONHandler#pushArray (; 67 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  i32.const 0
  i32.eqz
  if
   i32.const 1384
   get_local $1
   call $~lib/string/String.__concat
   i32.const 976
   i32.const 66
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  i32.const 1
 )
 (func $bson/decoder/BSONHandler#popArray (; 68 ;) (type $iv) (param $0 i32)
  nop
 )
 (func $bson/decoder/ThrowingBSONHandler#setUint8Array (; 69 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  i32.const 0
  i32.eqz
  if
   i32.const 1432
   get_local $1
   call $~lib/string/String.__concat
   i32.const 1496
   call $~lib/string/String.__concat
   get_local $2
   call $bson/decoder/bin2str
   call $~lib/string/String.__concat
   i32.const 976
   i32.const 62
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
 )
 (func $bson/decoder/ThrowingBSONHandler#setBoolean (; 70 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  i32.const 0
  i32.eqz
  if
   i32.const 1512
   get_local $1
   call $~lib/string/String.__concat
   i32.const 1496
   call $~lib/string/String.__concat
   get_local $2
   i32.const 0
   i32.ne
   if (result i32)
    i32.const 1568
   else    
    i32.const 1584
   end
   call $~lib/string/String.__concat
   i32.const 976
   i32.const 49
   i32.const 7
   call $~lib/env/abort
   unreachable
  end
 )
 (func $main_near/__near_BSONHandler_Array_String#setNull (; 71 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $0
  i32.load offset=8
  get_local $1
  i32.const 0
  call $~lib/string/parseInt
  i32.trunc_s/f64
  i32.const 0
  call $~lib/array/Array<String>#__set
 )
 (func $bson/decoder/ThrowingBSONHandler#setInteger (; 72 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  block (result i32)
   i32.const 0
   i32.const 1
   call $~lib/array/Array<i32>#constructor
   set_local $3
   get_local $3
   i32.const 0
   get_local $2
   call $~lib/array/Array<i32>#__unchecked_set
   get_local $3
  end
  set_local $3
  i32.const 0
  i32.eqz
  if
   i32.const 1600
   get_local $1
   call $~lib/string/String.__concat
   i32.const 1496
   call $~lib/string/String.__concat
   block $~lib/array/Array<i32>#toString|inlined.1 (result i32)
    get_local $3
    i32.const 904
    call $~lib/array/Array<i32>#join
   end
   call $~lib/string/String.__concat
   i32.const 976
   i32.const 58
   i32.const 7
   call $~lib/env/abort
   unreachable
  end
 )
 (func $bson/decoder/BSONDecoder<__near_BSONHandler_Array_String>#deserialize (; 73 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  get_local $0
  get_local $2
  i32.store offset=4
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.22 (result i32)
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.const 5
  i32.ge_s
  i32.eqz
  if
   i32.const 912
   i32.const 976
   i32.const 87
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  block (result i32)
   get_local $0
   get_local $0
   i32.load offset=4
   tee_local $3
   i32.const 1
   i32.add
   i32.store offset=4
   get_local $3
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  get_local $1
  block (result i32)
   get_local $0
   get_local $0
   i32.load offset=4
   tee_local $3
   i32.const 1
   i32.add
   i32.store offset=4
   get_local $3
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  i32.const 8
  i32.shl
  i32.or
  get_local $1
  block (result i32)
   get_local $0
   get_local $0
   i32.load offset=4
   tee_local $3
   i32.const 1
   i32.add
   i32.store offset=4
   get_local $3
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  i32.const 16
  i32.shl
  i32.or
  get_local $1
  block (result i32)
   get_local $0
   get_local $0
   i32.load offset=4
   tee_local $3
   i32.const 1
   i32.add
   i32.store offset=4
   get_local $3
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  i32.const 24
  i32.shl
  i32.or
  set_local $3
  get_local $3
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.23 (result i32)
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.le_s
  i32.eqz
  if
   i32.const 1016
   i32.const 976
   i32.const 90
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.24 (result i32)
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.const 1
  i32.sub
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 1080
   i32.const 976
   i32.const 91
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  block $break|0
   loop $repeat|0
    i32.const 1
    i32.eqz
    br_if $break|0
    block
     get_local $1
     block (result i32)
      get_local $0
      get_local $0
      i32.load offset=4
      tee_local $4
      i32.const 1
      i32.add
      i32.store offset=4
      get_local $4
     end
     call $~lib/internal/typedarray/TypedArray<u8>#__get
     set_local $4
     get_local $4
     i32.const 255
     i32.and
     i32.const 0
     i32.eq
     if
      br $break|0
     end
     get_local $0
     i32.load offset=4
     set_local $5
     block $break|1
      loop $repeat|1
       get_local $1
       get_local $5
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       i32.const 0
       i32.ne
       tee_local $6
       if (result i32)
        get_local $5
        block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.26 (result i32)
         get_local $1
         i32.load offset=8
         i32.const 0
         i32.shr_u
        end
        i32.lt_s
       else        
        get_local $6
       end
       i32.eqz
       br_if $break|1
       nop
       get_local $5
       i32.const 1
       i32.add
       set_local $5
       br $repeat|1
       unreachable
      end
      unreachable
     end
     get_local $5
     block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.27 (result i32)
      get_local $1
      i32.load offset=8
      i32.const 0
      i32.shr_u
     end
     i32.const 1
     i32.sub
     i32.lt_s
     i32.eqz
     if
      i32.const 1160
      i32.const 976
      i32.const 101
      i32.const 12
      call $~lib/env/abort
      unreachable
     end
     get_local $1
     get_local $0
     i32.load offset=4
     get_local $5
     call $~lib/typedarray/Uint8Array#subarray
     call $bson/decoder/bin2str
     set_local $6
     get_local $0
     get_local $5
     i32.const 1
     i32.add
     tee_local $5
     i32.store offset=4
     block $break|2
      block $case7|2
       block $case6|2
        block $case5|2
         block $case4|2
          block $case3|2
           block $case2|2
            block $case1|2
             block $case0|2
              get_local $4
              i32.const 255
              i32.and
              set_local $7
              get_local $7
              i32.const 2
              i32.eq
              br_if $case0|2
              get_local $7
              i32.const 3
              i32.eq
              br_if $case1|2
              get_local $7
              i32.const 4
              i32.eq
              br_if $case2|2
              get_local $7
              i32.const 5
              i32.eq
              br_if $case3|2
              get_local $7
              i32.const 8
              i32.eq
              br_if $case4|2
              get_local $7
              i32.const 10
              i32.eq
              br_if $case5|2
              get_local $7
              i32.const 16
              i32.eq
              br_if $case6|2
              br $case7|2
             end
             get_local $1
             block (result i32)
              get_local $0
              get_local $0
              i32.load offset=4
              tee_local $7
              i32.const 1
              i32.add
              i32.store offset=4
              get_local $7
             end
             call $~lib/internal/typedarray/TypedArray<u8>#__get
             i32.const 255
             i32.and
             get_local $1
             block (result i32)
              get_local $0
              get_local $0
              i32.load offset=4
              tee_local $7
              i32.const 1
              i32.add
              i32.store offset=4
              get_local $7
             end
             call $~lib/internal/typedarray/TypedArray<u8>#__get
             i32.const 255
             i32.and
             i32.const 8
             i32.shl
             i32.or
             get_local $1
             block (result i32)
              get_local $0
              get_local $0
              i32.load offset=4
              tee_local $7
              i32.const 1
              i32.add
              i32.store offset=4
              get_local $7
             end
             call $~lib/internal/typedarray/TypedArray<u8>#__get
             i32.const 255
             i32.and
             i32.const 16
             i32.shl
             i32.or
             get_local $1
             block (result i32)
              get_local $0
              get_local $0
              i32.load offset=4
              tee_local $7
              i32.const 1
              i32.add
              i32.store offset=4
              get_local $7
             end
             call $~lib/internal/typedarray/TypedArray<u8>#__get
             i32.const 255
             i32.and
             i32.const 24
             i32.shl
             i32.or
             set_local $3
             get_local $0
             i32.load
             get_local $6
             get_local $1
             get_local $0
             i32.load offset=4
             block (result i32)
              get_local $0
              i32.load offset=4
              get_local $3
              i32.const 1
              i32.sub
              i32.add
              set_local $7
              get_local $0
              get_local $7
              i32.store offset=4
              get_local $7
             end
             call $~lib/typedarray/Uint8Array#subarray
             call $bson/decoder/bin2str
             call $main_near/__near_BSONHandler_Array_String#setString
             get_local $0
             get_local $0
             i32.load offset=4
             i32.const 1
             i32.add
             i32.store offset=4
             br $break|2
            end
            get_local $1
            get_local $0
            i32.load offset=4
            call $~lib/internal/typedarray/TypedArray<u8>#__get
            i32.const 255
            i32.and
            get_local $1
            get_local $0
            i32.load offset=4
            i32.const 1
            i32.add
            call $~lib/internal/typedarray/TypedArray<u8>#__get
            i32.const 255
            i32.and
            i32.const 8
            i32.shl
            i32.or
            get_local $1
            get_local $0
            i32.load offset=4
            i32.const 2
            i32.add
            call $~lib/internal/typedarray/TypedArray<u8>#__get
            i32.const 255
            i32.and
            i32.const 16
            i32.shl
            i32.or
            get_local $1
            get_local $0
            i32.load offset=4
            i32.const 3
            i32.add
            call $~lib/internal/typedarray/TypedArray<u8>#__get
            i32.const 255
            i32.and
            i32.const 24
            i32.shl
            i32.or
            set_local $3
            get_local $0
            i32.load
            get_local $6
            call $bson/decoder/ThrowingBSONHandler#pushObject
            if
             get_local $0
             get_local $1
             get_local $0
             i32.load offset=4
             call $bson/decoder/BSONDecoder<__near_BSONHandler_Array_String>#deserialize
            else             
             get_local $0
             get_local $0
             i32.load offset=4
             get_local $3
             i32.add
             i32.store offset=4
            end
            get_local $0
            i32.load
            call $bson/decoder/BSONHandler#popObject
            br $break|2
           end
           get_local $1
           get_local $0
           i32.load offset=4
           call $~lib/internal/typedarray/TypedArray<u8>#__get
           i32.const 255
           i32.and
           get_local $1
           get_local $0
           i32.load offset=4
           i32.const 1
           i32.add
           call $~lib/internal/typedarray/TypedArray<u8>#__get
           i32.const 255
           i32.and
           i32.const 8
           i32.shl
           i32.or
           get_local $1
           get_local $0
           i32.load offset=4
           i32.const 2
           i32.add
           call $~lib/internal/typedarray/TypedArray<u8>#__get
           i32.const 255
           i32.and
           i32.const 16
           i32.shl
           i32.or
           get_local $1
           get_local $0
           i32.load offset=4
           i32.const 3
           i32.add
           call $~lib/internal/typedarray/TypedArray<u8>#__get
           i32.const 255
           i32.and
           i32.const 24
           i32.shl
           i32.or
           set_local $3
           get_local $0
           i32.load
           get_local $6
           call $bson/decoder/ThrowingBSONHandler#pushArray
           if
            get_local $0
            get_local $1
            get_local $0
            i32.load offset=4
            call $bson/decoder/BSONDecoder<__near_BSONHandler_Array_String>#deserialize
           else            
            get_local $0
            get_local $0
            i32.load offset=4
            get_local $3
            i32.add
            i32.store offset=4
           end
           get_local $0
           i32.load
           call $bson/decoder/BSONHandler#popArray
           br $break|2
          end
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          i32.const 8
          i32.shl
          i32.or
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          i32.const 16
          i32.shl
          i32.or
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          i32.const 24
          i32.shl
          i32.or
          set_local $3
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          i32.const 4
          i32.eq
          if
           return
          end
          get_local $0
          i32.load
          get_local $6
          get_local $1
          get_local $0
          i32.load offset=4
          block (result i32)
           get_local $0
           i32.load offset=4
           get_local $3
           i32.add
           set_local $7
           get_local $0
           get_local $7
           i32.store offset=4
           get_local $7
          end
          call $~lib/typedarray/Uint8Array#subarray
          call $bson/decoder/ThrowingBSONHandler#setUint8Array
          br $break|2
         end
         get_local $0
         i32.load
         get_local $6
         get_local $1
         block (result i32)
          get_local $0
          get_local $0
          i32.load offset=4
          tee_local $7
          i32.const 1
          i32.add
          i32.store offset=4
          get_local $7
         end
         call $~lib/internal/typedarray/TypedArray<u8>#__get
         i32.const 255
         i32.and
         i32.const 1
         i32.eq
         call $bson/decoder/ThrowingBSONHandler#setBoolean
         br $break|2
        end
        get_local $0
        i32.load
        get_local $6
        call $main_near/__near_BSONHandler_Array_String#setNull
        br $break|2
       end
       get_local $0
       i32.load
       get_local $6
       get_local $1
       block (result i32)
        get_local $0
        get_local $0
        i32.load offset=4
        tee_local $7
        i32.const 1
        i32.add
        i32.store offset=4
        get_local $7
       end
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       get_local $1
       block (result i32)
        get_local $0
        get_local $0
        i32.load offset=4
        tee_local $7
        i32.const 1
        i32.add
        i32.store offset=4
        get_local $7
       end
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       i32.const 8
       i32.shl
       i32.or
       get_local $1
       block (result i32)
        get_local $0
        get_local $0
        i32.load offset=4
        tee_local $7
        i32.const 1
        i32.add
        i32.store offset=4
        get_local $7
       end
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       i32.const 16
       i32.shl
       i32.or
       get_local $1
       block (result i32)
        get_local $0
        get_local $0
        i32.load offset=4
        tee_local $7
        i32.const 1
        i32.add
        i32.store offset=4
        get_local $7
       end
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       i32.const 24
       i32.shl
       i32.or
       call $bson/decoder/ThrowingBSONHandler#setInteger
       br $break|2
      end
      i32.const 0
      i32.eqz
      if
       i32.const 1656
       i32.const 976
       i32.const 154
       i32.const 20
       call $~lib/env/abort
       unreachable
      end
     end
    end
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $main_near/__near_decode_Array_String (; 74 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block (result i32)
   i32.const 12
   call $~lib/memory/memory.allocate
   set_local $2
   get_local $2
   i32.const 0
   i32.store
   get_local $2
   i32.const 0
   i32.store offset=4
   get_local $2
   i32.const 0
   i32.const 0
   call $~lib/array/Array<String>#constructor
   i32.store offset=8
   get_local $2
  end
  set_local $2
  get_local $2
  get_local $0
  i32.store
  get_local $2
  i32.const 0
  get_local $2
  call $bson/decoder/BSONDecoder<__near_BSONHandler_Array_String>#constructor
  i32.store offset=4
  get_local $2
  i32.load offset=4
  get_local $0
  get_local $1
  call $bson/decoder/BSONDecoder<__near_BSONHandler_Array_String>#deserialize
  get_local $2
  i32.load offset=8
 )
 (func $~lib/array/Array<Array<String>>#__set (; 75 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $0
  i32.load
  set_local $3
  get_local $3
  i32.load
  i32.const 2
  i32.shr_u
  set_local $4
  get_local $1
  get_local $4
  i32.ge_u
  if
   get_local $1
   i32.const 268435454
   i32.ge_u
   if
    i32.const 0
    i32.const 40
    i32.const 109
    i32.const 41
    call $~lib/env/abort
    unreachable
   end
   get_local $3
   get_local $1
   i32.const 1
   i32.add
   i32.const 2
   i32.shl
   call $~lib/internal/arraybuffer/reallocateUnsafe
   set_local $3
   get_local $0
   get_local $3
   i32.store
   get_local $0
   get_local $1
   i32.const 1
   i32.add
   i32.store offset=4
  end
  i32.const 0
  set_local $5
  get_local $3
  get_local $1
  i32.const 2
  i32.shl
  i32.add
  get_local $5
  i32.add
  get_local $2
  i32.store offset=8
 )
 (func $main_near/__near_BSONHandler_Array_Array_String#pushObject (; 76 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $0
  i32.load offset=8
  get_local $1
  i32.const 0
  call $~lib/string/parseInt
  i32.trunc_s/f64
  get_local $0
  i32.load
  get_local $0
  i32.load offset=4
  i32.load offset=4
  call $main_near/__near_decode_Array_String
  call $~lib/array/Array<Array<String>>#__set
  i32.const 0
 )
 (func $main_near/__near_BSONHandler_Array_Array_String#pushArray (; 77 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $0
  i32.load offset=8
  get_local $1
  i32.const 0
  call $~lib/string/parseInt
  i32.trunc_s/f64
  get_local $0
  i32.load
  get_local $0
  i32.load offset=4
  i32.load offset=4
  call $main_near/__near_decode_Array_String
  call $~lib/array/Array<Array<String>>#__set
  i32.const 0
 )
 (func $bson/decoder/ThrowingBSONHandler#setNull (; 78 ;) (type $iiv) (param $0 i32) (param $1 i32)
  i32.const 0
  i32.eqz
  if
   i32.const 1720
   get_local $1
   call $~lib/string/String.__concat
   i32.const 976
   i32.const 53
   i32.const 7
   call $~lib/env/abort
   unreachable
  end
 )
 (func $bson/decoder/BSONDecoder<__near_BSONHandler_Array_Array_String>#deserialize (; 79 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  get_local $0
  get_local $2
  i32.store offset=4
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.16 (result i32)
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.const 5
  i32.ge_s
  i32.eqz
  if
   i32.const 912
   i32.const 976
   i32.const 87
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  block (result i32)
   get_local $0
   get_local $0
   i32.load offset=4
   tee_local $3
   i32.const 1
   i32.add
   i32.store offset=4
   get_local $3
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  get_local $1
  block (result i32)
   get_local $0
   get_local $0
   i32.load offset=4
   tee_local $3
   i32.const 1
   i32.add
   i32.store offset=4
   get_local $3
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  i32.const 8
  i32.shl
  i32.or
  get_local $1
  block (result i32)
   get_local $0
   get_local $0
   i32.load offset=4
   tee_local $3
   i32.const 1
   i32.add
   i32.store offset=4
   get_local $3
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  i32.const 16
  i32.shl
  i32.or
  get_local $1
  block (result i32)
   get_local $0
   get_local $0
   i32.load offset=4
   tee_local $3
   i32.const 1
   i32.add
   i32.store offset=4
   get_local $3
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  i32.const 24
  i32.shl
  i32.or
  set_local $3
  get_local $3
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.17 (result i32)
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.le_s
  i32.eqz
  if
   i32.const 1016
   i32.const 976
   i32.const 90
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.18 (result i32)
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.const 1
  i32.sub
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 1080
   i32.const 976
   i32.const 91
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  block $break|0
   loop $repeat|0
    i32.const 1
    i32.eqz
    br_if $break|0
    block
     get_local $1
     block (result i32)
      get_local $0
      get_local $0
      i32.load offset=4
      tee_local $4
      i32.const 1
      i32.add
      i32.store offset=4
      get_local $4
     end
     call $~lib/internal/typedarray/TypedArray<u8>#__get
     set_local $4
     get_local $4
     i32.const 255
     i32.and
     i32.const 0
     i32.eq
     if
      br $break|0
     end
     get_local $0
     i32.load offset=4
     set_local $5
     block $break|1
      loop $repeat|1
       get_local $1
       get_local $5
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       i32.const 0
       i32.ne
       tee_local $6
       if (result i32)
        get_local $5
        block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.20 (result i32)
         get_local $1
         i32.load offset=8
         i32.const 0
         i32.shr_u
        end
        i32.lt_s
       else        
        get_local $6
       end
       i32.eqz
       br_if $break|1
       nop
       get_local $5
       i32.const 1
       i32.add
       set_local $5
       br $repeat|1
       unreachable
      end
      unreachable
     end
     get_local $5
     block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.21 (result i32)
      get_local $1
      i32.load offset=8
      i32.const 0
      i32.shr_u
     end
     i32.const 1
     i32.sub
     i32.lt_s
     i32.eqz
     if
      i32.const 1160
      i32.const 976
      i32.const 101
      i32.const 12
      call $~lib/env/abort
      unreachable
     end
     get_local $1
     get_local $0
     i32.load offset=4
     get_local $5
     call $~lib/typedarray/Uint8Array#subarray
     call $bson/decoder/bin2str
     set_local $6
     get_local $0
     get_local $5
     i32.const 1
     i32.add
     tee_local $5
     i32.store offset=4
     block $break|2
      block $case7|2
       block $case6|2
        block $case5|2
         block $case4|2
          block $case3|2
           block $case2|2
            block $case1|2
             block $case0|2
              get_local $4
              i32.const 255
              i32.and
              set_local $7
              get_local $7
              i32.const 2
              i32.eq
              br_if $case0|2
              get_local $7
              i32.const 3
              i32.eq
              br_if $case1|2
              get_local $7
              i32.const 4
              i32.eq
              br_if $case2|2
              get_local $7
              i32.const 5
              i32.eq
              br_if $case3|2
              get_local $7
              i32.const 8
              i32.eq
              br_if $case4|2
              get_local $7
              i32.const 10
              i32.eq
              br_if $case5|2
              get_local $7
              i32.const 16
              i32.eq
              br_if $case6|2
              br $case7|2
             end
             get_local $1
             block (result i32)
              get_local $0
              get_local $0
              i32.load offset=4
              tee_local $7
              i32.const 1
              i32.add
              i32.store offset=4
              get_local $7
             end
             call $~lib/internal/typedarray/TypedArray<u8>#__get
             i32.const 255
             i32.and
             get_local $1
             block (result i32)
              get_local $0
              get_local $0
              i32.load offset=4
              tee_local $7
              i32.const 1
              i32.add
              i32.store offset=4
              get_local $7
             end
             call $~lib/internal/typedarray/TypedArray<u8>#__get
             i32.const 255
             i32.and
             i32.const 8
             i32.shl
             i32.or
             get_local $1
             block (result i32)
              get_local $0
              get_local $0
              i32.load offset=4
              tee_local $7
              i32.const 1
              i32.add
              i32.store offset=4
              get_local $7
             end
             call $~lib/internal/typedarray/TypedArray<u8>#__get
             i32.const 255
             i32.and
             i32.const 16
             i32.shl
             i32.or
             get_local $1
             block (result i32)
              get_local $0
              get_local $0
              i32.load offset=4
              tee_local $7
              i32.const 1
              i32.add
              i32.store offset=4
              get_local $7
             end
             call $~lib/internal/typedarray/TypedArray<u8>#__get
             i32.const 255
             i32.and
             i32.const 24
             i32.shl
             i32.or
             set_local $3
             get_local $0
             i32.load
             get_local $6
             get_local $1
             get_local $0
             i32.load offset=4
             block (result i32)
              get_local $0
              i32.load offset=4
              get_local $3
              i32.const 1
              i32.sub
              i32.add
              set_local $7
              get_local $0
              get_local $7
              i32.store offset=4
              get_local $7
             end
             call $~lib/typedarray/Uint8Array#subarray
             call $bson/decoder/bin2str
             call $bson/decoder/ThrowingBSONHandler#setString
             get_local $0
             get_local $0
             i32.load offset=4
             i32.const 1
             i32.add
             i32.store offset=4
             br $break|2
            end
            get_local $1
            get_local $0
            i32.load offset=4
            call $~lib/internal/typedarray/TypedArray<u8>#__get
            i32.const 255
            i32.and
            get_local $1
            get_local $0
            i32.load offset=4
            i32.const 1
            i32.add
            call $~lib/internal/typedarray/TypedArray<u8>#__get
            i32.const 255
            i32.and
            i32.const 8
            i32.shl
            i32.or
            get_local $1
            get_local $0
            i32.load offset=4
            i32.const 2
            i32.add
            call $~lib/internal/typedarray/TypedArray<u8>#__get
            i32.const 255
            i32.and
            i32.const 16
            i32.shl
            i32.or
            get_local $1
            get_local $0
            i32.load offset=4
            i32.const 3
            i32.add
            call $~lib/internal/typedarray/TypedArray<u8>#__get
            i32.const 255
            i32.and
            i32.const 24
            i32.shl
            i32.or
            set_local $3
            get_local $0
            i32.load
            get_local $6
            call $main_near/__near_BSONHandler_Array_Array_String#pushObject
            if
             get_local $0
             get_local $1
             get_local $0
             i32.load offset=4
             call $bson/decoder/BSONDecoder<__near_BSONHandler_Array_Array_String>#deserialize
            else             
             get_local $0
             get_local $0
             i32.load offset=4
             get_local $3
             i32.add
             i32.store offset=4
            end
            get_local $0
            i32.load
            call $bson/decoder/BSONHandler#popObject
            br $break|2
           end
           get_local $1
           get_local $0
           i32.load offset=4
           call $~lib/internal/typedarray/TypedArray<u8>#__get
           i32.const 255
           i32.and
           get_local $1
           get_local $0
           i32.load offset=4
           i32.const 1
           i32.add
           call $~lib/internal/typedarray/TypedArray<u8>#__get
           i32.const 255
           i32.and
           i32.const 8
           i32.shl
           i32.or
           get_local $1
           get_local $0
           i32.load offset=4
           i32.const 2
           i32.add
           call $~lib/internal/typedarray/TypedArray<u8>#__get
           i32.const 255
           i32.and
           i32.const 16
           i32.shl
           i32.or
           get_local $1
           get_local $0
           i32.load offset=4
           i32.const 3
           i32.add
           call $~lib/internal/typedarray/TypedArray<u8>#__get
           i32.const 255
           i32.and
           i32.const 24
           i32.shl
           i32.or
           set_local $3
           get_local $0
           i32.load
           get_local $6
           call $main_near/__near_BSONHandler_Array_Array_String#pushArray
           if
            get_local $0
            get_local $1
            get_local $0
            i32.load offset=4
            call $bson/decoder/BSONDecoder<__near_BSONHandler_Array_Array_String>#deserialize
           else            
            get_local $0
            get_local $0
            i32.load offset=4
            get_local $3
            i32.add
            i32.store offset=4
           end
           get_local $0
           i32.load
           call $bson/decoder/BSONHandler#popArray
           br $break|2
          end
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          i32.const 8
          i32.shl
          i32.or
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          i32.const 16
          i32.shl
          i32.or
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          i32.const 24
          i32.shl
          i32.or
          set_local $3
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          i32.const 4
          i32.eq
          if
           return
          end
          get_local $0
          i32.load
          get_local $6
          get_local $1
          get_local $0
          i32.load offset=4
          block (result i32)
           get_local $0
           i32.load offset=4
           get_local $3
           i32.add
           set_local $7
           get_local $0
           get_local $7
           i32.store offset=4
           get_local $7
          end
          call $~lib/typedarray/Uint8Array#subarray
          call $bson/decoder/ThrowingBSONHandler#setUint8Array
          br $break|2
         end
         get_local $0
         i32.load
         get_local $6
         get_local $1
         block (result i32)
          get_local $0
          get_local $0
          i32.load offset=4
          tee_local $7
          i32.const 1
          i32.add
          i32.store offset=4
          get_local $7
         end
         call $~lib/internal/typedarray/TypedArray<u8>#__get
         i32.const 255
         i32.and
         i32.const 1
         i32.eq
         call $bson/decoder/ThrowingBSONHandler#setBoolean
         br $break|2
        end
        get_local $0
        i32.load
        get_local $6
        call $bson/decoder/ThrowingBSONHandler#setNull
        br $break|2
       end
       get_local $0
       i32.load
       get_local $6
       get_local $1
       block (result i32)
        get_local $0
        get_local $0
        i32.load offset=4
        tee_local $7
        i32.const 1
        i32.add
        i32.store offset=4
        get_local $7
       end
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       get_local $1
       block (result i32)
        get_local $0
        get_local $0
        i32.load offset=4
        tee_local $7
        i32.const 1
        i32.add
        i32.store offset=4
        get_local $7
       end
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       i32.const 8
       i32.shl
       i32.or
       get_local $1
       block (result i32)
        get_local $0
        get_local $0
        i32.load offset=4
        tee_local $7
        i32.const 1
        i32.add
        i32.store offset=4
        get_local $7
       end
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       i32.const 16
       i32.shl
       i32.or
       get_local $1
       block (result i32)
        get_local $0
        get_local $0
        i32.load offset=4
        tee_local $7
        i32.const 1
        i32.add
        i32.store offset=4
        get_local $7
       end
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       i32.const 24
       i32.shl
       i32.or
       call $bson/decoder/ThrowingBSONHandler#setInteger
       br $break|2
      end
      i32.const 0
      i32.eqz
      if
       i32.const 1656
       i32.const 976
       i32.const 154
       i32.const 20
       call $~lib/env/abort
       unreachable
      end
     end
    end
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $main_near/__near_decode_Array_Array_String (; 80 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block (result i32)
   i32.const 12
   call $~lib/memory/memory.allocate
   set_local $2
   get_local $2
   i32.const 0
   i32.store
   get_local $2
   i32.const 0
   i32.store offset=4
   get_local $2
   i32.const 0
   i32.const 0
   call $~lib/array/Array<Array<String>>#constructor
   i32.store offset=8
   get_local $2
  end
  set_local $2
  get_local $2
  get_local $0
  i32.store
  get_local $2
  i32.const 0
  get_local $2
  call $bson/decoder/BSONDecoder<__near_BSONHandler_Array_Array_String>#constructor
  i32.store offset=4
  get_local $2
  i32.load offset=4
  get_local $0
  get_local $1
  call $bson/decoder/BSONDecoder<__near_BSONHandler_Array_Array_String>#deserialize
  get_local $2
  i32.load offset=8
 )
 (func $main_near/__near_BSONHandler_FooBar#pushObject (; 81 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $1
  i32.const 296
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=8
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=4
   call $main_near/__near_decode_Array_Array_String
   i32.store offset=20
   i32.const 0
   return
  end
  get_local $0
  get_local $1
  call $bson/decoder/ThrowingBSONHandler#pushObject
 )
 (func $main_near/__near_BSONHandler_FooBar#pushArray (; 82 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $1
  i32.const 296
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=8
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=4
   call $main_near/__near_decode_Array_Array_String
   i32.store offset=20
   i32.const 0
   return
  end
  get_local $0
  get_local $1
  call $bson/decoder/ThrowingBSONHandler#pushArray
 )
 (func $main_near/__near_BSONHandler_FooBar#setUint8Array (; 83 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $1
  i32.const 280
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=8
   get_local $2
   i32.store offset=16
   return
  end
  get_local $0
  get_local $1
  get_local $2
  call $bson/decoder/ThrowingBSONHandler#setUint8Array
 )
 (func $main_near/__near_BSONHandler_FooBar#setBoolean (; 84 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $1
  i32.const 248
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=8
   get_local $2
   i32.const 0
   i32.ne
   i32.store8 offset=8
   return
  end
  get_local $0
  get_local $1
  get_local $2
  call $bson/decoder/ThrowingBSONHandler#setBoolean
 )
 (func $main_near/__near_BSONHandler_FooBar#setNull (; 85 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $1
  i32.const 24
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=8
   i32.const 0
   i32.store
   return
  end
  get_local $1
  i32.const 232
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=8
   i32.const 0
   i32.store offset=4
   return
  end
  get_local $1
  i32.const 248
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=8
   i32.const 0
   i32.store8 offset=8
   return
  end
  get_local $1
  i32.const 264
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=8
   i32.const 0
   i32.store offset=12
   return
  end
  get_local $1
  i32.const 280
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=8
   i32.const 0
   i32.store offset=16
   return
  end
  get_local $1
  i32.const 296
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=8
   i32.const 0
   i32.store offset=20
   return
  end
  get_local $0
  get_local $1
  call $bson/decoder/ThrowingBSONHandler#setNull
 )
 (func $main_near/__near_BSONHandler_FooBar#setInteger (; 86 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $1
  i32.const 24
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=8
   get_local $2
   i32.store
   return
  end
  get_local $1
  i32.const 232
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=8
   get_local $2
   i32.store offset=4
   return
  end
  get_local $0
  get_local $1
  get_local $2
  call $bson/decoder/ThrowingBSONHandler#setInteger
 )
 (func $bson/decoder/BSONDecoder<__near_BSONHandler_FooBar>#deserialize (; 87 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  get_local $0
  get_local $2
  i32.store offset=4
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.9 (result i32)
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.const 5
  i32.ge_s
  i32.eqz
  if
   i32.const 912
   i32.const 976
   i32.const 87
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  block (result i32)
   get_local $0
   get_local $0
   i32.load offset=4
   tee_local $3
   i32.const 1
   i32.add
   i32.store offset=4
   get_local $3
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  get_local $1
  block (result i32)
   get_local $0
   get_local $0
   i32.load offset=4
   tee_local $3
   i32.const 1
   i32.add
   i32.store offset=4
   get_local $3
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  i32.const 8
  i32.shl
  i32.or
  get_local $1
  block (result i32)
   get_local $0
   get_local $0
   i32.load offset=4
   tee_local $3
   i32.const 1
   i32.add
   i32.store offset=4
   get_local $3
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  i32.const 16
  i32.shl
  i32.or
  get_local $1
  block (result i32)
   get_local $0
   get_local $0
   i32.load offset=4
   tee_local $3
   i32.const 1
   i32.add
   i32.store offset=4
   get_local $3
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  i32.const 24
  i32.shl
  i32.or
  set_local $3
  get_local $3
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.10 (result i32)
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.le_s
  i32.eqz
  if
   i32.const 1016
   i32.const 976
   i32.const 90
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.11 (result i32)
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.const 1
  i32.sub
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 1080
   i32.const 976
   i32.const 91
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  block $break|0
   loop $repeat|0
    i32.const 1
    i32.eqz
    br_if $break|0
    block
     get_local $1
     block (result i32)
      get_local $0
      get_local $0
      i32.load offset=4
      tee_local $4
      i32.const 1
      i32.add
      i32.store offset=4
      get_local $4
     end
     call $~lib/internal/typedarray/TypedArray<u8>#__get
     set_local $4
     get_local $4
     i32.const 255
     i32.and
     i32.const 0
     i32.eq
     if
      br $break|0
     end
     get_local $0
     i32.load offset=4
     set_local $5
     block $break|1
      loop $repeat|1
       get_local $1
       get_local $5
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       i32.const 0
       i32.ne
       tee_local $6
       if (result i32)
        get_local $5
        block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.13 (result i32)
         get_local $1
         i32.load offset=8
         i32.const 0
         i32.shr_u
        end
        i32.lt_s
       else        
        get_local $6
       end
       i32.eqz
       br_if $break|1
       nop
       get_local $5
       i32.const 1
       i32.add
       set_local $5
       br $repeat|1
       unreachable
      end
      unreachable
     end
     get_local $5
     block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.14 (result i32)
      get_local $1
      i32.load offset=8
      i32.const 0
      i32.shr_u
     end
     i32.const 1
     i32.sub
     i32.lt_s
     i32.eqz
     if
      i32.const 1160
      i32.const 976
      i32.const 101
      i32.const 12
      call $~lib/env/abort
      unreachable
     end
     get_local $1
     get_local $0
     i32.load offset=4
     get_local $5
     call $~lib/typedarray/Uint8Array#subarray
     call $bson/decoder/bin2str
     set_local $6
     get_local $0
     get_local $5
     i32.const 1
     i32.add
     tee_local $5
     i32.store offset=4
     block $break|2
      block $case7|2
       block $case6|2
        block $case5|2
         block $case4|2
          block $case3|2
           block $case2|2
            block $case1|2
             block $case0|2
              get_local $4
              i32.const 255
              i32.and
              set_local $7
              get_local $7
              i32.const 2
              i32.eq
              br_if $case0|2
              get_local $7
              i32.const 3
              i32.eq
              br_if $case1|2
              get_local $7
              i32.const 4
              i32.eq
              br_if $case2|2
              get_local $7
              i32.const 5
              i32.eq
              br_if $case3|2
              get_local $7
              i32.const 8
              i32.eq
              br_if $case4|2
              get_local $7
              i32.const 10
              i32.eq
              br_if $case5|2
              get_local $7
              i32.const 16
              i32.eq
              br_if $case6|2
              br $case7|2
             end
             get_local $1
             block (result i32)
              get_local $0
              get_local $0
              i32.load offset=4
              tee_local $7
              i32.const 1
              i32.add
              i32.store offset=4
              get_local $7
             end
             call $~lib/internal/typedarray/TypedArray<u8>#__get
             i32.const 255
             i32.and
             get_local $1
             block (result i32)
              get_local $0
              get_local $0
              i32.load offset=4
              tee_local $7
              i32.const 1
              i32.add
              i32.store offset=4
              get_local $7
             end
             call $~lib/internal/typedarray/TypedArray<u8>#__get
             i32.const 255
             i32.and
             i32.const 8
             i32.shl
             i32.or
             get_local $1
             block (result i32)
              get_local $0
              get_local $0
              i32.load offset=4
              tee_local $7
              i32.const 1
              i32.add
              i32.store offset=4
              get_local $7
             end
             call $~lib/internal/typedarray/TypedArray<u8>#__get
             i32.const 255
             i32.and
             i32.const 16
             i32.shl
             i32.or
             get_local $1
             block (result i32)
              get_local $0
              get_local $0
              i32.load offset=4
              tee_local $7
              i32.const 1
              i32.add
              i32.store offset=4
              get_local $7
             end
             call $~lib/internal/typedarray/TypedArray<u8>#__get
             i32.const 255
             i32.and
             i32.const 24
             i32.shl
             i32.or
             set_local $3
             get_local $0
             i32.load
             get_local $6
             get_local $1
             get_local $0
             i32.load offset=4
             block (result i32)
              get_local $0
              i32.load offset=4
              get_local $3
              i32.const 1
              i32.sub
              i32.add
              set_local $7
              get_local $0
              get_local $7
              i32.store offset=4
              get_local $7
             end
             call $~lib/typedarray/Uint8Array#subarray
             call $bson/decoder/bin2str
             call $main_near/__near_BSONHandler_FooBar#setString
             get_local $0
             get_local $0
             i32.load offset=4
             i32.const 1
             i32.add
             i32.store offset=4
             br $break|2
            end
            get_local $1
            get_local $0
            i32.load offset=4
            call $~lib/internal/typedarray/TypedArray<u8>#__get
            i32.const 255
            i32.and
            get_local $1
            get_local $0
            i32.load offset=4
            i32.const 1
            i32.add
            call $~lib/internal/typedarray/TypedArray<u8>#__get
            i32.const 255
            i32.and
            i32.const 8
            i32.shl
            i32.or
            get_local $1
            get_local $0
            i32.load offset=4
            i32.const 2
            i32.add
            call $~lib/internal/typedarray/TypedArray<u8>#__get
            i32.const 255
            i32.and
            i32.const 16
            i32.shl
            i32.or
            get_local $1
            get_local $0
            i32.load offset=4
            i32.const 3
            i32.add
            call $~lib/internal/typedarray/TypedArray<u8>#__get
            i32.const 255
            i32.and
            i32.const 24
            i32.shl
            i32.or
            set_local $3
            get_local $0
            i32.load
            get_local $6
            call $main_near/__near_BSONHandler_FooBar#pushObject
            if
             get_local $0
             get_local $1
             get_local $0
             i32.load offset=4
             call $bson/decoder/BSONDecoder<__near_BSONHandler_FooBar>#deserialize
            else             
             get_local $0
             get_local $0
             i32.load offset=4
             get_local $3
             i32.add
             i32.store offset=4
            end
            get_local $0
            i32.load
            call $bson/decoder/BSONHandler#popObject
            br $break|2
           end
           get_local $1
           get_local $0
           i32.load offset=4
           call $~lib/internal/typedarray/TypedArray<u8>#__get
           i32.const 255
           i32.and
           get_local $1
           get_local $0
           i32.load offset=4
           i32.const 1
           i32.add
           call $~lib/internal/typedarray/TypedArray<u8>#__get
           i32.const 255
           i32.and
           i32.const 8
           i32.shl
           i32.or
           get_local $1
           get_local $0
           i32.load offset=4
           i32.const 2
           i32.add
           call $~lib/internal/typedarray/TypedArray<u8>#__get
           i32.const 255
           i32.and
           i32.const 16
           i32.shl
           i32.or
           get_local $1
           get_local $0
           i32.load offset=4
           i32.const 3
           i32.add
           call $~lib/internal/typedarray/TypedArray<u8>#__get
           i32.const 255
           i32.and
           i32.const 24
           i32.shl
           i32.or
           set_local $3
           get_local $0
           i32.load
           get_local $6
           call $main_near/__near_BSONHandler_FooBar#pushArray
           if
            get_local $0
            get_local $1
            get_local $0
            i32.load offset=4
            call $bson/decoder/BSONDecoder<__near_BSONHandler_FooBar>#deserialize
           else            
            get_local $0
            get_local $0
            i32.load offset=4
            get_local $3
            i32.add
            i32.store offset=4
           end
           get_local $0
           i32.load
           call $bson/decoder/BSONHandler#popArray
           br $break|2
          end
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          i32.const 8
          i32.shl
          i32.or
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          i32.const 16
          i32.shl
          i32.or
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          i32.const 24
          i32.shl
          i32.or
          set_local $3
          get_local $1
          block (result i32)
           get_local $0
           get_local $0
           i32.load offset=4
           tee_local $7
           i32.const 1
           i32.add
           i32.store offset=4
           get_local $7
          end
          call $~lib/internal/typedarray/TypedArray<u8>#__get
          i32.const 255
          i32.and
          i32.const 4
          i32.eq
          if
           return
          end
          get_local $0
          i32.load
          get_local $6
          get_local $1
          get_local $0
          i32.load offset=4
          block (result i32)
           get_local $0
           i32.load offset=4
           get_local $3
           i32.add
           set_local $7
           get_local $0
           get_local $7
           i32.store offset=4
           get_local $7
          end
          call $~lib/typedarray/Uint8Array#subarray
          call $main_near/__near_BSONHandler_FooBar#setUint8Array
          br $break|2
         end
         get_local $0
         i32.load
         get_local $6
         get_local $1
         block (result i32)
          get_local $0
          get_local $0
          i32.load offset=4
          tee_local $7
          i32.const 1
          i32.add
          i32.store offset=4
          get_local $7
         end
         call $~lib/internal/typedarray/TypedArray<u8>#__get
         i32.const 255
         i32.and
         i32.const 1
         i32.eq
         call $main_near/__near_BSONHandler_FooBar#setBoolean
         br $break|2
        end
        get_local $0
        i32.load
        get_local $6
        call $main_near/__near_BSONHandler_FooBar#setNull
        br $break|2
       end
       get_local $0
       i32.load
       get_local $6
       get_local $1
       block (result i32)
        get_local $0
        get_local $0
        i32.load offset=4
        tee_local $7
        i32.const 1
        i32.add
        i32.store offset=4
        get_local $7
       end
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       get_local $1
       block (result i32)
        get_local $0
        get_local $0
        i32.load offset=4
        tee_local $7
        i32.const 1
        i32.add
        i32.store offset=4
        get_local $7
       end
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       i32.const 8
       i32.shl
       i32.or
       get_local $1
       block (result i32)
        get_local $0
        get_local $0
        i32.load offset=4
        tee_local $7
        i32.const 1
        i32.add
        i32.store offset=4
        get_local $7
       end
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       i32.const 16
       i32.shl
       i32.or
       get_local $1
       block (result i32)
        get_local $0
        get_local $0
        i32.load offset=4
        tee_local $7
        i32.const 1
        i32.add
        i32.store offset=4
        get_local $7
       end
       call $~lib/internal/typedarray/TypedArray<u8>#__get
       i32.const 255
       i32.and
       i32.const 24
       i32.shl
       i32.or
       call $main_near/__near_BSONHandler_FooBar#setInteger
       br $break|2
      end
      i32.const 0
      i32.eqz
      if
       i32.const 1656
       i32.const 976
       i32.const 154
       i32.const 20
       call $~lib/env/abort
       unreachable
      end
     end
    end
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $main_near/__near_decode_FooBar (; 88 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  block (result i32)
   i32.const 12
   call $~lib/memory/memory.allocate
   set_local $2
   get_local $2
   i32.const 0
   i32.store
   get_local $2
   i32.const 0
   i32.store offset=4
   get_local $2
   block (result i32)
    i32.const 24
    call $~lib/memory/memory.allocate
    set_local $3
    get_local $3
    i32.const 0
    i32.store
    get_local $3
    i32.const 1
    i32.store offset=4
    get_local $3
    i32.const 0
    i32.store8 offset=8
    get_local $3
    i32.const 8
    i32.store offset=12
    get_local $3
    i32.const 0
    i32.store offset=16
    get_local $3
    i32.const 0
    i32.store offset=20
    get_local $3
   end
   i32.store offset=8
   get_local $2
  end
  set_local $2
  get_local $2
  get_local $0
  i32.store
  get_local $2
  i32.const 0
  get_local $2
  call $bson/decoder/BSONDecoder<__near_BSONHandler_FooBar>#constructor
  i32.store offset=4
  get_local $2
  i32.load offset=4
  get_local $0
  get_local $1
  call $bson/decoder/BSONDecoder<__near_BSONHandler_FooBar>#deserialize
  get_local $2
  i32.load offset=8
 )
 (func $~lib/string/String#charAt (; 89 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $0
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 200
   i32.const 58
   i32.const 4
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  get_local $0
  i32.load
  i32.ge_u
  if
   i32.const 312
   return
  end
  i32.const 1
  call $~lib/internal/string/allocateUnsafe
  set_local $2
  get_local $2
  get_local $0
  get_local $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u offset=4
  i32.store16 offset=4
  get_local $2
 )
 (func $test/bin2hex (; 90 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $1
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 1808
  else   
   i32.const 1848
  end
  set_local $2
  i32.const 312
  set_local $3
  block $break|0
   block
    i32.const 0
    set_local $4
    block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.28 (result i32)
     get_local $0
     i32.load offset=8
     i32.const 0
     i32.shr_u
    end
    set_local $5
   end
   loop $repeat|0
    get_local $4
    get_local $5
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $3
    get_local $2
    get_local $0
    get_local $4
    call $~lib/internal/typedarray/TypedArray<u8>#__get
    i32.const 255
    i32.and
    i32.const 4
    i32.shr_u
    i32.const 15
    i32.and
    call $~lib/string/String#charAt
    get_local $2
    get_local $0
    get_local $4
    call $~lib/internal/typedarray/TypedArray<u8>#__get
    i32.const 15
    i32.and
    call $~lib/string/String#charAt
    call $~lib/string/String.__concat
    call $~lib/string/String.__concat
    set_local $3
    get_local $4
    i32.const 1
    i32.add
    set_local $4
    br $repeat|0
    unreachable
   end
   unreachable
  end
  get_local $3
 )
 (func $test/runTest (; 91 ;) (type $v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  block (result i32)
   i32.const 24
   call $~lib/memory/memory.allocate
   set_local $0
   get_local $0
   i32.const 0
   i32.store
   get_local $0
   i32.const 1
   i32.store offset=4
   get_local $0
   i32.const 0
   i32.store8 offset=8
   get_local $0
   i32.const 8
   i32.store offset=12
   get_local $0
   i32.const 0
   i32.store offset=16
   get_local $0
   i32.const 0
   i32.store offset=20
   get_local $0
  end
  set_local $0
  get_local $0
  i32.const 321
  i32.store
  get_local $0
  i32.const 123
  i32.store offset=4
  get_local $0
  i32.const 1
  i32.store8 offset=8
  get_local $0
  i32.const 24
  i32.store offset=12
  block (result i32)
   i32.const 12
   call $~lib/memory/memory.allocate
   set_local $1
   get_local $1
   i32.const 0
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   i32.store
   get_local $1
   i32.const 0
   get_global $bson/encoder/START_SIZE
   call $~lib/internal/typedarray/TypedArray<u8>#constructor
   i32.store offset=4
   get_local $1
   i32.const 4
   i32.store offset=8
   get_local $1
  end
  set_local $1
  get_local $0
  get_local $1
  call $main_near/__near_encode_FooBar
  get_local $1
  call $bson/encoder/BSONEncoder#serialize
  set_local $2
  get_local $2
  i32.const 0
  call $main_near/__near_decode_FooBar
  set_local $3
  get_local $0
  i32.load
  get_local $3
  i32.load
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 1768
   i32.const 20
   i32.const 2
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load offset=4
  get_local $3
  i32.load offset=4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 1768
   i32.const 21
   i32.const 2
   call $~lib/env/abort
   unreachable
  end
  block (result i32)
   i32.const 12
   call $~lib/memory/memory.allocate
   set_local $4
   get_local $4
   i32.const 0
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   i32.store
   get_local $4
   i32.const 0
   get_global $bson/encoder/START_SIZE
   call $~lib/internal/typedarray/TypedArray<u8>#constructor
   i32.store offset=4
   get_local $4
   i32.const 4
   i32.store offset=8
   get_local $4
  end
  set_local $4
  get_local $4
  i32.const 1792
  i32.const 1
  call $bson/encoder/BSONEncoder#setInteger
  get_local $4
  i32.const 1800
  i32.const 2
  call $bson/encoder/BSONEncoder#setInteger
  get_local $4
  call $bson/encoder/BSONEncoder#serialize
  i32.const 0
  call $test/bin2hex
  set_local $5
  block (result i32)
   i32.const 12
   call $~lib/memory/memory.allocate
   set_local $6
   get_local $6
   i32.const 0
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   i32.store
   get_local $6
   i32.const 0
   get_global $bson/encoder/START_SIZE
   call $~lib/internal/typedarray/TypedArray<u8>#constructor
   i32.store offset=4
   get_local $6
   i32.const 4
   i32.store offset=8
   get_local $6
  end
  set_local $6
  get_local $6
  i32.const 1888
  i32.const 3
  call $bson/encoder/BSONEncoder#setInteger
 )
 (func $start (; 92 ;) (type $v)
  get_global $HEAP_BASE
  get_global $~lib/internal/allocator/AL_MASK
  i32.add
  get_global $~lib/internal/allocator/AL_MASK
  i32.const -1
  i32.xor
  i32.and
  set_global $~lib/allocator/arena/startOffset
  get_global $~lib/allocator/arena/startOffset
  set_global $~lib/allocator/arena/offset
  call $test/runTest
 )
 (func $null (; 93 ;) (type $v)
 )
)

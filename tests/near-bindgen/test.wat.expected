(module
 (type $iii (func (param i32 i32) (result i32)))
 (type $iiiiv (func (param i32 i32 i32 i32)))
 (type $v (func))
 (type $ii (func (param i32) (result i32)))
 (type $iiv (func (param i32 i32)))
 (type $iiiiiv (func (param i32 i32 i32 i32 i32)))
 (type $iiiv (func (param i32 i32 i32)))
 (type $iiiiii (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $iiii (func (param i32 i32 i32) (result i32)))
 (type $iv (func (param i32)))
 (type $i (func (result i32)))
 (import "env" "abort" (func $~lib/env/abort (param i32 i32 i32 i32)))
 (import "env" "input_read_len" (func $main_near/input_read_len (result i32)))
 (import "env" "input_read_into" (func $main_near/input_read_into (param i32)))
 (import "env" "return_value" (func $main_near/return_value (param i32)))
 (memory $0 1)
 (data (i32.const 8) "\04\00\00\00t\00r\00u\00e\00")
 (data (i32.const 24) "\05\00\00\00f\00a\00l\00s\00e\00")
 (data (i32.const 40) "\04\00\00\00n\00u\00l\00l\00")
 (data (i32.const 56) "\01\00\00\000\00")
 (data (i32.const 64) "\0e\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s\00")
 (data (i32.const 96) "\01\00\00\009\00")
 (data (i32.const 104) "\01\00\00\00A\00")
 (data (i32.const 112) "\01\00\00\00a\00")
 (data (i32.const 120) "\03\00\00\001\002\003\00")
 (data (i32.const 136) "\03\00\00\00f\00o\00o\00")
 (data (i32.const 152) "\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 168) "\98\00\00\00\01\00\00\00")
 (data (i32.const 176) "\00\00\00\00")
 (data (i32.const 184) "\01\00\00\00,\00")
 (data (i32.const 192) "\17\00\00\00~\00l\00i\00b\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s\00")
 (data (i32.const 248) "\01\00\00\00\"\00")
 (data (i32.const 256) "\01\00\00\00\\\00")
 (data (i32.const 264) "\02\00\00\00\\\00\"\00")
 (data (i32.const 272) "\02\00\00\00\\\00\\\00")
 (data (i32.const 280) "\01\00\00\00\08\00")
 (data (i32.const 288) "\02\00\00\00\\\00b\00")
 (data (i32.const 296) "\01\00\00\00\n\00")
 (data (i32.const 304) "\02\00\00\00\\\00n\00")
 (data (i32.const 312) "\01\00\00\00\0d\00")
 (data (i32.const 320) "\02\00\00\00\\\00r\00")
 (data (i32.const 328) "\01\00\00\00\t\00")
 (data (i32.const 336) "\02\00\00\00\\\00t\00")
 (data (i32.const 344) "\1c\00\00\00U\00n\00s\00u\00p\00p\00o\00r\00t\00e\00d\00 \00c\00o\00n\00t\00r\00o\00l\00 \00c\00h\00r\00a\00c\00t\00e\00r\00")
 (data (i32.const 408) "\0f\00\00\00j\00s\00o\00n\00/\00e\00n\00c\00o\00d\00e\00r\00.\00t\00s\00")
 (data (i32.const 448) "\01\00\00\00:\00")
 (data (i32.const 456) "\01\00\00\00{\00")
 (data (i32.const 464) "\0d\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00")
 (data (i32.const 496) "\1c\00\00\00~\00l\00i\00b\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00")
 (data (i32.const 560) "\90\01\00\00\00\00\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1072) "0\02\00\00d\00\00\00")
 (data (i32.const 1080) "\03\00\00\00b\00a\00r\00")
 (data (i32.const 1096) "\04\00\00\00f\00l\00a\00g\00")
 (data (i32.const 1112) "\03\00\00\00b\00a\00z\00")
 (data (i32.const 1128) "\03\00\00\00a\00r\00r\00")
 (data (i32.const 1144) "\01\00\00\00[\00")
 (data (i32.const 1152) "\01\00\00\00]\00")
 (data (i32.const 1160) "\01\00\00\00}\00")
 (data (i32.const 1168) "\1b\00\00\00~\00l\00i\00b\00/\00i\00n\00t\00e\00r\00n\00a\00l\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s\00")
 (data (i32.const 1232) "\14\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00i\00n\00p\00u\00t\00 \00e\00n\00d\00")
 (data (i32.const 1280) "\0f\00\00\00j\00s\00o\00n\00/\00d\00e\00c\00o\00d\00e\00r\00.\00t\00s\00")
 (data (i32.const 1320) "\0d\00\00\00m\00o\00d\00e\00l\00_\00n\00e\00a\00r\00.\00t\00s\00")
 (data (i32.const 1352) "\18\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00o\00b\00j\00e\00c\00t\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 1408) "\0c\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00,\00\'\00")
 (data (i32.const 1440) "\1d\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00d\00o\00u\00b\00l\00e\00-\00q\00u\00o\00t\00e\00d\00 \00s\00t\00r\00i\00n\00g\00")
 (data (i32.const 1504) "\1c\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00c\00o\00n\00t\00r\00o\00l\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00")
 (data (i32.const 1568) "\01\00\00\00/\00")
 (data (i32.const 1576) "\01\00\00\00b\00")
 (data (i32.const 1584) "\01\00\00\00n\00")
 (data (i32.const 1592) "\01\00\00\00r\00")
 (data (i32.const 1600) "\01\00\00\00t\00")
 (data (i32.const 1608) "\01\00\00\00u\00")
 (data (i32.const 1616) "\13\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\\\00u\00 \00d\00i\00g\00i\00t\00")
 (data (i32.const 1664) "\1e\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00s\00c\00a\00p\00e\00d\00 \00c\00h\00a\00r\00a\00c\00t\00e\00r\00:\00 \00")
 (data (i32.const 1728) "\0c\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00:\00\'\00")
 (data (i32.const 1760) "\18\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00o\00b\00j\00e\00c\00t\00")
 (data (i32.const 1816) "\17\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00e\00n\00d\00 \00o\00f\00 \00a\00r\00r\00a\00y\00")
 (data (i32.const 1872) "\n\00\00\00E\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00")
 (data (i32.const 1896) "\01\00\00\00\'\00")
 (data (i32.const 1904) "\16\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00b\00o\00o\00l\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 1952) "\03\00\00\00 \00:\00 \00")
 (data (i32.const 1968) "\01\00\00\00-\00")
 (data (i32.const 1976) "\19\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00i\00n\00t\00e\00g\00e\00r\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 2032) "\11\00\00\00C\00a\00n\00n\00o\00t\00 \00p\00a\00r\00s\00e\00 \00J\00S\00O\00N\00")
 (data (i32.const 2072) "\18\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00s\00t\00r\00i\00n\00g\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 2128) "\04\00\00\00 \00:\00 \00\"\00")
 (data (i32.const 2144) "\16\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00n\00u\00l\00l\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 2192) "\17\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00a\00r\00r\00a\00y\00 \00f\00i\00e\00l\00d\00 \00")
 (data (i32.const 2248) "\07\00\00\00t\00e\00s\00t\00.\00t\00s\00")
 (data (i32.const 2272) "\0c\00\00\00m\00a\00i\00n\00_\00n\00e\00a\00r\00.\00t\00s\00")
 (data (i32.const 2304) "\07\00\00\00f\00o\00o\00b\00a\00r\00s\00")
 (data (i32.const 2328) "\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2344) "\18\t\00\00\01\00\00\00")
 (data (i32.const 2352) "\06\00\00\00r\00e\00s\00u\00l\00t\00")
 (data (i32.const 2368) "\06\00\00\00f\00o\00o\00b\00a\00r\00")
 (table $0 2 anyfunc)
 (elem (i32.const 0) $null $main/convertFoobars~anonymous|1)
 (global $json/decoder/TRUE_STR i32 (i32.const 8))
 (global $json/decoder/FALSE_STR i32 (i32.const 24))
 (global $json/decoder/NULL_STR i32 (i32.const 40))
 (global $~lib/internal/string/HEADER_SIZE i32 (i32.const 4))
 (global $json/decoder/CHAR_0 (mut i32) (i32.const 0))
 (global $json/decoder/CHAR_9 (mut i32) (i32.const 0))
 (global $json/decoder/CHAR_A (mut i32) (i32.const 0))
 (global $json/decoder/CHAR_A_LOWER (mut i32) (i32.const 0))
 (global $~lib/internal/allocator/AL_BITS i32 (i32.const 3))
 (global $~lib/internal/allocator/AL_SIZE i32 (i32.const 8))
 (global $~lib/internal/allocator/AL_MASK i32 (i32.const 7))
 (global $~lib/internal/allocator/MAX_SIZE_32 i32 (i32.const 1073741824))
 (global $~lib/allocator/arena/startOffset (mut i32) (i32.const 0))
 (global $~lib/allocator/arena/offset (mut i32) (i32.const 0))
 (global $~lib/internal/string/MAX_LENGTH i32 (i32.const 536870910))
 (global $~lib/internal/arraybuffer/HEADER_SIZE i32 (i32.const 8))
 (global $~lib/internal/arraybuffer/MAX_BLENGTH i32 (i32.const 1073741816))
 (global $ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $~lib/internal/string/CharCode.PLUS i32 (i32.const 43))
 (global $~lib/internal/string/CharCode.MINUS i32 (i32.const 45))
 (global $~lib/internal/string/CharCode.DOT i32 (i32.const 46))
 (global $~lib/internal/string/CharCode._0 i32 (i32.const 48))
 (global $~lib/internal/string/CharCode._1 i32 (i32.const 49))
 (global $~lib/internal/string/CharCode._2 i32 (i32.const 50))
 (global $~lib/internal/string/CharCode._3 i32 (i32.const 51))
 (global $~lib/internal/string/CharCode._4 i32 (i32.const 52))
 (global $~lib/internal/string/CharCode._5 i32 (i32.const 53))
 (global $~lib/internal/string/CharCode._6 i32 (i32.const 54))
 (global $~lib/internal/string/CharCode._7 i32 (i32.const 55))
 (global $~lib/internal/string/CharCode._8 i32 (i32.const 56))
 (global $~lib/internal/string/CharCode._9 i32 (i32.const 57))
 (global $~lib/internal/string/CharCode.A i32 (i32.const 65))
 (global $~lib/internal/string/CharCode.B i32 (i32.const 66))
 (global $~lib/internal/string/CharCode.E i32 (i32.const 69))
 (global $~lib/internal/string/CharCode.N i32 (i32.const 78))
 (global $~lib/internal/string/CharCode.O i32 (i32.const 79))
 (global $~lib/internal/string/CharCode.X i32 (i32.const 88))
 (global $~lib/internal/string/CharCode.Z i32 (i32.const 90))
 (global $~lib/internal/string/CharCode.a i32 (i32.const 97))
 (global $~lib/internal/string/CharCode.b i32 (i32.const 98))
 (global $~lib/internal/string/CharCode.e i32 (i32.const 101))
 (global $~lib/internal/string/CharCode.n i32 (i32.const 110))
 (global $~lib/internal/string/CharCode.o i32 (i32.const 111))
 (global $~lib/internal/string/CharCode.x i32 (i32.const 120))
 (global $~lib/internal/string/CharCode.z i32 (i32.const 122))
 (global $~argc (mut i32) (i32.const 0))
 (global $HEAP_BASE i32 (i32.const 2384))
 (export "memory" (memory $0))
 (export "table" (table $0))
 (export "runTest" (func $test/runTest))
 (export "convertFoobars" (func $test/convertFoobars))
 (start $start)
 (func $~lib/string/String#charCodeAt (; 4 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $0
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 64
   i32.const 75
   i32.const 4
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  get_local $0
  i32.load
  i32.ge_u
  if
   i32.const -1
   return
  end
  get_local $0
  get_local $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u offset=4
 )
 (func $~lib/allocator/arena/__memory_allocate (; 5 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  get_local $0
  get_global $~lib/internal/allocator/MAX_SIZE_32
  i32.gt_u
  if
   unreachable
  end
  get_global $~lib/allocator/arena/offset
  set_local $1
  get_local $1
  get_local $0
  tee_local $2
  i32.const 1
  tee_local $3
  get_local $2
  get_local $3
  i32.gt_u
  select
  i32.add
  get_global $~lib/internal/allocator/AL_MASK
  i32.add
  get_global $~lib/internal/allocator/AL_MASK
  i32.const -1
  i32.xor
  i32.and
  set_local $4
  current_memory
  set_local $5
  get_local $4
  get_local $5
  i32.const 16
  i32.shl
  i32.gt_u
  if
   get_local $4
   get_local $1
   i32.sub
   i32.const 65535
   i32.add
   i32.const 65535
   i32.const -1
   i32.xor
   i32.and
   i32.const 16
   i32.shr_u
   set_local $2
   get_local $5
   tee_local $3
   get_local $2
   tee_local $6
   get_local $3
   get_local $6
   i32.gt_s
   select
   set_local $3
   get_local $3
   grow_memory
   i32.const 0
   i32.lt_s
   if
    get_local $2
    grow_memory
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
  end
  get_local $4
  set_global $~lib/allocator/arena/offset
  get_local $1
 )
 (func $~lib/memory/memory.allocate (; 6 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $~lib/allocator/arena/__memory_allocate
  return
 )
 (func $~lib/internal/string/allocateUnsafe (; 7 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  get_local $0
  i32.const 0
  i32.gt_s
  tee_local $1
  if (result i32)
   get_local $0
   get_global $~lib/internal/string/MAX_LENGTH
   i32.le_s
  else   
   get_local $1
  end
  i32.eqz
  if
   i32.const 0
   i32.const 192
   i32.const 14
   i32.const 2
   call $~lib/env/abort
   unreachable
  end
  block $~lib/memory/memory.allocate|inlined.0 (result i32)
   get_global $~lib/internal/string/HEADER_SIZE
   get_local $0
   i32.const 1
   i32.shl
   i32.add
   set_local $1
   get_local $1
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.0
  end
  set_local $2
  get_local $2
  get_local $0
  i32.store
  get_local $2
 )
 (func $~lib/internal/memory/memcpy (; 8 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  block $break|0
   loop $continue|0
    get_local $2
    if (result i32)
     get_local $1
     i32.const 3
     i32.and
    else     
     get_local $2
    end
    if
     block
      block (result i32)
       get_local $0
       tee_local $5
       i32.const 1
       i32.add
       set_local $0
       get_local $5
      end
      block (result i32)
       get_local $1
       tee_local $5
       i32.const 1
       i32.add
       set_local $1
       get_local $5
      end
      i32.load8_u
      i32.store8
      get_local $2
      i32.const 1
      i32.sub
      set_local $2
     end
     br $continue|0
    end
   end
  end
  get_local $0
  i32.const 3
  i32.and
  i32.const 0
  i32.eq
  if
   block $break|1
    loop $continue|1
     get_local $2
     i32.const 16
     i32.ge_u
     if
      block
       get_local $0
       get_local $1
       i32.load
       i32.store
       get_local $0
       i32.const 4
       i32.add
       get_local $1
       i32.const 4
       i32.add
       i32.load
       i32.store
       get_local $0
       i32.const 8
       i32.add
       get_local $1
       i32.const 8
       i32.add
       i32.load
       i32.store
       get_local $0
       i32.const 12
       i32.add
       get_local $1
       i32.const 12
       i32.add
       i32.load
       i32.store
       get_local $1
       i32.const 16
       i32.add
       set_local $1
       get_local $0
       i32.const 16
       i32.add
       set_local $0
       get_local $2
       i32.const 16
       i32.sub
       set_local $2
      end
      br $continue|1
     end
    end
   end
   get_local $2
   i32.const 8
   i32.and
   if
    get_local $0
    get_local $1
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    get_local $1
    i32.const 4
    i32.add
    i32.load
    i32.store
    get_local $0
    i32.const 8
    i32.add
    set_local $0
    get_local $1
    i32.const 8
    i32.add
    set_local $1
   end
   get_local $2
   i32.const 4
   i32.and
   if
    get_local $0
    get_local $1
    i32.load
    i32.store
    get_local $0
    i32.const 4
    i32.add
    set_local $0
    get_local $1
    i32.const 4
    i32.add
    set_local $1
   end
   get_local $2
   i32.const 2
   i32.and
   if
    get_local $0
    get_local $1
    i32.load16_u
    i32.store16
    get_local $0
    i32.const 2
    i32.add
    set_local $0
    get_local $1
    i32.const 2
    i32.add
    set_local $1
   end
   get_local $2
   i32.const 1
   i32.and
   if
    block (result i32)
     get_local $0
     tee_local $5
     i32.const 1
     i32.add
     set_local $0
     get_local $5
    end
    block (result i32)
     get_local $1
     tee_local $5
     i32.const 1
     i32.add
     set_local $1
     get_local $5
    end
    i32.load8_u
    i32.store8
   end
   return
  end
  get_local $2
  i32.const 32
  i32.ge_u
  if
   block $break|2
    block $case2|2
     block $case1|2
      block $case0|2
       get_local $0
       i32.const 3
       i32.and
       set_local $5
       get_local $5
       i32.const 1
       i32.eq
       br_if $case0|2
       get_local $5
       i32.const 2
       i32.eq
       br_if $case1|2
       get_local $5
       i32.const 3
       i32.eq
       br_if $case2|2
       br $break|2
      end
      block
       get_local $1
       i32.load
       set_local $3
       block (result i32)
        get_local $0
        tee_local $5
        i32.const 1
        i32.add
        set_local $0
        get_local $5
       end
       block (result i32)
        get_local $1
        tee_local $5
        i32.const 1
        i32.add
        set_local $1
        get_local $5
       end
       i32.load8_u
       i32.store8
       block (result i32)
        get_local $0
        tee_local $5
        i32.const 1
        i32.add
        set_local $0
        get_local $5
       end
       block (result i32)
        get_local $1
        tee_local $5
        i32.const 1
        i32.add
        set_local $1
        get_local $5
       end
       i32.load8_u
       i32.store8
       block (result i32)
        get_local $0
        tee_local $5
        i32.const 1
        i32.add
        set_local $0
        get_local $5
       end
       block (result i32)
        get_local $1
        tee_local $5
        i32.const 1
        i32.add
        set_local $1
        get_local $5
       end
       i32.load8_u
       i32.store8
       get_local $2
       i32.const 3
       i32.sub
       set_local $2
       block $break|3
        loop $continue|3
         get_local $2
         i32.const 17
         i32.ge_u
         if
          block
           get_local $1
           i32.const 1
           i32.add
           i32.load
           set_local $4
           get_local $0
           get_local $3
           i32.const 24
           i32.shr_u
           get_local $4
           i32.const 8
           i32.shl
           i32.or
           i32.store
           get_local $1
           i32.const 5
           i32.add
           i32.load
           set_local $3
           get_local $0
           i32.const 4
           i32.add
           get_local $4
           i32.const 24
           i32.shr_u
           get_local $3
           i32.const 8
           i32.shl
           i32.or
           i32.store
           get_local $1
           i32.const 9
           i32.add
           i32.load
           set_local $4
           get_local $0
           i32.const 8
           i32.add
           get_local $3
           i32.const 24
           i32.shr_u
           get_local $4
           i32.const 8
           i32.shl
           i32.or
           i32.store
           get_local $1
           i32.const 13
           i32.add
           i32.load
           set_local $3
           get_local $0
           i32.const 12
           i32.add
           get_local $4
           i32.const 24
           i32.shr_u
           get_local $3
           i32.const 8
           i32.shl
           i32.or
           i32.store
           get_local $1
           i32.const 16
           i32.add
           set_local $1
           get_local $0
           i32.const 16
           i32.add
           set_local $0
           get_local $2
           i32.const 16
           i32.sub
           set_local $2
          end
          br $continue|3
         end
        end
       end
       br $break|2
       unreachable
      end
      unreachable
     end
     block
      get_local $1
      i32.load
      set_local $3
      block (result i32)
       get_local $0
       tee_local $5
       i32.const 1
       i32.add
       set_local $0
       get_local $5
      end
      block (result i32)
       get_local $1
       tee_local $5
       i32.const 1
       i32.add
       set_local $1
       get_local $5
      end
      i32.load8_u
      i32.store8
      block (result i32)
       get_local $0
       tee_local $5
       i32.const 1
       i32.add
       set_local $0
       get_local $5
      end
      block (result i32)
       get_local $1
       tee_local $5
       i32.const 1
       i32.add
       set_local $1
       get_local $5
      end
      i32.load8_u
      i32.store8
      get_local $2
      i32.const 2
      i32.sub
      set_local $2
      block $break|4
       loop $continue|4
        get_local $2
        i32.const 18
        i32.ge_u
        if
         block
          get_local $1
          i32.const 2
          i32.add
          i32.load
          set_local $4
          get_local $0
          get_local $3
          i32.const 16
          i32.shr_u
          get_local $4
          i32.const 16
          i32.shl
          i32.or
          i32.store
          get_local $1
          i32.const 6
          i32.add
          i32.load
          set_local $3
          get_local $0
          i32.const 4
          i32.add
          get_local $4
          i32.const 16
          i32.shr_u
          get_local $3
          i32.const 16
          i32.shl
          i32.or
          i32.store
          get_local $1
          i32.const 10
          i32.add
          i32.load
          set_local $4
          get_local $0
          i32.const 8
          i32.add
          get_local $3
          i32.const 16
          i32.shr_u
          get_local $4
          i32.const 16
          i32.shl
          i32.or
          i32.store
          get_local $1
          i32.const 14
          i32.add
          i32.load
          set_local $3
          get_local $0
          i32.const 12
          i32.add
          get_local $4
          i32.const 16
          i32.shr_u
          get_local $3
          i32.const 16
          i32.shl
          i32.or
          i32.store
          get_local $1
          i32.const 16
          i32.add
          set_local $1
          get_local $0
          i32.const 16
          i32.add
          set_local $0
          get_local $2
          i32.const 16
          i32.sub
          set_local $2
         end
         br $continue|4
        end
       end
      end
      br $break|2
      unreachable
     end
     unreachable
    end
    block
     get_local $1
     i32.load
     set_local $3
     block (result i32)
      get_local $0
      tee_local $5
      i32.const 1
      i32.add
      set_local $0
      get_local $5
     end
     block (result i32)
      get_local $1
      tee_local $5
      i32.const 1
      i32.add
      set_local $1
      get_local $5
     end
     i32.load8_u
     i32.store8
     get_local $2
     i32.const 1
     i32.sub
     set_local $2
     block $break|5
      loop $continue|5
       get_local $2
       i32.const 19
       i32.ge_u
       if
        block
         get_local $1
         i32.const 3
         i32.add
         i32.load
         set_local $4
         get_local $0
         get_local $3
         i32.const 8
         i32.shr_u
         get_local $4
         i32.const 24
         i32.shl
         i32.or
         i32.store
         get_local $1
         i32.const 7
         i32.add
         i32.load
         set_local $3
         get_local $0
         i32.const 4
         i32.add
         get_local $4
         i32.const 8
         i32.shr_u
         get_local $3
         i32.const 24
         i32.shl
         i32.or
         i32.store
         get_local $1
         i32.const 11
         i32.add
         i32.load
         set_local $4
         get_local $0
         i32.const 8
         i32.add
         get_local $3
         i32.const 8
         i32.shr_u
         get_local $4
         i32.const 24
         i32.shl
         i32.or
         i32.store
         get_local $1
         i32.const 15
         i32.add
         i32.load
         set_local $3
         get_local $0
         i32.const 12
         i32.add
         get_local $4
         i32.const 8
         i32.shr_u
         get_local $3
         i32.const 24
         i32.shl
         i32.or
         i32.store
         get_local $1
         i32.const 16
         i32.add
         set_local $1
         get_local $0
         i32.const 16
         i32.add
         set_local $0
         get_local $2
         i32.const 16
         i32.sub
         set_local $2
        end
        br $continue|5
       end
      end
     end
     br $break|2
     unreachable
    end
    unreachable
   end
  end
  get_local $2
  i32.const 16
  i32.and
  if
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
  end
  get_local $2
  i32.const 8
  i32.and
  if
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
  end
  get_local $2
  i32.const 4
  i32.and
  if
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
  end
  get_local $2
  i32.const 2
  i32.and
  if
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
  end
  get_local $2
  i32.const 1
  i32.and
  if
   block (result i32)
    get_local $0
    tee_local $5
    i32.const 1
    i32.add
    set_local $0
    get_local $5
   end
   block (result i32)
    get_local $1
    tee_local $5
    i32.const 1
    i32.add
    set_local $1
    get_local $5
   end
   i32.load8_u
   i32.store8
  end
 )
 (func $~lib/internal/memory/memmove (; 9 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  get_local $0
  get_local $1
  i32.eq
  if
   return
  end
  get_local $1
  get_local $2
  i32.add
  get_local $0
  i32.le_u
  tee_local $3
  if (result i32)
   get_local $3
  else   
   get_local $0
   get_local $2
   i32.add
   get_local $1
   i32.le_u
  end
  if
   get_local $0
   get_local $1
   get_local $2
   call $~lib/internal/memory/memcpy
   return
  end
  get_local $0
  get_local $1
  i32.lt_u
  if
   get_local $1
   i32.const 7
   i32.and
   get_local $0
   i32.const 7
   i32.and
   i32.eq
   if
    block $break|0
     loop $continue|0
      get_local $0
      i32.const 7
      i32.and
      if
       block
        get_local $2
        i32.eqz
        if
         return
        end
        get_local $2
        i32.const 1
        i32.sub
        set_local $2
        block (result i32)
         get_local $0
         tee_local $3
         i32.const 1
         i32.add
         set_local $0
         get_local $3
        end
        block (result i32)
         get_local $1
         tee_local $3
         i32.const 1
         i32.add
         set_local $1
         get_local $3
        end
        i32.load8_u
        i32.store8
       end
       br $continue|0
      end
     end
    end
    block $break|1
     loop $continue|1
      get_local $2
      i32.const 8
      i32.ge_u
      if
       block
        get_local $0
        get_local $1
        i64.load
        i64.store
        get_local $2
        i32.const 8
        i32.sub
        set_local $2
        get_local $0
        i32.const 8
        i32.add
        set_local $0
        get_local $1
        i32.const 8
        i32.add
        set_local $1
       end
       br $continue|1
      end
     end
    end
   end
   block $break|2
    loop $continue|2
     get_local $2
     if
      block
       block (result i32)
        get_local $0
        tee_local $3
        i32.const 1
        i32.add
        set_local $0
        get_local $3
       end
       block (result i32)
        get_local $1
        tee_local $3
        i32.const 1
        i32.add
        set_local $1
        get_local $3
       end
       i32.load8_u
       i32.store8
       get_local $2
       i32.const 1
       i32.sub
       set_local $2
      end
      br $continue|2
     end
    end
   end
  else   
   get_local $1
   i32.const 7
   i32.and
   get_local $0
   i32.const 7
   i32.and
   i32.eq
   if
    block $break|3
     loop $continue|3
      get_local $0
      get_local $2
      i32.add
      i32.const 7
      i32.and
      if
       block
        get_local $2
        i32.eqz
        if
         return
        end
        get_local $0
        get_local $2
        i32.const 1
        i32.sub
        tee_local $2
        i32.add
        get_local $1
        get_local $2
        i32.add
        i32.load8_u
        i32.store8
       end
       br $continue|3
      end
     end
    end
    block $break|4
     loop $continue|4
      get_local $2
      i32.const 8
      i32.ge_u
      if
       block
        get_local $2
        i32.const 8
        i32.sub
        set_local $2
        get_local $0
        get_local $2
        i32.add
        get_local $1
        get_local $2
        i32.add
        i64.load
        i64.store
       end
       br $continue|4
      end
     end
    end
   end
   block $break|5
    loop $continue|5
     get_local $2
     if
      get_local $0
      get_local $2
      i32.const 1
      i32.sub
      tee_local $2
      i32.add
      get_local $1
      get_local $2
      i32.add
      i32.load8_u
      i32.store8
      br $continue|5
     end
    end
   end
  end
 )
 (func $~lib/internal/string/copyUnsafe (; 10 ;) (type $iiiiiv) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  get_local $0
  get_local $1
  i32.const 1
  i32.shl
  i32.add
  get_global $~lib/internal/string/HEADER_SIZE
  i32.add
  set_local $5
  get_local $2
  get_local $3
  i32.const 1
  i32.shl
  i32.add
  get_global $~lib/internal/string/HEADER_SIZE
  i32.add
  set_local $6
  get_local $4
  i32.const 1
  i32.shl
  set_local $7
  get_local $5
  get_local $6
  get_local $7
  call $~lib/internal/memory/memmove
 )
 (func $~lib/string/String#concat (; 11 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $0
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 64
   i32.const 110
   i32.const 4
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  i32.const 0
  i32.eq
  if
   i32.const 40
   set_local $1
  end
  get_local $0
  i32.load
  set_local $2
  get_local $1
  i32.load
  set_local $3
  get_local $2
  get_local $3
  i32.add
  set_local $4
  get_local $4
  i32.const 0
  i32.eq
  if
   i32.const 176
   return
  end
  get_local $4
  call $~lib/internal/string/allocateUnsafe
  set_local $5
  get_local $5
  i32.const 0
  get_local $0
  i32.const 0
  get_local $2
  call $~lib/internal/string/copyUnsafe
  get_local $5
  get_local $2
  get_local $1
  i32.const 0
  get_local $3
  call $~lib/internal/string/copyUnsafe
  get_local $5
 )
 (func $~lib/string/String.__concat (; 12 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $0
  i32.eqz
  if
   i32.const 40
   set_local $0
  end
  get_local $0
  get_local $1
  call $~lib/string/String#concat
 )
 (func $json/encoder/JSONEncoder#write (; 13 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $0
  get_local $0
  i32.load offset=8
  get_local $1
  call $~lib/string/String.__concat
  i32.store offset=8
 )
 (func $~lib/internal/string/compareUnsafe (; 14 ;) (type $iiiiii) (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  i32.const 0
  set_local $5
  get_local $0
  get_local $1
  i32.const 1
  i32.shl
  i32.add
  set_local $6
  get_local $2
  get_local $3
  i32.const 1
  i32.shl
  i32.add
  set_local $7
  block $break|0
   loop $continue|0
    get_local $4
    if (result i32)
     get_local $6
     i32.load16_u offset=4
     get_local $7
     i32.load16_u offset=4
     i32.sub
     tee_local $5
     i32.eqz
    else     
     get_local $4
    end
    if
     block
      get_local $4
      i32.const 1
      i32.sub
      set_local $4
      get_local $6
      i32.const 2
      i32.add
      set_local $6
      get_local $7
      i32.const 2
      i32.add
      set_local $7
     end
     br $continue|0
    end
   end
  end
  get_local $5
 )
 (func $~lib/string/String.__eq (; 15 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  get_local $1
  i32.eq
  if
   i32.const 1
   return
  end
  get_local $0
  i32.const 0
  i32.eq
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load
  set_local $3
  get_local $3
  get_local $1
  i32.load
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.const 0
  get_local $1
  i32.const 0
  get_local $3
  call $~lib/internal/string/compareUnsafe
  i32.eqz
 )
 (func $~lib/string/String.__ne (; 16 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $0
  get_local $1
  call $~lib/string/String.__eq
  i32.eqz
 )
 (func $~lib/string/String#substring (; 17 ;) (type $iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  get_local $0
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 64
   i32.const 269
   i32.const 4
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load
  set_local $3
  get_local $1
  tee_local $4
  i32.const 0
  tee_local $5
  get_local $4
  get_local $5
  i32.gt_s
  select
  tee_local $4
  get_local $3
  tee_local $5
  get_local $4
  get_local $5
  i32.lt_s
  select
  set_local $6
  get_local $2
  tee_local $4
  i32.const 0
  tee_local $5
  get_local $4
  get_local $5
  i32.gt_s
  select
  tee_local $4
  get_local $3
  tee_local $5
  get_local $4
  get_local $5
  i32.lt_s
  select
  set_local $7
  get_local $6
  tee_local $4
  get_local $7
  tee_local $5
  get_local $4
  get_local $5
  i32.lt_s
  select
  set_local $8
  get_local $6
  tee_local $4
  get_local $7
  tee_local $5
  get_local $4
  get_local $5
  i32.gt_s
  select
  set_local $9
  get_local $9
  get_local $8
  i32.sub
  set_local $3
  get_local $3
  i32.eqz
  if
   i32.const 176
   return
  end
  get_local $8
  i32.eqz
  tee_local $4
  if (result i32)
   get_local $9
   get_local $0
   i32.load
   i32.eq
  else   
   get_local $4
  end
  if
   get_local $0
   return
  end
  get_local $3
  call $~lib/internal/string/allocateUnsafe
  set_local $10
  get_local $10
  i32.const 0
  get_local $0
  get_local $8
  get_local $3
  call $~lib/internal/string/copyUnsafe
  get_local $10
 )
 (func $json/encoder/JSONEncoder#writeString (; 18 ;) (type $iiv) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $0
  i32.const 248
  call $json/encoder/JSONEncoder#write
  i32.const 0
  set_local $2
  block $break|0
   i32.const 0
   set_local $3
   loop $repeat|0
    get_local $3
    get_local $1
    i32.load
    i32.lt_s
    i32.eqz
    br_if $break|0
    block
     get_local $1
     get_local $3
     call $~lib/string/String#charCodeAt
     set_local $4
     get_local $4
     i32.const 32
     i32.lt_s
     tee_local $5
     if (result i32)
      get_local $5
     else      
      get_local $4
      i32.const 248
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
     end
     tee_local $5
     if (result i32)
      get_local $5
     else      
      get_local $4
      i32.const 256
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
     end
     set_local $5
     get_local $5
     i32.const 0
     i32.ne
     if
      get_local $0
      get_local $1
      get_local $2
      get_local $3
      call $~lib/string/String#substring
      call $json/encoder/JSONEncoder#write
      get_local $3
      i32.const 1
      i32.add
      set_local $2
      get_local $4
      i32.const 248
      i32.const 0
      call $~lib/string/String#charCodeAt
      i32.eq
      if
       get_local $0
       i32.const 264
       call $json/encoder/JSONEncoder#write
      else       
       get_local $4
       i32.const 256
       i32.const 0
       call $~lib/string/String#charCodeAt
       i32.eq
       if
        get_local $0
        i32.const 272
        call $json/encoder/JSONEncoder#write
       else        
        get_local $4
        i32.const 280
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.eq
        if
         get_local $0
         i32.const 288
         call $json/encoder/JSONEncoder#write
        else         
         get_local $4
         i32.const 296
         i32.const 0
         call $~lib/string/String#charCodeAt
         i32.eq
         if
          get_local $0
          i32.const 304
          call $json/encoder/JSONEncoder#write
         else          
          get_local $4
          i32.const 312
          i32.const 0
          call $~lib/string/String#charCodeAt
          i32.eq
          if
           get_local $0
           i32.const 320
           call $json/encoder/JSONEncoder#write
          else           
           get_local $4
           i32.const 328
           i32.const 0
           call $~lib/string/String#charCodeAt
           i32.eq
           if
            get_local $0
            i32.const 336
            call $json/encoder/JSONEncoder#write
           else            
            i32.const 0
            i32.eqz
            if
             i32.const 344
             i32.const 408
             i32.const 102
             i32.const 20
             call $~lib/env/abort
             unreachable
            end
           end
          end
         end
        end
       end
      end
     end
    end
    get_local $3
    i32.const 1
    i32.add
    set_local $3
    br $repeat|0
    unreachable
   end
   unreachable
  end
  get_local $0
  get_local $1
  get_local $2
  get_local $1
  i32.load
  call $~lib/string/String#substring
  call $json/encoder/JSONEncoder#write
  get_local $0
  i32.const 248
  call $json/encoder/JSONEncoder#write
 )
 (func $json/encoder/JSONEncoder#writeKey (; 19 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $0
  i32.load8_u
  i32.const 0
  i32.ne
  i32.eqz
  if
   get_local $0
   i32.const 184
   call $json/encoder/JSONEncoder#write
  else   
   get_local $0
   i32.const 0
   i32.store8
  end
  get_local $1
  i32.const 0
  call $~lib/string/String.__ne
  if
   get_local $0
   get_local $1
   call $json/encoder/JSONEncoder#writeString
   get_local $0
   i32.const 448
   call $json/encoder/JSONEncoder#write
  end
 )
 (func $~lib/internal/arraybuffer/computeSize (; 20 ;) (type $ii) (param $0 i32) (result i32)
  i32.const 1
  i32.const 32
  get_local $0
  get_global $~lib/internal/arraybuffer/HEADER_SIZE
  i32.add
  i32.const 1
  i32.sub
  i32.clz
  i32.sub
  i32.shl
 )
 (func $~lib/internal/arraybuffer/allocateUnsafe (; 21 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  get_local $0
  get_global $~lib/internal/arraybuffer/MAX_BLENGTH
  i32.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 496
   i32.const 26
   i32.const 2
   call $~lib/env/abort
   unreachable
  end
  block $~lib/memory/memory.allocate|inlined.1 (result i32)
   get_local $0
   call $~lib/internal/arraybuffer/computeSize
   set_local $2
   get_local $2
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.1
  end
  set_local $1
  get_local $1
  get_local $0
  i32.store
  get_local $1
 )
 (func $~lib/allocator/arena/__memory_free (; 22 ;) (type $iv) (param $0 i32)
  nop
 )
 (func $~lib/internal/memory/memset (; 23 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  get_local $2
  i32.eqz
  if
   return
  end
  get_local $0
  get_local $1
  i32.store8
  get_local $0
  get_local $2
  i32.add
  i32.const 1
  i32.sub
  get_local $1
  i32.store8
  get_local $2
  i32.const 2
  i32.le_u
  if
   return
  end
  get_local $0
  i32.const 1
  i32.add
  get_local $1
  i32.store8
  get_local $0
  i32.const 2
  i32.add
  get_local $1
  i32.store8
  get_local $0
  get_local $2
  i32.add
  i32.const 2
  i32.sub
  get_local $1
  i32.store8
  get_local $0
  get_local $2
  i32.add
  i32.const 3
  i32.sub
  get_local $1
  i32.store8
  get_local $2
  i32.const 6
  i32.le_u
  if
   return
  end
  get_local $0
  i32.const 3
  i32.add
  get_local $1
  i32.store8
  get_local $0
  get_local $2
  i32.add
  i32.const 4
  i32.sub
  get_local $1
  i32.store8
  get_local $2
  i32.const 8
  i32.le_u
  if
   return
  end
  i32.const 0
  get_local $0
  i32.sub
  i32.const 3
  i32.and
  set_local $3
  get_local $0
  get_local $3
  i32.add
  set_local $0
  get_local $2
  get_local $3
  i32.sub
  set_local $2
  get_local $2
  i32.const -4
  i32.and
  set_local $2
  i32.const -1
  i32.const 255
  i32.div_u
  get_local $1
  i32.const 255
  i32.and
  i32.mul
  set_local $4
  get_local $0
  get_local $4
  i32.store
  get_local $0
  get_local $2
  i32.add
  i32.const 4
  i32.sub
  get_local $4
  i32.store
  get_local $2
  i32.const 8
  i32.le_u
  if
   return
  end
  get_local $0
  i32.const 4
  i32.add
  get_local $4
  i32.store
  get_local $0
  i32.const 8
  i32.add
  get_local $4
  i32.store
  get_local $0
  get_local $2
  i32.add
  i32.const 12
  i32.sub
  get_local $4
  i32.store
  get_local $0
  get_local $2
  i32.add
  i32.const 8
  i32.sub
  get_local $4
  i32.store
  get_local $2
  i32.const 24
  i32.le_u
  if
   return
  end
  get_local $0
  i32.const 12
  i32.add
  get_local $4
  i32.store
  get_local $0
  i32.const 16
  i32.add
  get_local $4
  i32.store
  get_local $0
  i32.const 20
  i32.add
  get_local $4
  i32.store
  get_local $0
  i32.const 24
  i32.add
  get_local $4
  i32.store
  get_local $0
  get_local $2
  i32.add
  i32.const 28
  i32.sub
  get_local $4
  i32.store
  get_local $0
  get_local $2
  i32.add
  i32.const 24
  i32.sub
  get_local $4
  i32.store
  get_local $0
  get_local $2
  i32.add
  i32.const 20
  i32.sub
  get_local $4
  i32.store
  get_local $0
  get_local $2
  i32.add
  i32.const 16
  i32.sub
  get_local $4
  i32.store
  i32.const 24
  get_local $0
  i32.const 4
  i32.and
  i32.add
  set_local $3
  get_local $0
  get_local $3
  i32.add
  set_local $0
  get_local $2
  get_local $3
  i32.sub
  set_local $2
  get_local $4
  i64.extend_u/i32
  get_local $4
  i64.extend_u/i32
  i64.const 32
  i64.shl
  i64.or
  set_local $5
  block $break|0
   loop $continue|0
    get_local $2
    i32.const 32
    i32.ge_u
    if
     block
      get_local $0
      get_local $5
      i64.store
      get_local $0
      i32.const 8
      i32.add
      get_local $5
      i64.store
      get_local $0
      i32.const 16
      i32.add
      get_local $5
      i64.store
      get_local $0
      i32.const 24
      i32.add
      get_local $5
      i64.store
      get_local $2
      i32.const 32
      i32.sub
      set_local $2
      get_local $0
      i32.const 32
      i32.add
      set_local $0
     end
     br $continue|0
    end
   end
  end
 )
 (func $~lib/internal/arraybuffer/reallocateUnsafe (; 24 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $0
  i32.load
  set_local $2
  get_local $1
  get_local $2
  i32.gt_s
  if
   get_local $1
   get_global $~lib/internal/arraybuffer/MAX_BLENGTH
   i32.le_s
   i32.eqz
   if
    i32.const 0
    i32.const 496
    i32.const 40
    i32.const 4
    call $~lib/env/abort
    unreachable
   end
   get_local $1
   get_local $2
   call $~lib/internal/arraybuffer/computeSize
   get_global $~lib/internal/arraybuffer/HEADER_SIZE
   i32.sub
   i32.le_s
   if
    get_local $0
    get_local $1
    i32.store
   else    
    get_local $1
    call $~lib/internal/arraybuffer/allocateUnsafe
    set_local $3
    get_local $3
    get_global $~lib/internal/arraybuffer/HEADER_SIZE
    i32.add
    set_local $4
    get_local $0
    get_global $~lib/internal/arraybuffer/HEADER_SIZE
    i32.add
    set_local $5
    get_local $4
    get_local $5
    get_local $2
    call $~lib/internal/memory/memmove
    block $~lib/memory/memory.free|inlined.0
     block
      get_local $0
      call $~lib/allocator/arena/__memory_free
      br $~lib/memory/memory.free|inlined.0
      unreachable
     end
     unreachable
    end
    get_local $3
    set_local $0
   end
   get_local $0
   get_global $~lib/internal/arraybuffer/HEADER_SIZE
   i32.add
   get_local $2
   i32.add
   set_local $3
   i32.const 0
   set_local $5
   get_local $1
   get_local $2
   i32.sub
   set_local $4
   get_local $3
   get_local $5
   get_local $4
   call $~lib/internal/memory/memset
  else   
   get_local $1
   get_local $2
   i32.lt_s
   if
    get_local $1
    i32.const 0
    i32.ge_s
    i32.eqz
    if
     i32.const 0
     i32.const 496
     i32.const 62
     i32.const 4
     call $~lib/env/abort
     unreachable
    end
    get_local $0
    get_local $1
    i32.store
   end
  end
  get_local $0
 )
 (func $~lib/array/Array<bool>#push (; 25 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  get_local $0
  i32.load offset=4
  set_local $2
  get_local $0
  i32.load
  set_local $3
  get_local $3
  i32.load
  i32.const 0
  i32.shr_u
  set_local $4
  get_local $2
  i32.const 1
  i32.add
  set_local $5
  get_local $2
  get_local $4
  i32.ge_u
  if
   get_local $2
   i32.const 1073741816
   i32.ge_u
   if
    i32.const 0
    i32.const 464
    i32.const 184
    i32.const 42
    call $~lib/env/abort
    unreachable
   end
   get_local $3
   get_local $5
   i32.const 0
   i32.shl
   call $~lib/internal/arraybuffer/reallocateUnsafe
   set_local $3
   get_local $0
   get_local $3
   i32.store
  end
  get_local $0
  get_local $5
  i32.store offset=4
  i32.const 0
  set_local $6
  get_local $3
  get_local $2
  i32.const 0
  i32.shl
  i32.add
  get_local $6
  i32.add
  get_local $1
  i32.store8 offset=8
  get_local $5
 )
 (func $json/encoder/JSONEncoder#pushObject (; 26 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $0
  get_local $1
  call $json/encoder/JSONEncoder#writeKey
  get_local $0
  i32.const 456
  call $json/encoder/JSONEncoder#write
  get_local $0
  i32.const 1
  i32.store8
  get_local $0
  i32.load offset=4
  i32.const 1
  call $~lib/array/Array<bool>#push
  drop
  i32.const 1
 )
 (func $~lib/internal/number/decimalCount32 (; 27 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  i32.const 100000
  i32.lt_u
  if
   get_local $0
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    i32.const 2
    get_local $0
    i32.const 10
    i32.lt_u
    select
    return
   else    
    i32.const 4
    i32.const 5
    get_local $0
    i32.const 10000
    i32.lt_u
    select
    set_local $1
    i32.const 3
    get_local $1
    get_local $0
    i32.const 1000
    i32.lt_u
    select
    return
   end
   unreachable
   unreachable
  else   
   get_local $0
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    i32.const 7
    get_local $0
    i32.const 1000000
    i32.lt_u
    select
    return
   else    
    i32.const 9
    i32.const 10
    get_local $0
    i32.const 1000000000
    i32.lt_u
    select
    set_local $1
    i32.const 8
    get_local $1
    get_local $0
    i32.const 100000000
    i32.lt_u
    select
    return
   end
   unreachable
   unreachable
  end
  unreachable
  unreachable
 )
 (func $~lib/internal/number/utoa32_lut (; 28 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i64)
  block $~lib/internal/number/DIGITS|inlined.0 (result i32)
   i32.const 1072
  end
  i32.load
  set_local $3
  block $break|0
   loop $continue|0
    get_local $1
    i32.const 10000
    i32.ge_u
    if
     block
      get_local $1
      i32.const 10000
      i32.div_u
      set_local $4
      get_local $1
      i32.const 10000
      i32.rem_u
      set_local $5
      get_local $4
      set_local $1
      get_local $5
      i32.const 100
      i32.div_u
      set_local $6
      get_local $5
      i32.const 100
      i32.rem_u
      set_local $7
      block $~lib/internal/arraybuffer/LOAD<u32,u64>|inlined.0 (result i64)
       i32.const 0
       set_local $8
       get_local $3
       get_local $6
       i32.const 2
       i32.shl
       i32.add
       get_local $8
       i32.add
       i64.load32_u offset=8
      end
      set_local $9
      block $~lib/internal/arraybuffer/LOAD<u32,u64>|inlined.1 (result i64)
       i32.const 0
       set_local $8
       get_local $3
       get_local $7
       i32.const 2
       i32.shl
       i32.add
       get_local $8
       i32.add
       i64.load32_u offset=8
      end
      set_local $10
      get_local $2
      i32.const 4
      i32.sub
      set_local $2
      get_local $0
      get_local $2
      i32.const 1
      i32.shl
      i32.add
      get_local $9
      get_local $10
      i64.const 32
      i64.shl
      i64.or
      i64.store offset=4
     end
     br $continue|0
    end
   end
  end
  get_local $1
  i32.const 100
  i32.ge_u
  if
   get_local $1
   i32.const 100
   i32.div_u
   set_local $7
   get_local $1
   i32.const 100
   i32.rem_u
   set_local $6
   get_local $7
   set_local $1
   get_local $2
   i32.const 2
   i32.sub
   set_local $2
   block $~lib/internal/arraybuffer/LOAD<u32,u32>|inlined.0 (result i32)
    i32.const 0
    set_local $5
    get_local $3
    get_local $6
    i32.const 2
    i32.shl
    i32.add
    get_local $5
    i32.add
    i32.load offset=8
   end
   set_local $5
   get_local $0
   get_local $2
   i32.const 1
   i32.shl
   i32.add
   get_local $5
   i32.store offset=4
  end
  get_local $1
  i32.const 10
  i32.ge_u
  if
   get_local $2
   i32.const 2
   i32.sub
   set_local $2
   block $~lib/internal/arraybuffer/LOAD<u32,u32>|inlined.1 (result i32)
    i32.const 0
    set_local $5
    get_local $3
    get_local $1
    i32.const 2
    i32.shl
    i32.add
    get_local $5
    i32.add
    i32.load offset=8
   end
   set_local $5
   get_local $0
   get_local $2
   i32.const 1
   i32.shl
   i32.add
   get_local $5
   i32.store offset=4
  else   
   get_local $2
   i32.const 1
   i32.sub
   set_local $2
   get_global $~lib/internal/string/CharCode._0
   get_local $1
   i32.add
   set_local $5
   get_local $0
   get_local $2
   i32.const 1
   i32.shl
   i32.add
   get_local $5
   i32.store16 offset=4
  end
 )
 (func $~lib/internal/number/itoa32 (; 29 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  i32.eqz
  if
   i32.const 56
   return
  end
  get_local $0
  i32.const 0
  i32.lt_s
  set_local $1
  get_local $1
  if
   i32.const 0
   get_local $0
   i32.sub
   set_local $0
  end
  get_local $0
  call $~lib/internal/number/decimalCount32
  get_local $1
  i32.add
  set_local $2
  get_local $2
  call $~lib/internal/string/allocateUnsafe
  set_local $3
  get_local $3
  get_local $0
  get_local $2
  call $~lib/internal/number/utoa32_lut
  get_local $1
  if
   get_local $3
   get_global $~lib/internal/string/CharCode.MINUS
   i32.store16 offset=4
  end
  get_local $3
 )
 (func $~lib/internal/number/itoa<i32> (; 30 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $~lib/internal/number/itoa32
  return
 )
 (func $~lib/number/I32#toString (; 31 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $~lib/internal/number/itoa<i32>
 )
 (func $json/encoder/JSONEncoder#writeInteger (; 32 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $0
  get_local $1
  call $~lib/number/I32#toString
  call $json/encoder/JSONEncoder#write
 )
 (func $json/encoder/JSONEncoder#setInteger (; 33 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $0
  get_local $1
  call $json/encoder/JSONEncoder#writeKey
  get_local $0
  get_local $2
  call $json/encoder/JSONEncoder#writeInteger
 )
 (func $json/encoder/JSONEncoder#writeBoolean (; 34 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $0
  get_local $1
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 8
  else   
   i32.const 24
  end
  call $json/encoder/JSONEncoder#write
 )
 (func $json/encoder/JSONEncoder#setBoolean (; 35 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $0
  get_local $1
  call $json/encoder/JSONEncoder#writeKey
  get_local $0
  get_local $2
  call $json/encoder/JSONEncoder#writeBoolean
 )
 (func $json/encoder/JSONEncoder#setString (; 36 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $0
  get_local $1
  call $json/encoder/JSONEncoder#writeKey
  get_local $0
  get_local $2
  call $json/encoder/JSONEncoder#writeString
 )
 (func $json/encoder/JSONEncoder#setNull (; 37 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $0
  get_local $1
  call $json/encoder/JSONEncoder#writeKey
  get_local $0
  i32.const 40
  call $json/encoder/JSONEncoder#write
 )
 (func $json/encoder/JSONEncoder#pushArray (; 38 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $0
  get_local $1
  call $json/encoder/JSONEncoder#writeKey
  get_local $0
  i32.const 1144
  call $json/encoder/JSONEncoder#write
  get_local $0
  i32.const 1
  i32.store8
  get_local $0
  i32.load offset=4
  i32.const 0
  call $~lib/array/Array<bool>#push
  drop
  i32.const 1
 )
 (func $~lib/array/Array<Array<String>>#__get (; 39 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  i32.load
  set_local $2
  get_local $1
  get_local $2
  i32.load
  i32.const 2
  i32.shr_u
  i32.lt_u
  if (result i32)
   i32.const 0
   set_local $3
   get_local $2
   get_local $1
   i32.const 2
   i32.shl
   i32.add
   get_local $3
   i32.add
   i32.load offset=8
  else   
   unreachable
  end
 )
 (func $~lib/array/Array<String>#__get (; 40 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  i32.load
  set_local $2
  get_local $1
  get_local $2
  i32.load
  i32.const 2
  i32.shr_u
  i32.lt_u
  if (result i32)
   i32.const 0
   set_local $3
   get_local $2
   get_local $1
   i32.const 2
   i32.shl
   i32.add
   get_local $3
   i32.add
   i32.load offset=8
  else   
   unreachable
  end
 )
 (func $model_near/__near_encode_Array_String (; 41 ;) (type $iiv) (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $break|0
   i32.const 0
   set_local $2
   loop $repeat|0
    get_local $2
    block $~lib/array/Array<String>#get:length|inlined.1 (result i32)
     get_local $0
     i32.load offset=4
    end
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $0
    get_local $2
    call $~lib/array/Array<String>#__get
    i32.const 0
    call $~lib/string/String.__ne
    if
     get_local $1
     i32.const 0
     get_local $0
     get_local $2
     call $~lib/array/Array<String>#__get
     call $json/encoder/JSONEncoder#setString
    else     
     get_local $1
     i32.const 0
     call $json/encoder/JSONEncoder#setNull
    end
    get_local $2
    i32.const 1
    i32.add
    set_local $2
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $json/encoder/JSONEncoder#popArray (; 42 ;) (type $iv) (param $0 i32)
  get_local $0
  i32.const 1152
  call $json/encoder/JSONEncoder#write
 )
 (func $model_near/__near_encode_Array_Array_String (; 43 ;) (type $iiv) (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $break|0
   i32.const 0
   set_local $2
   loop $repeat|0
    get_local $2
    block $~lib/array/Array<Array<String>>#get:length|inlined.1 (result i32)
     get_local $0
     i32.load offset=4
    end
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $0
    get_local $2
    call $~lib/array/Array<Array<String>>#__get
    i32.const 0
    i32.ne
    if
     get_local $1
     i32.const 0
     call $json/encoder/JSONEncoder#pushArray
     drop
     get_local $0
     get_local $2
     call $~lib/array/Array<Array<String>>#__get
     get_local $1
     call $model_near/__near_encode_Array_String
     get_local $1
     call $json/encoder/JSONEncoder#popArray
    else     
     get_local $1
     i32.const 0
     call $json/encoder/JSONEncoder#setNull
    end
    get_local $2
    i32.const 1
    i32.add
    set_local $2
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $model_near/__near_encode_FooBar (; 44 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $1
  i32.const 136
  get_local $0
  i32.load
  call $json/encoder/JSONEncoder#setInteger
  get_local $1
  i32.const 1080
  get_local $0
  i32.load offset=4
  call $json/encoder/JSONEncoder#setInteger
  get_local $1
  i32.const 1096
  get_local $0
  i32.load8_u offset=8
  call $json/encoder/JSONEncoder#setBoolean
  get_local $0
  i32.load offset=12
  i32.const 0
  call $~lib/string/String.__ne
  if
   get_local $1
   i32.const 1112
   get_local $0
   i32.load offset=12
   call $json/encoder/JSONEncoder#setString
  else   
   get_local $1
   i32.const 1112
   call $json/encoder/JSONEncoder#setNull
  end
  get_local $0
  i32.load offset=16
  i32.const 0
  i32.ne
  if
   get_local $1
   i32.const 1128
   call $json/encoder/JSONEncoder#pushArray
   drop
   get_local $0
   i32.load offset=16
   get_local $1
   call $model_near/__near_encode_Array_Array_String
   get_local $1
   call $json/encoder/JSONEncoder#popArray
  else   
   get_local $1
   i32.const 1128
   call $json/encoder/JSONEncoder#setNull
  end
 )
 (func $json/encoder/JSONEncoder#popObject (; 45 ;) (type $iv) (param $0 i32)
  get_local $0
  i32.const 1160
  call $json/encoder/JSONEncoder#write
 )
 (func $~lib/string/String#get:lengthUTF8 (; 46 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  set_local $1
  i32.const 0
  set_local $2
  get_local $0
  i32.load
  set_local $3
  block $break|0
   loop $continue|0
    get_local $2
    get_local $3
    i32.lt_u
    if
     block
      get_local $0
      get_local $2
      i32.const 1
      i32.shl
      i32.add
      i32.load16_u offset=4
      set_local $4
      get_local $4
      i32.const 128
      i32.lt_u
      if
       get_local $1
       i32.const 1
       i32.add
       set_local $1
       get_local $2
       i32.const 1
       i32.add
       set_local $2
      else       
       get_local $4
       i32.const 2048
       i32.lt_u
       if
        get_local $1
        i32.const 2
        i32.add
        set_local $1
        get_local $2
        i32.const 1
        i32.add
        set_local $2
       else        
        get_local $4
        i32.const 64512
        i32.and
        i32.const 55296
        i32.eq
        tee_local $5
        if (result i32)
         get_local $2
         i32.const 1
         i32.add
         get_local $3
         i32.lt_u
        else         
         get_local $5
        end
        tee_local $5
        if (result i32)
         get_local $0
         get_local $2
         i32.const 1
         i32.add
         i32.const 1
         i32.shl
         i32.add
         i32.load16_u offset=4
         i32.const 64512
         i32.and
         i32.const 56320
         i32.eq
        else         
         get_local $5
        end
        if
         get_local $1
         i32.const 4
         i32.add
         set_local $1
         get_local $2
         i32.const 2
         i32.add
         set_local $2
        else         
         get_local $1
         i32.const 3
         i32.add
         set_local $1
         get_local $2
         i32.const 1
         i32.add
         set_local $2
        end
       end
      end
     end
     br $continue|0
    end
   end
  end
  get_local $1
 )
 (func $~lib/string/String#toUTF8 (; 47 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  block $~lib/memory/memory.allocate|inlined.2 (result i32)
   get_local $0
   call $~lib/string/String#get:lengthUTF8
   set_local $1
   get_local $1
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.2
  end
  set_local $2
  i32.const 0
  set_local $3
  get_local $0
  i32.load
  set_local $4
  i32.const 0
  set_local $5
  block $break|0
   loop $continue|0
    get_local $3
    get_local $4
    i32.lt_u
    if
     block
      get_local $0
      get_local $3
      i32.const 1
      i32.shl
      i32.add
      i32.load16_u offset=4
      set_local $1
      get_local $1
      i32.const 128
      i32.lt_u
      if
       get_local $2
       get_local $5
       i32.add
       get_local $1
       i32.store8
       get_local $5
       i32.const 1
       i32.add
       set_local $5
       get_local $3
       i32.const 1
       i32.add
       set_local $3
      else       
       get_local $1
       i32.const 2048
       i32.lt_u
       if
        get_local $2
        get_local $5
        i32.add
        set_local $6
        get_local $6
        get_local $1
        i32.const 6
        i32.shr_u
        i32.const 192
        i32.or
        i32.store8
        get_local $6
        get_local $1
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.store8 offset=1
        get_local $5
        i32.const 2
        i32.add
        set_local $5
        get_local $3
        i32.const 1
        i32.add
        set_local $3
       else        
        get_local $2
        get_local $5
        i32.add
        set_local $6
        get_local $1
        i32.const 64512
        i32.and
        i32.const 55296
        i32.eq
        tee_local $7
        if (result i32)
         get_local $3
         i32.const 1
         i32.add
         get_local $4
         i32.lt_u
        else         
         get_local $7
        end
        if
         get_local $0
         get_local $3
         i32.const 1
         i32.add
         i32.const 1
         i32.shl
         i32.add
         i32.load16_u offset=4
         set_local $7
         get_local $7
         i32.const 64512
         i32.and
         i32.const 56320
         i32.eq
         if
          i32.const 65536
          get_local $1
          i32.const 1023
          i32.and
          i32.const 10
          i32.shl
          i32.add
          get_local $7
          i32.const 1023
          i32.and
          i32.add
          set_local $1
          get_local $6
          get_local $1
          i32.const 18
          i32.shr_u
          i32.const 240
          i32.or
          i32.store8
          get_local $6
          get_local $1
          i32.const 12
          i32.shr_u
          i32.const 63
          i32.and
          i32.const 128
          i32.or
          i32.store8 offset=1
          get_local $6
          get_local $1
          i32.const 6
          i32.shr_u
          i32.const 63
          i32.and
          i32.const 128
          i32.or
          i32.store8 offset=2
          get_local $6
          get_local $1
          i32.const 63
          i32.and
          i32.const 128
          i32.or
          i32.store8 offset=3
          get_local $5
          i32.const 4
          i32.add
          set_local $5
          get_local $3
          i32.const 2
          i32.add
          set_local $3
          br $continue|0
         end
        end
        get_local $6
        get_local $1
        i32.const 12
        i32.shr_u
        i32.const 224
        i32.or
        i32.store8
        get_local $6
        get_local $1
        i32.const 6
        i32.shr_u
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.store8 offset=1
        get_local $6
        get_local $1
        i32.const 63
        i32.and
        i32.const 128
        i32.or
        i32.store8 offset=2
        get_local $5
        i32.const 3
        i32.add
        set_local $5
        get_local $3
        i32.const 1
        i32.add
        set_local $3
       end
      end
     end
     br $continue|0
    end
   end
  end
  get_local $2
  get_local $5
  i32.add
  i32.const 0
  i32.store8
  get_local $2
 )
 (func $~lib/internal/typedarray/TypedArray<u8>#constructor (; 48 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $1
  i32.const 1073741816
  i32.gt_u
  if
   i32.const 0
   i32.const 1168
   i32.const 23
   i32.const 34
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  i32.const 0
  i32.shl
  set_local $2
  get_local $2
  call $~lib/internal/arraybuffer/allocateUnsafe
  set_local $3
  get_local $3
  get_global $~lib/internal/arraybuffer/HEADER_SIZE
  i32.add
  set_local $4
  i32.const 0
  set_local $5
  get_local $4
  get_local $5
  get_local $2
  call $~lib/internal/memory/memset
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 12
    call $~lib/memory/memory.allocate
    set_local $5
    get_local $5
    i32.const 0
    i32.store
    get_local $5
    i32.const 0
    i32.store offset=4
    get_local $5
    i32.const 0
    i32.store offset=8
    get_local $5
   end
   tee_local $0
  end
  tee_local $0
  get_local $3
  i32.store
  get_local $0
  i32.const 0
  i32.store offset=4
  get_local $0
  get_local $2
  i32.store offset=8
  get_local $0
 )
 (func $~lib/internal/typedarray/TypedArray<u8>#__set (; 49 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  get_local $1
  get_local $0
  i32.load offset=8
  i32.const 0
  i32.shr_u
  i32.ge_u
  if
   i32.const 0
   i32.const 1168
   i32.const 50
   i32.const 63
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load
  set_local $3
  get_local $0
  i32.load offset=4
  set_local $4
  get_local $3
  get_local $1
  i32.const 0
  i32.shl
  i32.add
  get_local $4
  i32.add
  get_local $2
  i32.store8 offset=8
 )
 (func $~lib/typedarray/Uint8Array#subarray (; 50 ;) (type $iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.3 (result i32)
   get_local $0
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  set_local $3
  get_local $1
  i32.const 0
  i32.lt_s
  if
   get_local $3
   get_local $1
   i32.add
   tee_local $4
   i32.const 0
   tee_local $5
   get_local $4
   get_local $5
   i32.gt_s
   select
   set_local $1
  else   
   get_local $1
   tee_local $4
   get_local $3
   tee_local $5
   get_local $4
   get_local $5
   i32.lt_s
   select
   set_local $1
  end
  get_local $2
  i32.const 0
  i32.lt_s
  if
   get_local $3
   get_local $2
   i32.add
   tee_local $4
   get_local $1
   tee_local $5
   get_local $4
   get_local $5
   i32.gt_s
   select
   set_local $2
  else   
   get_local $2
   tee_local $4
   get_local $3
   tee_local $5
   get_local $4
   get_local $5
   i32.lt_s
   select
   tee_local $4
   get_local $1
   tee_local $5
   get_local $4
   get_local $5
   i32.gt_s
   select
   set_local $2
  end
  block $~lib/memory/memory.allocate|inlined.3 (result i32)
   i32.const 12
   set_local $4
   get_local $4
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.3
  end
  set_local $4
  get_local $4
  get_local $0
  i32.load
  i32.store
  get_local $4
  get_local $0
  i32.load offset=4
  get_local $1
  i32.const 0
  i32.shl
  i32.add
  i32.store offset=4
  get_local $4
  get_local $2
  get_local $1
  i32.sub
  i32.const 0
  i32.shl
  i32.store offset=8
  get_local $4
 )
 (func $json/encoder/JSONEncoder#serialize (; 51 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  i32.load offset=8
  call $~lib/string/String#toUTF8
  set_local $1
  i32.const 0
  get_local $0
  i32.load offset=8
  call $~lib/string/String#get:lengthUTF8
  call $~lib/internal/typedarray/TypedArray<u8>#constructor
  set_local $2
  block $break|0
   i32.const 0
   set_local $3
   loop $repeat|0
    get_local $3
    block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.1 (result i32)
     get_local $2
     i32.load offset=8
     i32.const 0
     i32.shr_u
    end
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $2
    get_local $3
    get_local $1
    get_local $3
    i32.add
    i32.load8_u
    call $~lib/internal/typedarray/TypedArray<u8>#__set
    get_local $3
    i32.const 1
    i32.add
    set_local $3
    br $repeat|0
    unreachable
   end
   unreachable
  end
  get_local $2
  i32.const 0
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.2 (result i32)
   get_local $2
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.const 1
  i32.sub
  call $~lib/typedarray/Uint8Array#subarray
 )
 (func $model_near/FooBar#encode (; 52 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  block (result i32)
   i32.const 12
   call $~lib/memory/memory.allocate
   set_local $1
   get_local $1
   i32.const 1
   i32.store8
   get_local $1
   i32.const 168
   i32.store offset=4
   get_local $1
   i32.const 176
   i32.store offset=8
   get_local $1
  end
  set_local $1
  get_local $1
  i32.const 0
  call $json/encoder/JSONEncoder#pushObject
  drop
  get_local $0
  get_local $1
  call $model_near/__near_encode_FooBar
  get_local $1
  call $json/encoder/JSONEncoder#popObject
  get_local $1
  call $json/encoder/JSONEncoder#serialize
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#constructor (; 53 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $2
    get_local $2
    i32.const 0
    i32.store
    get_local $2
    i32.const 0
    i32.store offset=4
    get_local $2
   end
   tee_local $0
  end
  tee_local $0
  get_local $1
  i32.store
  get_local $0
 )
 (func $~lib/internal/typedarray/TypedArray<u8>#__get (; 54 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  get_local $1
  get_local $0
  i32.load offset=8
  i32.const 0
  i32.shr_u
  i32.ge_u
  if
   i32.const 0
   i32.const 1168
   i32.const 39
   i32.const 63
   call $~lib/env/abort
   unreachable
  end
  block $~lib/internal/arraybuffer/LOAD<u8,u8>|inlined.0 (result i32)
   get_local $0
   i32.load
   set_local $2
   get_local $0
   i32.load offset=4
   set_local $3
   get_local $2
   get_local $1
   i32.const 0
   i32.shl
   i32.add
   get_local $3
   i32.add
   i32.load8_u offset=8
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#peekChar (; 55 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  i32.load offset=4
  i32.load
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.5 (result i32)
   get_local $0
   i32.load offset=4
   i32.load offset=4
   set_local $1
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.ge_s
  if
   i32.const -1
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=4
  get_local $0
  i32.load offset=4
  i32.load
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#isWhitespace (; 56 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $1
  i32.const 9
  i32.eq
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 10
   i32.eq
  end
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 13
   i32.eq
  end
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 32
   i32.eq
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar (; 57 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  i32.load offset=4
  i32.load
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.6 (result i32)
   get_local $0
   i32.load offset=4
   i32.load offset=4
   set_local $1
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.lt_s
  i32.eqz
  if
   i32.const 1232
   i32.const 1280
   i32.const 115
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load offset=4
  i32.load offset=4
  block (result i32)
   get_local $0
   i32.load offset=4
   get_local $0
   i32.load offset=4
   i32.load
   tee_local $1
   i32.const 1
   i32.add
   i32.store
   get_local $1
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#skipWhitespace (; 58 ;) (type $iv) (param $0 i32)
  loop $continue|0
   get_local $0
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#peekChar
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#isWhitespace
   if
    get_local $0
    call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
    drop
    br $continue|0
   end
  end
 )
 (func $json/decoder/ThrowingJSONHandler#pushObject (; 59 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  i32.const 0
  i32.eqz
  if
   i32.const 1352
   get_local $1
   call $~lib/string/String.__concat
   i32.const 1280
   i32.const 65
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  i32.const 1
 )
 (func $model_near/__near_JSONHandler_FooBar#pushObject (; 60 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $0
  i32.load8_u offset=8
  i32.const 0
  i32.ne
  i32.eqz
  if
   get_local $1
   i32.const 0
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1320
    i32.const 118
    i32.const 6
    call $~lib/env/abort
    unreachable
   end
   get_local $0
   i32.const 1
   i32.store8 offset=8
   i32.const 1
   return
  else   
   get_local $1
   i32.const 0
   call $~lib/string/String.__ne
   i32.eqz
   if
    i32.const 0
    i32.const 1320
    i32.const 122
    i32.const 6
    call $~lib/env/abort
    unreachable
   end
  end
  get_local $0
  get_local $1
  call $json/decoder/ThrowingJSONHandler#pushObject
 )
 (func $~lib/array/Array<String>#constructor (; 61 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $1
  i32.const 268435454
  i32.gt_u
  if
   i32.const 0
   i32.const 464
   i32.const 45
   i32.const 39
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  i32.const 2
  i32.shl
  set_local $2
  get_local $2
  call $~lib/internal/arraybuffer/allocateUnsafe
  set_local $3
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $4
    get_local $4
    i32.const 0
    i32.store
    get_local $4
    i32.const 0
    i32.store offset=4
    get_local $4
   end
   tee_local $0
  end
  tee_local $0
  get_local $3
  i32.store
  get_local $0
  get_local $1
  i32.store offset=4
  get_local $3
  get_global $~lib/internal/arraybuffer/HEADER_SIZE
  i32.add
  set_local $4
  i32.const 0
  set_local $5
  get_local $4
  get_local $5
  get_local $2
  call $~lib/internal/memory/memset
  get_local $0
 )
 (func $~lib/arraybuffer/ArrayBuffer#get:data (; 62 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  get_global $~lib/internal/arraybuffer/HEADER_SIZE
  i32.add
 )
 (func $~lib/string/String.fromUTF8 (; 63 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  get_local $1
  i32.const 1
  i32.lt_u
  if
   i32.const 176
   return
  end
  i32.const 0
  set_local $2
  block $~lib/memory/memory.allocate|inlined.4 (result i32)
   get_local $1
   i32.const 1
   i32.shl
   set_local $3
   get_local $3
   call $~lib/allocator/arena/__memory_allocate
   br $~lib/memory/memory.allocate|inlined.4
  end
  set_local $4
  i32.const 0
  set_local $5
  block $break|0
   loop $continue|0
    get_local $2
    get_local $1
    i32.lt_u
    if
     block
      get_local $0
      block (result i32)
       get_local $2
       tee_local $3
       i32.const 1
       i32.add
       set_local $2
       get_local $3
      end
      i32.add
      i32.load8_u
      set_local $3
      get_local $3
      i32.const 128
      i32.lt_u
      if
       get_local $4
       get_local $5
       i32.add
       get_local $3
       i32.store16
       get_local $5
       i32.const 2
       i32.add
       set_local $5
      else       
       get_local $3
       i32.const 191
       i32.gt_u
       tee_local $6
       if (result i32)
        get_local $3
        i32.const 224
        i32.lt_u
       else        
        get_local $6
       end
       if
        get_local $2
        i32.const 1
        i32.add
        get_local $1
        i32.le_u
        i32.eqz
        if
         i32.const 0
         i32.const 64
         i32.const 521
         i32.const 8
         call $~lib/env/abort
         unreachable
        end
        get_local $4
        get_local $5
        i32.add
        get_local $3
        i32.const 31
        i32.and
        i32.const 6
        i32.shl
        get_local $0
        block (result i32)
         get_local $2
         tee_local $6
         i32.const 1
         i32.add
         set_local $2
         get_local $6
        end
        i32.add
        i32.load8_u
        i32.const 63
        i32.and
        i32.or
        i32.store16
        get_local $5
        i32.const 2
        i32.add
        set_local $5
       else        
        get_local $3
        i32.const 239
        i32.gt_u
        tee_local $6
        if (result i32)
         get_local $3
         i32.const 365
         i32.lt_u
        else         
         get_local $6
        end
        if
         get_local $2
         i32.const 3
         i32.add
         get_local $1
         i32.le_u
         i32.eqz
         if
          i32.const 0
          i32.const 64
          i32.const 525
          i32.const 8
          call $~lib/env/abort
          unreachable
         end
         get_local $3
         i32.const 7
         i32.and
         i32.const 18
         i32.shl
         get_local $0
         block (result i32)
          get_local $2
          tee_local $6
          i32.const 1
          i32.add
          set_local $2
          get_local $6
         end
         i32.add
         i32.load8_u
         i32.const 63
         i32.and
         i32.const 12
         i32.shl
         i32.or
         get_local $0
         block (result i32)
          get_local $2
          tee_local $6
          i32.const 1
          i32.add
          set_local $2
          get_local $6
         end
         i32.add
         i32.load8_u
         i32.const 63
         i32.and
         i32.const 6
         i32.shl
         i32.or
         get_local $0
         block (result i32)
          get_local $2
          tee_local $6
          i32.const 1
          i32.add
          set_local $2
          get_local $6
         end
         i32.add
         i32.load8_u
         i32.const 63
         i32.and
         i32.or
         i32.const 65536
         i32.sub
         set_local $3
         get_local $4
         get_local $5
         i32.add
         i32.const 55296
         get_local $3
         i32.const 10
         i32.shr_u
         i32.add
         i32.store16
         get_local $5
         i32.const 2
         i32.add
         set_local $5
         get_local $4
         get_local $5
         i32.add
         i32.const 56320
         get_local $3
         i32.const 1023
         i32.and
         i32.add
         i32.store16
         get_local $5
         i32.const 2
         i32.add
         set_local $5
        else         
         get_local $2
         i32.const 2
         i32.add
         get_local $1
         i32.le_u
         i32.eqz
         if
          i32.const 0
          i32.const 64
          i32.const 537
          i32.const 8
          call $~lib/env/abort
          unreachable
         end
         get_local $4
         get_local $5
         i32.add
         get_local $3
         i32.const 15
         i32.and
         i32.const 12
         i32.shl
         get_local $0
         block (result i32)
          get_local $2
          tee_local $6
          i32.const 1
          i32.add
          set_local $2
          get_local $6
         end
         i32.add
         i32.load8_u
         i32.const 63
         i32.and
         i32.const 6
         i32.shl
         i32.or
         get_local $0
         block (result i32)
          get_local $2
          tee_local $6
          i32.const 1
          i32.add
          set_local $2
          get_local $6
         end
         i32.add
         i32.load8_u
         i32.const 63
         i32.and
         i32.or
         i32.store16
         get_local $5
         i32.const 2
         i32.add
         set_local $5
        end
       end
      end
     end
     br $continue|0
    end
   end
  end
  get_local $2
  get_local $1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 64
   i32.const 546
   i32.const 4
   call $~lib/env/abort
   unreachable
  end
  get_local $5
  i32.const 1
  i32.shr_u
  call $~lib/internal/string/allocateUnsafe
  set_local $7
  get_local $7
  get_global $~lib/internal/string/HEADER_SIZE
  i32.add
  set_local $3
  get_local $3
  get_local $4
  get_local $5
  call $~lib/internal/memory/memmove
  block $~lib/memory/memory.free|inlined.1
   block
    get_local $4
    call $~lib/allocator/arena/__memory_free
    br $~lib/memory/memory.free|inlined.1
    unreachable
   end
   unreachable
  end
  get_local $7
 )
 (func $~lib/array/Array<String>#push (; 64 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  get_local $0
  i32.load offset=4
  set_local $2
  get_local $0
  i32.load
  set_local $3
  get_local $3
  i32.load
  i32.const 2
  i32.shr_u
  set_local $4
  get_local $2
  i32.const 1
  i32.add
  set_local $5
  get_local $2
  get_local $4
  i32.ge_u
  if
   get_local $2
   i32.const 268435454
   i32.ge_u
   if
    i32.const 0
    i32.const 464
    i32.const 184
    i32.const 42
    call $~lib/env/abort
    unreachable
   end
   get_local $3
   get_local $5
   i32.const 2
   i32.shl
   call $~lib/internal/arraybuffer/reallocateUnsafe
   set_local $3
   get_local $0
   get_local $3
   i32.store
  end
  get_local $0
  get_local $5
  i32.store offset=4
  i32.const 0
  set_local $6
  get_local $3
  get_local $2
  i32.const 2
  i32.shl
  i32.add
  get_local $6
  i32.add
  get_local $1
  i32.store offset=8
  get_local $5
 )
 (func $~lib/array/Array<String>#join (; 65 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  get_local $0
  i32.load offset=4
  i32.const 1
  i32.sub
  set_local $2
  get_local $2
  i32.const 0
  i32.lt_s
  if
   i32.const 176
   return
  end
  i32.const 176
  set_local $3
  get_local $0
  i32.load
  set_local $5
  get_local $1
  i32.load
  set_local $6
  get_local $6
  i32.const 0
  i32.ne
  set_local $7
  get_local $2
  i32.eqz
  if
   block $~lib/internal/arraybuffer/LOAD<String,String>|inlined.1 (result i32)
    i32.const 0
    set_local $8
    i32.const 0
    set_local $9
    get_local $5
    get_local $8
    i32.const 2
    i32.shl
    i32.add
    get_local $9
    i32.add
    i32.load offset=8
   end
   return
  end
  i32.const 0
  set_local $9
  block $break|0
   block
    i32.const 0
    set_local $8
    get_local $2
    i32.const 1
    i32.add
    set_local $10
   end
   loop $repeat|0
    get_local $8
    get_local $10
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $9
    block $~lib/internal/arraybuffer/LOAD<String,String>|inlined.2 (result i32)
     i32.const 0
     set_local $11
     get_local $5
     get_local $8
     i32.const 2
     i32.shl
     i32.add
     get_local $11
     i32.add
     i32.load offset=8
    end
    i32.load
    i32.add
    set_local $9
    get_local $8
    i32.const 1
    i32.add
    set_local $8
    br $repeat|0
    unreachable
   end
   unreachable
  end
  i32.const 0
  set_local $10
  get_local $9
  get_local $6
  get_local $2
  i32.mul
  i32.add
  call $~lib/internal/string/allocateUnsafe
  set_local $8
  block $break|1
   i32.const 0
   set_local $11
   loop $repeat|1
    get_local $11
    get_local $2
    i32.lt_s
    i32.eqz
    br_if $break|1
    block
     block $~lib/internal/arraybuffer/LOAD<String,String>|inlined.3 (result i32)
      i32.const 0
      set_local $12
      get_local $5
      get_local $11
      i32.const 2
      i32.shl
      i32.add
      get_local $12
      i32.add
      i32.load offset=8
     end
     set_local $4
     get_local $4
     if
      get_local $4
      i32.load
      set_local $12
      get_local $8
      get_local $10
      get_local $4
      i32.const 0
      get_local $12
      call $~lib/internal/string/copyUnsafe
      get_local $10
      get_local $12
      i32.add
      set_local $10
     end
     get_local $7
     if
      get_local $8
      get_local $10
      get_local $1
      i32.const 0
      get_local $6
      call $~lib/internal/string/copyUnsafe
      get_local $10
      get_local $6
      i32.add
      set_local $10
     end
    end
    get_local $11
    i32.const 1
    i32.add
    set_local $11
    br $repeat|1
    unreachable
   end
   unreachable
  end
  block $~lib/internal/arraybuffer/LOAD<String,String>|inlined.4 (result i32)
   i32.const 0
   set_local $11
   get_local $5
   get_local $2
   i32.const 2
   i32.shl
   i32.add
   get_local $11
   i32.add
   i32.load offset=8
  end
  set_local $4
  get_local $4
  if
   get_local $4
   i32.load
   set_local $11
   get_local $8
   get_local $10
   get_local $4
   i32.const 0
   get_local $11
   call $~lib/internal/string/copyUnsafe
  end
  get_local $8
  return
 )
 (func $~lib/array/Array<i32>#constructor (; 66 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $1
  i32.const 268435454
  i32.gt_u
  if
   i32.const 0
   i32.const 464
   i32.const 45
   i32.const 39
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  i32.const 2
  i32.shl
  set_local $2
  get_local $2
  call $~lib/internal/arraybuffer/allocateUnsafe
  set_local $3
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $4
    get_local $4
    i32.const 0
    i32.store
    get_local $4
    i32.const 0
    i32.store offset=4
    get_local $4
   end
   tee_local $0
  end
  tee_local $0
  get_local $3
  i32.store
  get_local $0
  get_local $1
  i32.store offset=4
  get_local $3
  get_global $~lib/internal/arraybuffer/HEADER_SIZE
  i32.add
  set_local $4
  i32.const 0
  set_local $5
  get_local $4
  get_local $5
  get_local $2
  call $~lib/internal/memory/memset
  get_local $0
 )
 (func $~lib/array/Array<i32>#__unchecked_set (; 67 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  get_local $0
  i32.load
  set_local $3
  i32.const 0
  set_local $4
  get_local $3
  get_local $1
  i32.const 2
  i32.shl
  i32.add
  get_local $4
  i32.add
  get_local $2
  i32.store offset=8
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readHexDigit (; 68 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
  set_local $1
  get_local $1
  get_global $json/decoder/CHAR_0
  i32.sub
  set_local $2
  get_local $2
  i32.const 9
  i32.gt_s
  if
   get_local $1
   get_global $json/decoder/CHAR_A
   i32.sub
   i32.const 10
   i32.add
   set_local $2
   get_local $2
   i32.const 10
   i32.lt_s
   tee_local $3
   if (result i32)
    get_local $3
   else    
    get_local $2
    i32.const 15
    i32.gt_s
   end
   if
    get_local $1
    get_global $json/decoder/CHAR_A_LOWER
    i32.sub
    i32.const 10
    i32.add
    set_local $2
   end
  end
  block (result i32)
   i32.const 0
   i32.const 2
   call $~lib/array/Array<i32>#constructor
   set_local $4
   get_local $4
   i32.const 0
   get_local $1
   call $~lib/array/Array<i32>#__unchecked_set
   get_local $4
   i32.const 1
   get_local $2
   call $~lib/array/Array<i32>#__unchecked_set
   get_local $4
  end
  set_local $4
  get_local $2
  i32.const 0
  i32.ge_s
  tee_local $3
  if (result i32)
   get_local $2
   i32.const 16
   i32.lt_s
  else   
   get_local $3
  end
  i32.eqz
  if
   i32.const 1616
   i32.const 1280
   i32.const 268
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $2
 )
 (func $~lib/string/String.fromCodePoint (; 69 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  get_local $0
  i32.const 1114111
  i32.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 64
   i32.const 34
   i32.const 4
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.const 65535
  i32.gt_s
  set_local $1
  get_local $1
  i32.const 1
  i32.add
  call $~lib/internal/string/allocateUnsafe
  set_local $2
  get_local $1
  i32.eqz
  if
   get_local $2
   get_local $0
   i32.store16 offset=4
  else   
   get_local $0
   i32.const 65536
   i32.sub
   set_local $0
   get_local $0
   i32.const 10
   i32.shr_u
   i32.const 55296
   i32.add
   set_local $3
   get_local $0
   i32.const 1023
   i32.and
   i32.const 56320
   i32.add
   set_local $4
   get_local $2
   get_local $3
   i32.const 16
   i32.shl
   get_local $4
   i32.or
   i32.store offset=4
  end
  get_local $2
 )
 (func $~lib/string/String.fromCharCode (; 70 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  i32.const 1
  call $~lib/internal/string/allocateUnsafe
  set_local $1
  get_local $1
  get_local $0
  i32.store16 offset=4
  get_local $1
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readEscapedChar (; 71 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
  set_local $1
  get_local $1
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 248
   return
  end
  get_local $1
  i32.const 256
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 256
   return
  end
  get_local $1
  i32.const 1568
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1568
   return
  end
  get_local $1
  i32.const 1576
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 280
   return
  end
  get_local $1
  i32.const 1584
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 296
   return
  end
  get_local $1
  i32.const 1592
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 312
   return
  end
  get_local $1
  i32.const 1600
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 328
   return
  end
  get_local $1
  i32.const 1608
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readHexDigit
   set_local $2
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readHexDigit
   set_local $3
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readHexDigit
   set_local $4
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readHexDigit
   set_local $5
   get_local $2
   i32.const 4096
   i32.mul
   get_local $3
   i32.const 256
   i32.mul
   i32.add
   get_local $4
   i32.const 16
   i32.mul
   i32.add
   get_local $5
   i32.add
   set_local $6
   get_local $6
   call $~lib/string/String.fromCodePoint
   return
  end
  i32.const 0
  i32.eqz
  if
   i32.const 1664
   get_local $1
   call $~lib/string/String.fromCharCode
   call $~lib/string/String.__concat
   i32.const 1280
   i32.const 254
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  i32.const 176
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readString (; 72 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 1440
   i32.const 1280
   i32.const 198
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load offset=4
  i32.load
  set_local $1
  i32.const 0
  i32.const 0
  call $~lib/array/Array<String>#constructor
  set_local $2
  block $break|0
   loop $repeat|0
    i32.const 1
    i32.eqz
    br_if $break|0
    block
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
     set_local $3
     get_local $3
     i32.const 32
     i32.ge_s
     i32.eqz
     if
      i32.const 1504
      i32.const 1280
      i32.const 203
      i32.const 12
      call $~lib/env/abort
      unreachable
     end
     get_local $3
     i32.const 248
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      get_local $2
      get_local $0
      i32.load offset=4
      i32.load offset=4
      i32.load
      call $~lib/arraybuffer/ArrayBuffer#get:data
      get_local $1
      i32.add
      get_local $0
      i32.load offset=4
      i32.load
      get_local $1
      i32.sub
      i32.const 1
      i32.sub
      call $~lib/string/String.fromUTF8
      call $~lib/array/Array<String>#push
      drop
      get_local $2
      i32.const 176
      call $~lib/array/Array<String>#join
      return
     end
     get_local $3
     i32.const 256
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      get_local $0
      i32.load offset=4
      i32.load
      get_local $1
      i32.const 1
      i32.add
      i32.gt_s
      if
       get_local $2
       get_local $0
       i32.load offset=4
       i32.load offset=4
       i32.load
       call $~lib/arraybuffer/ArrayBuffer#get:data
       get_local $1
       i32.add
       get_local $0
       i32.load offset=4
       i32.load
       get_local $1
       i32.sub
       i32.const 1
       i32.sub
       call $~lib/string/String.fromUTF8
       call $~lib/array/Array<String>#push
       drop
      end
      get_local $2
      get_local $0
      call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readEscapedChar
      call $~lib/array/Array<String>#push
      drop
      get_local $0
      i32.load offset=4
      i32.load
      set_local $1
     end
    end
    br $repeat|0
    unreachable
   end
   unreachable
  end
  i32.const 176
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseKey (; 73 ;) (type $iv) (param $0 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#skipWhitespace
  get_local $0
  i32.load offset=4
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readString
  i32.store offset=8
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#skipWhitespace
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
  i32.const 448
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 1728
   i32.const 1280
   i32.const 161
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
 )
 (func $json/decoder/JSONHandler#popObject (; 74 ;) (type $iv) (param $0 i32)
  nop
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseObject (; 75 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#peekChar
  i32.const 456
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=8
  set_local $1
  get_local $0
  i32.load offset=4
  i32.const 0
  i32.store offset=8
  get_local $0
  i32.load
  get_local $1
  call $model_near/__near_JSONHandler_FooBar#pushObject
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
   drop
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#skipWhitespace
   i32.const 1
   set_local $2
   block $break|0
    loop $continue|0
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#peekChar
     i32.const 1160
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     if
      block
       get_local $2
       i32.eqz
       if
        get_local $0
        call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
        i32.const 184
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.eq
        i32.eqz
        if
         i32.const 1408
         i32.const 1280
         i32.const 144
         i32.const 20
         call $~lib/env/abort
         unreachable
        end
       else        
        i32.const 0
        set_local $2
       end
       get_local $0
       call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseKey
       get_local $0
       call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseValue
       drop
      end
      br $continue|0
     end
    end
   end
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
   i32.const 1160
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 1760
    i32.const 1280
    i32.const 151
    i32.const 12
    call $~lib/env/abort
    unreachable
   end
  end
  get_local $0
  i32.load
  call $json/decoder/JSONHandler#popObject
  i32.const 1
 )
 (func $~lib/array/Array<Array<String>>#constructor (; 76 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $1
  i32.const 268435454
  i32.gt_u
  if
   i32.const 0
   i32.const 464
   i32.const 45
   i32.const 39
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  i32.const 2
  i32.shl
  set_local $2
  get_local $2
  call $~lib/internal/arraybuffer/allocateUnsafe
  set_local $3
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $4
    get_local $4
    i32.const 0
    i32.store
    get_local $4
    i32.const 0
    i32.store offset=4
    get_local $4
   end
   tee_local $0
  end
  tee_local $0
  get_local $3
  i32.store
  get_local $0
  get_local $1
  i32.store offset=4
  get_local $3
  get_global $~lib/internal/arraybuffer/HEADER_SIZE
  i32.add
  set_local $4
  i32.const 0
  set_local $5
  get_local $4
  get_local $5
  get_local $2
  call $~lib/internal/memory/memset
  get_local $0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#constructor (; 77 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $2
    get_local $2
    i32.const 0
    i32.store
    get_local $2
    i32.const 0
    i32.store offset=4
    get_local $2
   end
   tee_local $0
  end
  tee_local $0
  get_local $1
  i32.store
  get_local $0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#peekChar (; 78 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  i32.load offset=4
  i32.load
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.8 (result i32)
   get_local $0
   i32.load offset=4
   i32.load offset=4
   set_local $1
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.ge_s
  if
   i32.const -1
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=4
  get_local $0
  i32.load offset=4
  i32.load
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#isWhitespace (; 79 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $1
  i32.const 9
  i32.eq
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 10
   i32.eq
  end
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 13
   i32.eq
  end
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 32
   i32.eq
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar (; 80 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  i32.load offset=4
  i32.load
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.9 (result i32)
   get_local $0
   i32.load offset=4
   i32.load offset=4
   set_local $1
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.lt_s
  i32.eqz
  if
   i32.const 1232
   i32.const 1280
   i32.const 115
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load offset=4
  i32.load offset=4
  block (result i32)
   get_local $0
   i32.load offset=4
   get_local $0
   i32.load offset=4
   i32.load
   tee_local $1
   i32.const 1
   i32.add
   i32.store
   get_local $1
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#skipWhitespace (; 81 ;) (type $iv) (param $0 i32)
  loop $continue|0
   get_local $0
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#peekChar
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#isWhitespace
   if
    get_local $0
    call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
    drop
    br $continue|0
   end
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#constructor (; 82 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $2
    get_local $2
    i32.const 0
    i32.store
    get_local $2
    i32.const 0
    i32.store offset=4
    get_local $2
   end
   tee_local $0
  end
  tee_local $0
  get_local $1
  i32.store
  get_local $0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#peekChar (; 83 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  i32.load offset=4
  i32.load
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.11 (result i32)
   get_local $0
   i32.load offset=4
   i32.load offset=4
   set_local $1
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.ge_s
  if
   i32.const -1
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=4
  get_local $0
  i32.load offset=4
  i32.load
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#isWhitespace (; 84 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $1
  i32.const 9
  i32.eq
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 10
   i32.eq
  end
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 13
   i32.eq
  end
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 32
   i32.eq
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar (; 85 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  i32.load offset=4
  i32.load
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.12 (result i32)
   get_local $0
   i32.load offset=4
   i32.load offset=4
   set_local $1
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.lt_s
  i32.eqz
  if
   i32.const 1232
   i32.const 1280
   i32.const 115
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load offset=4
  i32.load offset=4
  block (result i32)
   get_local $0
   i32.load offset=4
   get_local $0
   i32.load offset=4
   i32.load
   tee_local $1
   i32.const 1
   i32.add
   i32.store
   get_local $1
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#skipWhitespace (; 86 ;) (type $iv) (param $0 i32)
  loop $continue|0
   get_local $0
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#peekChar
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#isWhitespace
   if
    get_local $0
    call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
    drop
    br $continue|0
   end
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readHexDigit (; 87 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
  set_local $1
  get_local $1
  get_global $json/decoder/CHAR_0
  i32.sub
  set_local $2
  get_local $2
  i32.const 9
  i32.gt_s
  if
   get_local $1
   get_global $json/decoder/CHAR_A
   i32.sub
   i32.const 10
   i32.add
   set_local $2
   get_local $2
   i32.const 10
   i32.lt_s
   tee_local $3
   if (result i32)
    get_local $3
   else    
    get_local $2
    i32.const 15
    i32.gt_s
   end
   if
    get_local $1
    get_global $json/decoder/CHAR_A_LOWER
    i32.sub
    i32.const 10
    i32.add
    set_local $2
   end
  end
  block (result i32)
   i32.const 0
   i32.const 2
   call $~lib/array/Array<i32>#constructor
   set_local $4
   get_local $4
   i32.const 0
   get_local $1
   call $~lib/array/Array<i32>#__unchecked_set
   get_local $4
   i32.const 1
   get_local $2
   call $~lib/array/Array<i32>#__unchecked_set
   get_local $4
  end
  set_local $4
  get_local $2
  i32.const 0
  i32.ge_s
  tee_local $3
  if (result i32)
   get_local $2
   i32.const 16
   i32.lt_s
  else   
   get_local $3
  end
  i32.eqz
  if
   i32.const 1616
   i32.const 1280
   i32.const 268
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $2
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readEscapedChar (; 88 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
  set_local $1
  get_local $1
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 248
   return
  end
  get_local $1
  i32.const 256
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 256
   return
  end
  get_local $1
  i32.const 1568
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1568
   return
  end
  get_local $1
  i32.const 1576
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 280
   return
  end
  get_local $1
  i32.const 1584
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 296
   return
  end
  get_local $1
  i32.const 1592
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 312
   return
  end
  get_local $1
  i32.const 1600
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 328
   return
  end
  get_local $1
  i32.const 1608
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readHexDigit
   set_local $2
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readHexDigit
   set_local $3
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readHexDigit
   set_local $4
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readHexDigit
   set_local $5
   get_local $2
   i32.const 4096
   i32.mul
   get_local $3
   i32.const 256
   i32.mul
   i32.add
   get_local $4
   i32.const 16
   i32.mul
   i32.add
   get_local $5
   i32.add
   set_local $6
   get_local $6
   call $~lib/string/String.fromCodePoint
   return
  end
  i32.const 0
  i32.eqz
  if
   i32.const 1664
   get_local $1
   call $~lib/string/String.fromCharCode
   call $~lib/string/String.__concat
   i32.const 1280
   i32.const 254
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  i32.const 176
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readString (; 89 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 1440
   i32.const 1280
   i32.const 198
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load offset=4
  i32.load
  set_local $1
  i32.const 0
  i32.const 0
  call $~lib/array/Array<String>#constructor
  set_local $2
  block $break|0
   loop $repeat|0
    i32.const 1
    i32.eqz
    br_if $break|0
    block
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
     set_local $3
     get_local $3
     i32.const 32
     i32.ge_s
     i32.eqz
     if
      i32.const 1504
      i32.const 1280
      i32.const 203
      i32.const 12
      call $~lib/env/abort
      unreachable
     end
     get_local $3
     i32.const 248
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      get_local $2
      get_local $0
      i32.load offset=4
      i32.load offset=4
      i32.load
      call $~lib/arraybuffer/ArrayBuffer#get:data
      get_local $1
      i32.add
      get_local $0
      i32.load offset=4
      i32.load
      get_local $1
      i32.sub
      i32.const 1
      i32.sub
      call $~lib/string/String.fromUTF8
      call $~lib/array/Array<String>#push
      drop
      get_local $2
      i32.const 176
      call $~lib/array/Array<String>#join
      return
     end
     get_local $3
     i32.const 256
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      get_local $0
      i32.load offset=4
      i32.load
      get_local $1
      i32.const 1
      i32.add
      i32.gt_s
      if
       get_local $2
       get_local $0
       i32.load offset=4
       i32.load offset=4
       i32.load
       call $~lib/arraybuffer/ArrayBuffer#get:data
       get_local $1
       i32.add
       get_local $0
       i32.load offset=4
       i32.load
       get_local $1
       i32.sub
       i32.const 1
       i32.sub
       call $~lib/string/String.fromUTF8
       call $~lib/array/Array<String>#push
       drop
      end
      get_local $2
      get_local $0
      call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readEscapedChar
      call $~lib/array/Array<String>#push
      drop
      get_local $0
      i32.load offset=4
      i32.load
      set_local $1
     end
    end
    br $repeat|0
    unreachable
   end
   unreachable
  end
  i32.const 176
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseKey (; 90 ;) (type $iv) (param $0 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#skipWhitespace
  get_local $0
  i32.load offset=4
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readString
  i32.store offset=8
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#skipWhitespace
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
  i32.const 448
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 1728
   i32.const 1280
   i32.const 161
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseObject (; 91 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#peekChar
  i32.const 456
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=8
  set_local $1
  get_local $0
  i32.load offset=4
  i32.const 0
  i32.store offset=8
  get_local $0
  i32.load
  get_local $1
  call $json/decoder/ThrowingJSONHandler#pushObject
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
   drop
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#skipWhitespace
   i32.const 1
   set_local $2
   block $break|0
    loop $continue|0
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#peekChar
     i32.const 1160
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     if
      block
       get_local $2
       i32.eqz
       if
        get_local $0
        call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
        i32.const 184
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.eq
        i32.eqz
        if
         i32.const 1408
         i32.const 1280
         i32.const 144
         i32.const 20
         call $~lib/env/abort
         unreachable
        end
       else        
        i32.const 0
        set_local $2
       end
       get_local $0
       call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseKey
       get_local $0
       call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseValue
       drop
      end
      br $continue|0
     end
    end
   end
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
   i32.const 1160
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 1760
    i32.const 1280
    i32.const 151
    i32.const 12
    call $~lib/env/abort
    unreachable
   end
  end
  get_local $0
  i32.load
  call $json/decoder/JSONHandler#popObject
  i32.const 1
 )
 (func $model_near/__near_JSONHandler_Array_String#pushArray (; 92 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $1
  i32.const 0
  call $~lib/string/String.__eq
  tee_local $2
  if (result i32)
   get_local $0
   i32.load8_u offset=8
   i32.const 0
   i32.ne
   i32.eqz
  else   
   get_local $2
  end
  i32.eqz
  if
   i32.const 0
   i32.const 1320
   i32.const 170
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.const 1
  i32.store8 offset=8
  i32.const 1
 )
 (func $json/decoder/JSONHandler#popArray (; 93 ;) (type $iv) (param $0 i32)
  nop
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseArray (; 94 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#peekChar
  i32.const 1144
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=8
  set_local $1
  get_local $0
  i32.load offset=4
  i32.const 0
  i32.store offset=8
  get_local $0
  i32.load
  get_local $1
  call $model_near/__near_JSONHandler_Array_String#pushArray
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
   drop
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#skipWhitespace
   i32.const 1
   set_local $2
   block $break|0
    loop $continue|0
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#peekChar
     i32.const 1152
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     if
      block
       get_local $2
       i32.eqz
       if
        get_local $0
        call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
        i32.const 184
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.eq
        i32.eqz
        if
         i32.const 1408
         i32.const 1280
         i32.const 177
         i32.const 20
         call $~lib/env/abort
         unreachable
        end
       else        
        i32.const 0
        set_local $2
       end
       get_local $0
       call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseValue
       drop
      end
      br $continue|0
     end
    end
   end
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
   i32.const 1152
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 1816
    i32.const 1280
    i32.const 183
    i32.const 12
    call $~lib/env/abort
    unreachable
   end
  end
  get_local $0
  i32.load
  call $json/decoder/JSONHandler#popArray
  i32.const 1
  return
 )
 (func $model_near/__near_JSONHandler_Array_String#setString (; 95 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $0
  i32.load offset=12
  get_local $2
  call $~lib/array/Array<String>#push
  drop
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseString (; 96 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#peekChar
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load
  get_local $0
  i32.load offset=4
  i32.load offset=8
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readString
  call $model_near/__near_JSONHandler_Array_String#setString
  i32.const 1
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readAndAssert (; 97 ;) (type $iiv) (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $break|0
   i32.const 0
   set_local $2
   loop $repeat|0
    get_local $2
    get_local $1
    i32.load
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $1
    get_local $2
    call $~lib/string/String#charCodeAt
    get_local $0
    call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
    i32.eq
    i32.eqz
    if
     i32.const 1872
     get_local $1
     call $~lib/string/String.__concat
     i32.const 1896
     call $~lib/string/String.__concat
     i32.const 1280
     i32.const 320
     i32.const 12
     call $~lib/env/abort
     unreachable
    end
    get_local $2
    i32.const 1
    i32.add
    set_local $2
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $json/decoder/ThrowingJSONHandler#setBoolean (; 98 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  i32.const 0
  i32.eqz
  if
   i32.const 1904
   get_local $1
   call $~lib/string/String.__concat
   i32.const 1952
   call $~lib/string/String.__concat
   get_local $2
   i32.const 0
   i32.ne
   if (result i32)
    i32.const 8
   else    
    i32.const 24
   end
   call $~lib/string/String.__concat
   i32.const 1280
   i32.const 47
   i32.const 7
   call $~lib/env/abort
   unreachable
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseBoolean (; 99 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#peekChar
  get_global $json/decoder/FALSE_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/FALSE_STR
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   i32.const 0
   call $json/decoder/ThrowingJSONHandler#setBoolean
   i32.const 1
   return
  end
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#peekChar
  get_global $json/decoder/TRUE_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/TRUE_STR
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   i32.const 1
   call $json/decoder/ThrowingJSONHandler#setBoolean
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $~lib/internal/number/itoa_stream<i32> (; 100 ;) (type $iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  get_local $0
  get_local $1
  i32.const 1
  i32.shl
  i32.add
  set_local $0
  get_local $2
  i32.eqz
  if
   get_local $0
   get_global $~lib/internal/string/CharCode._0
   i32.store16 offset=4
   i32.const 1
   return
  end
  i32.const 0
  set_local $3
  get_local $2
  i32.const 0
  i32.lt_s
  set_local $4
  get_local $4
  if
   i32.const 0
   get_local $2
   i32.sub
   set_local $2
  end
  get_local $2
  call $~lib/internal/number/decimalCount32
  get_local $4
  i32.add
  set_local $3
  get_local $0
  get_local $2
  get_local $3
  call $~lib/internal/number/utoa32_lut
  get_local $4
  if
   get_local $0
   get_global $~lib/internal/string/CharCode.MINUS
   i32.store16 offset=4
  end
  get_local $3
 )
 (func $~lib/array/Array<i32>#join (; 101 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  get_local $0
  i32.load offset=4
  i32.const 1
  i32.sub
  set_local $2
  get_local $2
  i32.const 0
  i32.lt_s
  if
   i32.const 176
   return
  end
  i32.const 176
  set_local $3
  get_local $0
  i32.load
  set_local $5
  get_local $1
  i32.load
  set_local $6
  get_local $6
  i32.const 0
  i32.ne
  set_local $7
  get_local $2
  i32.eqz
  if
   block $~lib/internal/arraybuffer/LOAD<i32,i32>|inlined.0 (result i32)
    i32.const 0
    set_local $8
    i32.const 0
    set_local $9
    get_local $5
    get_local $8
    i32.const 2
    i32.shl
    i32.add
    get_local $9
    i32.add
    i32.load offset=8
   end
   call $~lib/internal/number/itoa<i32>
   return
  end
  i32.const 11
  get_local $6
  i32.add
  get_local $2
  i32.mul
  i32.const 11
  i32.add
  set_local $9
  get_local $9
  call $~lib/internal/string/allocateUnsafe
  set_local $8
  i32.const 0
  set_local $10
  block $break|0
   i32.const 0
   set_local $11
   loop $repeat|0
    get_local $11
    get_local $2
    i32.lt_s
    i32.eqz
    br_if $break|0
    block
     block $~lib/internal/arraybuffer/LOAD<i32,i32>|inlined.1 (result i32)
      i32.const 0
      set_local $12
      get_local $5
      get_local $11
      i32.const 2
      i32.shl
      i32.add
      get_local $12
      i32.add
      i32.load offset=8
     end
     set_local $4
     get_local $10
     get_local $8
     get_local $10
     get_local $4
     call $~lib/internal/number/itoa_stream<i32>
     i32.add
     set_local $10
     get_local $7
     if
      get_local $8
      get_local $10
      get_local $1
      i32.const 0
      get_local $6
      call $~lib/internal/string/copyUnsafe
      get_local $10
      get_local $6
      i32.add
      set_local $10
     end
    end
    get_local $11
    i32.const 1
    i32.add
    set_local $11
    br $repeat|0
    unreachable
   end
   unreachable
  end
  block $~lib/internal/arraybuffer/LOAD<i32,i32>|inlined.2 (result i32)
   i32.const 0
   set_local $11
   get_local $5
   get_local $2
   i32.const 2
   i32.shl
   i32.add
   get_local $11
   i32.add
   i32.load offset=8
  end
  set_local $4
  get_local $10
  get_local $8
  get_local $10
  get_local $4
  call $~lib/internal/number/itoa_stream<i32>
  i32.add
  set_local $10
  get_local $8
  set_local $11
  get_local $9
  get_local $10
  i32.gt_s
  if
   get_local $8
   i32.const 0
   get_local $10
   call $~lib/string/String#substring
   set_local $11
   get_local $8
   i32.eqz
   if
    i32.const 0
    i32.const 192
    i32.const 28
    i32.const 4
    call $~lib/env/abort
    unreachable
   end
   block $~lib/memory/memory.free|inlined.2
    block
     get_local $8
     call $~lib/allocator/arena/__memory_free
     br $~lib/memory/memory.free|inlined.2
     unreachable
    end
    unreachable
   end
  end
  get_local $11
  return
 )
 (func $json/decoder/ThrowingJSONHandler#setInteger (; 102 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  block (result i32)
   i32.const 0
   i32.const 1
   call $~lib/array/Array<i32>#constructor
   set_local $3
   get_local $3
   i32.const 0
   get_local $2
   call $~lib/array/Array<i32>#__unchecked_set
   get_local $3
  end
  set_local $3
  i32.const 0
  i32.eqz
  if
   i32.const 1976
   get_local $1
   call $~lib/string/String.__concat
   i32.const 1952
   call $~lib/string/String.__concat
   block $~lib/array/Array<i32>#toString|inlined.0 (result i32)
    get_local $3
    i32.const 184
    call $~lib/array/Array<i32>#join
   end
   call $~lib/string/String.__concat
   i32.const 1280
   i32.const 56
   i32.const 7
   call $~lib/env/abort
   unreachable
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseNumber (; 103 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 0
  set_local $1
  i32.const 1
  set_local $2
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#peekChar
  i32.const 1968
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const -1
   set_local $2
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
   drop
  end
  i32.const 0
  set_local $3
  block $break|0
   loop $continue|0
    get_global $json/decoder/CHAR_0
    get_local $0
    call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#peekChar
    i32.le_s
    tee_local $4
    if (result i32)
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#peekChar
     get_global $json/decoder/CHAR_9
     i32.le_s
    else     
     get_local $4
    end
    if
     block
      get_local $0
      call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readChar
      set_local $4
      get_local $1
      i32.const 10
      i32.mul
      set_local $1
      get_local $1
      get_local $4
      get_global $json/decoder/CHAR_0
      i32.sub
      i32.add
      set_local $1
      get_local $3
      i32.const 1
      i32.add
      set_local $3
     end
     br $continue|0
    end
   end
  end
  get_local $3
  i32.const 0
  i32.gt_s
  if
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   get_local $1
   get_local $2
   i32.mul
   call $json/decoder/ThrowingJSONHandler#setInteger
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $model_near/__near_JSONHandler_Array_String#setNull (; 104 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $0
  i32.load offset=12
  i32.const 0
  call $~lib/array/Array<String>#push
  drop
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseNull (; 105 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#peekChar
  get_global $json/decoder/NULL_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/NULL_STR
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   call $model_near/__near_JSONHandler_Array_String#setNull
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseValue (; 106 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#skipWhitespace
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseObject
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseArray
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseString
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseBoolean
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseNumber
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseNull
  end
  set_local $1
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#skipWhitespace
  get_local $1
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#deserialize (; 107 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  get_local $2
  if
   get_local $0
   get_local $2
   i32.store offset=4
  else   
   get_local $0
   block (result i32)
    i32.const 12
    call $~lib/memory/memory.allocate
    set_local $3
    get_local $3
    i32.const 0
    i32.store
    get_local $3
    i32.const 0
    i32.store offset=4
    get_local $3
    i32.const 0
    i32.store offset=8
    get_local $3
   end
   i32.store offset=4
   get_local $0
   i32.load offset=4
   i32.const 0
   i32.store
   get_local $0
   i32.load offset=4
   get_local $1
   i32.store offset=4
   get_local $0
   i32.load offset=4
   i32.const 0
   i32.store offset=8
  end
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#parseValue
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 2032
   i32.const 1280
   i32.const 103
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
 )
 (func $model_near/__near_decode_Array_String (; 108 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block (result i32)
   i32.const 16
   call $~lib/memory/memory.allocate
   set_local $2
   get_local $2
   i32.const 0
   i32.store
   get_local $2
   i32.const 0
   i32.store offset=4
   get_local $2
   i32.const 0
   i32.store8 offset=8
   get_local $2
   i32.const 0
   i32.const 0
   call $~lib/array/Array<String>#constructor
   i32.store offset=12
   get_local $2
  end
  set_local $2
  get_local $2
  get_local $0
  i32.store
  get_local $2
  i32.const 0
  get_local $2
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#constructor
  i32.store offset=4
  get_local $2
  i32.load offset=4
  get_local $0
  get_local $1
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_String>#deserialize
  get_local $2
  i32.load offset=12
 )
 (func $~lib/array/Array<Array<String>>#push (; 109 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  get_local $0
  i32.load offset=4
  set_local $2
  get_local $0
  i32.load
  set_local $3
  get_local $3
  i32.load
  i32.const 2
  i32.shr_u
  set_local $4
  get_local $2
  i32.const 1
  i32.add
  set_local $5
  get_local $2
  get_local $4
  i32.ge_u
  if
   get_local $2
   i32.const 268435454
   i32.ge_u
   if
    i32.const 0
    i32.const 464
    i32.const 184
    i32.const 42
    call $~lib/env/abort
    unreachable
   end
   get_local $3
   get_local $5
   i32.const 2
   i32.shl
   call $~lib/internal/arraybuffer/reallocateUnsafe
   set_local $3
   get_local $0
   get_local $3
   i32.store
  end
  get_local $0
  get_local $5
  i32.store offset=4
  i32.const 0
  set_local $6
  get_local $3
  get_local $2
  i32.const 2
  i32.shl
  i32.add
  get_local $6
  i32.add
  get_local $1
  i32.store offset=8
  get_local $5
 )
 (func $model_near/__near_JSONHandler_Array_Array_String#pushObject (; 110 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $0
  i32.load offset=12
  get_local $0
  i32.load
  get_local $0
  i32.load offset=4
  i32.load offset=4
  call $model_near/__near_decode_Array_String
  call $~lib/array/Array<Array<String>>#push
  drop
  i32.const 0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readHexDigit (; 111 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
  set_local $1
  get_local $1
  get_global $json/decoder/CHAR_0
  i32.sub
  set_local $2
  get_local $2
  i32.const 9
  i32.gt_s
  if
   get_local $1
   get_global $json/decoder/CHAR_A
   i32.sub
   i32.const 10
   i32.add
   set_local $2
   get_local $2
   i32.const 10
   i32.lt_s
   tee_local $3
   if (result i32)
    get_local $3
   else    
    get_local $2
    i32.const 15
    i32.gt_s
   end
   if
    get_local $1
    get_global $json/decoder/CHAR_A_LOWER
    i32.sub
    i32.const 10
    i32.add
    set_local $2
   end
  end
  block (result i32)
   i32.const 0
   i32.const 2
   call $~lib/array/Array<i32>#constructor
   set_local $4
   get_local $4
   i32.const 0
   get_local $1
   call $~lib/array/Array<i32>#__unchecked_set
   get_local $4
   i32.const 1
   get_local $2
   call $~lib/array/Array<i32>#__unchecked_set
   get_local $4
  end
  set_local $4
  get_local $2
  i32.const 0
  i32.ge_s
  tee_local $3
  if (result i32)
   get_local $2
   i32.const 16
   i32.lt_s
  else   
   get_local $3
  end
  i32.eqz
  if
   i32.const 1616
   i32.const 1280
   i32.const 268
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $2
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readEscapedChar (; 112 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
  set_local $1
  get_local $1
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 248
   return
  end
  get_local $1
  i32.const 256
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 256
   return
  end
  get_local $1
  i32.const 1568
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1568
   return
  end
  get_local $1
  i32.const 1576
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 280
   return
  end
  get_local $1
  i32.const 1584
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 296
   return
  end
  get_local $1
  i32.const 1592
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 312
   return
  end
  get_local $1
  i32.const 1600
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 328
   return
  end
  get_local $1
  i32.const 1608
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readHexDigit
   set_local $2
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readHexDigit
   set_local $3
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readHexDigit
   set_local $4
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readHexDigit
   set_local $5
   get_local $2
   i32.const 4096
   i32.mul
   get_local $3
   i32.const 256
   i32.mul
   i32.add
   get_local $4
   i32.const 16
   i32.mul
   i32.add
   get_local $5
   i32.add
   set_local $6
   get_local $6
   call $~lib/string/String.fromCodePoint
   return
  end
  i32.const 0
  i32.eqz
  if
   i32.const 1664
   get_local $1
   call $~lib/string/String.fromCharCode
   call $~lib/string/String.__concat
   i32.const 1280
   i32.const 254
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  i32.const 176
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readString (; 113 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 1440
   i32.const 1280
   i32.const 198
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load offset=4
  i32.load
  set_local $1
  i32.const 0
  i32.const 0
  call $~lib/array/Array<String>#constructor
  set_local $2
  block $break|0
   loop $repeat|0
    i32.const 1
    i32.eqz
    br_if $break|0
    block
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
     set_local $3
     get_local $3
     i32.const 32
     i32.ge_s
     i32.eqz
     if
      i32.const 1504
      i32.const 1280
      i32.const 203
      i32.const 12
      call $~lib/env/abort
      unreachable
     end
     get_local $3
     i32.const 248
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      get_local $2
      get_local $0
      i32.load offset=4
      i32.load offset=4
      i32.load
      call $~lib/arraybuffer/ArrayBuffer#get:data
      get_local $1
      i32.add
      get_local $0
      i32.load offset=4
      i32.load
      get_local $1
      i32.sub
      i32.const 1
      i32.sub
      call $~lib/string/String.fromUTF8
      call $~lib/array/Array<String>#push
      drop
      get_local $2
      i32.const 176
      call $~lib/array/Array<String>#join
      return
     end
     get_local $3
     i32.const 256
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      get_local $0
      i32.load offset=4
      i32.load
      get_local $1
      i32.const 1
      i32.add
      i32.gt_s
      if
       get_local $2
       get_local $0
       i32.load offset=4
       i32.load offset=4
       i32.load
       call $~lib/arraybuffer/ArrayBuffer#get:data
       get_local $1
       i32.add
       get_local $0
       i32.load offset=4
       i32.load
       get_local $1
       i32.sub
       i32.const 1
       i32.sub
       call $~lib/string/String.fromUTF8
       call $~lib/array/Array<String>#push
       drop
      end
      get_local $2
      get_local $0
      call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readEscapedChar
      call $~lib/array/Array<String>#push
      drop
      get_local $0
      i32.load offset=4
      i32.load
      set_local $1
     end
    end
    br $repeat|0
    unreachable
   end
   unreachable
  end
  i32.const 176
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseKey (; 114 ;) (type $iv) (param $0 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#skipWhitespace
  get_local $0
  i32.load offset=4
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readString
  i32.store offset=8
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#skipWhitespace
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
  i32.const 448
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 1728
   i32.const 1280
   i32.const 161
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseObject (; 115 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#peekChar
  i32.const 456
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=8
  set_local $1
  get_local $0
  i32.load offset=4
  i32.const 0
  i32.store offset=8
  get_local $0
  i32.load
  get_local $1
  call $model_near/__near_JSONHandler_Array_Array_String#pushObject
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
   drop
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#skipWhitespace
   i32.const 1
   set_local $2
   block $break|0
    loop $continue|0
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#peekChar
     i32.const 1160
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     if
      block
       get_local $2
       i32.eqz
       if
        get_local $0
        call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
        i32.const 184
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.eq
        i32.eqz
        if
         i32.const 1408
         i32.const 1280
         i32.const 144
         i32.const 20
         call $~lib/env/abort
         unreachable
        end
       else        
        i32.const 0
        set_local $2
       end
       get_local $0
       call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseKey
       get_local $0
       call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseValue
       drop
      end
      br $continue|0
     end
    end
   end
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
   i32.const 1160
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 1760
    i32.const 1280
    i32.const 151
    i32.const 12
    call $~lib/env/abort
    unreachable
   end
  end
  get_local $0
  i32.load
  call $json/decoder/JSONHandler#popObject
  i32.const 1
 )
 (func $model_near/__near_JSONHandler_Array_Array_String#pushArray (; 116 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $1
  i32.const 0
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 1320
   i32.const 148
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load8_u offset=8
  i32.const 0
  i32.ne
  i32.eqz
  if
   get_local $0
   i32.const 1
   i32.store8 offset=8
   i32.const 1
   return
  end
  get_local $0
  i32.load offset=12
  get_local $0
  i32.load
  get_local $0
  i32.load offset=4
  i32.load offset=4
  call $model_near/__near_decode_Array_String
  call $~lib/array/Array<Array<String>>#push
  drop
  i32.const 0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseArray (; 117 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#peekChar
  i32.const 1144
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=8
  set_local $1
  get_local $0
  i32.load offset=4
  i32.const 0
  i32.store offset=8
  get_local $0
  i32.load
  get_local $1
  call $model_near/__near_JSONHandler_Array_Array_String#pushArray
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
   drop
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#skipWhitespace
   i32.const 1
   set_local $2
   block $break|0
    loop $continue|0
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#peekChar
     i32.const 1152
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     if
      block
       get_local $2
       i32.eqz
       if
        get_local $0
        call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
        i32.const 184
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.eq
        i32.eqz
        if
         i32.const 1408
         i32.const 1280
         i32.const 177
         i32.const 20
         call $~lib/env/abort
         unreachable
        end
       else        
        i32.const 0
        set_local $2
       end
       get_local $0
       call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseValue
       drop
      end
      br $continue|0
     end
    end
   end
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
   i32.const 1152
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 1816
    i32.const 1280
    i32.const 183
    i32.const 12
    call $~lib/env/abort
    unreachable
   end
  end
  get_local $0
  i32.load
  call $json/decoder/JSONHandler#popArray
  i32.const 1
  return
 )
 (func $json/decoder/ThrowingJSONHandler#setString (; 118 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  i32.const 0
  i32.eqz
  if
   i32.const 2072
   get_local $1
   call $~lib/string/String.__concat
   i32.const 2128
   call $~lib/string/String.__concat
   get_local $2
   call $~lib/string/String.__concat
   i32.const 248
   call $~lib/string/String.__concat
   i32.const 1280
   i32.const 43
   i32.const 7
   call $~lib/env/abort
   unreachable
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseString (; 119 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#peekChar
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load
  get_local $0
  i32.load offset=4
  i32.load offset=8
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readString
  call $json/decoder/ThrowingJSONHandler#setString
  i32.const 1
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readAndAssert (; 120 ;) (type $iiv) (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $break|0
   i32.const 0
   set_local $2
   loop $repeat|0
    get_local $2
    get_local $1
    i32.load
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $1
    get_local $2
    call $~lib/string/String#charCodeAt
    get_local $0
    call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
    i32.eq
    i32.eqz
    if
     i32.const 1872
     get_local $1
     call $~lib/string/String.__concat
     i32.const 1896
     call $~lib/string/String.__concat
     i32.const 1280
     i32.const 320
     i32.const 12
     call $~lib/env/abort
     unreachable
    end
    get_local $2
    i32.const 1
    i32.add
    set_local $2
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseBoolean (; 121 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#peekChar
  get_global $json/decoder/FALSE_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/FALSE_STR
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   i32.const 0
   call $json/decoder/ThrowingJSONHandler#setBoolean
   i32.const 1
   return
  end
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#peekChar
  get_global $json/decoder/TRUE_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/TRUE_STR
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   i32.const 1
   call $json/decoder/ThrowingJSONHandler#setBoolean
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseNumber (; 122 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 0
  set_local $1
  i32.const 1
  set_local $2
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#peekChar
  i32.const 1968
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const -1
   set_local $2
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
   drop
  end
  i32.const 0
  set_local $3
  block $break|0
   loop $continue|0
    get_global $json/decoder/CHAR_0
    get_local $0
    call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#peekChar
    i32.le_s
    tee_local $4
    if (result i32)
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#peekChar
     get_global $json/decoder/CHAR_9
     i32.le_s
    else     
     get_local $4
    end
    if
     block
      get_local $0
      call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readChar
      set_local $4
      get_local $1
      i32.const 10
      i32.mul
      set_local $1
      get_local $1
      get_local $4
      get_global $json/decoder/CHAR_0
      i32.sub
      i32.add
      set_local $1
      get_local $3
      i32.const 1
      i32.add
      set_local $3
     end
     br $continue|0
    end
   end
  end
  get_local $3
  i32.const 0
  i32.gt_s
  if
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   get_local $1
   get_local $2
   i32.mul
   call $json/decoder/ThrowingJSONHandler#setInteger
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $json/decoder/ThrowingJSONHandler#setNull (; 123 ;) (type $iiv) (param $0 i32) (param $1 i32)
  i32.const 0
  i32.eqz
  if
   i32.const 2144
   get_local $1
   call $~lib/string/String.__concat
   i32.const 1280
   i32.const 51
   i32.const 7
   call $~lib/env/abort
   unreachable
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseNull (; 124 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#peekChar
  get_global $json/decoder/NULL_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/NULL_STR
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   call $json/decoder/ThrowingJSONHandler#setNull
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseValue (; 125 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#skipWhitespace
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseObject
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseArray
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseString
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseBoolean
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseNumber
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseNull
  end
  set_local $1
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#skipWhitespace
  get_local $1
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#deserialize (; 126 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  get_local $2
  if
   get_local $0
   get_local $2
   i32.store offset=4
  else   
   get_local $0
   block (result i32)
    i32.const 12
    call $~lib/memory/memory.allocate
    set_local $3
    get_local $3
    i32.const 0
    i32.store
    get_local $3
    i32.const 0
    i32.store offset=4
    get_local $3
    i32.const 0
    i32.store offset=8
    get_local $3
   end
   i32.store offset=4
   get_local $0
   i32.load offset=4
   i32.const 0
   i32.store
   get_local $0
   i32.load offset=4
   get_local $1
   i32.store offset=4
   get_local $0
   i32.load offset=4
   i32.const 0
   i32.store offset=8
  end
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#parseValue
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 2032
   i32.const 1280
   i32.const 103
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
 )
 (func $model_near/__near_decode_Array_Array_String (; 127 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block (result i32)
   i32.const 16
   call $~lib/memory/memory.allocate
   set_local $2
   get_local $2
   i32.const 0
   i32.store
   get_local $2
   i32.const 0
   i32.store offset=4
   get_local $2
   i32.const 0
   i32.store8 offset=8
   get_local $2
   i32.const 0
   i32.const 0
   call $~lib/array/Array<Array<String>>#constructor
   i32.store offset=12
   get_local $2
  end
  set_local $2
  get_local $2
  get_local $0
  i32.store
  get_local $2
  i32.const 0
  get_local $2
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#constructor
  i32.store offset=4
  get_local $2
  i32.load offset=4
  get_local $0
  get_local $1
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_Array_String>#deserialize
  get_local $2
  i32.load offset=12
 )
 (func $json/decoder/ThrowingJSONHandler#pushArray (; 128 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  i32.const 0
  i32.eqz
  if
   i32.const 2192
   get_local $1
   call $~lib/string/String.__concat
   i32.const 1280
   i32.const 60
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  i32.const 1
 )
 (func $model_near/__near_JSONHandler_FooBar#pushArray (; 129 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $1
  i32.const 1128
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=12
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=4
   call $model_near/__near_decode_Array_Array_String
   i32.store offset=16
   i32.const 0
   return
  end
  get_local $0
  get_local $1
  call $json/decoder/ThrowingJSONHandler#pushArray
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseArray (; 130 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#peekChar
  i32.const 1144
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=8
  set_local $1
  get_local $0
  i32.load offset=4
  i32.const 0
  i32.store offset=8
  get_local $0
  i32.load
  get_local $1
  call $model_near/__near_JSONHandler_FooBar#pushArray
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
   drop
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#skipWhitespace
   i32.const 1
   set_local $2
   block $break|0
    loop $continue|0
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#peekChar
     i32.const 1152
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     if
      block
       get_local $2
       i32.eqz
       if
        get_local $0
        call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
        i32.const 184
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.eq
        i32.eqz
        if
         i32.const 1408
         i32.const 1280
         i32.const 177
         i32.const 20
         call $~lib/env/abort
         unreachable
        end
       else        
        i32.const 0
        set_local $2
       end
       get_local $0
       call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseValue
       drop
      end
      br $continue|0
     end
    end
   end
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
   i32.const 1152
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 1816
    i32.const 1280
    i32.const 183
    i32.const 12
    call $~lib/env/abort
    unreachable
   end
  end
  get_local $0
  i32.load
  call $json/decoder/JSONHandler#popArray
  i32.const 1
  return
 )
 (func $model_near/__near_JSONHandler_FooBar#setString (; 131 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $1
  i32.const 1112
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=12
   get_local $2
   i32.store offset=12
   return
  end
  get_local $0
  get_local $1
  get_local $2
  call $json/decoder/ThrowingJSONHandler#setString
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseString (; 132 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#peekChar
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load
  get_local $0
  i32.load offset=4
  i32.load offset=8
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readString
  call $model_near/__near_JSONHandler_FooBar#setString
  i32.const 1
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readAndAssert (; 133 ;) (type $iiv) (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $break|0
   i32.const 0
   set_local $2
   loop $repeat|0
    get_local $2
    get_local $1
    i32.load
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $1
    get_local $2
    call $~lib/string/String#charCodeAt
    get_local $0
    call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
    i32.eq
    i32.eqz
    if
     i32.const 1872
     get_local $1
     call $~lib/string/String.__concat
     i32.const 1896
     call $~lib/string/String.__concat
     i32.const 1280
     i32.const 320
     i32.const 12
     call $~lib/env/abort
     unreachable
    end
    get_local $2
    i32.const 1
    i32.add
    set_local $2
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $model_near/__near_JSONHandler_FooBar#setBoolean (; 134 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $1
  i32.const 1096
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=12
   get_local $2
   i32.const 0
   i32.ne
   i32.store8 offset=8
   return
  end
  get_local $0
  get_local $1
  get_local $2
  call $json/decoder/ThrowingJSONHandler#setBoolean
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseBoolean (; 135 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#peekChar
  get_global $json/decoder/FALSE_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/FALSE_STR
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   i32.const 0
   call $model_near/__near_JSONHandler_FooBar#setBoolean
   i32.const 1
   return
  end
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#peekChar
  get_global $json/decoder/TRUE_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/TRUE_STR
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   i32.const 1
   call $model_near/__near_JSONHandler_FooBar#setBoolean
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $model_near/__near_JSONHandler_FooBar#setInteger (; 136 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  get_local $1
  i32.const 136
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=12
   get_local $2
   i32.store
   return
  end
  get_local $1
  i32.const 1080
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=12
   get_local $2
   i32.store offset=4
   return
  end
  get_local $0
  get_local $1
  get_local $2
  call $json/decoder/ThrowingJSONHandler#setInteger
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseNumber (; 137 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 0
  set_local $1
  i32.const 1
  set_local $2
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#peekChar
  i32.const 1968
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const -1
   set_local $2
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
   drop
  end
  i32.const 0
  set_local $3
  block $break|0
   loop $continue|0
    get_global $json/decoder/CHAR_0
    get_local $0
    call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#peekChar
    i32.le_s
    tee_local $4
    if (result i32)
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#peekChar
     get_global $json/decoder/CHAR_9
     i32.le_s
    else     
     get_local $4
    end
    if
     block
      get_local $0
      call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readChar
      set_local $4
      get_local $1
      i32.const 10
      i32.mul
      set_local $1
      get_local $1
      get_local $4
      get_global $json/decoder/CHAR_0
      i32.sub
      i32.add
      set_local $1
      get_local $3
      i32.const 1
      i32.add
      set_local $3
     end
     br $continue|0
    end
   end
  end
  get_local $3
  i32.const 0
  i32.gt_s
  if
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   get_local $1
   get_local $2
   i32.mul
   call $model_near/__near_JSONHandler_FooBar#setInteger
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $model_near/__near_JSONHandler_FooBar#setNull (; 138 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $1
  i32.const 136
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=12
   i32.const 0
   i32.store
   return
  end
  get_local $1
  i32.const 1080
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=12
   i32.const 0
   i32.store offset=4
   return
  end
  get_local $1
  i32.const 1096
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=12
   i32.const 0
   i32.store8 offset=8
   return
  end
  get_local $1
  i32.const 1112
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=12
   i32.const 0
   i32.store offset=12
   return
  end
  get_local $1
  i32.const 1128
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.load offset=12
   i32.const 0
   i32.store offset=16
   return
  end
  get_local $0
  get_local $1
  call $json/decoder/ThrowingJSONHandler#setNull
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseNull (; 139 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#peekChar
  get_global $json/decoder/NULL_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/NULL_STR
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   call $model_near/__near_JSONHandler_FooBar#setNull
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseValue (; 140 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#skipWhitespace
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseObject
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseArray
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseString
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseBoolean
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseNumber
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseNull
  end
  set_local $1
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#skipWhitespace
  get_local $1
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#deserialize (; 141 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  get_local $2
  if
   get_local $0
   get_local $2
   i32.store offset=4
  else   
   get_local $0
   block (result i32)
    i32.const 12
    call $~lib/memory/memory.allocate
    set_local $3
    get_local $3
    i32.const 0
    i32.store
    get_local $3
    i32.const 0
    i32.store offset=4
    get_local $3
    i32.const 0
    i32.store offset=8
    get_local $3
   end
   i32.store offset=4
   get_local $0
   i32.load offset=4
   i32.const 0
   i32.store
   get_local $0
   i32.load offset=4
   get_local $1
   i32.store offset=4
   get_local $0
   i32.load offset=4
   i32.const 0
   i32.store offset=8
  end
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#parseValue
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 2032
   i32.const 1280
   i32.const 103
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
 )
 (func $model_near/__near_decode_FooBar (; 142 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  block (result i32)
   i32.const 16
   call $~lib/memory/memory.allocate
   set_local $2
   get_local $2
   i32.const 0
   i32.store
   get_local $2
   i32.const 0
   i32.store offset=4
   get_local $2
   i32.const 0
   i32.store8 offset=8
   get_local $2
   block (result i32)
    i32.const 20
    call $~lib/memory/memory.allocate
    set_local $3
    get_local $3
    i32.const 0
    i32.store
    get_local $3
    i32.const 1
    i32.store offset=4
    get_local $3
    i32.const 0
    i32.store8 offset=8
    get_local $3
    i32.const 120
    i32.store offset=12
    get_local $3
    i32.const 0
    i32.store offset=16
    get_local $3
   end
   i32.store offset=12
   get_local $2
  end
  set_local $2
  get_local $2
  get_local $0
  i32.store
  get_local $2
  i32.const 0
  get_local $2
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#constructor
  i32.store offset=4
  get_local $2
  i32.load offset=4
  get_local $0
  get_local $1
  call $json/decoder/JSONDecoder<__near_JSONHandler_FooBar>#deserialize
  get_local $2
  i32.load offset=12
 )
 (func $model_near/FooBar.decode (; 143 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  i32.const 0
  call $model_near/__near_decode_FooBar
 )
 (func $test/runTest (; 144 ;) (type $v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  block (result i32)
   i32.const 20
   call $~lib/memory/memory.allocate
   set_local $0
   get_local $0
   i32.const 0
   i32.store
   get_local $0
   i32.const 1
   i32.store offset=4
   get_local $0
   i32.const 0
   i32.store8 offset=8
   get_local $0
   i32.const 120
   i32.store offset=12
   get_local $0
   i32.const 0
   i32.store offset=16
   get_local $0
  end
  set_local $0
  get_local $0
  i32.const 321
  i32.store
  get_local $0
  i32.const 123
  i32.store offset=4
  get_local $0
  i32.const 1
  i32.store8 offset=8
  get_local $0
  i32.const 136
  i32.store offset=12
  get_local $0
  call $model_near/FooBar#encode
  set_local $1
  get_local $1
  call $model_near/FooBar.decode
  set_local $2
  get_local $0
  i32.load
  get_local $2
  i32.load
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 2248
   i32.const 17
   i32.const 4
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load offset=4
  get_local $2
  i32.load offset=4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 2248
   i32.const 18
   i32.const 4
   call $~lib/env/abort
   unreachable
  end
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#constructor (; 145 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $2
    get_local $2
    i32.const 0
    i32.store
    get_local $2
    i32.const 0
    i32.store offset=4
    get_local $2
   end
   tee_local $0
  end
  tee_local $0
  get_local $1
  i32.store
  get_local $0
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#peekChar (; 146 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  i32.load offset=4
  i32.load
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.14 (result i32)
   get_local $0
   i32.load offset=4
   i32.load offset=4
   set_local $1
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.ge_s
  if
   i32.const -1
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=4
  get_local $0
  i32.load offset=4
  i32.load
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#isWhitespace (; 147 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $1
  i32.const 9
  i32.eq
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 10
   i32.eq
  end
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 13
   i32.eq
  end
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 32
   i32.eq
  end
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar (; 148 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  i32.load offset=4
  i32.load
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.15 (result i32)
   get_local $0
   i32.load offset=4
   i32.load offset=4
   set_local $1
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.lt_s
  i32.eqz
  if
   i32.const 1232
   i32.const 1280
   i32.const 115
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load offset=4
  i32.load offset=4
  block (result i32)
   get_local $0
   i32.load offset=4
   get_local $0
   i32.load offset=4
   i32.load
   tee_local $1
   i32.const 1
   i32.add
   i32.store
   get_local $1
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#skipWhitespace (; 149 ;) (type $iv) (param $0 i32)
  loop $continue|0
   get_local $0
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#peekChar
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#isWhitespace
   if
    get_local $0
    call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
    drop
    br $continue|0
   end
  end
 )
 (func $main_near/__near_ArgsParser_convertFoobars#pushObject (; 150 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $0
  i32.load8_u offset=8
  i32.const 0
  i32.ne
  i32.eqz
  if
   get_local $1
   i32.const 0
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 2272
    i32.const 236
    i32.const 6
    call $~lib/env/abort
    unreachable
   end
   get_local $0
   i32.const 1
   i32.store8 offset=8
   i32.const 1
   return
  else   
   get_local $1
   i32.const 0
   call $~lib/string/String.__ne
   i32.eqz
   if
    i32.const 0
    i32.const 2272
    i32.const 240
    i32.const 6
    call $~lib/env/abort
    unreachable
   end
  end
  get_local $0
  get_local $1
  call $json/decoder/ThrowingJSONHandler#pushObject
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readHexDigit (; 151 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
  set_local $1
  get_local $1
  get_global $json/decoder/CHAR_0
  i32.sub
  set_local $2
  get_local $2
  i32.const 9
  i32.gt_s
  if
   get_local $1
   get_global $json/decoder/CHAR_A
   i32.sub
   i32.const 10
   i32.add
   set_local $2
   get_local $2
   i32.const 10
   i32.lt_s
   tee_local $3
   if (result i32)
    get_local $3
   else    
    get_local $2
    i32.const 15
    i32.gt_s
   end
   if
    get_local $1
    get_global $json/decoder/CHAR_A_LOWER
    i32.sub
    i32.const 10
    i32.add
    set_local $2
   end
  end
  block (result i32)
   i32.const 0
   i32.const 2
   call $~lib/array/Array<i32>#constructor
   set_local $4
   get_local $4
   i32.const 0
   get_local $1
   call $~lib/array/Array<i32>#__unchecked_set
   get_local $4
   i32.const 1
   get_local $2
   call $~lib/array/Array<i32>#__unchecked_set
   get_local $4
  end
  set_local $4
  get_local $2
  i32.const 0
  i32.ge_s
  tee_local $3
  if (result i32)
   get_local $2
   i32.const 16
   i32.lt_s
  else   
   get_local $3
  end
  i32.eqz
  if
   i32.const 1616
   i32.const 1280
   i32.const 268
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $2
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readEscapedChar (; 152 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
  set_local $1
  get_local $1
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 248
   return
  end
  get_local $1
  i32.const 256
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 256
   return
  end
  get_local $1
  i32.const 1568
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1568
   return
  end
  get_local $1
  i32.const 1576
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 280
   return
  end
  get_local $1
  i32.const 1584
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 296
   return
  end
  get_local $1
  i32.const 1592
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 312
   return
  end
  get_local $1
  i32.const 1600
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 328
   return
  end
  get_local $1
  i32.const 1608
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readHexDigit
   set_local $2
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readHexDigit
   set_local $3
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readHexDigit
   set_local $4
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readHexDigit
   set_local $5
   get_local $2
   i32.const 4096
   i32.mul
   get_local $3
   i32.const 256
   i32.mul
   i32.add
   get_local $4
   i32.const 16
   i32.mul
   i32.add
   get_local $5
   i32.add
   set_local $6
   get_local $6
   call $~lib/string/String.fromCodePoint
   return
  end
  i32.const 0
  i32.eqz
  if
   i32.const 1664
   get_local $1
   call $~lib/string/String.fromCharCode
   call $~lib/string/String.__concat
   i32.const 1280
   i32.const 254
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  i32.const 176
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readString (; 153 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 1440
   i32.const 1280
   i32.const 198
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load offset=4
  i32.load
  set_local $1
  i32.const 0
  i32.const 0
  call $~lib/array/Array<String>#constructor
  set_local $2
  block $break|0
   loop $repeat|0
    i32.const 1
    i32.eqz
    br_if $break|0
    block
     get_local $0
     call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
     set_local $3
     get_local $3
     i32.const 32
     i32.ge_s
     i32.eqz
     if
      i32.const 1504
      i32.const 1280
      i32.const 203
      i32.const 12
      call $~lib/env/abort
      unreachable
     end
     get_local $3
     i32.const 248
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      get_local $2
      get_local $0
      i32.load offset=4
      i32.load offset=4
      i32.load
      call $~lib/arraybuffer/ArrayBuffer#get:data
      get_local $1
      i32.add
      get_local $0
      i32.load offset=4
      i32.load
      get_local $1
      i32.sub
      i32.const 1
      i32.sub
      call $~lib/string/String.fromUTF8
      call $~lib/array/Array<String>#push
      drop
      get_local $2
      i32.const 176
      call $~lib/array/Array<String>#join
      return
     end
     get_local $3
     i32.const 256
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      get_local $0
      i32.load offset=4
      i32.load
      get_local $1
      i32.const 1
      i32.add
      i32.gt_s
      if
       get_local $2
       get_local $0
       i32.load offset=4
       i32.load offset=4
       i32.load
       call $~lib/arraybuffer/ArrayBuffer#get:data
       get_local $1
       i32.add
       get_local $0
       i32.load offset=4
       i32.load
       get_local $1
       i32.sub
       i32.const 1
       i32.sub
       call $~lib/string/String.fromUTF8
       call $~lib/array/Array<String>#push
       drop
      end
      get_local $2
      get_local $0
      call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readEscapedChar
      call $~lib/array/Array<String>#push
      drop
      get_local $0
      i32.load offset=4
      i32.load
      set_local $1
     end
    end
    br $repeat|0
    unreachable
   end
   unreachable
  end
  i32.const 176
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseKey (; 154 ;) (type $iv) (param $0 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#skipWhitespace
  get_local $0
  i32.load offset=4
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readString
  i32.store offset=8
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#skipWhitespace
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
  i32.const 448
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 1728
   i32.const 1280
   i32.const 161
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseObject (; 155 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#peekChar
  i32.const 456
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=8
  set_local $1
  get_local $0
  i32.load offset=4
  i32.const 0
  i32.store offset=8
  get_local $0
  i32.load
  get_local $1
  call $main_near/__near_ArgsParser_convertFoobars#pushObject
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
   drop
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#skipWhitespace
   i32.const 1
   set_local $2
   block $break|0
    loop $continue|0
     get_local $0
     call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#peekChar
     i32.const 1160
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     if
      block
       get_local $2
       i32.eqz
       if
        get_local $0
        call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
        i32.const 184
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.eq
        i32.eqz
        if
         i32.const 1408
         i32.const 1280
         i32.const 144
         i32.const 20
         call $~lib/env/abort
         unreachable
        end
       else        
        i32.const 0
        set_local $2
       end
       get_local $0
       call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseKey
       get_local $0
       call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseValue
       drop
      end
      br $continue|0
     end
    end
   end
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
   i32.const 1160
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 1760
    i32.const 1280
    i32.const 151
    i32.const 12
    call $~lib/env/abort
    unreachable
   end
  end
  get_local $0
  i32.load
  call $json/decoder/JSONHandler#popObject
  i32.const 1
 )
 (func $~lib/array/Array<FooBar>#constructor (; 156 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $1
  i32.const 268435454
  i32.gt_u
  if
   i32.const 0
   i32.const 464
   i32.const 45
   i32.const 39
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  i32.const 2
  i32.shl
  set_local $2
  get_local $2
  call $~lib/internal/arraybuffer/allocateUnsafe
  set_local $3
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $4
    get_local $4
    i32.const 0
    i32.store
    get_local $4
    i32.const 0
    i32.store offset=4
    get_local $4
   end
   tee_local $0
  end
  tee_local $0
  get_local $3
  i32.store
  get_local $0
  get_local $1
  i32.store offset=4
  get_local $3
  get_global $~lib/internal/arraybuffer/HEADER_SIZE
  i32.add
  set_local $4
  i32.const 0
  set_local $5
  get_local $4
  get_local $5
  get_local $2
  call $~lib/internal/memory/memset
  get_local $0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#constructor (; 157 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $2
    get_local $2
    i32.const 0
    i32.store
    get_local $2
    i32.const 0
    i32.store offset=4
    get_local $2
   end
   tee_local $0
  end
  tee_local $0
  get_local $1
  i32.store
  get_local $0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#peekChar (; 158 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  i32.load offset=4
  i32.load
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.17 (result i32)
   get_local $0
   i32.load offset=4
   i32.load offset=4
   set_local $1
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.ge_s
  if
   i32.const -1
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=4
  get_local $0
  i32.load offset=4
  i32.load
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#isWhitespace (; 159 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  get_local $1
  i32.const 9
  i32.eq
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 10
   i32.eq
  end
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 13
   i32.eq
  end
  tee_local $2
  if (result i32)
   get_local $2
  else   
   get_local $1
   i32.const 32
   i32.eq
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar (; 160 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  i32.load offset=4
  i32.load
  block $~lib/internal/typedarray/TypedArray<u8>#get:length|inlined.18 (result i32)
   get_local $0
   i32.load offset=4
   i32.load offset=4
   set_local $1
   get_local $1
   i32.load offset=8
   i32.const 0
   i32.shr_u
  end
  i32.lt_s
  i32.eqz
  if
   i32.const 1232
   i32.const 1280
   i32.const 115
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load offset=4
  i32.load offset=4
  block (result i32)
   get_local $0
   i32.load offset=4
   get_local $0
   i32.load offset=4
   i32.load
   tee_local $1
   i32.const 1
   i32.add
   i32.store
   get_local $1
  end
  call $~lib/internal/typedarray/TypedArray<u8>#__get
  i32.const 255
  i32.and
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#skipWhitespace (; 161 ;) (type $iv) (param $0 i32)
  loop $continue|0
   get_local $0
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#peekChar
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#isWhitespace
   if
    get_local $0
    call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
    drop
    br $continue|0
   end
  end
 )
 (func $~lib/array/Array<FooBar>#push (; 162 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  get_local $0
  i32.load offset=4
  set_local $2
  get_local $0
  i32.load
  set_local $3
  get_local $3
  i32.load
  i32.const 2
  i32.shr_u
  set_local $4
  get_local $2
  i32.const 1
  i32.add
  set_local $5
  get_local $2
  get_local $4
  i32.ge_u
  if
   get_local $2
   i32.const 268435454
   i32.ge_u
   if
    i32.const 0
    i32.const 464
    i32.const 184
    i32.const 42
    call $~lib/env/abort
    unreachable
   end
   get_local $3
   get_local $5
   i32.const 2
   i32.shl
   call $~lib/internal/arraybuffer/reallocateUnsafe
   set_local $3
   get_local $0
   get_local $3
   i32.store
  end
  get_local $0
  get_local $5
  i32.store offset=4
  i32.const 0
  set_local $6
  get_local $3
  get_local $2
  i32.const 2
  i32.shl
  i32.add
  get_local $6
  i32.add
  get_local $1
  i32.store offset=8
  get_local $5
 )
 (func $main_near/__near_JSONHandler_Array_FooBar#pushObject (; 163 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $0
  i32.load offset=12
  get_local $0
  i32.load
  get_local $0
  i32.load offset=4
  i32.load offset=4
  call $model_near/__near_decode_FooBar
  call $~lib/array/Array<FooBar>#push
  drop
  i32.const 0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readHexDigit (; 164 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
  set_local $1
  get_local $1
  get_global $json/decoder/CHAR_0
  i32.sub
  set_local $2
  get_local $2
  i32.const 9
  i32.gt_s
  if
   get_local $1
   get_global $json/decoder/CHAR_A
   i32.sub
   i32.const 10
   i32.add
   set_local $2
   get_local $2
   i32.const 10
   i32.lt_s
   tee_local $3
   if (result i32)
    get_local $3
   else    
    get_local $2
    i32.const 15
    i32.gt_s
   end
   if
    get_local $1
    get_global $json/decoder/CHAR_A_LOWER
    i32.sub
    i32.const 10
    i32.add
    set_local $2
   end
  end
  block (result i32)
   i32.const 0
   i32.const 2
   call $~lib/array/Array<i32>#constructor
   set_local $4
   get_local $4
   i32.const 0
   get_local $1
   call $~lib/array/Array<i32>#__unchecked_set
   get_local $4
   i32.const 1
   get_local $2
   call $~lib/array/Array<i32>#__unchecked_set
   get_local $4
  end
  set_local $4
  get_local $2
  i32.const 0
  i32.ge_s
  tee_local $3
  if (result i32)
   get_local $2
   i32.const 16
   i32.lt_s
  else   
   get_local $3
  end
  i32.eqz
  if
   i32.const 1616
   i32.const 1280
   i32.const 268
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $2
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readEscapedChar (; 165 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
  set_local $1
  get_local $1
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 248
   return
  end
  get_local $1
  i32.const 256
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 256
   return
  end
  get_local $1
  i32.const 1568
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 1568
   return
  end
  get_local $1
  i32.const 1576
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 280
   return
  end
  get_local $1
  i32.const 1584
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 296
   return
  end
  get_local $1
  i32.const 1592
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 312
   return
  end
  get_local $1
  i32.const 1600
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const 328
   return
  end
  get_local $1
  i32.const 1608
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readHexDigit
   set_local $2
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readHexDigit
   set_local $3
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readHexDigit
   set_local $4
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readHexDigit
   set_local $5
   get_local $2
   i32.const 4096
   i32.mul
   get_local $3
   i32.const 256
   i32.mul
   i32.add
   get_local $4
   i32.const 16
   i32.mul
   i32.add
   get_local $5
   i32.add
   set_local $6
   get_local $6
   call $~lib/string/String.fromCodePoint
   return
  end
  i32.const 0
  i32.eqz
  if
   i32.const 1664
   get_local $1
   call $~lib/string/String.fromCharCode
   call $~lib/string/String.__concat
   i32.const 1280
   i32.const 254
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  i32.const 176
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readString (; 166 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 1440
   i32.const 1280
   i32.const 198
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load offset=4
  i32.load
  set_local $1
  i32.const 0
  i32.const 0
  call $~lib/array/Array<String>#constructor
  set_local $2
  block $break|0
   loop $repeat|0
    i32.const 1
    i32.eqz
    br_if $break|0
    block
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
     set_local $3
     get_local $3
     i32.const 32
     i32.ge_s
     i32.eqz
     if
      i32.const 1504
      i32.const 1280
      i32.const 203
      i32.const 12
      call $~lib/env/abort
      unreachable
     end
     get_local $3
     i32.const 248
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      get_local $2
      get_local $0
      i32.load offset=4
      i32.load offset=4
      i32.load
      call $~lib/arraybuffer/ArrayBuffer#get:data
      get_local $1
      i32.add
      get_local $0
      i32.load offset=4
      i32.load
      get_local $1
      i32.sub
      i32.const 1
      i32.sub
      call $~lib/string/String.fromUTF8
      call $~lib/array/Array<String>#push
      drop
      get_local $2
      i32.const 176
      call $~lib/array/Array<String>#join
      return
     end
     get_local $3
     i32.const 256
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.eq
     if
      get_local $0
      i32.load offset=4
      i32.load
      get_local $1
      i32.const 1
      i32.add
      i32.gt_s
      if
       get_local $2
       get_local $0
       i32.load offset=4
       i32.load offset=4
       i32.load
       call $~lib/arraybuffer/ArrayBuffer#get:data
       get_local $1
       i32.add
       get_local $0
       i32.load offset=4
       i32.load
       get_local $1
       i32.sub
       i32.const 1
       i32.sub
       call $~lib/string/String.fromUTF8
       call $~lib/array/Array<String>#push
       drop
      end
      get_local $2
      get_local $0
      call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readEscapedChar
      call $~lib/array/Array<String>#push
      drop
      get_local $0
      i32.load offset=4
      i32.load
      set_local $1
     end
    end
    br $repeat|0
    unreachable
   end
   unreachable
  end
  i32.const 176
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseKey (; 167 ;) (type $iv) (param $0 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#skipWhitespace
  get_local $0
  i32.load offset=4
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readString
  i32.store offset=8
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#skipWhitespace
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
  i32.const 448
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  i32.eqz
  if
   i32.const 1728
   i32.const 1280
   i32.const 161
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseObject (; 168 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#peekChar
  i32.const 456
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=8
  set_local $1
  get_local $0
  i32.load offset=4
  i32.const 0
  i32.store offset=8
  get_local $0
  i32.load
  get_local $1
  call $main_near/__near_JSONHandler_Array_FooBar#pushObject
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
   drop
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#skipWhitespace
   i32.const 1
   set_local $2
   block $break|0
    loop $continue|0
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#peekChar
     i32.const 1160
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     if
      block
       get_local $2
       i32.eqz
       if
        get_local $0
        call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
        i32.const 184
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.eq
        i32.eqz
        if
         i32.const 1408
         i32.const 1280
         i32.const 144
         i32.const 20
         call $~lib/env/abort
         unreachable
        end
       else        
        i32.const 0
        set_local $2
       end
       get_local $0
       call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseKey
       get_local $0
       call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseValue
       drop
      end
      br $continue|0
     end
    end
   end
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
   i32.const 1160
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 1760
    i32.const 1280
    i32.const 151
    i32.const 12
    call $~lib/env/abort
    unreachable
   end
  end
  get_local $0
  i32.load
  call $json/decoder/JSONHandler#popObject
  i32.const 1
 )
 (func $main_near/__near_JSONHandler_Array_FooBar#pushArray (; 169 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $1
  i32.const 0
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 2272
   i32.const 199
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
  get_local $0
  i32.load8_u offset=8
  i32.const 0
  i32.ne
  i32.eqz
  if
   get_local $0
   i32.const 1
   i32.store8 offset=8
   i32.const 1
   return
  end
  get_local $0
  i32.load offset=12
  get_local $0
  i32.load
  get_local $0
  i32.load offset=4
  i32.load offset=4
  call $model_near/__near_decode_FooBar
  call $~lib/array/Array<FooBar>#push
  drop
  i32.const 0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseArray (; 170 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#peekChar
  i32.const 1144
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=8
  set_local $1
  get_local $0
  i32.load offset=4
  i32.const 0
  i32.store offset=8
  get_local $0
  i32.load
  get_local $1
  call $main_near/__near_JSONHandler_Array_FooBar#pushArray
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
   drop
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#skipWhitespace
   i32.const 1
   set_local $2
   block $break|0
    loop $continue|0
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#peekChar
     i32.const 1152
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     if
      block
       get_local $2
       i32.eqz
       if
        get_local $0
        call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
        i32.const 184
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.eq
        i32.eqz
        if
         i32.const 1408
         i32.const 1280
         i32.const 177
         i32.const 20
         call $~lib/env/abort
         unreachable
        end
       else        
        i32.const 0
        set_local $2
       end
       get_local $0
       call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseValue
       drop
      end
      br $continue|0
     end
    end
   end
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
   i32.const 1152
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 1816
    i32.const 1280
    i32.const 183
    i32.const 12
    call $~lib/env/abort
    unreachable
   end
  end
  get_local $0
  i32.load
  call $json/decoder/JSONHandler#popArray
  i32.const 1
  return
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseString (; 171 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#peekChar
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load
  get_local $0
  i32.load offset=4
  i32.load offset=8
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readString
  call $json/decoder/ThrowingJSONHandler#setString
  i32.const 1
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readAndAssert (; 172 ;) (type $iiv) (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $break|0
   i32.const 0
   set_local $2
   loop $repeat|0
    get_local $2
    get_local $1
    i32.load
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $1
    get_local $2
    call $~lib/string/String#charCodeAt
    get_local $0
    call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
    i32.eq
    i32.eqz
    if
     i32.const 1872
     get_local $1
     call $~lib/string/String.__concat
     i32.const 1896
     call $~lib/string/String.__concat
     i32.const 1280
     i32.const 320
     i32.const 12
     call $~lib/env/abort
     unreachable
    end
    get_local $2
    i32.const 1
    i32.add
    set_local $2
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseBoolean (; 173 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#peekChar
  get_global $json/decoder/FALSE_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/FALSE_STR
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   i32.const 0
   call $json/decoder/ThrowingJSONHandler#setBoolean
   i32.const 1
   return
  end
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#peekChar
  get_global $json/decoder/TRUE_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/TRUE_STR
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   i32.const 1
   call $json/decoder/ThrowingJSONHandler#setBoolean
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseNumber (; 174 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 0
  set_local $1
  i32.const 1
  set_local $2
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#peekChar
  i32.const 1968
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const -1
   set_local $2
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
   drop
  end
  i32.const 0
  set_local $3
  block $break|0
   loop $continue|0
    get_global $json/decoder/CHAR_0
    get_local $0
    call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#peekChar
    i32.le_s
    tee_local $4
    if (result i32)
     get_local $0
     call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#peekChar
     get_global $json/decoder/CHAR_9
     i32.le_s
    else     
     get_local $4
    end
    if
     block
      get_local $0
      call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readChar
      set_local $4
      get_local $1
      i32.const 10
      i32.mul
      set_local $1
      get_local $1
      get_local $4
      get_global $json/decoder/CHAR_0
      i32.sub
      i32.add
      set_local $1
      get_local $3
      i32.const 1
      i32.add
      set_local $3
     end
     br $continue|0
    end
   end
  end
  get_local $3
  i32.const 0
  i32.gt_s
  if
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   get_local $1
   get_local $2
   i32.mul
   call $json/decoder/ThrowingJSONHandler#setInteger
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseNull (; 175 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#peekChar
  get_global $json/decoder/NULL_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/NULL_STR
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   call $json/decoder/ThrowingJSONHandler#setNull
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseValue (; 176 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#skipWhitespace
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseObject
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseArray
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseString
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseBoolean
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseNumber
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseNull
  end
  set_local $1
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#skipWhitespace
  get_local $1
 )
 (func $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#deserialize (; 177 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  get_local $2
  if
   get_local $0
   get_local $2
   i32.store offset=4
  else   
   get_local $0
   block (result i32)
    i32.const 12
    call $~lib/memory/memory.allocate
    set_local $3
    get_local $3
    i32.const 0
    i32.store
    get_local $3
    i32.const 0
    i32.store offset=4
    get_local $3
    i32.const 0
    i32.store offset=8
    get_local $3
   end
   i32.store offset=4
   get_local $0
   i32.load offset=4
   i32.const 0
   i32.store
   get_local $0
   i32.load offset=4
   get_local $1
   i32.store offset=4
   get_local $0
   i32.load offset=4
   i32.const 0
   i32.store offset=8
  end
  get_local $0
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#parseValue
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 2032
   i32.const 1280
   i32.const 103
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
 )
 (func $main_near/__near_decode_Array_FooBar (; 178 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  block (result i32)
   i32.const 16
   call $~lib/memory/memory.allocate
   set_local $2
   get_local $2
   i32.const 0
   i32.store
   get_local $2
   i32.const 0
   i32.store offset=4
   get_local $2
   i32.const 0
   i32.store8 offset=8
   get_local $2
   i32.const 0
   i32.const 0
   call $~lib/array/Array<FooBar>#constructor
   i32.store offset=12
   get_local $2
  end
  set_local $2
  get_local $2
  get_local $0
  i32.store
  get_local $2
  i32.const 0
  get_local $2
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#constructor
  i32.store offset=4
  get_local $2
  i32.load offset=4
  get_local $0
  get_local $1
  call $json/decoder/JSONDecoder<__near_JSONHandler_Array_FooBar>#deserialize
  get_local $2
  i32.load offset=12
 )
 (func $main_near/__near_ArgsParser_convertFoobars#pushArray (; 179 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  get_local $1
  i32.const 2304
  call $~lib/string/String.__eq
  if
   get_local $0
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=4
   call $main_near/__near_decode_Array_FooBar
   i32.store offset=12
   i32.const 0
   return
  end
  get_local $0
  get_local $1
  call $json/decoder/ThrowingJSONHandler#pushArray
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseArray (; 180 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#peekChar
  i32.const 1144
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load offset=4
  i32.load offset=8
  set_local $1
  get_local $0
  i32.load offset=4
  i32.const 0
  i32.store offset=8
  get_local $0
  i32.load
  get_local $1
  call $main_near/__near_ArgsParser_convertFoobars#pushArray
  if
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
   drop
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#skipWhitespace
   i32.const 1
   set_local $2
   block $break|0
    loop $continue|0
     get_local $0
     call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#peekChar
     i32.const 1152
     i32.const 0
     call $~lib/string/String#charCodeAt
     i32.ne
     if
      block
       get_local $2
       i32.eqz
       if
        get_local $0
        call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
        i32.const 184
        i32.const 0
        call $~lib/string/String#charCodeAt
        i32.eq
        i32.eqz
        if
         i32.const 1408
         i32.const 1280
         i32.const 177
         i32.const 20
         call $~lib/env/abort
         unreachable
        end
       else        
        i32.const 0
        set_local $2
       end
       get_local $0
       call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseValue
       drop
      end
      br $continue|0
     end
    end
   end
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
   i32.const 1152
   i32.const 0
   call $~lib/string/String#charCodeAt
   i32.eq
   i32.eqz
   if
    i32.const 1816
    i32.const 1280
    i32.const 183
    i32.const 12
    call $~lib/env/abort
    unreachable
   end
  end
  get_local $0
  i32.load
  call $json/decoder/JSONHandler#popArray
  i32.const 1
  return
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseString (; 181 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#peekChar
  i32.const 248
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.ne
  if
   i32.const 0
   return
  end
  get_local $0
  i32.load
  get_local $0
  i32.load offset=4
  i32.load offset=8
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readString
  call $json/decoder/ThrowingJSONHandler#setString
  i32.const 1
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readAndAssert (; 182 ;) (type $iiv) (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $break|0
   i32.const 0
   set_local $2
   loop $repeat|0
    get_local $2
    get_local $1
    i32.load
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $1
    get_local $2
    call $~lib/string/String#charCodeAt
    get_local $0
    call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
    i32.eq
    i32.eqz
    if
     i32.const 1872
     get_local $1
     call $~lib/string/String.__concat
     i32.const 1896
     call $~lib/string/String.__concat
     i32.const 1280
     i32.const 320
     i32.const 12
     call $~lib/env/abort
     unreachable
    end
    get_local $2
    i32.const 1
    i32.add
    set_local $2
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseBoolean (; 183 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#peekChar
  get_global $json/decoder/FALSE_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/FALSE_STR
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   i32.const 0
   call $json/decoder/ThrowingJSONHandler#setBoolean
   i32.const 1
   return
  end
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#peekChar
  get_global $json/decoder/TRUE_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/TRUE_STR
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   i32.const 1
   call $json/decoder/ThrowingJSONHandler#setBoolean
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseNumber (; 184 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 0
  set_local $1
  i32.const 1
  set_local $2
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#peekChar
  i32.const 1968
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   i32.const -1
   set_local $2
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
   drop
  end
  i32.const 0
  set_local $3
  block $break|0
   loop $continue|0
    get_global $json/decoder/CHAR_0
    get_local $0
    call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#peekChar
    i32.le_s
    tee_local $4
    if (result i32)
     get_local $0
     call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#peekChar
     get_global $json/decoder/CHAR_9
     i32.le_s
    else     
     get_local $4
    end
    if
     block
      get_local $0
      call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readChar
      set_local $4
      get_local $1
      i32.const 10
      i32.mul
      set_local $1
      get_local $1
      get_local $4
      get_global $json/decoder/CHAR_0
      i32.sub
      i32.add
      set_local $1
      get_local $3
      i32.const 1
      i32.add
      set_local $3
     end
     br $continue|0
    end
   end
  end
  get_local $3
  i32.const 0
  i32.gt_s
  if
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   get_local $1
   get_local $2
   i32.mul
   call $json/decoder/ThrowingJSONHandler#setInteger
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $main_near/__near_ArgsParser_convertFoobars#setNull (; 185 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $1
  i32.const 2304
  call $~lib/string/String.__eq
  if
   get_local $0
   i32.const 0
   i32.store offset=12
   return
  end
  get_local $0
  get_local $1
  call $json/decoder/ThrowingJSONHandler#setNull
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseNull (; 186 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#peekChar
  get_global $json/decoder/NULL_STR
  i32.const 0
  call $~lib/string/String#charCodeAt
  i32.eq
  if
   get_local $0
   get_global $json/decoder/NULL_STR
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#readAndAssert
   get_local $0
   i32.load
   get_local $0
   i32.load offset=4
   i32.load offset=8
   call $main_near/__near_ArgsParser_convertFoobars#setNull
   i32.const 1
   return
  end
  i32.const 0
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseValue (; 187 ;) (type $ii) (param $0 i32) (result i32)
  (local $1 i32)
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#skipWhitespace
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseObject
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseArray
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseString
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseBoolean
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseNumber
  end
  tee_local $1
  if (result i32)
   get_local $1
  else   
   get_local $0
   call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseNull
  end
  set_local $1
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#skipWhitespace
  get_local $1
 )
 (func $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#deserialize (; 188 ;) (type $iiiv) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  get_local $2
  if
   get_local $0
   get_local $2
   i32.store offset=4
  else   
   get_local $0
   block (result i32)
    i32.const 12
    call $~lib/memory/memory.allocate
    set_local $3
    get_local $3
    i32.const 0
    i32.store
    get_local $3
    i32.const 0
    i32.store offset=4
    get_local $3
    i32.const 0
    i32.store offset=8
    get_local $3
   end
   i32.store offset=4
   get_local $0
   i32.load offset=4
   i32.const 0
   i32.store
   get_local $0
   i32.load offset=4
   get_local $1
   i32.store offset=4
   get_local $0
   i32.load offset=4
   i32.const 0
   i32.store offset=8
  end
  get_local $0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#parseValue
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 2032
   i32.const 1280
   i32.const 103
   i32.const 8
   call $~lib/env/abort
   unreachable
  end
 )
 (func $main/convertFoobars~anonymous|1 (; 189 ;) (type $iiii) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  block (result i32)
   i32.const 4
   call $~lib/memory/memory.allocate
   set_local $3
   get_local $3
   i32.const 0
   i32.store
   get_local $3
  end
  set_local $3
  get_local $3
  get_local $0
  i32.store
  get_local $3
 )
 (func $~lib/array/Array<ContainerClass>#constructor (; 190 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  get_local $1
  i32.const 268435454
  i32.gt_u
  if
   i32.const 0
   i32.const 464
   i32.const 45
   i32.const 39
   call $~lib/env/abort
   unreachable
  end
  get_local $1
  i32.const 2
  i32.shl
  set_local $2
  get_local $2
  call $~lib/internal/arraybuffer/allocateUnsafe
  set_local $3
  get_local $0
  if (result i32)
   get_local $0
  else   
   block (result i32)
    i32.const 8
    call $~lib/memory/memory.allocate
    set_local $4
    get_local $4
    i32.const 0
    i32.store
    get_local $4
    i32.const 0
    i32.store offset=4
    get_local $4
   end
   tee_local $0
  end
  tee_local $0
  get_local $3
  i32.store
  get_local $0
  get_local $1
  i32.store offset=4
  get_local $3
  get_global $~lib/internal/arraybuffer/HEADER_SIZE
  i32.add
  set_local $4
  i32.const 0
  set_local $5
  get_local $4
  get_local $5
  get_local $2
  call $~lib/internal/memory/memset
  get_local $0
 )
 (func $~lib/array/Array<FooBar>#map<ContainerClass> (; 191 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  get_local $0
  i32.load
  set_local $2
  get_local $0
  i32.load offset=4
  set_local $3
  i32.const 0
  get_local $3
  call $~lib/array/Array<ContainerClass>#constructor
  set_local $4
  get_local $4
  i32.load
  set_local $5
  block $break|0
   i32.const 0
   set_local $6
   loop $repeat|0
    get_local $6
    get_local $3
    tee_local $7
    get_local $0
    i32.load offset=4
    tee_local $8
    get_local $7
    get_local $8
    i32.lt_s
    select
    i32.lt_s
    i32.eqz
    br_if $break|0
    block
     block (result i32)
      i32.const 3
      set_global $~argc
      block $~lib/internal/arraybuffer/LOAD<FooBar,FooBar>|inlined.0 (result i32)
       i32.const 0
       set_local $7
       get_local $2
       get_local $6
       i32.const 2
       i32.shl
       i32.add
       get_local $7
       i32.add
       i32.load offset=8
      end
      get_local $6
      get_local $0
      get_local $1
      call_indirect (type $iiii)
     end
     set_local $7
     i32.const 0
     set_local $8
     get_local $5
     get_local $6
     i32.const 2
     i32.shl
     i32.add
     get_local $8
     i32.add
     get_local $7
     i32.store offset=8
    end
    get_local $6
    i32.const 1
    i32.add
    set_local $6
    br $repeat|0
    unreachable
   end
   unreachable
  end
  get_local $4
 )
 (func $main/convertFoobars (; 192 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  i32.const 1
  call $~lib/array/Array<FooBar>#map<ContainerClass>
 )
 (func $~lib/array/Array<ContainerClass>#__get (; 193 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  get_local $0
  i32.load
  set_local $2
  get_local $1
  get_local $2
  i32.load
  i32.const 2
  i32.shr_u
  i32.lt_u
  if (result i32)
   i32.const 0
   set_local $3
   get_local $2
   get_local $1
   i32.const 2
   i32.shl
   i32.add
   get_local $3
   i32.add
   i32.load offset=8
  else   
   unreachable
  end
 )
 (func $model_near/__near_encode_ContainerClass (; 194 ;) (type $iiv) (param $0 i32) (param $1 i32)
  get_local $0
  i32.load
  i32.const 0
  i32.ne
  if
   get_local $1
   i32.const 2368
   call $json/encoder/JSONEncoder#pushObject
   drop
   get_local $0
   i32.load
   get_local $1
   call $model_near/__near_encode_FooBar
   get_local $1
   call $json/encoder/JSONEncoder#popObject
  else   
   get_local $1
   i32.const 2368
   call $json/encoder/JSONEncoder#setNull
  end
 )
 (func $main_near/__near_encode_Array_ContainerClass (; 195 ;) (type $iiv) (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $break|0
   i32.const 0
   set_local $2
   loop $repeat|0
    get_local $2
    block $~lib/array/Array<ContainerClass>#get:length|inlined.1 (result i32)
     get_local $0
     i32.load offset=4
    end
    i32.lt_s
    i32.eqz
    br_if $break|0
    get_local $0
    get_local $2
    call $~lib/array/Array<ContainerClass>#__get
    i32.const 0
    i32.ne
    if
     get_local $1
     i32.const 0
     call $json/encoder/JSONEncoder#pushObject
     drop
     get_local $0
     get_local $2
     call $~lib/array/Array<ContainerClass>#__get
     get_local $1
     call $model_near/__near_encode_ContainerClass
     get_local $1
     call $json/encoder/JSONEncoder#popObject
    else     
     get_local $1
     i32.const 0
     call $json/encoder/JSONEncoder#setNull
    end
    get_local $2
    i32.const 1
    i32.add
    set_local $2
    br $repeat|0
    unreachable
   end
   unreachable
  end
 )
 (func $near/near.bufferWithSizeFromPtr (; 196 ;) (type $iii) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 0
  get_local $1
  i32.const 4
  i32.add
  call $~lib/internal/typedarray/TypedArray<u8>#constructor
  set_local $2
  get_local $2
  i32.load
  call $~lib/arraybuffer/ArrayBuffer#get:data
  get_local $1
  i32.store
  block $break|0
   i32.const 0
   set_local $3
   loop $repeat|0
    get_local $3
    get_local $1
    i32.lt_u
    i32.eqz
    br_if $break|0
    get_local $2
    get_local $3
    i32.const 4
    i32.add
    get_local $0
    get_local $3
    i32.add
    i32.load8_u
    call $~lib/internal/typedarray/TypedArray<u8>#__set
    get_local $3
    i32.const 1
    i32.add
    set_local $3
    br $repeat|0
    unreachable
   end
   unreachable
  end
  get_local $2
 )
 (func $near/near.bufferWithSize (; 197 ;) (type $ii) (param $0 i32) (result i32)
  get_local $0
  i32.load
  call $~lib/arraybuffer/ArrayBuffer#get:data
  get_local $0
  i32.load offset=8
  call $near/near.bufferWithSizeFromPtr
 )
 (func $main_near/near_func_convertFoobars (; 198 ;) (type $v)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  i32.const 0
  call $main_near/input_read_len
  call $~lib/internal/typedarray/TypedArray<u8>#constructor
  set_local $0
  get_local $0
  i32.load
  call $~lib/arraybuffer/ArrayBuffer#get:data
  call $main_near/input_read_into
  block (result i32)
   i32.const 16
   call $~lib/memory/memory.allocate
   set_local $1
   get_local $1
   i32.const 0
   i32.store
   get_local $1
   i32.const 0
   i32.store offset=4
   get_local $1
   i32.const 0
   i32.store8 offset=8
   get_local $1
   i32.const 0
   i32.store offset=12
   get_local $1
  end
  set_local $1
  get_local $1
  get_local $0
  i32.store
  get_local $1
  i32.const 0
  get_local $1
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#constructor
  i32.store offset=4
  get_local $1
  i32.load offset=4
  get_local $0
  i32.const 0
  call $json/decoder/JSONDecoder<__near_ArgsParser_convertFoobars>#deserialize
  get_local $1
  i32.load offset=12
  call $main/convertFoobars
  set_local $2
  block (result i32)
   i32.const 12
   call $~lib/memory/memory.allocate
   set_local $3
   get_local $3
   i32.const 1
   i32.store8
   get_local $3
   i32.const 2344
   i32.store offset=4
   get_local $3
   i32.const 176
   i32.store offset=8
   get_local $3
  end
  set_local $3
  get_local $3
  i32.const 0
  call $json/encoder/JSONEncoder#pushObject
  drop
  get_local $2
  i32.const 0
  i32.ne
  if
   get_local $3
   i32.const 2352
   call $json/encoder/JSONEncoder#pushArray
   drop
   get_local $2
   get_local $3
   call $main_near/__near_encode_Array_ContainerClass
   get_local $3
   call $json/encoder/JSONEncoder#popArray
  else   
   get_local $3
   i32.const 2352
   call $json/encoder/JSONEncoder#setNull
  end
  get_local $3
  call $json/encoder/JSONEncoder#popObject
  get_local $3
  call $json/encoder/JSONEncoder#serialize
  call $near/near.bufferWithSize
  i32.load
  call $~lib/arraybuffer/ArrayBuffer#get:data
  call $main_near/return_value
 )
 (func $test/convertFoobars (; 199 ;) (type $v)
  call $main_near/near_func_convertFoobars
 )
 (func $start (; 200 ;) (type $v)
  i32.const 56
  i32.const 0
  call $~lib/string/String#charCodeAt
  set_global $json/decoder/CHAR_0
  i32.const 96
  i32.const 0
  call $~lib/string/String#charCodeAt
  set_global $json/decoder/CHAR_9
  i32.const 104
  i32.const 0
  call $~lib/string/String#charCodeAt
  set_global $json/decoder/CHAR_A
  i32.const 112
  i32.const 0
  call $~lib/string/String#charCodeAt
  set_global $json/decoder/CHAR_A_LOWER
  get_global $HEAP_BASE
  get_global $~lib/internal/allocator/AL_MASK
  i32.add
  get_global $~lib/internal/allocator/AL_MASK
  i32.const -1
  i32.xor
  i32.and
  set_global $~lib/allocator/arena/startOffset
  get_global $~lib/allocator/arena/startOffset
  set_global $~lib/allocator/arena/offset
 )
 (func $null (; 201 ;) (type $v)
 )
)

(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $f32_f32_=>_i32 (func (param f32 f32) (result i32)))
 (type $f64_f64_=>_i32 (func (param f64 f64) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_f64 (func (result f64)))
 (type $i32_i32_i32_=>_f32 (func (param i32 i32 i32) (result f32)))
 (type $i32_f64_=>_i32 (func (param i32 f64) (result i32)))
 (type $i32_i64_=>_i32 (func (param i32 i64) (result i32)))
 (type $i32_i32_i64_=>_none (func (param i32 i32 i64)))
 (type $i32_i64_i64_i32_i64_i32_=>_i32 (func (param i32 i64 i64 i32 i64 i32) (result i32)))
 (type $i32_i64_i32_=>_none (func (param i32 i64 i32)))
 (type $i32_f32_i32_i32_=>_none (func (param i32 f32 i32 i32)))
 (type $i32_i32_=>_f32 (func (param i32 i32) (result f32)))
 (type $i32_f32_i32_=>_none (func (param i32 f32 i32)))
 (type $i32_i32_=>_f64 (func (param i32 i32) (result f64)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "Math.random" (func $~lib/bindings/dom/Math.random (result f64)))
 (import "env" "seed" (func $~lib/builtins/seed (result f64)))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $std/array/arr (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $std/array/i (mut i32) (i32.const 0))
 (global $~lib/math/random_state0_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state1_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_seeded (mut i32) (i32.const 0))
 (global $std/array/inputStabArr (mut i32) (i32.const 0))
 (global $std/array/outputStabArr (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 48960))
 (global $~started (mut i32) (i32.const 0))
 (memory $0 1)
 (data $0 (i32.const 1036) ",")
 (data $0.1 (i32.const 1048) "\02\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h")
 (data $1 (i32.const 1084) ",")
 (data $1.1 (i32.const 1096) "\02\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s")
 (data $2 (i32.const 1132) "<")
 (data $2.1 (i32.const 1144) "\02\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e")
 (data $3 (i32.const 1196) "<")
 (data $3.1 (i32.const 1208) "\02\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s")
 (data $6 (i32.const 1324) "<")
 (data $6.1 (i32.const 1336) "\02\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e")
 (data $7 (i32.const 1388) ",")
 (data $7.1 (i32.const 1400) "\02\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s")
 (data $9 (i32.const 1468) "<")
 (data $9.1 (i32.const 1480) "\02\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s")
 (data $10 (i32.const 1532) ",")
 (data $10.1 (i32.const 1544) "\02\00\00\00\18\00\00\00s\00t\00d\00/\00a\00r\00r\00a\00y\00.\00t\00s")
 (data $11 (i32.const 1580) "<")
 (data $11.1 (i32.const 1592) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s")
 (data $12 (i32.const 1644) "\1c")
 (data $12.1 (i32.const 1656) "\02\00\00\00\06\00\00\00a\00b\00c")
 (data $13 (i32.const 1676) "\1c")
 (data $13.1 (i32.const 1688) "\01\00\00\00\05\00\00\00\01\02\03\04\05")
 (data $14 (i32.const 1708) "\1c")
 (data $14.1 (i32.const 1720) "\01\00\00\00\05\00\00\00\01\01\01\04\05")
 (data $15 (i32.const 1740) "\1c")
 (data $15.1 (i32.const 1752) "\01\00\00\00\05")
 (data $16 (i32.const 1772) "\1c")
 (data $16.1 (i32.const 1784) "\01\00\00\00\05\00\00\00\01\01")
 (data $17 (i32.const 1804) "\1c")
 (data $17.1 (i32.const 1816) "\01\00\00\00\05\00\00\00\01\01\00\02\02")
 (data $18 (i32.const 1836) "\1c")
 (data $18.1 (i32.const 1848) "\01\00\00\00\05\00\00\00\01\01\00\02\02")
 (data $19 (i32.const 1868) "\1c")
 (data $19.1 (i32.const 1880) "\01\00\00\00\05\00\00\00\ff\ff\ff\ff\ff")
 (data $20 (i32.const 1900) ",")
 (data $20.1 (i32.const 1912) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $21 (i32.const 1948) ",")
 (data $21.1 (i32.const 1960) "\01\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\05")
 (data $22 (i32.const 1996) ",")
 (data $22.1 (i32.const 2008) "\01\00\00\00\14")
 (data $23 (i32.const 2044) ",")
 (data $23.1 (i32.const 2056) "\01\00\00\00\14\00\00\00\01\00\00\00\01")
 (data $24 (i32.const 2092) ",")
 (data $24.1 (i32.const 2104) "\01\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02")
 (data $25 (i32.const 2140) ",")
 (data $25.1 (i32.const 2152) "\01\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02")
 (data $26 (i32.const 2188) ",")
 (data $26.1 (i32.const 2200) "\01\00\00\00\14\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
 (data $27 (i32.const 2236) ",")
 (data $27.1 (i32.const 2248) "\01\00\00\00\14\00\00\00\00\00\00?\00\00\80?\00\00\c0?\00\00 @\00\00@@")
 (data $28 (i32.const 2284) ",")
 (data $28.1 (i32.const 2296) "\01\00\00\00\14\00\00\00\00\00\00?\00\00\80?\00\00\80?\00\00 @\00\00@@")
 (data $29 (i32.const 2332) ",")
 (data $29.1 (i32.const 2344) "\01\00\00\00\14")
 (data $30 (i32.const 2380) ",")
 (data $30.1 (i32.const 2392) "\01\00\00\00\14\00\00\00\00\00\80?\00\00\80?")
 (data $31 (i32.const 2428) ",")
 (data $31.1 (i32.const 2440) "\01\00\00\00\14\00\00\00\00\00\80?\00\00\80?\00\00\00\00\00\00\00@\00\00\00@")
 (data $32 (i32.const 2476) ",")
 (data $32.1 (i32.const 2488) "\01\00\00\00\14\00\00\00\00\00\80?\00\00\80?\00\00\00\00\00\00\00@\00\00\00@")
 (data $33 (i32.const 2524) ",")
 (data $33.1 (i32.const 2536) "\01\00\00\00\14\00\00\00\00\00\80\bf\00\00\80\bf\00\00\80\bf\00\00\80\bf\00\00\80\bf")
 (data $34 (i32.const 2572) ",")
 (data $34.1 (i32.const 2584) "\01\00\00\00\14\00\00\00\00\00\00\80\00\00\00\80\00\00\00\80\00\00\00\80\00\00\00\80")
 (data $35 (i32.const 2620) ",")
 (data $35.1 (i32.const 2632) "\02\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y")
 (data $36 (i32.const 2668) ",")
 (data $36.1 (i32.const 2680) "\01\00\00\00\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04")
 (data $37 (i32.const 2716) "\1c")
 (data $37.1 (i32.const 2728) "\01")
 (data $38 (i32.const 2748) "\1c")
 (data $38.1 (i32.const 2760) "\01")
 (data $39 (i32.const 2780) ",")
 (data $39.1 (i32.const 2792) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $40 (i32.const 2828) ",")
 (data $40.1 (i32.const 2840) "\01\00\00\00\14\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $41 (i32.const 2876) ",")
 (data $41.1 (i32.const 2888) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $42 (i32.const 2924) ",")
 (data $42.1 (i32.const 2936) "\01\00\00\00\14\00\00\00\01\00\00\00\04\00\00\00\05\00\00\00\04\00\00\00\05")
 (data $43 (i32.const 2972) ",")
 (data $43.1 (i32.const 2984) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $44 (i32.const 3020) ",")
 (data $44.1 (i32.const 3032) "\01\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05")
 (data $45 (i32.const 3068) ",")
 (data $45.1 (i32.const 3080) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $46 (i32.const 3116) ",")
 (data $46.1 (i32.const 3128) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $47 (i32.const 3164) ",")
 (data $47.1 (i32.const 3176) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $48 (i32.const 3212) ",")
 (data $48.1 (i32.const 3224) "\01\00\00\00\14\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $49 (i32.const 3260) ",")
 (data $49.1 (i32.const 3272) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $50 (i32.const 3308) ",")
 (data $50.1 (i32.const 3320) "\01\00\00\00\14\00\00\00\01\00\00\00\04\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $51 (i32.const 3356) ",")
 (data $51.1 (i32.const 3368) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $52 (i32.const 3404) ",")
 (data $52.1 (i32.const 3416) "\01\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05")
 (data $53 (i32.const 3452) ",")
 (data $53.1 (i32.const 3464) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $54 (i32.const 3500) ",")
 (data $54.1 (i32.const 3512) "\01\00\00\00\14\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $55 (i32.const 3548) ",")
 (data $55.1 (i32.const 3560) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $56 (i32.const 3596) ",")
 (data $56.1 (i32.const 3608) "\01\00\00\00\14\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $57 (i32.const 3644) ",")
 (data $57.1 (i32.const 3656) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $58 (i32.const 3692) ",")
 (data $58.1 (i32.const 3704) "\01\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $59 (i32.const 3740) ",")
 (data $59.1 (i32.const 3752) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $60 (i32.const 3788) ",")
 (data $60.1 (i32.const 3800) "\01\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05")
 (data $61 (i32.const 3836) ",")
 (data $61.1 (i32.const 3848) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $62 (i32.const 3884) ",")
 (data $62.1 (i32.const 3896) "\01\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05")
 (data $63 (i32.const 3932) ",")
 (data $63.1 (i32.const 3944) "\01\00\00\00\14\00\00\00\03\00\00\00\05\00\00\00\07\00\00\00\t\00\00\00\0b")
 (data $64 (i32.const 3980) "\1c")
 (data $64.1 (i32.const 3992) "\01\00\00\00\0c\00\00\00\07\00\00\00\t\00\00\00\0b")
 (data $65 (i32.const 4012) "\1c")
 (data $65.1 (i32.const 4024) "\01\00\00\00\08\00\00\00\07\00\00\00\t")
 (data $66 (i32.const 4044) ",")
 (data $66.1 (i32.const 4056) "\01\00\00\00\10\00\00\00\05\00\00\00\07\00\00\00\t\00\00\00\0b")
 (data $67 (i32.const 4092) "\1c")
 (data $67.1 (i32.const 4104) "\01\00\00\00\08\00\00\00\t\00\00\00\0b")
 (data $68 (i32.const 4124) "\1c")
 (data $68.1 (i32.const 4136) "\01\00\00\00\08\00\00\00\07\00\00\00\t")
 (data $69 (i32.const 4156) "\1c")
 (data $69.1 (i32.const 4168) "\01\00\00\00\08\00\00\00\07\00\00\00\t")
 (data $70 (i32.const 4188) "\1c")
 (data $70.1 (i32.const 4200) "\01\00\00\00\04\00\00\00\00\01\02\03")
 (data $71 (i32.const 4220) "\1c")
 (data $71.1 (i32.const 4232) "\01\00\00\00\08\00\00\00\00\01\02\03\04\05\06\07")
 (data $72 (i32.const 4252) ",")
 (data $72.1 (i32.const 4264) "\01\00\00\00\11\00\00\00\00\01\02\03\04\05\06\07\08\t\n\0b\0c\r\0e\0f\10")
 (data $73 (i32.const 4300) ",")
 (data $73.1 (i32.const 4312) "\01\00\00\00\0e\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06")
 (data $74 (i32.const 4348) ",")
 (data $74.1 (i32.const 4360) "\01\00\00\00\10\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07")
 (data $75 (i32.const 4396) ",")
 (data $75.1 (i32.const 4408) "\01\00\00\00\12\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\08")
 (data $76 (i32.const 4444) "\1c")
 (data $76.1 (i32.const 4456) "\01\00\00\00\04\00\00\00\00\00\c0\7f")
 (data $77 (i32.const 4476) "\1c")
 (data $77.1 (i32.const 4488) "\01\00\00\00\08")
 (data $77.2 (i32.const 4502) "\f8\7f")
 (data $78 (i32.const 4508) ",")
 (data $78.1 (i32.const 4520) "\01\00\00\00\10\00\00\00\02\00\00\00\05\00\00\00\t\00\00\00\02")
 (data $79 (i32.const 4556) "\1c")
 (data $79.1 (i32.const 4568) "\01\00\00\00\04\00\00\00\00\00\c0\7f")
 (data $80 (i32.const 4588) "\1c")
 (data $80.1 (i32.const 4600) "\01\00\00\00\08")
 (data $80.2 (i32.const 4614) "\f8\7f")
 (data $81 (i32.const 4620) ",")
 (data $81.1 (i32.const 4632) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $82 (i32.const 4668) ",")
 (data $82.1 (i32.const 4680) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $83 (i32.const 4716) "\1c")
 (data $83.1 (i32.const 4728) "\01")
 (data $84 (i32.const 4748) ",")
 (data $84.1 (i32.const 4760) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $85 (i32.const 4796) "\1c")
 (data $85.1 (i32.const 4808) "\01")
 (data $86 (i32.const 4828) ",")
 (data $86.1 (i32.const 4840) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $87 (i32.const 4876) ",")
 (data $87.1 (i32.const 4888) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $88 (i32.const 4924) "\1c")
 (data $88.1 (i32.const 4936) "\01\00\00\00\0c\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $89 (i32.const 4956) "\1c")
 (data $89.1 (i32.const 4968) "\01\00\00\00\08\00\00\00\01\00\00\00\02")
 (data $90 (i32.const 4988) ",")
 (data $90.1 (i32.const 5000) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $91 (i32.const 5036) "\1c")
 (data $91.1 (i32.const 5048) "\01\00\00\00\08\00\00\00\03\00\00\00\04")
 (data $92 (i32.const 5068) "\1c")
 (data $92.1 (i32.const 5080) "\01\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\05")
 (data $93 (i32.const 5100) ",")
 (data $93.1 (i32.const 5112) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $94 (i32.const 5148) "\1c")
 (data $94.1 (i32.const 5160) "\01\00\00\00\04\00\00\00\01")
 (data $95 (i32.const 5180) ",")
 (data $95.1 (i32.const 5192) "\01\00\00\00\10\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $96 (i32.const 5228) ",")
 (data $96.1 (i32.const 5240) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $97 (i32.const 5276) "\1c")
 (data $97.1 (i32.const 5288) "\01\00\00\00\04\00\00\00\05")
 (data $98 (i32.const 5308) ",")
 (data $98.1 (i32.const 5320) "\01\00\00\00\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04")
 (data $99 (i32.const 5356) ",")
 (data $99.1 (i32.const 5368) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $100 (i32.const 5404) "\1c")
 (data $100.1 (i32.const 5416) "\01\00\00\00\08\00\00\00\04\00\00\00\05")
 (data $101 (i32.const 5436) "\1c")
 (data $101.1 (i32.const 5448) "\01\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03")
 (data $102 (i32.const 5468) ",")
 (data $102.1 (i32.const 5480) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $103 (i32.const 5516) "\1c")
 (data $103.1 (i32.const 5528) "\01\00\00\00\04\00\00\00\04")
 (data $104 (i32.const 5548) ",")
 (data $104.1 (i32.const 5560) "\01\00\00\00\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\05")
 (data $105 (i32.const 5596) ",")
 (data $105.1 (i32.const 5608) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $106 (i32.const 5644) "\1c")
 (data $106.1 (i32.const 5656) "\01\00\00\00\04\00\00\00\01")
 (data $107 (i32.const 5676) ",")
 (data $107.1 (i32.const 5688) "\01\00\00\00\10\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $108 (i32.const 5724) ",")
 (data $108.1 (i32.const 5736) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $109 (i32.const 5772) "\1c")
 (data $109.1 (i32.const 5784) "\01")
 (data $110 (i32.const 5804) ",")
 (data $110.1 (i32.const 5816) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $111 (i32.const 5852) ",")
 (data $111.1 (i32.const 5864) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $112 (i32.const 5900) "\1c")
 (data $112.1 (i32.const 5912) "\01")
 (data $113 (i32.const 5932) ",")
 (data $113.1 (i32.const 5944) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $114 (i32.const 5980) ",")
 (data $114.1 (i32.const 5992) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $115 (i32.const 6028) "\1c")
 (data $115.1 (i32.const 6040) "\01")
 (data $116 (i32.const 6060) ",")
 (data $116.1 (i32.const 6072) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $117 (i32.const 6108) ",")
 (data $117.1 (i32.const 6120) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $118 (i32.const 6156) "\1c")
 (data $118.1 (i32.const 6168) "\01")
 (data $119 (i32.const 6188) ",")
 (data $119.1 (i32.const 6200) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $120 (i32.const 6236) ",")
 (data $120.1 (i32.const 6248) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $121 (i32.const 6284) "\1c")
 (data $121.1 (i32.const 6296) "\01")
 (data $122 (i32.const 6316) ",")
 (data $122.1 (i32.const 6328) "\01\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data $123 (i32.const 6364) "\1c")
 (data $123.1 (i32.const 6376) "\01")
 (data $124 (i32.const 6396) "|")
 (data $124.1 (i32.const 6408) "\02\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y")
 (data $125 (i32.const 6524) "|")
 (data $125.1 (i32.const 6536) "\02\00\00\00^\00\00\00U\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00\'\00n\00u\00l\00l\00\'\00 \00(\00n\00o\00t\00 \00a\00s\00s\00i\00g\00n\00e\00d\00 \00o\00r\00 \00f\00a\00i\00l\00e\00d\00 \00c\00a\00s\00t\00)")
 (data $126 (i32.const 6652) "\1c")
 (data $126.1 (i32.const 6664) "\0e\00\00\00\08\00\00\00\01")
 (data $127 (i32.const 6684) "\1c")
 (data $127.1 (i32.const 6696) "\0e\00\00\00\08\00\00\00\02")
 (data $128 (i32.const 6716) "\1c")
 (data $128.1 (i32.const 6728) "\0e\00\00\00\08\00\00\00\03")
 (data $129 (i32.const 6748) "\1c")
 (data $129.1 (i32.const 6760) "\0e\00\00\00\08\00\00\00\04")
 (data $130 (i32.const 6780) "\1c")
 (data $130.1 (i32.const 6792) "\0e\00\00\00\08\00\00\00\05")
 (data $131 (i32.const 6812) "\1c")
 (data $131.1 (i32.const 6824) "\0e\00\00\00\08\00\00\00\06")
 (data $132 (i32.const 6844) ",")
 (data $132.1 (i32.const 6856) "\01\00\00\00\10\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03")
 (data $133 (i32.const 6892) "\1c")
 (data $133.1 (i32.const 6904) "\0e\00\00\00\08\00\00\00\07")
 (data $134 (i32.const 6924) "\1c")
 (data $134.1 (i32.const 6936) "\0e\00\00\00\08\00\00\00\08")
 (data $135 (i32.const 6956) "\1c")
 (data $135.1 (i32.const 6968) "\0e\00\00\00\08\00\00\00\t")
 (data $136 (i32.const 6988) "\1c")
 (data $136.1 (i32.const 7000) "\0e\00\00\00\08\00\00\00\n")
 (data $137 (i32.const 7020) "\1c")
 (data $137.1 (i32.const 7032) "\0e\00\00\00\08\00\00\00\0b")
 (data $138 (i32.const 7052) "\1c")
 (data $138.1 (i32.const 7064) "\0e\00\00\00\08\00\00\00\0c")
 (data $139 (i32.const 7084) "\1c")
 (data $139.1 (i32.const 7096) "\0e\00\00\00\08\00\00\00\r")
 (data $140 (i32.const 7116) "\1c")
 (data $140.1 (i32.const 7128) "\0e\00\00\00\08\00\00\00\0e")
 (data $141 (i32.const 7148) "\1c")
 (data $141.1 (i32.const 7160) "\0e\00\00\00\08\00\00\00\0f")
 (data $142 (i32.const 7180) "\1c")
 (data $142.1 (i32.const 7192) "\0e\00\00\00\08\00\00\00\10")
 (data $143 (i32.const 7212) "\1c")
 (data $143.1 (i32.const 7224) "\0e\00\00\00\08\00\00\00\11")
 (data $144 (i32.const 7244) "\1c")
 (data $144.1 (i32.const 7256) "\0e\00\00\00\08\00\00\00\12")
 (data $145 (i32.const 7276) "\1c")
 (data $145.1 (i32.const 7288) "\0e\00\00\00\08\00\00\00\13")
 (data $146 (i32.const 7308) "\1c")
 (data $146.1 (i32.const 7320) "\0e\00\00\00\08\00\00\00\14")
 (data $147 (i32.const 7340) "\1c")
 (data $147.1 (i32.const 7352) "\0f\00\00\00\08\00\00\00\15")
 (data $148 (i32.const 7372) "\1c")
 (data $148.1 (i32.const 7384) "\0f\00\00\00\08\00\00\00\16")
 (data $149 (i32.const 7404) "\1c")
 (data $149.1 (i32.const 7416) "\0f\00\00\00\08\00\00\00\17")
 (data $150 (i32.const 7436) "\1c")
 (data $150.1 (i32.const 7448) "\0f\00\00\00\08\00\00\00\18")
 (data $151 (i32.const 7468) "\1c")
 (data $151.1 (i32.const 7480) "\0f\00\00\00\08\00\00\00\19")
 (data $152 (i32.const 7500) "|")
 (data $152.1 (i32.const 7512) "\02\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006")
 (data $153 (i32.const 7628) "<")
 (data $153.1 (i32.const 7640) "\02\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s")
 (data $154 (i32.const 7692) "\1c")
 (data $154.1 (i32.const 7704) "\02\00\00\00\02\00\00\000")
 (data $155 (i32.const
 (data $156 (i32.const 8124) "\1c\04")
 (data $156.1 (i32.const 8136) "\02\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f")
 (data $157 (i32.const 9180) "\\")
 (data $157.1 (i32.const 9192) "\02\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data $158 (i32.const 9276) "\1c")
 (data $158.1 (i32.const 9288) "\11\00\00\00\08\00\00\00\1a")
 (data $159 (i32.const 9308) "\1c")
 (data $159.1 (i32.const 9320) "\12\00\00\00\08\00\00\00\1b")
 (data $160 (i32.const 9340) "\1c")
 (data $160.1 (i32.const 9352) "\13\00\00\00\08\00\00\00\1c")
 (data $161 (i32.const 9372) "\1c")
 (data $161.1 (i32.const 9384) "\13\00\00\00\08\00\00\00\1d")
 (data $162 (i32.const 9404) "\1c")
 (data $162.1 (i32.const 9416) "\13\00\00\00\08\00\00\00\1e")
 (data $163 (i32.const 9436) "\1c")
 (data $163.1 (i32.const 9448) "\0e\00\00\00\08\00\00\00\1f")
 (data $164 (i32.const 9468) "\1c")
 (data $164.1 (i32.const 9480) "\0e\00\00\00\08\00\00\00 ")
 (data $165 (i32.const 9500) "\1c")
 (data $165.1 (i32.const 9512) "\0e\00\00\00\08\00\00\00!")
 (data $166 (i32.const 9532) "\1c")
 (data $166.1 (i32.const 9544) "\0e\00\00\00\08\00\00\00\"")
 (data $167 (i32.const 9564) "\1c")
 (data $167.1 (i32.const 9576) "\14\00\00\00\08\00\00\00#")
 (data $168 (i32.const 9596) "\1c")
 (data $168.1 (i32.const 9608) "\14\00\00\00\08\00\00\00$")
 (data $169 (i32.const 9628) "\1c")
 (data $169.1 (i32.const 9640) "\15\00\00\00\08\00\00\00%")
 (data $170 (i32.const 9660) "\1c")
 (data $170.1 (i32.const 9672) "\15\00\00\00\08\00\00\00&")
 (data $171 (i32.const 9692) "\1c")
 (data $171.1 (i32.const 9704) "\14\00\00\00\08\00\00\00\'")
 (data $172 (i32.const 9724) "\1c")
 (data $172.1 (i32.const 9736) "\14\00\00\00\08\00\00\00(")
 (data $173 (i32.const 9756) "\1c")
 (data $173.1 (i32.const 9768) "\14\00\00\00\08\00\00\00)")
 (data $174 (i32.const 9788) "\1c")
 (data $174.1 (i32.const 9800) "\14\00\00\00\08\00\00\00*")
 (data $175 (i32.const 9820) "\1c")
 (data $175.1 (i32.const 9832) "\14\00\00\00\08\00\00\00+")
 (data $176 (i32.const 9852) "\1c")
 (data $176.1 (i32.const 9864) "\15\00\00\00\08\00\00\00,")
 (data $177 (i32.const 9884) "\1c")
 (data $177.1 (i32.const 9896) "\15\00\00\00\08\00\00\00-")
 (data $178 (i32.const 9916) "\1c")
 (data $178.1 (i32.const 9928) "\14\00\00\00\08\00\00\00.")
 (data $179 (i32.const 9948) "\1c")
 (data $179.1 (i32.const 9960) "\14\00\00\00\08\00\00\00/")
 (data $180 (i32.const 9980) "\1c")
 (data $180.1 (i32.const 9992) "\14\00\00\00\08\00\00\000")
 (data $181 (i32.const 10012) "\bc")
 (data $181.1 (i32.const 10024) "\02\00\00\00\ac\00\00\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\000\001\002\003\004\005\006\007\008\009\00_\00-\00,\00.\00+\00/\00\\\00[\00]\00{\00}\00(\00)\00<\00>\00*\00&\00$\00%\00^\00@\00#\00!\00?")
 (data $182 (i32.const 10204) "\1c")
 (data $182.1 (i32.const 10216) "\01\00\00\00\0c\00\00\00\00\00\00@\00\00\80\bf")
 (data $183 (i32.const 10236) "\1c")
 (data $183.1 (i32.const 10248) "\18\00\00\00\08\00\00\001")
 (data $184 (i32.const 10268) "\1c")
 (data $184.1 (i32.const 10280) "\01\00\00\00\0c\00\00\00\00\00\80\bf\00\00\00\00\00\00\00@")
 (data $185 (i32.const 10300) "<")
 (data $185.1 (i32.const 10312) "\01\00\00\00 \00\00\00\00\00\80?\00\00\c0\7f\00\00\80\ff\00\00\80?\00\00\00\00\00\00\80\bf\00\00\00\c0\00\00\80\7f")
 (data $186 (i32.const 10364) "<")
 (data $186.1 (i32.const 10376) "\01\00\00\00 \00\00\00\00\00\80\ff\00\00\00\c0\00\00\80\bf\00\00\00\00\00\00\80?\00\00\80?\00\00\80\7f\00\00\c0\7f")
 (data $187 (i32.const 10428) "\\")
 (data $187.1 (i32.const 10440) "\01\00\00\00@")
 (data $187.2 (i32.const 10454) "\f0?\00\00\00\00\00\00\f8\7f\00\00\00\00\00\00\f0\ff\05\00\00\00\00\00\f0?")
 (data $187.3 (i32.const 10494) "\f0\bf\00\00\00\00\00\00\00\c0\00\00\00\00\00\00\f0\7f")
 (data $188 (i32.const 10524) "\1c")
 (data $188.1 (i32.const 10536) "\19\00\00\00\08\00\00\002")
 (data $189 (i32.const 10556) "\\")
 (data $189.1 (i32.const 10568) "\01\00\00\00@")
 (data $189.2 (i32.const 10582) "\f0\ff\00\00\00\00\00\00\00\c0\00\00\00\00\00\00\f0\bf")
 (data $189.3 (i32.const 10614) "\f0?\05\00\00\00\00\00\f0?\00\00\00\00\00\00\f0\7f\00\00\00\00\00\00\f8\7f")
 (data $190 (i32.const 10652) ",")
 (data $190.1 (i32.const 10664) "\01\00\00\00\14\00\00\00\01\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\02")
 (data $191 (i32.const 10700) "\1c")
 (data $191.1 (i32.const 10712) "\1a\00\00\00\08\00\00\003")
 (data $192 (i32.const 10732) ",")
 (data $192.1 (i32.const 10744) "\01\00\00\00\14\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\01\00\00\00\02")
 (data $193 (i32.const 10780) ",")
 (data $193.1 (i32.const 10792) "\01\00\00\00\14\00\00\00\01\00\00\00\ff\ff\ff\ff\fe\ff\ff\ff\00\00\00\00\02")
 (data $194 (i32.const 10828) "\1c")
 (data $194.1 (i32.const 10840) "\1b\00\00\00\08\00\00\004")
 (data $195 (i32.const 10860) ",")
 (data $195.1 (i32.const 10872) "\01\00\00\00\14\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff")
 (data $196 (i32.const 10908) "\1c")
 (data $196.1 (i32.const 10920) "\01")
 (data $197 (i32.const 10940) "\1c")
 (data $197.1 (i32.const 10952) "\01\00\00\00\04\00\00\00\01")
 (data $198 (i32.const 10972) "\1c")
 (data $198.1 (i32.const 10984) "\01\00\00\00\08\00\00\00\02\00\00\00\01")
 (data $199 (i32.const 11004) ",")
 (data $199.1 (i32.const 11016) "\01\00\00\00\10\00\00\00\03\00\00\00\02\00\00\00\01")
 (data $200 (i32.const 11052) ",")
 (data $200.1 (i32.const 11064) "\01\00\00\00\10\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03")
 (data $201 (i32.const 11100) "\1c")
 (data $201.1 (i32.const 11112) "\1a\00\00\00\08\00\00\005")
 (data $202 (i32.const 11132) "\1c")
 (data $202.1 (i32.const 11144) "\01\00\00\00\04\00\00\00\01")
 (data $203 (i32.const 11164) "\1c")
 (data $203.1 (i32.const 11176) "\01\00\00\00\08\00\00\00\01\00\00\00\02")
 (data $204 (i32.const 11196) "\1c")
 (data $204.1 (i32.const 11208) "\1c\00\00\00\08\00\00\006")
 (data $205 (i32.const 11228) "\1c")
 (data $205.1 (i32.const 11240) "\1a\00\00\00\08\00\00\007")
 (data $206 (i32.const 11260) "\1c")
 (data $206.1 (i32.const 11272) "\1a\00\00\00\08\00\00\008")
 (data $207 (i32.const 11292) "\1c")
 (data $207.1 (i32.const 11304) "\1a\00\00\00\08\00\00\009")
 (data $208 (i32.const 11324) "\1c")
 (data $208.1 (i32.const 11336) "\1a\00\00\00\08\00\00\00:")
 (data $209 (i32.const 11356) "\1c")
 (data $209.1 (i32.const 11368) "\1e\00\00\00\08\00\00\00;")
 (data $210 (i32.const 11388) "\1c")
 (data $210.1 (i32.const 11400) "!\00\00\00\08\00\00\00<")
 (data $211 (i32.const 11420) "\1c")
 (data $211.1 (i32.const 11432) "\02\00\00\00\02\00\00\00a")
 (data $212 (i32.const 11452) "\1c")
 (data $212.1 (i32.const 11464) "\02\00\00\00\02\00\00\00b")
 (data $213 (i32.const 11484) "\1c")
 (data $213.1 (i32.const 11496) "\02\00\00\00\04\00\00\00a\00b")
 (data $214 (i32.const 11516) "\1c")
 (data $214.1 (i32.const 11528) "\02\00\00\00\04\00\00\00b\00a")
 (data $215 (i32.const 11548) "\1c")
 (data $215.1 (i32.const 11560) "\02")
 (data $216 (i32.const 11580) ",")
 (data $216.1 (i32.const 11592) "\01\00\00\00\1c\00\00\00\b0,\00\00\d0,\00\00\b0,\00\00\f0,\00\00\10-\00\000-")
 (data $217 (i32.const 11628) ",")
 (data $217.1 (i32.const 11640) "\01\00\00\00\1c\00\00\000-\00\00\b0,\00\00\b0,\00\00\f0,\00\00\d0,\00\00\10-")
 (data $218 (i32.const 11676) "\1c")
 (data $218.1 (i32.const 11688) "#\00\00\00\08\00\00\00=")
 (data $219 (i32.const 11708) "\1c")
 (data $219.1 (i32.const 11720) "$\00\00\00\08\00\00\00>")
 (data $220 (i32.const 11740) "\1c")
 (data $220.1 (i32.const 11752) "\01\00\00\00\02\00\00\00\01")
 (data $221 (i32.const 11772) "\1c")
 (data $221.1 (i32.const 11784) "\02\00\00\00\08\00\00\00t\00r\00u\00e")
 (data $222 (i32.const 11804) "\1c")
 (data $222.1 (i32.const 11816) "\02\00\00\00\n\00\00\00f\00a\00l\00s\00e")
 (data $223 (i32.const 11836) "\1c")
 (data $223.1 (i32.const 11848) "\02\00\00\00\02\00\00\00,")
 (data $224 (i32.const 11868) ",")
 (data $224.1 (i32.const 11880) "\02\00\00\00\14\00\00\00t\00r\00u\00e\00,\00f\00a\00l\00s\00e")
 (data $225 (i32.const 11916) "\1c")
 (data $225.1 (i32.const 11928) "\01\00\00\00\0c\00\00\00\01\00\00\00\fe\ff\ff\ff\fd\ff\ff\ff")
 (data $226 (i32.const 11948) "\1c")
 (data $226.1 (i32.const 11960) "\02\00\00\00\n\00\00\001\00-\002\00-\003")
 (data $227 (i32.const 11980) "\1c")
 (data $227.1 (i32.const 11992) "\01\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03")
 (data $228 (i32.const 12012) "\1c")
 (data $228.1 (i32.const 12024) "\02\00\00\00\02\00\00\00-")
 (data $229 (i32.const 12044) "\1c")
 (data $229.1 (i32.const 12056) "\01\00\00\00\08\00\00\00\00\00\00\80\00\00\00\80")
 (data $230 (i32.const 12076) "\1c")
 (data $230.1 (i32.const 12088) "\02\00\00\00\04\00\00\00_\00_")
 (data $231 (i32.const 12108) "L")
 (data $231.1 (i32.const 12120) "\02\00\00\000\00\00\00-\002\001\004\007\004\008\003\006\004\008\00_\00_\00-\002\001\004\007\004\008\003\006\004\008")
 (data $232 (i32.const 12188) "L")
 (data $232.1 (i32.const 12200) "\01\00\00\000")
 (data $232.2 (i32.const 12222) "\f0?\00\00\00\00\00\00\00\c0\00\00\00\00\00\00\f8\7f\00\00\00\00\00\00\f0\ff\00\00\00\00\00\00\f0\7f")
 (data $233 (i32.const 12268) "\1c")
 (data $233.1 (i32.const 12280) "\02\00\00\00\04\00\00\00,\00 ")
 (data $234 (i32.const 12300) "\1c")
 (data $234.1 (i32.const 12312) "\02\00\00\00\06\00\00\000\00.\000")
 (data $235 (i32.const 12332) "\1c")
 (data $235.1 (i32.const 12344) "\02\00\00\00\06\00\00\00N\00a\00N")
 (data $236 (i32.const 12364) ",")
 (data $236.1 (i32.const 12376) "\02\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y")
 (data $237 (i32.const 12412) ",")
 (data $237.1 (i32.const 12424) "\02\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y")
 (data $239 (i32.const 12520) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\rXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data $240 (i32.const 13216) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\r\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data $241 (i32.const 13392) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data $242 (i32.const 13436) "l")
 (data $242.1 (i32.const 13448) "\02\00\00\00P\00\00\000\00.\000\00,\00 \001\00.\000\00,\00 \00-\002\00.\000\00,\00 \00N\00a\00N\00,\00 \00-\00I\00n\00f\00i\00n\00i\00t\00y\00,\00 \00I\00n\00f\00i\00n\00i\00t\00y")
 (data $243 (i32.const 13548) "\1c")
 (data $243.1 (i32.const 13560) "\02\00\00\00\02\00\00\001")
 (data $244 (i32.const 13580) "\1c")
 (data $244.1 (i32.const 13592) "\01\00\00\00\0c\00\00\000-\00\00\005")
 (data $245 (i32.const 13612) "<")
 (data $245.1 (i32.const 13624) "\02\00\00\00\1e\00\00\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]")
 (data $246 (i32.const 13676) "\\")
 (data $246.1 (i32.const 13688) "\02\00\00\00@\00\00\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]\00,\00,\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]")
 (data $247 (i32.const 13772) "\\")
 (data $247.1 (i32.const 13784) "\02\00\00\00>\00\00\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]\00,\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]")
 (data $248 (i32.const 13868) "\1c")
 (data $248.1 (i32.const 13880) "\01")
 (data $249 (i32.const 13900) "\1c")
 (data $249.1 (i32.const 13912) "\01\00\00\00\04\00\00\00\01")
 (data $250 (i32.const 13932) "\1c")
 (data $250.1 (i32.const 13944) "\01\00\00\00\08\00\00\00\01\00\00\00\02")
 (data $251 (i32.const 13964) ",")
 (data $251.1 (i32.const 13976) "\01\00\00\00\10\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03")
 (data $252 (i32.const 14012) "\1c")
 (data $252.1 (i32.const 14024) "\02\00\00\00\06\00\00\001\00,\002")
 (data $253 (i32.const 14044) ",")
 (data $253.1 (i32.const 14056) "\02\00\00\00\0e\00\00\000\00,\001\00,\002\00,\003")
 (data $254 (i32.const 14092) "\1c")
 (data $254.1 (i32.const 14104) "\01\00\00\00\03\00\00\00\01\ff")
 (data $255 (i32.const 14124) "\1c")
 (data $255.1 (i32.const 14136) "\02\00\00\00\0c\00\00\001\00,\00-\001\00,\000")
 (data $256 (i32.const 14156) "\1c")
 (data $256.1 (i32.const 14168) "\01\00\00\00\03\00\00\00\80\81\80")
 (data $257 (i32.const 14188) ",")
 (data $257.1 (i32.const 14200) "\02\00\00\00\1c\00\00\00-\001\002\008\00,\00-\001\002\007\00,\00-\001\002\008")
 (data $258 (i32.const 14236) "\1c")
 (data $258.1 (i32.const 14248) "\01\00\00\00\06\00\00\00\01\00\ff\ff")
 (data $259 (i32.const 14268) ",")
 (data $259.1 (i32.const 14280) "\02\00\00\00\12\00\00\001\00,\006\005\005\003\005\00,\000")
 (data $260 (i32.const 14316) "\1c")
 (data $260.1 (i32.const 14328) "\01\00\00\00\04\00\00\00\00\80\01\ff")
 (data $261 (i32.const 14348) ",")
 (data $261.1 (i32.const 14360) "\02\00\00\00\16\00\00\00-\003\002\007\006\008\00,\00-\002\005\005")
 (data $262 (i32.const 14396) "\1c")
 (data $262.1 (i32.const 14408) "\01\00\00\00\08\00\00\00\00\00\00\80\80\ff\ff\ff")
 (data $263 (i32.const 14428) "<")
 (data $263.1 (i32.const 14440) "\02\00\00\00 \00\00\00-\002\001\004\007\004\008\003\006\004\008\00,\00-\001\002\008")
 (data $264 (i32.const 14492) ",")
 (data $264.1 (i32.const 14504) "\01\00\00\00\18\00\00\00\01\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff")
 (data $265 (i32.const 14540) "L")
 (data $265.1 (i32.const 14552) "\02\00\00\000\00\00\001\00,\001\008\004\004\006\007\004\004\000\007\003\007\000\009\005\005\001\006\001\005\00,\000")
 (data $266 (i32.const 14620) "<")
 (data $266.1 (i32.const 14632) "\01\00\00\00(\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff@Eu\c3*\9d\fb\ff\00\00\00\00\00\00\00\80\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\7f")
 (data $267 (i32.const 14684) "\9c")
 (data $267.1 (i32.const 14696) "\02\00\00\00~\00\00\00-\001\00,\00-\001\002\003\004\005\006\007\008\009\000\001\002\003\004\005\006\00,\00-\009\002\002\003\003\007\002\000\003\006\008\005\004\007\007\005\008\000\008\00,\000\00,\009\002\002\003\003\007\002\000\003\006\008\005\004\007\007\005\008\000\007")
 (data $268 (i32.const 14844) ",")
 (data $268.1 (i32.const 14856) "\01\00\00\00\1c\00\00\000-\00\00\b0,\00\00\b0,\00\00\f0,\00\00\d0,\00\00\10-")
 (data $269 (i32.const 14892) ",")
 (data $269.1 (i32.const 14904) "\02\00\00\00\1a\00\00\00,\00a\00,\00a\00,\00a\00b\00,\00b\00,\00b\00a\00,")
 (data $270 (i32.const 14940) "\1c")
 (data $270.1 (i32.const 14952) "\02\00\00\00\02\00\00\002")
 (data $271 (i32.const 14972) "\1c")
 (data $271.1 (i32.const 14984) "\02\00\00\00\02\00\00\004")
 (data $272 (i32.const 15004) ",")
 (data $272.1 (i32.const 15016) "\01\00\00\00\10\00\00\00\005\00\00p:\00\00\00\00\00\00\90:")
 (data $273 (i32.const 15052) "\1c")
 (data $273.1 (i32.const 15064) "\02\00\00\00\0c\00\00\001\00,\002\00,\00,\004")
 (data $274 (i32.const 15084) "\1c")
 (data $274.1 (i32.const 15096) "\01\00\00\00\08\00\00\00\01\00\00\00\02")
 (data $275 (i32.const 15116) "\1c")
 (data $275.1 (i32.const 15128) "\01\00\00\00\08\00\00\00\03\00\00\00\04")
 (data $276 (i32.const 15148) ",")
 (data $276.1 (i32.const 15160) "\02\00\00\00\0e\00\00\001\00,\002\00,\003\00,\004")
 (data $277 (i32.const 15196) "\1c")
 (data $277.1 (i32.const 15208) "\01\00\00\00\02\00\00\00\01\02")
 (data $278 (i32.const 15228) "\1c")
 (data $278.1 (i32.const 15240) "\01\00\00\00\02\00\00\00\03\04")
 (data $279 (i32.const 15260) "\1c")
 (data $279.1 (i32.const 15272) "\01\00\00\00\04\00\00\00\01")
 (data $280 (i32.const 15292) "\1c")
 (data $280.1 (i32.const 15304) "\01\00\00\00\04")
 (data $281 (i32.const 15324) "\1c")
 (data $281.1 (i32.const 15336) "\01\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03")
 (data $282 (i32.const 15356) "\1c")
 (data $282.1 (i32.const 15368) "\01\00\00\00\0c\00\00\00\04\00\00\00\05\00\00\00\06")
 (data $283 (i32.const 15388) "\1c")
 (data $283.1 (i32.const 15400) "\01\00\00\00\0c\00\00\00\07\00\00\00\08\00\00\00\t")
 (data $284 (i32.const 15420) "\1c")
 (data $284.1 (i32.const 15432) "\02\00\00\00\06\00\00\00o\00n\00e")
 (data $285 (i32.const 15452) "\1c")
 (data $285.1 (i32.const 15464) "\01\00\00\00\04\00\00\00P<")
 (data $286 (i32.const 15484) "\1c")
 (data $286.1 (i32.const 15496) "\02\00\00\00\06\00\00\00t\00w\00o")
 (data $287 (i32.const 15516) "\1c")
 (data $287.1 (i32.const 15528) "\02\00\00\00\n\00\00\00t\00h\00r\00e\00e")
 (data $288 (i32.const 15548) "\1c")
 (data $288.1 (i32.const 15560) "\01\00\00\00\0c\00\00\00\90<\00\00\00\00\00\00\b0<")
 (data $289 (i32.const 15580) "\1c")
 (data $289.1 (i32.const 15592) "\02\00\00\00\08\00\00\00f\00o\00u\00r")
 (data $290 (i32.const 15612) "\1c")
 (data $290.1 (i32.const 15624) "\02\00\00\00\08\00\00\00f\00i\00v\00e")
 (data $291 (i32.const 15644) "\1c")
 (data $291.1 (i32.const 15656) "\02\00\00\00\06\00\00\00s\00i\00x")
 (data $292 (i32.const 15676) "\1c")
 (data $292.1 (i32.const 15688) "\01\00\00\00\0c\00\00\00\f0<\00\00\10=\00\000=")
 (data $293 (i32.const 15708) "\1c")
 (data $293.1 (i32.const 15720) "\02\00\00\00\n\00\00\00s\00e\00v\00e\00n")
 (data $294 (i32.const 15740) "\1c")
 (data $294.1 (i32.const 15752) "\01\00\00\00\04\00\00\00p=")
 (data $295 (i32.const 15772) "<")
 (data $295.1 (i32.const 15784) "\01\00\00\00 \00\00\00P<\00\00\90<\00\00\00\00\00\00\b0<\00\00\f0<\00\00\10=\00\000=\00\00p=")
 (data $296 (i32.const 15836) "\1c")
 (data $296.1 (i32.const 15848) "\01")
 (data $297 (i32.const 15868) "\1c")
 (data $297.1 (i32.const 15880) "\01")
 (data $298 (i32.const 15900) "\1c")
 (data $298.1 (i32.const 15912) "\01\00\00\00\04\00\00\00\01")
 (data $299 (i32.const 15932) "\1c")
 (data $299.1 (i32.const 15944) "\01\00\00\00\04\00\00\00\02")
 (data $300 (i32.const 15964) "\1c")
 (data $300.1 (i32.const 15976) ".\00\00\00\08\00\00\00?")
 (data $301 (i32.const 16000) "/\00\00\00 \00\00\00 \00\00\00 \00\00\00\00\00\00\00\02\t\00\00 \00\00\00A\00\00\00B\00\00\00\02\01\00\00\02\19\00\00\02A\00\00\82\00\00\00\02\1a\00\00\02a")
 (data $301.1 (i32.const 16068) "\02A")
 (data $301.2 (i32.const 16092) " \00\00\00\02A")
 (data $301.3 (i32.const 16120) "\02A\00\00\00\00\00\00 \00\00\00\02A\00\00\00\00\00\00\02a")
 (data $301.4 (i32.const 16152) "B\00\00\00B\08\00\00\82\08\00\00\02\02\00\00\02\n\00\00\02A\00\00\02A\00\00\02A\00\00\02A")
 (table $0 64 64 funcref)
 (elem $0 (i32.const 1) $start:std/array~anonymous|0 $start:std/array~anonymous|1 $start:std/array~anonymous|2 $start:std/array~anonymous|3 $start:std/array~anonymous|2 $start:std/array~anonymous|5 $start:std/array~anonymous|0 $start:std/array~anonymous|1 $start:std/array~anonymous|2 $start:std/array~anonymous|5 $start:std/array~anonymous|10 $start:std/array~anonymous|11 $start:std/array~anonymous|12 $start:std/array~anonymous|13 $start:std/array~anonymous|14 $start:std/array~anonymous|15 $start:std/array~anonymous|16 $start:std/array~anonymous|17 $start:std/array~anonymous|18 $start:std/array~anonymous|19 $start:std/array~anonymous|20 $start:std/array~anonymous|21 $start:std/array~anonymous|20 $start:std/array~anonymous|23 $start:std/array~anonymous|24 $start:std/array~anonymous|25 $start:std/array~anonymous|26 $start:std/array~anonymous|27 $start:std/array~anonymous|28 $start:std/array~anonymous|29 $start:std/array~anonymous|30 $start:std/array~anonymous|31 $start:std/array~anonymous|32 $start:std/array~anonymous|33 $start:std/array~anonymous|34 $start:std/array~anonymous|34 $start:std/array~anonymous|36 $start:std/array~anonymous|37 $start:std/array~anonymous|38 $start:std/array~anonymous|34 $start:std/array~anonymous|40 $start:std/array~anonymous|34 $start:std/array~anonymous|34 $start:std/array~anonymous|36 $start:std/array~anonymous|37 $start:std/array~anonymous|38 $start:std/array~anonymous|34 $start:std/array~anonymous|40 $~lib/util/sort/COMPARATOR<f32>~anonymous|0 $~lib/util/sort/COMPARATOR<f64>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $~lib/util/sort/COMPARATOR<u32>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $std/array/assertStableSortedForComplexObjects~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $start:std/array~anonymous|49 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $start:std/array~anonymous|49 $start:std/array~anonymous|52 $std/array/assertStableSortedForComplexObjects~anonymous|0 $~lib/util/sort/COMPARATOR<~lib/string/String|null>~anonymous|0 $~lib/util/sort/COMPARATOR<~lib/string/String|null>~anonymous|0 $start:std/array~anonymous|54)
 (export "memory" (memory $0))
 (export "_start" (func $~start))
 (func $~lib/rt/itcms/visitRoots
  (local $0 i32)
  (local $1 i32)
  global.get $std/array/arr
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  i32.const 10032
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $std/array/inputStabArr
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $std/array/outputStabArr
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  i32.const 1344
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1056
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 2640
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 6416
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1152
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 8144
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 9200
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $~lib/rt/itcms/pinSpace
  local.tee $1
  i32.load $0 offset=4
  i32.const -4
  i32.and
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.ne
   if
    local.get $0
    i32.load $0 offset=4
    i32.const 3
    i32.and
    i32.const 3
    i32.ne
    if
     i32.const 0
     i32.const 1216
     i32.const 160
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 20
    i32.add
    call $~lib/rt/__visit_members
    local.get $0
    i32.load $0 offset=4
    i32.const -4
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#makeGray (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $0
   i32.load $0 offset=8
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 1216
    i32.const 148
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   global.set $~lib/rt/itcms/iter
  end
  block $__inlined_func$~lib/rt/itcms/Object#unlink
   local.get $0
   i32.load $0 offset=4
   i32.const -4
   i32.and
   local.tee $1
   i32.eqz
   if
    local.get $0
    i32.load $0 offset=8
    i32.eqz
    local.get $0
    i32.const 48960
    i32.lt_u
    i32.and
    i32.eqz
    if
     i32.const 0
     i32.const 1216
     i32.const 128
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    br $__inlined_func$~lib/rt/itcms/Object#unlink
   end
   local.get $0
   i32.load $0 offset=8
   local.tee $2
   i32.eqz
   if
    i32.const 0
    i32.const 1216
    i32.const 132
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   local.get $2
   i32.store $0 offset=8
   local.get $2
   local.get $1
   local.get $2
   i32.load $0 offset=4
   i32.const 3
   i32.and
   i32.or
   i32.store $0 offset=4
  end
  global.get $~lib/rt/itcms/toSpace
  local.set $2
  local.get $0
  i32.load $0 offset=12
  local.tee $1
  i32.const 2
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 16000
   i32.load $0
   i32.gt_u
   if
    i32.const 1344
    i32.const 1408
    i32.const 21
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 2
   i32.shl
   i32.const 16004
   i32.add
   i32.load $0
   i32.const 32
   i32.and
  end
  local.set $3
  local.get $2
  i32.load $0 offset=8
  local.set $1
  local.get $0
  global.get $~lib/rt/itcms/white
  i32.eqz
  i32.const 2
  local.get $3
  select
  local.get $2
  i32.or
  i32.store $0 offset=4
  local.get $0
  local.get $1
  i32.store $0 offset=8
  local.get $1
  local.get $0
  local.get $1
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=8
 )
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load $0
  local.tee $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1488
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 1488
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   i32.const 1073741820
   local.get $2
   local.get $2
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $4
   i32.const 7
   i32.sub
   local.set $3
   local.get $2
   local.get $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $3
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1488
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load $0 offset=8
  local.set $5
  local.get $1
  i32.load $0 offset=4
  local.tee $4
  if
   local.get $4
   local.get $5
   i32.store $0 offset=8
  end
  local.get $5
  if
   local.get $5
   local.get $4
   i32.store $0 offset=4
  end
  local.get $1
  local.get $0
  local.get $3
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  i32.eq
  if
   local.get $0
   local.get $3
   i32.const 4
   i32.shl
   local.get $2
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $5
   i32.store $0 offset=96
   local.get $5
   i32.eqz
   if
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    local.tee $1
    i32.load $0 offset=4
    i32.const -2
    local.get $2
    i32.rotl
    i32.and
    local.set $2
    local.get $1
    local.get $2
    i32.store $0 offset=4
    local.get $2
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load $0
     i32.const -2
     local.get $3
     i32.rotl
     i32.and
     i32.store $0
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 1488
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load $0
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1488
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $1
  i32.load $0
  i32.const -4
  i32.and
  i32.add
  local.tee $4
  i32.load $0
  local.tee $2
  i32.const 1
  i32.and
  if
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $3
   i32.const 4
   i32.add
   local.get $2
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store $0
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load $0
   i32.const -4
   i32.and
   i32.add
   local.tee $4
   i32.load $0
   local.set $2
  end
  local.get $3
  i32.const 2
  i32.and
  if
   local.get $1
   i32.const 4
   i32.sub
   i32.load $0
   local.tee $1
   i32.load $0
   local.tee $6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 1488
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $6
   i32.const 4
   i32.add
   local.get $3
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store $0
  end
  local.get $4
  local.get $2
  i32.const 2
  i32.or
  i32.store $0
  local.get $3
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 1488
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $1
  i32.const 4
  i32.add
  local.get $2
  i32.add
  i32.ne
  if
   i32.const 0
   i32.const 1488
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store $0
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   i32.const 1073741820
   local.get $2
   local.get $2
   i32.const 1073741820
   i32.ge_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $5
   local.get $2
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $5
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1488
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  local.set $3
  local.get $1
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $3
  i32.store $0 offset=8
  local.get $3
  if
   local.get $3
   local.get $1
   i32.store $0 offset=4
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store $0 offset=96
  local.get $0
  local.get $0
  i32.load $0
  i32.const 1
  local.get $5
  i32.shl
  i32.or
  i32.store $0
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  local.tee $0
  local.get $0
  i32.load $0 offset=4
  i32.const 1
  local.get $2
  i32.shl
  i32.or
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i64)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  local.get $1
  i64.extend_i32_u
  i64.lt_u
  if
   i32.const 0
   i32.const 1488
   i32.const 382
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.load $0 offset=1568
  local.tee $4
  if
   local.get $4
   i32.const 4
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 1488
    i32.const 389
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 16
   i32.sub
   local.get $4
   i32.eq
   if
    local.get $4
    i32.load $0
    local.set $3
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
   end
  else
   local.get $0
   i32.const 1572
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 1488
    i32.const 402
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  i32.wrap_i64
  i32.const -16
  i32.and
  local.get $1
  i32.sub
  local.tee $4
  i32.const 20
  i32.lt_u
  if
   return
  end
  local.get $1
  local.get $3
  i32.const 2
  i32.and
  local.get $4
  i32.const 8
  i32.sub
  local.tee $3
  i32.const 1
  i32.or
  i32.or
  i32.store $0
  local.get $1
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  i32.const 4
  i32.add
  local.get $3
  i32.add
  local.tee $3
  i32.const 2
  i32.store $0
  local.get $0
  local.get $3
  i32.store $0 offset=1568
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  memory.size $0
  local.tee $1
  i32.const 0
  i32.le_s
  if (result i32)
   i32.const 1
   local.get $1
   i32.sub
   memory.grow $0
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  i32.const 48960
  i32.const 0
  i32.store $0
  i32.const 50528
  i32.const 0
  i32.store $0
  loop $for-loop|0
   local.get $0
   i32.const 23
   i32.lt_u
   if
    local.get $0
    i32.const 2
    i32.shl
    i32.const 48960
    i32.add
    i32.const 0
    i32.store $0 offset=4
    i32.const 0
    local.set $1
    loop $for-loop|1
     local.get $1
     i32.const 16
     i32.lt_u
     if
      local.get $0
      i32.const 4
      i32.shl
      local.get $1
      i32.add
      i32.const 2
      i32.shl
      i32.const 48960
      i32.add
      i32.const 0
      i32.store $0 offset=96
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|1
     end
    end
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  i32.const 48960
  i32.const 50532
  memory.size $0
  i64.extend_i32_s
  i64.const 16
  i64.shl
  call $~lib/rt/tlsf/addMemory
  i32.const 48960
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/__free (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.const 48960
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.set $2
  local.get $0
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.const 15
  i32.and
  i32.const 1
  local.get $0
  select
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.load $0
   i32.const 1
   i32.and
  end
  if
   i32.const 0
   i32.const 1488
   i32.const 562
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $1
  i32.load $0
  i32.const 1
  i32.or
  i32.store $0
  local.get $2
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      br_table $case0|0 $case1|0 $case2|0 $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $1
    global.get $~lib/rt/itcms/iter
    i32.load $0 offset=4
    i32.const -4
    i32.and
    local.set $0
    loop $while-continue|1
     local.get $0
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     if
      local.get $0
      global.set $~lib/rt/itcms/iter
      local.get $1
      local.get $0
      i32.load $0 offset=4
      i32.const 3
      i32.and
      i32.ne
      if
       local.get $0
       local.get $0
       i32.load $0 offset=4
       i32.const -4
       i32.and
       local.get $1
       i32.or
       i32.store $0 offset=4
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $0
       i32.const 20
       i32.add
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       return
      end
      local.get $0
      i32.load $0 offset=4
      i32.const -4
      i32.and
      local.set $0
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/toSpace
    global.get $~lib/rt/itcms/iter
    i32.load $0 offset=4
    i32.const -4
    i32.and
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.set $0
     loop $while-continue|0
      local.get $0
      i32.const 48960
      i32.lt_u
      if
       local.get $0
       i32.load $0
       local.tee $2
       if
        local.get $2
        call $byn-split-outlined-A$~lib/rt/itcms/__visit
       end
       local.get $0
       i32.const 4
       i32.add
       local.set $0
       br $while-continue|0
      end
     end
     global.get $~lib/rt/itcms/iter
     i32.load $0 offset=4
     i32.const -4
     i32.and
     local.set $0
     loop $while-continue|2
      local.get $0
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $1
       local.get $0
       i32.load $0 offset=4
       i32.const 3
       i32.and
       i32.ne
       if
        local.get $0
        local.get $0
        i32.load $0 offset=4
        i32.const -4
        i32.and
        local.get $1
        i32.or
        i32.store $0 offset=4
        local.get $0
        i32.const 20
        i32.add
        call $~lib/rt/__visit_members
       end
       local.get $0
       i32.load $0 offset=4
       i32.const -4
       i32.and
       local.set $0
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $0
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $0
     global.set $~lib/rt/itcms/toSpace
     local.get $1
     global.set $~lib/rt/itcms/white
     local.get $0
     i32.load $0 offset=4
     i32.const -4
     i32.and
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    return
   end
   global.get $~lib/rt/itcms/iter
   local.tee $0
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $0
    i32.load $0 offset=4
    local.tee $1
    i32.const -4
    i32.and
    global.set $~lib/rt/itcms/iter
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.get $1
    i32.const 3
    i32.and
    i32.ne
    if
     i32.const 0
     i32.const 1216
     i32.const 229
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 48960
    i32.lt_u
    if
     local.get $0
     i32.const 0
     i32.store $0 offset=4
     local.get $0
     i32.const 0
     i32.store $0 offset=8
    else
     global.get $~lib/rt/itcms/total
     local.get $0
     i32.load $0
     i32.const -4
     i32.and
     i32.const 4
     i32.add
     i32.sub
     global.set $~lib/rt/itcms/total
     local.get $0
     i32.const 4
     i32.add
     call $~lib/rt/tlsf/__free
    end
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   local.tee $0
   local.get $0
   i32.store $0 offset=4
   local.get $0
   local.get $0
   i32.store $0 offset=8
   i32.const 0
   global.set $~lib/rt/itcms/state
  end
  i32.const 0
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   local.get $1
   i32.const 1
   i32.const 27
   local.get $1
   i32.clz
   i32.sub
   i32.shl
   i32.add
   i32.const 1
   i32.sub
   local.get $1
   local.get $1
   i32.const 536870910
   i32.lt_u
   select
   local.tee $1
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $2
   local.get $1
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $1
  i32.const 16
  i32.lt_u
  local.get $2
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1488
   i32.const 334
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=4
  i32.const -1
  local.get $1
  i32.shl
  i32.and
  local.tee $1
  if (result i32)
   local.get $0
   local.get $1
   i32.ctz
   local.get $2
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
  else
   local.get $0
   i32.load $0
   i32.const -1
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.tee $1
   if (result i32)
    local.get $0
    local.get $1
    i32.ctz
    local.tee $1
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.tee $2
    i32.eqz
    if
     i32.const 0
     i32.const 1488
     i32.const 347
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.ctz
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=96
   else
    i32.const 0
   end
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 1152
   i32.const 1488
   i32.const 461
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 12
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.get $1
  i32.const 12
  i32.le_u
  select
  local.tee $3
  call $~lib/rt/tlsf/searchBlock
  local.tee $1
  i32.eqz
  if
   memory.size $0
   local.tee $1
   local.get $3
   i32.const 256
   i32.ge_u
   if (result i32)
    local.get $3
    i32.const 1
    i32.const 27
    local.get $3
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
    local.get $3
    local.get $3
    i32.const 536870910
    i32.lt_u
    select
   else
    local.get $3
   end
   i32.const 4
   local.get $0
   i32.load $0 offset=1568
   local.get $1
   i32.const 16
   i32.shl
   i32.const 4
   i32.sub
   i32.ne
   i32.shl
   i32.add
   i32.const 65535
   i32.add
   i32.const -65536
   i32.and
   i32.const 16
   i32.shr_u
   local.tee $2
   local.get $1
   local.get $2
   i32.gt_s
   select
   memory.grow $0
   i32.const 0
   i32.lt_s
   if
    local.get $2
    memory.grow $0
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
   local.get $0
   local.get $1
   i32.const 16
   i32.shl
   memory.size $0
   i64.extend_i32_s
   i64.const 16
   i64.shl
   call $~lib/rt/tlsf/addMemory
   local.get $0
   local.get $3
   call $~lib/rt/tlsf/searchBlock
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 1488
    i32.const 499
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $3
  local.get $1
  i32.load $0
  i32.const -4
  i32.and
  i32.gt_u
  if
   i32.const 0
   i32.const 1488
   i32.const 501
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/removeBlock
  local.get $1
  i32.load $0
  local.set $4
  local.get $3
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  if
   i32.const 0
   i32.const 1488
   i32.const 361
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const -4
  i32.and
  local.get $3
  i32.sub
  local.tee $2
  i32.const 16
  i32.ge_u
  if
   local.get $1
   local.get $3
   local.get $4
   i32.const 2
   i32.and
   i32.or
   i32.store $0
   local.get $1
   i32.const 4
   i32.add
   local.get $3
   i32.add
   local.tee $3
   local.get $2
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   i32.store $0
   local.get $0
   local.get $3
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $1
   local.get $4
   i32.const -2
   i32.and
   i32.store $0
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load $0
   i32.const -4
   i32.and
   i32.add
   local.tee $0
   local.get $0
   i32.load $0
   i32.const -3
   i32.and
   i32.store $0
  end
  local.get $1
 )
 (func $~lib/rt/itcms/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 1152
   i32.const 1216
   i32.const 261
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   block $__inlined_func$~lib/rt/itcms/interrupt
    i32.const 2048
    local.set $2
    loop $do-loop|0
     local.get $2
     call $~lib/rt/itcms/step
     i32.sub
     local.set $2
     global.get $~lib/rt/itcms/state
     i32.eqz
     if
      global.get $~lib/rt/itcms/total
      i64.extend_i32_u
      i64.const 200
      i64.mul
      i64.const 100
      i64.div_u
      i32.wrap_i64
      i32.const 1024
      i32.add
      global.set $~lib/rt/itcms/threshold
      br $__inlined_func$~lib/rt/itcms/interrupt
     end
     local.get $2
     i32.const 0
     i32.gt_s
     br_if $do-loop|0
    end
    global.get $~lib/rt/itcms/total
    local.tee $2
    global.get $~lib/rt/itcms/threshold
    i32.sub
    i32.const 1024
    i32.lt_u
    i32.const 10
    i32.shl
    local.get $2
    i32.add
    global.set $~lib/rt/itcms/threshold
   end
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  i32.const 16
  i32.add
  call $~lib/rt/tlsf/allocateBlock
  local.tee $2
  local.get $1
  i32.store $0 offset=12
  local.get $2
  local.get $0
  i32.store $0 offset=16
  global.get $~lib/rt/itcms/fromSpace
  local.tee $1
  i32.load $0 offset=8
  local.set $3
  local.get $2
  local.get $1
  global.get $~lib/rt/itcms/white
  i32.or
  i32.store $0 offset=4
  local.get $2
  local.get $3
  i32.store $0 offset=8
  local.get $3
  local.get $2
  local.get $3
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.store $0 offset=8
  global.get $~lib/rt/itcms/total
  local.get $2
  i32.load $0
  i32.const -4
  i32.and
  i32.const 4
  i32.add
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $2
  i32.const 20
  i32.add
  local.tee $1
  i32.const 0
  local.get $0
  memory.fill $0
  local.get $1
 )
 (func $start:std/array~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.eqz
 )
 (func $start:std/array~anonymous|1 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 1
  i32.eq
 )
 (func $start:std/array~anonymous|2 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|10 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  i32.ge_s
 )
 (func $start:std/array~anonymous|11 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  i32.le_s
 )
 (func $start:std/array~anonymous|13 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 10
  i32.lt_s
 )
 (func $start:std/array~anonymous|15 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 3
  i32.ge_s
 )
 (func $start:std/array~anonymous|16 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  i32.lt_s
 )
 (func $start:std/array~anonymous|18 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 10
  i32.gt_s
 )
 (func $start:std/array~anonymous|20 (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
 )
 (func $~lib/util/number/utoa32_dec_lut (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  loop $while-continue|0
   local.get $1
   i32.const 10000
   i32.ge_u
   if
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $3
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $1
    local.get $0
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 7724
    i32.add
    i64.load32_u $0
    local.get $3
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 7724
    i32.add
    i64.load32_u $0
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    br $while-continue|0
   end
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   local.tee $2
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 100
   i32.rem_u
   i32.const 2
   i32.shl
   i32.const 7724
   i32.add
   i32.load $0
   i32.store $0
   local.get $1
   i32.const 100
   i32.div_u
   local.set $1
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 2
   i32.shl
   i32.const 7724
   i32.add
   i32.load $0
   i32.store $0
  else
   local.get $0
   local.get $2
   i32.const 1
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 48
   i32.add
   i32.store16 $0
  end
 )
 (func $start:std/array~anonymous|25 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  call $~lib/util/number/itoa32
 )
 (func $start:std/array~anonymous|26 (param $0 i32) (param $1 i32) (param $2 i32) (result f32)
  local.get $0
  f32.convert_i32_s
 )
 (func $start:std/array~anonymous|28 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
 )
 (func $start:std/array~anonymous|30 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|32 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|34 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $1
  i32.add
 )
 (func $start:std/array~anonymous|36 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  i32.const 1
  local.get $1
  i32.const 2
  i32.gt_s
  local.get $0
  select
 )
 (func $start:std/array~anonymous|37 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  i32.const 1
  local.get $1
  i32.const 100
  i32.gt_s
  local.get $0
  select
 )
 (func $~lib/util/sort/insertionSort<f32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 f32)
  (local $6 f32)
  (local $7 i32)
  (local $8 f32)
  local.get $1
  local.get $3
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.tee $7
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $7
  i32.const 1
  i32.and
  local.get $3
  select
  i32.add
  local.set $7
  loop $for-loop|0
   local.get $2
   local.get $7
   i32.ge_s
   if
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    local.tee $3
    f32.load $0 offset=4
    local.tee $8
    local.set $6
    local.get $3
    f32.load $0
    local.set $5
    i32.const 2
    global.set $~argumentsLength
    local.get $5
    local.get $8
    local.get $4
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $5
     local.set $6
     local.get $8
     local.set $5
    end
    local.get $7
    i32.const 1
    i32.sub
    local.set $3
    loop $while-continue|1
     local.get $1
     local.get $3
     i32.le_s
     if
      block $while-break|1
       local.get $0
       local.get $3
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.set $8
       i32.const 2
       global.set $~argumentsLength
       local.get $8
       local.get $5
       local.get $4
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|1
       local.get $0
       local.get $3
       i32.const 2
       i32.shl
       i32.add
       local.get $8
       f32.store $0 offset=8
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    local.get $5
    f32.store $0 offset=8
    loop $while-continue|2
     local.get $1
     local.get $3
     i32.le_s
     if
      block $while-break|2
       local.get $0
       local.get $3
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.set $5
       i32.const 2
       global.set $~argumentsLength
       local.get $5
       local.get $6
       local.get $4
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|2
       local.get $0
       local.get $3
       i32.const 2
       i32.shl
       i32.add
       local.get $5
       f32.store $0 offset=4
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    local.get $6
    f32.store $0 offset=4
    local.get $7
    i32.const 2
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 i32)
  (local $7 f32)
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   return
  end
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  local.set $5
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  local.set $7
  i32.const 2
  global.set $~argumentsLength
  local.get $5
  local.get $7
  local.get $3
  i32.load $0
  call_indirect $0 (type $f32_f32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $6
     f32.load $0 offset=4
     local.set $5
     local.get $6
     f32.load $0
     local.set $7
     i32.const 2
     global.set $~argumentsLength
     local.get $5
     local.get $7
     local.get $3
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $2
   loop $while-continue|1
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     f32.load $0
     local.set $5
     local.get $3
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     f32.load $0
     f32.store $0
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $3
     local.get $5
     f32.store $0
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $1
     f32.load $0 offset=4
     local.set $5
     local.get $1
     f32.load $0
     local.set $7
     i32.const 2
     global.set $~argumentsLength
     local.get $5
     local.get $7
     local.get $3
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
 )
 (func $~lib/util/sort/mergeRuns<f32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  local.get $2
  i32.const 1
  i32.sub
  local.tee $6
  local.get $3
  i32.add
  local.set $9
  local.get $6
  i32.const 1
  i32.add
  local.set $2
  loop $for-loop|0
   local.get $1
   local.get $2
   i32.lt_s
   if
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 2
    i32.shl
    local.tee $10
    local.get $4
    i32.add
    local.get $0
    local.get $10
    i32.add
    f32.load $0
    f32.store $0
    br $for-loop|0
   end
  end
  loop $for-loop|1
   local.get $3
   local.get $6
   i32.gt_s
   if
    local.get $4
    local.get $9
    local.get $6
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    f32.load $0 offset=4
    f32.store $0
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|1
   end
  end
  loop $for-loop|2
   local.get $1
   local.get $3
   i32.le_s
   if
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $7
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $8
    i32.const 2
    global.set $~argumentsLength
    local.get $7
    local.get $8
    local.get $5
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     f32.store $0
     local.get $6
     i32.const 1
     i32.sub
     local.set $6
    else
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $8
     f32.store $0
     local.get $2
     i32.const 1
     i32.add
     local.set $2
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/COMPARATOR<f32>~anonymous|0 (param $0 f32) (param $1 f32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.reinterpret_f32
  local.tee $2
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  local.get $2
  i32.xor
  local.tee $2
  local.get $1
  i32.reinterpret_f32
  local.tee $3
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  local.get $3
  i32.xor
  local.tee $3
  i32.gt_s
  local.get $2
  local.get $3
  i32.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<f64> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 f64)
  (local $6 f64)
  (local $7 i32)
  (local $8 f64)
  local.get $1
  local.get $3
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.tee $7
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $7
  i32.const 1
  i32.and
  local.get $3
  select
  i32.add
  local.set $7
  loop $for-loop|0
   local.get $2
   local.get $7
   i32.ge_s
   if
    local.get $0
    local.get $7
    i32.const 3
    i32.shl
    i32.add
    local.tee $3
    f64.load $0 offset=8
    local.tee $8
    local.set $6
    local.get $3
    f64.load $0
    local.set $5
    i32.const 2
    global.set $~argumentsLength
    local.get $5
    local.get $8
    local.get $4
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $5
     local.set $6
     local.get $8
     local.set $5
    end
    local.get $7
    i32.const 1
    i32.sub
    local.set $3
    loop $while-continue|1
     local.get $1
     local.get $3
     i32.le_s
     if
      block $while-break|1
       local.get $0
       local.get $3
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.set $8
       i32.const 2
       global.set $~argumentsLength
       local.get $8
       local.get $5
       local.get $4
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|1
       local.get $0
       local.get $3
       i32.const 3
       i32.shl
       i32.add
       local.get $8
       f64.store $0 offset=16
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $3
    i32.const 3
    i32.shl
    i32.add
    local.get $5
    f64.store $0 offset=16
    loop $while-continue|2
     local.get $1
     local.get $3
     i32.le_s
     if
      block $while-break|2
       local.get $0
       local.get $3
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.set $5
       i32.const 2
       global.set $~argumentsLength
       local.get $5
       local.get $6
       local.get $4
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|2
       local.get $0
       local.get $3
       i32.const 3
       i32.shl
       i32.add
       local.get $5
       f64.store $0 offset=8
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $3
    i32.const 3
    i32.shl
    i32.add
    local.get $6
    f64.store $0 offset=8
    local.get $7
    i32.const 2
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f64> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 f64)
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   return
  end
  local.get $0
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  local.set $5
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  local.tee $4
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  local.set $7
  i32.const 2
  global.set $~argumentsLength
  local.get $5
  local.get $7
  local.get $3
  i32.load $0
  call_indirect $0 (type $f64_f64_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 3
     i32.shl
     i32.add
     local.tee $6
     f64.load $0 offset=8
     local.set $5
     local.get $6
     f64.load $0
     local.set $7
     i32.const 2
     global.set $~argumentsLength
     local.get $5
     local.get $7
     local.get $3
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $2
   loop $while-continue|1
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 3
     i32.shl
     i32.add
     local.tee $3
     f64.load $0
     local.set $5
     local.get $3
     local.get $0
     local.get $2
     i32.const 3
     i32.shl
     i32.add
     local.tee $3
     f64.load $0
     f64.store $0
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $3
     local.get $5
     f64.store $0
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 3
     i32.shl
     i32.add
     local.tee $1
     f64.load $0 offset=8
     local.set $5
     local.get $1
     f64.load $0
     local.set $7
     i32.const 2
     global.set $~argumentsLength
     local.get $5
     local.get $7
     local.get $3
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
 )
 (func $~lib/util/sort/mergeRuns<f64> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 f64)
  (local $8 f64)
  (local $9 i32)
  (local $10 i32)
  local.get $2
  i32.const 1
  i32.sub
  local.tee $6
  local.get $3
  i32.add
  local.set $9
  local.get $6
  i32.const 1
  i32.add
  local.set $2
  loop $for-loop|0
   local.get $1
   local.get $2
   i32.lt_s
   if
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 3
    i32.shl
    local.tee $10
    local.get $4
    i32.add
    local.get $0
    local.get $10
    i32.add
    f64.load $0
    f64.store $0
    br $for-loop|0
   end
  end
  loop $for-loop|1
   local.get $3
   local.get $6
   i32.gt_s
   if
    local.get $4
    local.get $9
    local.get $6
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 3
    i32.shl
    i32.add
    f64.load $0 offset=8
    f64.store $0
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|1
   end
  end
  loop $for-loop|2
   local.get $1
   local.get $3
   i32.le_s
   if
    local.get $4
    local.get $6
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $7
    local.get $4
    local.get $2
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $8
    i32.const 2
    global.set $~argumentsLength
    local.get $7
    local.get $8
    local.get $5
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 3
     i32.shl
     i32.add
     local.get $7
     f64.store $0
     local.get $6
     i32.const 1
     i32.sub
     local.set $6
    else
     local.get $0
     local.get $1
     i32.const 3
     i32.shl
     i32.add
     local.get $8
     f64.store $0
     local.get $2
     i32.const 1
     i32.add
     local.set $2
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/COMPARATOR<f64>~anonymous|0 (param $0 f64) (param $1 f64) (result i32)
  (local $2 i64)
  (local $3 i64)
  local.get $0
  i64.reinterpret_f64
  local.tee $2
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  local.get $2
  i64.xor
  local.tee $2
  local.get $1
  i64.reinterpret_f64
  local.tee $3
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  local.get $3
  i64.xor
  local.tee $3
  i64.gt_s
  local.get $2
  local.get $3
  i64.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<i32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.get $3
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.tee $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  select
  i32.add
  local.set $7
  loop $for-loop|0
   local.get $2
   local.get $7
   i32.ge_s
   if
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    local.tee $3
    i32.load $0 offset=4
    local.tee $6
    local.set $5
    local.get $3
    i32.load $0
    local.set $3
    i32.const 2
    global.set $~argumentsLength
    local.get $3
    local.get $6
    local.get $4
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $3
     local.set $5
     local.get $6
     local.set $3
    end
    local.get $7
    i32.const 1
    i32.sub
    local.set $6
    loop $while-continue|1
     local.get $1
     local.get $6
     i32.le_s
     if
      block $while-break|1
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $8
       i32.const 2
       global.set $~argumentsLength
       local.get $8
       local.get $3
       local.get $4
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|1
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       local.get $8
       i32.store $0 offset=8
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    local.get $3
    i32.store $0 offset=8
    loop $while-continue|2
     local.get $1
     local.get $6
     i32.le_s
     if
      block $while-break|2
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $3
       i32.const 2
       global.set $~argumentsLength
       local.get $3
       local.get $5
       local.get $4
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|2
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       local.get $3
       i32.store $0 offset=4
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    local.get $5
    i32.store $0 offset=4
    local.get $7
    i32.const 2
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   return
  end
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $5
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $6
  i32.const 2
  global.set $~argumentsLength
  local.get $5
  local.get $6
  local.get $3
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $5
     i32.load $0 offset=4
     local.set $6
     local.get $5
     i32.load $0
     local.set $5
     i32.const 2
     global.set $~argumentsLength
     local.get $6
     local.get $5
     local.get $3
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $2
   loop $while-continue|1
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load $0
     local.set $5
     local.get $3
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load $0
     i32.store $0
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $3
     local.get $5
     i32.store $0
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $1
     i32.load $0 offset=4
     local.set $5
     local.get $1
     i32.load $0
     local.set $1
     i32.const 2
     global.set $~argumentsLength
     local.get $5
     local.get $1
     local.get $3
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
 )
 (func $~lib/util/sort/mergeRuns<i32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $2
  i32.const 1
  i32.sub
  local.tee $6
  local.get $3
  i32.add
  local.set $7
  local.get $6
  i32.const 1
  i32.add
  local.set $2
  loop $for-loop|0
   local.get $1
   local.get $2
   i32.lt_s
   if
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 2
    i32.shl
    local.tee $8
    local.get $4
    i32.add
    local.get $0
    local.get $8
    i32.add
    i32.load $0
    i32.store $0
    br $for-loop|0
   end
  end
  loop $for-loop|1
   local.get $3
   local.get $6
   i32.gt_s
   if
    local.get $4
    local.get $7
    local.get $6
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|1
   end
  end
  loop $for-loop|2
   local.get $1
   local.get $3
   i32.le_s
   if
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $7
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $8
    i32.const 2
    global.set $~argumentsLength
    local.get $7
    local.get $8
    local.get $5
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store $0
     local.get $6
     i32.const 1
     i32.sub
     local.set $6
    else
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $8
     i32.store $0
     local.get $2
     i32.const 1
     i32.add
     local.set $2
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.get $3
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.tee $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  select
  i32.add
  local.set $7
  loop $for-loop|0
   local.get $2
   local.get $7
   i32.ge_s
   if
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    local.tee $3
    i32.load $0 offset=4
    local.tee $6
    local.set $5
    local.get $3
    i32.load $0
    local.set $3
    i32.const 2
    global.set $~argumentsLength
    local.get $3
    local.get $6
    local.get $4
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $3
     local.set $5
     local.get $6
     local.set $3
    end
    local.get $7
    i32.const 1
    i32.sub
    local.set $6
    loop $while-continue|1
     local.get $1
     local.get $6
     i32.le_s
     if
      block $while-break|1
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $8
       i32.const 2
       global.set $~argumentsLength
       local.get $8
       local.get $3
       local.get $4
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|1
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       local.get $8
       i32.store $0 offset=8
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    local.get $3
    i32.store $0 offset=8
    loop $while-continue|2
     local.get $1
     local.get $6
     i32.le_s
     if
      block $while-break|2
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $3
       i32.const 2
       global.set $~argumentsLength
       local.get $3
       local.get $5
       local.get $4
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|2
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       local.get $3
       i32.store $0 offset=4
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    local.get $5
    i32.store $0 offset=4
    local.get $7
    i32.const 2
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   return
  end
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $5
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $6
  i32.const 2
  global.set $~argumentsLength
  local.get $5
  local.get $6
  local.get $3
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $5
     i32.load $0 offset=4
     local.set $6
     local.get $5
     i32.load $0
     local.set $5
     i32.const 2
     global.set $~argumentsLength
     local.get $6
     local.get $5
     local.get $3
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $2
   loop $while-continue|1
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load $0
     local.set $5
     local.get $3
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load $0
     i32.store $0
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $3
     local.get $5
     i32.store $0
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $1
     i32.load $0 offset=4
     local.set $5
     local.get $1
     i32.load $0
     local.set $1
     i32.const 2
     global.set $~argumentsLength
     local.get $5
     local.get $1
     local.get $3
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
 )
 (func $~lib/util/sort/mergeRuns<u32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $2
  i32.const 1
  i32.sub
  local.tee $6
  local.get $3
  i32.add
  local.set $7
  local.get $6
  i32.const 1
  i32.add
  local.set $2
  loop $for-loop|0
   local.get $1
   local.get $2
   i32.lt_s
   if
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 2
    i32.shl
    local.tee $8
    local.get $4
    i32.add
    local.get $0
    local.get $8
    i32.add
    i32.load $0
    i32.store $0
    br $for-loop|0
   end
  end
  loop $for-loop|1
   local.get $3
   local.get $6
   i32.gt_s
   if
    local.get $4
    local.get $7
    local.get $6
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|1
   end
  end
  loop $for-loop|2
   local.get $1
   local.get $3
   i32.le_s
   if
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $7
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $8
    i32.const 2
    global.set $~argumentsLength
    local.get $7
    local.get $8
    local.get $5
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store $0
     local.get $6
     i32.const 1
     i32.sub
     local.set $6
    else
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $8
     i32.store $0
     local.get $2
     i32.const 1
     i32.add
     local.set $2
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/COMPARATOR<u32>~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.gt_u
  local.get $0
  local.get $1
  i32.lt_u
  i32.sub
 )
 (func $~lib/math/NativeMath.random (result f64)
  (local $0 i64)
  (local $1 i64)
  global.get $~lib/math/random_seeded
  i32.eqz
  if
   i64.const -7046029254386353131
   call $~lib/builtins/seed
   i64.reinterpret_f64
   local.tee $0
   local.get $0
   i64.eqz
   select
   local.tee $0
   local.get $0
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -49064778989728563
   i64.mul
   local.tee $0
   local.get $0
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -4265267296055464877
   i64.mul
   local.tee $0
   local.get $0
   i64.const 33
   i64.shr_u
   i64.xor
   global.set $~lib/math/random_state0_64
   global.get $~lib/math/random_state0_64
   i64.const -1
   i64.xor
   local.tee $0
   local.get $0
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -49064778989728563
   i64.mul
   local.tee $0
   local.get $0
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -4265267296055464877
   i64.mul
   local.tee $0
   local.get $0
   i64.const 33
   i64.shr_u
   i64.xor
   global.set $~lib/math/random_state1_64
   i32.const 1
   global.set $~lib/math/random_seeded
  end
  global.get $~lib/math/random_state0_64
  local.set $1
  global.get $~lib/math/random_state1_64
  local.tee $0
  global.set $~lib/math/random_state0_64
  local.get $1
  local.get $1
  i64.const 23
  i64.shl
  i64.xor
  local.tee $1
  local.get $1
  i64.const 17
  i64.shr_u
  i64.xor
  local.get $0
  i64.xor
  local.get $0
  i64.const 26
  i64.shr_u
  i64.xor
  global.set $~lib/math/random_state1_64
  local.get $0
  i64.const 12
  i64.shr_u
  i64.const 4607182418800017408
  i64.or
  f64.reinterpret_i64
  f64.const -1
  f64.add
 )
 (func $start:std/array~anonymous|49 (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.sub
 )
 (func $~lib/util/number/itoa_buffered<i32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 0
  i32.lt_s
  local.tee $2
  if
   local.get $0
   i32.const 45
   i32.store16 $0
   i32.const 0
   local.get $1
   i32.sub
   local.set $1
  end
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.set $0
  local.get $1
  i32.const 10
  i32.lt_u
  if
   local.get $0
   local.get $1
   i32.const 48
   i32.or
   i32.store16 $0
   local.get $2
   i32.const 1
   i32.add
   return
  end
  local.get $0
  local.get $1
  local.get $1
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $1
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $1
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $1
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $1
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $1
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.tee $0
  call $~lib/util/number/utoa32_dec_lut
  local.get $0
  local.get $2
  i32.add
 )
 (func $~lib/util/number/itoa_buffered<u32> (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.const 10
  i32.lt_u
  if
   local.get $0
   local.get $1
   i32.const 48
   i32.or
   i32.store16 $0
   i32.const 1
   return
  end
  local.get $0
  local.get $1
  local.get $1
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $1
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $1
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $1
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $1
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $1
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.tee $0
  call $~lib/util/number/utoa32_dec_lut
  local.get $0
 )
 (func $~lib/util/number/genDigits (param $0 i32) (param $1 i64) (param $2 i64) (param $3 i32) (param $4 i64) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i32)
  (local $11 i64)
  (local $12 i64)
  local.get $2
  local.get $1
  i64.sub
  local.set $9
  i64.const 1
  i32.const 0
  local.get $3
  i32.sub
  local.tee $10
  i64.extend_i32_s
  local.tee $1
  i64.shl
  local.tee $12
  i64.const 1
  i64.sub
  local.tee $11
  local.get $2
  i64.and
  local.set $8
  local.get $2
  local.get $1
  i64.shr_u
  i32.wrap_i64
  local.tee $3
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $3
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $3
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $3
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $3
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $3
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $3
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $3
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $3
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.set $7
  loop $while-continue|0
   local.get $7
   i32.const 0
   i32.gt_s
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $7
                i32.const 1
                i32.sub
                br_table $case9|1 $case8|1 $case7|1 $case6|1 $case5|1 $case4|1 $case3|1 $case2|1 $case1|1 $case0|1 $case10|1
               end
               local.get $3
               i32.const 1000000000
               i32.div_u
               local.set $6
               local.get $3
               i32.const 1000000000
               i32.rem_u
               local.set $3
               br $break|1
              end
              local.get $3
              i32.const 100000000
              i32.div_u
              local.set $6
              local.get $3
              i32.const 100000000
              i32.rem_u
              local.set $3
              br $break|1
             end
             local.get $3
             i32.const 10000000
             i32.div_u
             local.set $6
             local.get $3
             i32.const 10000000
             i32.rem_u
             local.set $3
             br $break|1
            end
            local.get $3
            i32.const 1000000
            i32.div_u
            local.set $6
            local.get $3
            i32.const 1000000
            i32.rem_u
            local.set $3
            br $break|1
           end
           local.get $3
           i32.const 100000
           i32.div_u
           local.set $6
           local.get $3
           i32.const 100000
           i32.rem_u
           local.set $3
           br $break|1
          end
          local.get $3
          i32.const 10000
          i32.div_u
          local.set $6
          local.get $3
          i32.const 10000
          i32.rem_u
          local.set $3
          br $break|1
         end
         local.get $3
         i32.const 1000
         i32.div_u
         local.set $6
         local.get $3
         i32.const 1000
         i32.rem_u
         local.set $3
         br $break|1
        end
        local.get $3
        i32.const 100
        i32.div_u
        local.set $6
        local.get $3
        i32.const 100
        i32.rem_u
        local.set $3
        br $break|1
       end
       local.get $3
       i32.const 10
       i32.div_u
       local.set $6
       local.get $3
       i32.const 10
       i32.rem_u
       local.set $3
       br $break|1
      end
      local.get $3
      local.set $6
      i32.const 0
      local.set $3
      br $break|1
     end
     i32.const 0
     local.set $6
    end
    local.get $5
    local.get $6
    i32.or
    if
     local.get $0
     local.get $5
     i32.const 1
     i32.shl
     i32.add
     local.get $6
     i32.const 65535
     i32.and
     i32.const 48
     i32.add
     i32.store16 $0
     local.get $5
     i32.const 1
     i32.add
     local.set $5
    end
    local.get $7
    i32.const 1
    i32.sub
    local.set $7
    local.get $4
    local.get $3
    i64.extend_i32_u
    local.get $10
    i64.extend_i32_s
    i64.shl
    local.get $8
    i64.add
    local.tee $1
    i64.ge_u
    if
     global.get $~lib/util/number/_K
     local.get $7
     i32.add
     global.set $~lib/util/number/_K
     local.get $7
     i32.const 2
     i32.shl
     i32.const 13392
     i32.add
     i64.load32_u $0
     local.get $10
     i64.extend_i32_s
     i64.shl
     local.set $2
     local.get $0
     local.get $5
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.tee $0
     i32.load16_u $0
     local.set $7
     loop $while-continue|3
      local.get $1
      local.get $9
      i64.lt_u
      local.get $4
      local.get $1
      i64.sub
      local.get $2
      i64.ge_u
      i32.and
      if (result i32)
       local.get $9
       local.get $1
       local.get $2
       i64.add
       local.tee $8
       i64.gt_u
       local.get $9
       local.get $1
       i64.sub
       local.get $8
       local.get $9
       i64.sub
       i64.gt_u
       i32.or
      else
       i32.const 0
      end
      if
       local.get $7
       i32.const 1
       i32.sub
       local.set $7
       local.get $1
       local.get $2
       i64.add
       local.set $1
       br $while-continue|3
      end
     end
     local.get $0
     local.get $7
     i32.store16 $0
     local.get $5
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4
   local.get $4
   i64.const 10
   i64.mul
   local.set $4
   local.get $8
   i64.const 10
   i64.mul
   local.tee $1
   local.get $10
   i64.extend_i32_s
   i64.shr_u
   local.tee $2
   local.get $5
   i64.extend_i32_s
   i64.or
   i64.const 0
   i64.ne
   if
    local.get $0
    local.get $5
    i32.const 1
    i32.shl
    i32.add
    local.get $2
    i32.wrap_i64
    i32.const 65535
    i32.and
    i32.const 48
    i32.add
    i32.store16 $0
    local.get $5
    i32.const 1
    i32.add
    local.set $5
   end
   local.get $7
   i32.const 1
   i32.sub
   local.set $7
   local.get $1
   local.get $11
   i64.and
   local.tee $8
   local.get $4
   i64.ge_u
   br_if $while-continue|4
  end
  global.get $~lib/util/number/_K
  local.get $7
  i32.add
  global.set $~lib/util/number/_K
  local.get $9
  i32.const 0
  local.get $7
  i32.sub
  i32.const 2
  i32.shl
  i32.const 13392
  i32.add
  i64.load32_u $0
  i64.mul
  local.set $1
  local.get $0
  local.get $5
  i32.const 1
  i32.sub
  i32.const 1
  i32.shl
  i32.add
  local.tee $0
  i32.load16_u $0
  local.set $7
  loop $while-continue|6
   local.get $1
   local.get $8
   i64.gt_u
   local.get $4
   local.get $8
   i64.sub
   local.get $12
   i64.ge_u
   i32.and
   if (result i32)
    local.get $1
    local.get $8
    local.get $12
    i64.add
    local.tee $2
    i64.gt_u
    local.get $1
    local.get $8
    i64.sub
    local.get $2
    local.get $1
    i64.sub
    i64.gt_u
    i32.or
   else
    i32.const 0
   end
   if
    local.get $7
    i32.const 1
    i32.sub
    local.set $7
    local.get $8
    local.get $12
    i64.add
    local.set $8
    br $while-continue|6
   end
  end
  local.get $0
  local.get $7
  i32.store16 $0
  local.get $5
 )
 (func $~lib/util/number/prettify (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  i32.eqz
  if
   local.get $0
   local.get $1
   i32.const 1
   i32.shl
   i32.add
   i32.const 3145774
   i32.store $0
   local.get $1
   i32.const 2
   i32.add
   return
  end
  local.get $1
  local.get $2
  i32.add
  local.tee $3
  i32.const 21
  i32.le_s
  local.get $1
  local.get $3
  i32.le_s
  i32.and
  if (result i32)
   loop $for-loop|0
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16 $0
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   local.get $0
   local.get $3
   i32.const 1
   i32.shl
   i32.add
   i32.const 3145774
   i32.store $0
   local.get $3
   i32.const 2
   i32.add
  else
   local.get $3
   i32.const 21
   i32.le_s
   local.get $3
   i32.const 0
   i32.gt_s
   i32.and
   if (result i32)
    local.get $0
    local.get $3
    i32.const 1
    i32.shl
    i32.add
    local.tee $0
    i32.const 2
    i32.add
    local.get $0
    i32.const 0
    local.get $2
    i32.sub
    i32.const 1
    i32.shl
    memory.copy $0 $0
    local.get $0
    i32.const 46
    i32.store16 $0
    local.get $1
    i32.const 1
    i32.add
   else
    local.get $3
    i32.const 0
    i32.le_s
    local.get $3
    i32.const -6
    i32.gt_s
    i32.and
    if (result i32)
     local.get $0
     i32.const 2
     local.get $3
     i32.sub
     local.tee $3
     i32.const 1
     i32.shl
     i32.add
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $0
     i32.const 3014704
     i32.store $0
     i32.const 2
     local.set $2
     loop $for-loop|1
      local.get $2
      local.get $3
      i32.lt_s
      if
       local.get $0
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16 $0
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     local.get $1
     local.get $3
     i32.add
    else
     local.get $1
     i32.const 1
     i32.eq
     if
      local.get $0
      i32.const 101
      i32.store16 $0 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.tee $2
      local.get $3
      i32.const 1
      i32.sub
      local.tee $0
      i32.const 0
      i32.lt_s
      local.tee $3
      if
       i32.const 0
       local.get $0
       i32.sub
       local.set $0
      end
      local.get $0
      local.get $0
      i32.const 100000
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 100
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 10
        i32.ge_u
        i32.const 1
        i32.add
       else
        local.get $0
        i32.const 10000
        i32.ge_u
        i32.const 3
        i32.add
        local.get $0
        i32.const 1000
        i32.ge_u
        i32.add
       end
      else
       local.get $0
       i32.const 10000000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 1000000
        i32.ge_u
        i32.const 6
        i32.add
       else
        local.get $0
        i32.const 1000000000
        i32.ge_u
        i32.const 8
        i32.add
        local.get $0
        i32.const 100000000
        i32.ge_u
        i32.add
       end
      end
      i32.const 1
      i32.add
      local.tee $1
      call $~lib/util/number/utoa32_dec_lut
      local.get $2
      i32.const 45
      i32.const 43
      local.get $3
      select
      i32.store16 $0
     else
      local.get $0
      i32.const 4
      i32.add
      local.get $0
      i32.const 2
      i32.add
      local.get $1
      i32.const 1
      i32.shl
      local.tee $2
      i32.const 2
      i32.sub
      memory.copy $0 $0
      local.get $0
      i32.const 46
      i32.store16 $0 offset=2
      local.get $0
      local.get $2
      i32.add
      local.tee $0
      i32.const 101
      i32.store16 $0 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.tee $4
      local.get $3
      i32.const 1
      i32.sub
      local.tee $0
      i32.const 0
      i32.lt_s
      local.tee $2
      if
       i32.const 0
       local.get $0
       i32.sub
       local.set $0
      end
      local.get $0
      local.get $0
      i32.const 100000
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 100
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 10
        i32.ge_u
        i32.const 1
        i32.add
       else
        local.get $0
        i32.const 10000
        i32.ge_u
        i32.const 3
        i32.add
        local.get $0
        i32.const 1000
        i32.ge_u
        i32.add
       end
      else
       local.get $0
       i32.const 10000000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 1000000
        i32.ge_u
        i32.const 6
        i32.add
       else
        local.get $0
        i32.const 1000000000
        i32.ge_u
        i32.const 8
        i32.add
        local.get $0
        i32.const 100000000
        i32.ge_u
        i32.add
       end
      end
      i32.const 1
      i32.add
      local.tee $0
      call $~lib/util/number/utoa32_dec_lut
      local.get $4
      i32.const 45
      i32.const 43
      local.get $2
      select
      i32.store16 $0
      local.get $0
      local.get $1
      i32.add
      local.set $1
     end
     local.get $1
     i32.const 2
     i32.add
    end
   end
  end
 )
 (func $~lib/util/number/dtoa_core (param $0 i32) (param $1 f64) (result i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  (local $15 i64)
  local.get $1
  f64.const 0
  f64.lt
  local.tee $3
  if (result f64)
   local.get $0
   i32.const 45
   i32.store16 $0
   local.get $1
   f64.neg
  else
   local.get $1
  end
  i64.reinterpret_f64
  local.tee $2
  i64.const 9218868437227405312
  i64.and
  i64.const 52
  i64.shr_u
  i32.wrap_i64
  local.tee $7
  i32.const 1
  local.get $7
  select
  i32.const 1075
  i32.sub
  local.tee $8
  i32.const 1
  i32.sub
  local.get $2
  i64.const 4503599627370495
  i64.and
  local.get $7
  i32.const 0
  i32.ne
  i64.extend_i32_u
  i64.const 52
  i64.shl
  i64.add
  local.tee $2
  i64.const 1
  i64.shl
  i64.const 1
  i64.add
  local.tee $4
  i64.clz
  i32.wrap_i64
  local.tee $7
  i32.sub
  local.set $9
  local.get $4
  local.get $7
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_plus
  local.get $2
  local.get $2
  i64.const 4503599627370496
  i64.eq
  i32.const 1
  i32.add
  local.tee $7
  i64.extend_i32_s
  i64.shl
  i64.const 1
  i64.sub
  local.get $8
  local.get $7
  i32.sub
  local.get $9
  i32.sub
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_minus
  local.get $9
  global.set $~lib/util/number/_exp
  i32.const 348
  i32.const -61
  global.get $~lib/util/number/_exp
  local.tee $7
  i32.sub
  f64.convert_i32_s
  f64.const 0.30102999566398114
  f64.mul
  f64.const 347
  f64.add
  local.tee $1
  i32.trunc_sat_f64_s
  local.tee $8
  local.get $8
  f64.convert_i32_s
  local.get $1
  f64.ne
  i32.add
  i32.const 3
  i32.shr_s
  i32.const 1
  i32.add
  local.tee $8
  i32.const 3
  i32.shl
  local.tee $9
  i32.sub
  global.set $~lib/util/number/_K
  local.get $9
  i32.const 12520
  i32.add
  i64.load $0
  global.set $~lib/util/number/_frc_pow
  local.get $8
  i32.const 1
  i32.shl
  i32.const 13216
  i32.add
  i32.load16_s $0
  global.set $~lib/util/number/_exp_pow
  local.get $2
  local.get $2
  i64.clz
  i64.shl
  local.tee $2
  i64.const 4294967295
  i64.and
  local.set $5
  local.get $2
  i64.const 32
  i64.shr_u
  local.tee $4
  global.get $~lib/util/number/_frc_pow
  local.tee $10
  i64.const 4294967295
  i64.and
  local.tee $11
  i64.mul
  local.get $5
  local.get $11
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $12
  global.get $~lib/util/number/_frc_plus
  local.tee $2
  i64.const 4294967295
  i64.and
  local.set $13
  local.get $11
  local.get $2
  i64.const 32
  i64.shr_u
  local.tee $6
  i64.mul
  local.get $11
  local.get $13
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $14
  global.get $~lib/util/number/_frc_minus
  local.tee $15
  i64.const 4294967295
  i64.and
  local.set $2
  local.get $11
  local.get $15
  i64.const 32
  i64.shr_u
  local.tee $15
  i64.mul
  local.get $2
  local.get $11
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $11
  local.get $10
  i64.const 32
  i64.shr_u
  local.tee $10
  local.get $6
  i64.mul
  local.get $14
  i64.const 32
  i64.shr_u
  i64.add
  local.get $10
  local.get $13
  i64.mul
  local.get $14
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  i64.const 1
  i64.sub
  local.set $6
  local.get $0
  local.get $3
  i32.const 1
  i32.shl
  i32.add
  local.get $0
  local.get $4
  local.get $10
  i64.mul
  local.get $12
  i64.const 32
  i64.shr_u
  i64.add
  local.get $5
  local.get $10
  i64.mul
  local.get $12
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  local.get $6
  local.get $7
  global.get $~lib/util/number/_exp_pow
  i32.add
  i32.const -64
  i32.sub
  local.get $6
  local.get $10
  local.get $15
  i64.mul
  local.get $11
  i64.const 32
  i64.shr_u
  i64.add
  local.get $2
  local.get $10
  i64.mul
  local.get $11
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  i64.const 1
  i64.add
  i64.sub
  local.get $3
  call $~lib/util/number/genDigits
  local.get $3
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.get $3
  i32.add
 )
 (func $~lib/util/number/dtoa_buffered (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  local.get $1
  f64.const 0
  f64.eq
  if
   local.get $0
   i32.const 48
   i32.store16 $0
   local.get $0
   i32.const 46
   i32.store16 $0 offset=2
   local.get $0
   i32.const 48
   i32.store16 $0 offset=4
   i32.const 3
   return
  end
  local.get $1
  local.get $1
  f64.sub
  f64.const 0
  f64.ne
  if
   local.get $1
   local.get $1
   f64.ne
   if
    local.get $0
    i32.const 78
    i32.store16 $0
    local.get $0
    i32.const 97
    i32.store16 $0 offset=2
    local.get $0
    i32.const 78
    i32.store16 $0 offset=4
    i32.const 3
    return
   else
    local.get $1
    f64.const 0
    f64.lt
    local.tee $2
    if
     local.get $0
     i32.const 45
     i32.store16 $0
     local.get $0
     i32.const 2
     i32.add
     local.set $0
    end
    local.get $0
    i64.const 29555310648492105
    i64.store $0
    local.get $0
    i64.const 34058970405077102
    i64.store $0 offset=8
    local.get $2
    i32.const 8
    i32.add
    return
   end
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/util/number/dtoa_core
 )
 (func $~lib/util/number/itoa_buffered<i8> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.extend8_s
  i32.const 0
  i32.lt_s
  local.tee $2
  if
   local.get $1
   i32.const 255
   i32.and
   i32.const 128
   i32.eq
   if
    local.get $0
    i64.const 15762813447372845
    i64.store $0
    i32.const 4
    return
   end
   local.get $0
   i32.const 45
   i32.store16 $0
   i32.const 0
   local.get $1
   i32.sub
   local.set $1
  end
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.set $3
  local.get $1
  i32.extend8_s
  i32.const 10
  i32.lt_u
  if
   local.get $3
   local.get $1
   i32.extend8_s
   i32.const 48
   i32.or
   i32.store16 $0
   local.get $2
   i32.const 1
   i32.add
   return
  end
  local.get $1
  i32.extend8_s
  local.tee $1
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $1
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $1
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $1
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $1
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $1
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.set $0
  local.get $3
  local.get $1
  local.get $0
  call $~lib/util/number/utoa32_dec_lut
  local.get $0
  local.get $2
  i32.add
 )
 (func $~lib/util/number/itoa_buffered<u16> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 65535
  i32.and
  i32.const 10
  i32.lt_u
  if
   local.get $0
   local.get $1
   i32.const 65535
   i32.and
   i32.const 48
   i32.or
   i32.store16 $0
   i32.const 1
   return
  end
  local.get $1
  i32.const 65535
  i32.and
  local.set $2
  local.get $2
  i32.const 100
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 10
   i32.ge_u
   i32.const 1
   i32.add
  else
   local.get $2
   i32.const 10000
   i32.ge_u
   i32.const 3
   i32.add
   local.get $2
   i32.const 1000
   i32.ge_u
   i32.add
  end
  local.set $1
  local.get $0
  local.get $2
  local.get $1
  call $~lib/util/number/utoa32_dec_lut
  local.get $1
 )
 (func $~lib/util/number/itoa_buffered<i16> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.extend16_s
  i32.const 0
  i32.lt_s
  local.tee $2
  if
   local.get $1
   i32.const 65535
   i32.and
   i32.const 32768
   i32.eq
   if
    local.get $0
    i64.const 15481338470793261
    i64.store $0
    local.get $0
    i32.const 3670070
    i32.store $0 offset=8
    i32.const 6
    return
   end
   local.get $0
   i32.const 45
   i32.store16 $0
   i32.const 0
   local.get $1
   i32.sub
   local.set $1
  end
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.set $3
  local.get $1
  i32.extend16_s
  i32.const 10
  i32.lt_u
  if
   local.get $3
   local.get $1
   i32.extend16_s
   i32.const 48
   i32.or
   i32.store16 $0
   local.get $2
   i32.const 1
   i32.add
   return
  end
  local.get $1
  i32.extend16_s
  local.tee $1
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $1
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $1
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $1
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $1
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $1
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.set $0
  local.get $3
  local.get $1
  local.get $0
  call $~lib/util/number/utoa32_dec_lut
  local.get $0
  local.get $2
  i32.add
 )
 (func $~lib/util/number/utoa64_dec_lut (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  loop $while-continue|0
   local.get $1
   i64.const 100000000
   i64.ge_u
   if
    local.get $0
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $1
    local.get $1
    i64.const 100000000
    i64.div_u
    local.tee $1
    i64.const 100000000
    i64.mul
    i64.sub
    i32.wrap_i64
    local.tee $3
    i32.const 10000
    i32.rem_u
    local.tee $4
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 7724
    i32.add
    i64.load32_u $0
    local.get $4
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 7724
    i32.add
    i64.load32_u $0
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    local.get $0
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    i32.const 10000
    i32.div_u
    local.tee $3
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 7724
    i32.add
    i64.load32_u $0
    local.get $3
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 7724
    i32.add
    i64.load32_u $0
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    br $while-continue|0
   end
  end
  local.get $0
  local.get $1
  i32.wrap_i64
  local.get $2
  call $~lib/util/number/utoa32_dec_lut
 )
 (func $~lib/util/number/itoa_buffered<u64> (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $1
  i64.const 10
  i64.lt_u
  if
   local.get $2
   local.get $1
   i64.const 48
   i64.or
   i64.store16 $0
   i32.const 1
   return
  end
  local.get $1
  i64.const 4294967295
  i64.le_u
  if
   local.get $1
   i32.wrap_i64
   local.tee $3
   i32.const 100000
   i32.lt_u
   if (result i32)
    local.get $3
    i32.const 100
    i32.lt_u
    if (result i32)
     local.get $3
     i32.const 10
     i32.ge_u
     i32.const 1
     i32.add
    else
     local.get $3
     i32.const 10000
     i32.ge_u
     i32.const 3
     i32.add
     local.get $3
     i32.const 1000
     i32.ge_u
     i32.add
    end
   else
    local.get $3
    i32.const 10000000
    i32.lt_u
    if (result i32)
     local.get $3
     i32.const 1000000
     i32.ge_u
     i32.const 6
     i32.add
    else
     local.get $3
     i32.const 1000000000
     i32.ge_u
     i32.const 8
     i32.add
     local.get $3
     i32.const 100000000
     i32.ge_u
     i32.add
    end
   end
   local.set $0
   local.get $2
   local.get $3
   local.get $0
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $2
   local.get $1
   local.get $1
   i64.const 1000000000000000
   i64.lt_u
   if (result i32)
    local.get $1
    i64.const 1000000000000
    i64.lt_u
    if (result i32)
     local.get $1
     i64.const 100000000000
     i64.ge_u
     i32.const 10
     i32.add
     local.get $1
     i64.const 10000000000
     i64.ge_u
     i32.add
    else
     local.get $1
     i64.const 100000000000000
     i64.ge_u
     i32.const 13
     i32.add
     local.get $1
     i64.const 10000000000000
     i64.ge_u
     i32.add
    end
   else
    local.get $1
    i64.const 100000000000000000
    i64.lt_u
    if (result i32)
     local.get $1
     i64.const 10000000000000000
     i64.ge_u
     i32.const 16
     i32.add
    else
     local.get $1
     i64.const -8446744073709551616
     i64.ge_u
     i32.const 18
     i32.add
     local.get $1
     i64.const 1000000000000000000
     i64.ge_u
     i32.add
    end
   end
   local.tee $0
   call $~lib/util/number/utoa64_dec_lut
  end
  local.get $0
 )
 (func $~lib/util/number/itoa_buffered<i64> (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i64.const 0
  i64.lt_s
  local.tee $3
  if
   local.get $0
   i32.const 45
   i32.store16 $0
   i64.const 0
   local.get $1
   i64.sub
   local.set $1
  end
  local.get $0
  local.get $3
  i32.const 1
  i32.shl
  i32.add
  local.set $4
  local.get $1
  i64.const 10
  i64.lt_u
  if
   local.get $4
   local.get $1
   i64.const 48
   i64.or
   i64.store16 $0
   local.get $3
   i32.const 1
   i32.add
   return
  end
  local.get $1
  i64.const 4294967295
  i64.le_u
  if
   local.get $1
   i32.wrap_i64
   local.tee $2
   i32.const 100000
   i32.lt_u
   if (result i32)
    local.get $2
    i32.const 100
    i32.lt_u
    if (result i32)
     local.get $2
     i32.const 10
     i32.ge_u
     i32.const 1
     i32.add
    else
     local.get $2
     i32.const 10000
     i32.ge_u
     i32.const 3
     i32.add
     local.get $2
     i32.const 1000
     i32.ge_u
     i32.add
    end
   else
    local.get $2
    i32.const 10000000
    i32.lt_u
    if (result i32)
     local.get $2
     i32.const 1000000
     i32.ge_u
     i32.const 6
     i32.add
    else
     local.get $2
     i32.const 1000000000
     i32.ge_u
     i32.const 8
     i32.add
     local.get $2
     i32.const 100000000
     i32.ge_u
     i32.add
    end
   end
   local.set $0
   local.get $4
   local.get $2
   local.get $0
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $4
   local.get $1
   local.get $1
   i64.const 1000000000000000
   i64.lt_u
   if (result i32)
    local.get $1
    i64.const 1000000000000
    i64.lt_u
    if (result i32)
     local.get $1
     i64.const 100000000000
     i64.ge_u
     i32.const 10
     i32.add
     local.get $1
     i64.const 10000000000
     i64.ge_u
     i32.add
    else
     local.get $1
     i64.const 100000000000000
     i64.ge_u
     i32.const 13
     i32.add
     local.get $1
     i64.const 10000000000000
     i64.ge_u
     i32.add
    end
   else
    local.get $1
    i64.const 100000000000000000
    i64.lt_u
    if (result i32)
     local.get $1
     i64.const 10000000000000000
     i64.ge_u
     i32.const 16
     i32.add
    else
     local.get $1
     i64.const -8446744073709551616
     i64.ge_u
     i32.const 18
     i32.add
     local.get $1
     i64.const 1000000000000000000
     i64.ge_u
     i32.add
    end
   end
   local.tee $0
   call $~lib/util/number/utoa64_dec_lut
  end
  local.get $0
  local.get $3
  i32.add
 )
 (func $~lib/util/number/itoa_buffered<u8> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 255
  i32.and
  i32.const 10
  i32.lt_u
  if
   local.get $0
   local.get $1
   i32.const 255
   i32.and
   i32.const 48
   i32.or
   i32.store16 $0
   i32.const 1
   return
  end
  local.get $1
  i32.const 255
  i32.and
  local.set $2
  i32.const 3
  local.get $2
  i32.const 10
  i32.ge_u
  i32.const 1
  i32.add
  local.get $2
  i32.const 100
  i32.ge_u
  select
  local.set $1
  local.get $0
  local.get $2
  local.get $1
  call $~lib/util/number/utoa32_dec_lut
  local.get $1
 )
 (func $~lib/rt/__visit_members (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $folding-inner5
   block $folding-inner4
    block $folding-inner3
     block $folding-inner2
      block $folding-inner1
       block $folding-inner0
        block $invalid
         block $std/array/Proxy<i32>
          block $std/array/Dim
           block $std/array/Ref
            block $~lib/string/String
             block $~lib/arraybuffer/ArrayBuffer
              block $~lib/object/Object
               local.get $0
               i32.const 8
               i32.sub
               i32.load $0
               br_table $~lib/object/Object $~lib/arraybuffer/ArrayBuffer $~lib/string/String $folding-inner4 $folding-inner0 $std/array/Ref $folding-inner4 $folding-inner0 $folding-inner0 $folding-inner0 $folding-inner1 $folding-inner0 $folding-inner0 $folding-inner1 $folding-inner2 $folding-inner2 $folding-inner1 $folding-inner2 $folding-inner2 $folding-inner2 $folding-inner2 $folding-inner2 $std/array/Dim $folding-inner1 $folding-inner2 $folding-inner2 $folding-inner2 $folding-inner2 $folding-inner2 $folding-inner1 $folding-inner2 $std/array/Proxy<i32> $folding-inner1 $folding-inner2 $folding-inner1 $folding-inner2 $folding-inner2 $folding-inner0 $folding-inner0 $folding-inner0 $folding-inner0 $folding-inner0 $folding-inner1 $folding-inner1 $folding-inner1 $folding-inner1 $folding-inner2 $invalid
              end
              return
             end
             return
            end
            return
           end
           return
          end
          return
         end
         return
        end
        unreachable
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 16192
       i32.lt_s
       br_if $folding-inner3
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       i32.const 0
       i32.store $0
       local.get $1
       local.get $0
       i32.store $0
       br $folding-inner5
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 16192
      i32.lt_s
      br_if $folding-inner3
      global.get $~lib/memory/__stack_pointer
      local.tee $2
      i32.const 0
      i32.store $0
      local.get $2
      local.get $0
      i32.store $0
      local.get $0
      i32.load $0 offset=4
      local.set $1
      local.get $2
      local.get $0
      i32.store $0
      local.get $1
      local.get $0
      i32.load $0 offset=12
      i32.const 2
      i32.shl
      i32.add
      local.set $2
      loop $while-continue|0
       local.get $1
       local.get $2
       i32.lt_u
       if
        local.get $1
        i32.load $0
        local.tee $3
        if
         local.get $3
         call $byn-split-outlined-A$~lib/rt/itcms/__visit
        end
        local.get $1
        i32.const 4
        i32.add
        local.set $1
        br $while-continue|0
       end
      end
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      br $folding-inner5
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 16192
     i32.lt_s
     br_if $folding-inner3
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i32.const 0
     i32.store $0
     local.get $1
     local.get $0
     i32.store $0
     local.get $0
     i32.load $0 offset=4
     local.tee $0
     if
      local.get $0
      call $byn-split-outlined-A$~lib/rt/itcms/__visit
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     return
    end
    i32.const 48992
    i32.const 49040
    i32.const 1
    i32.const 1
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load $0
   local.tee $0
   if
    local.get $0
    call $byn-split-outlined-A$~lib/rt/itcms/__visit
   end
   return
  end
  local.get $0
  i32.load $0
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~start
  global.get $~started
  if
   return
  end
  i32.const 1
  global.set $~started
  call $start:std/array
 )
 (func $~lib/array/Array<i32>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 16
  i32.const 4
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=4
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  i32.store $0 offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 1056
   i32.const 1104
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  local.get $0
  local.get $0
  i32.const 8
  i32.le_u
  select
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=12
  local.get $2
  local.get $3
  i32.store $0
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $3
  i32.store $0 offset=4
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $1
  i32.store $0 offset=8
  local.get $4
  local.get $2
  i32.store $0 offset=4
  local.get $2
  local.get $0
  i32.store $0 offset=12
  local.get $4
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $std/array/Ref#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  i32.const 4
  i32.const 5
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $1
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0
  local.get $2
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<u8>#fill (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i32.const 0
  i32.store $0
  local.get $5
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $4
  local.get $5
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.tee $0
  local.get $2
  i32.add
  local.get $2
  local.get $0
  local.get $0
  local.get $2
  i32.gt_s
  select
  local.get $2
  i32.const 0
  i32.lt_s
  select
  local.tee $2
  local.get $0
  local.get $3
  i32.add
  local.get $3
  local.get $0
  local.get $0
  local.get $3
  i32.gt_s
  select
  local.get $3
  i32.const 0
  i32.lt_s
  select
  local.tee $0
  i32.lt_s
  if
   local.get $2
   local.get $4
   i32.add
   local.get $1
   local.get $0
   local.get $2
   i32.sub
   memory.fill $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u8>#get:length (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $0
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<u8>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=4
  i32.add
  i32.load8_u $0
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $std/array/isArraysEqual<u8> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/array/Array<u8>#get:length
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  block $folding-inner1
   block $folding-inner0
    local.get $1
    call $~lib/array/Array<u8>#get:length
    local.get $3
    i32.ne
    br_if $folding-inner0
    local.get $0
    local.get $1
    i32.eq
    br_if $folding-inner1
    loop $for-loop|0
     local.get $2
     local.get $3
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      local.get $2
      call $~lib/array/Array<u8>#__get
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      local.get $2
      call $~lib/array/Array<u8>#__get
      local.get $4
      i32.ne
      br_if $folding-inner0
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    br $folding-inner1
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $~lib/array/Array<u8>#fill@varargs (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $2
   end
   i32.const 2147483647
   local.set $3
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $~lib/array/Array<u8>#fill
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u32>#fill (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.store $0
  local.get $4
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $5
  local.get $4
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  i32.load $0 offset=12
  local.tee $0
  i32.add
  local.get $2
  local.get $0
  local.get $0
  local.get $2
  i32.gt_s
  select
  local.get $2
  i32.const 0
  i32.lt_s
  select
  local.set $2
  local.get $0
  local.get $3
  i32.add
  local.get $3
  local.get $0
  local.get $0
  local.get $3
  i32.gt_s
  select
  local.get $3
  i32.const 0
  i32.lt_s
  select
  local.set $0
  block $__inlined_func$~lib/util/bytes/FILL<u32>
   local.get $1
   i32.eqz
   local.get $1
   i32.const -1
   i32.eq
   i32.or
   if
    local.get $0
    local.get $2
    i32.gt_s
    if
     local.get $5
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.get $1
     local.get $0
     local.get $2
     i32.sub
     i32.const 2
     i32.shl
     memory.fill $0
    end
    br $__inlined_func$~lib/util/bytes/FILL<u32>
   end
   loop $for-loop|0
    local.get $0
    local.get $2
    i32.gt_s
    if
     local.get $5
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.get $1
     i32.store $0
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u32>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $std/array/isArraysEqual<u32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/array/Array<u8>#get:length
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  block $folding-inner1
   block $folding-inner0
    local.get $1
    call $~lib/array/Array<u8>#get:length
    local.get $3
    i32.ne
    br_if $folding-inner0
    local.get $0
    local.get $1
    i32.eq
    br_if $folding-inner1
    loop $for-loop|0
     local.get $2
     local.get $3
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      local.get $2
      call $~lib/array/Array<u32>#__get
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      local.get $2
      call $~lib/array/Array<u32>#__get
      local.get $4
      i32.ne
      br_if $folding-inner0
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    br $folding-inner1
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $~lib/array/Array<u32>#fill@varargs (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $2
   end
   i32.const 2147483647
   local.set $3
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $~lib/array/Array<u32>#fill
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<f32>#fill (param $0 i32) (param $1 f32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.store $0
  local.get $4
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $5
  local.get $4
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  i32.load $0 offset=12
  local.tee $0
  i32.add
  local.get $2
  local.get $0
  local.get $0
  local.get $2
  i32.gt_s
  select
  local.get $2
  i32.const 0
  i32.lt_s
  select
  local.set $2
  local.get $0
  local.get $3
  i32.add
  local.get $3
  local.get $0
  local.get $0
  local.get $3
  i32.gt_s
  select
  local.get $3
  i32.const 0
  i32.lt_s
  select
  local.set $0
  block $__inlined_func$~lib/util/bytes/FILL<f32>
   local.get $1
   i32.reinterpret_f32
   i32.eqz
   if
    local.get $0
    local.get $2
    i32.gt_s
    if
     local.get $5
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.const 0
     local.get $0
     local.get $2
     i32.sub
     i32.const 2
     i32.shl
     memory.fill $0
    end
    br $__inlined_func$~lib/util/bytes/FILL<f32>
   end
   loop $for-loop|0
    local.get $0
    local.get $2
    i32.gt_s
    if
     local.get $5
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.get $1
     f32.store $0
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<f32>#__get (param $0 i32) (param $1 i32) (result f32)
  (local $2 f32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  local.set $2
  local.get $3
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $std/array/isArraysEqual<f32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.store $0
  local.get $4
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/array/Array<u8>#get:length
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  block $folding-inner1
   block $folding-inner0
    local.get $1
    call $~lib/array/Array<u8>#get:length
    local.get $4
    i32.ne
    br_if $folding-inner0
    local.get $0
    local.get $1
    i32.eq
    br_if $folding-inner1
    loop $for-loop|0
     local.get $2
     local.get $4
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      local.get $2
      call $~lib/array/Array<f32>#__get
      local.tee $3
      local.get $3
      f32.ne
      if (result i32)
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0
       local.get $1
       local.get $2
       call $~lib/array/Array<f32>#__get
       local.tee $3
       local.get $3
       f32.ne
      else
       i32.const 0
      end
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $0
       local.get $2
       call $~lib/array/Array<f32>#__get
       f64.promote_f32
       i64.reinterpret_f64
       i64.const 63
       i64.shr_u
       i32.wrap_i64
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0
       local.get $5
       local.get $1
       local.get $2
       call $~lib/array/Array<f32>#__get
       f64.promote_f32
       i64.reinterpret_f64
       i64.const 63
       i64.shr_u
       i32.wrap_i64
       i32.ne
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store $0
       local.get $0
       local.get $2
       call $~lib/array/Array<f32>#__get
       local.set $3
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0
       local.get $1
       local.get $2
       call $~lib/array/Array<f32>#__get
       local.get $3
       f32.ne
       br_if $folding-inner0
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    br $folding-inner1
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $~lib/array/Array<f32>#fill@varargs (param $0 i32) (param $1 f32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $2
   end
   i32.const 2147483647
   local.set $3
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $~lib/array/Array<f32>#fill
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/array/internalCapacity<i32> (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 2
  i32.shr_s
  local.set $0
  local.get $1
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/ensureCapacity (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=8
  local.tee $4
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 268435455
   i32.gt_u
   if
    i32.const 1056
    i32.const 1104
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   local.set $3
   i32.const 8
   local.get $1
   local.get $1
   i32.const 8
   i32.le_u
   select
   i32.const 2
   i32.shl
   local.set $1
   local.get $2
   if
    i32.const 1073741820
    local.get $4
    i32.const 1
    i32.shl
    local.tee $2
    local.get $2
    i32.const 1073741820
    i32.ge_u
    select
    local.tee $2
    local.get $1
    local.get $1
    local.get $2
    i32.lt_u
    select
    local.set $1
   end
   block $__inlined_func$~lib/rt/itcms/__renew
    local.get $3
    i32.const 20
    i32.sub
    local.tee $4
    i32.load $0
    i32.const -4
    i32.and
    i32.const 16
    i32.sub
    local.get $1
    i32.ge_u
    if
     local.get $4
     local.get $1
     i32.store $0 offset=16
     local.get $3
     local.set $2
     br $__inlined_func$~lib/rt/itcms/__renew
    end
    local.get $1
    local.get $4
    i32.load $0 offset=12
    call $~lib/rt/itcms/__new
    local.tee $2
    local.get $3
    local.get $1
    local.get $4
    i32.load $0 offset=16
    local.tee $4
    local.get $1
    local.get $4
    i32.lt_u
    select
    memory.copy $0 $0
   end
   local.get $2
   local.get $3
   i32.ne
   if
    local.get $0
    local.get $2
    i32.store $0
    local.get $0
    local.get $2
    i32.store $0 offset=4
    local.get $2
    if
     local.get $0
     local.get $2
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   end
   local.get $0
   local.get $1
   i32.store $0 offset=8
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 1
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $3
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<i32>#pop (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.const 0
  i32.le_s
  if
   i32.const 2640
   i32.const 1104
   i32.const 271
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $2
  i32.const 1
  i32.sub
  local.tee $2
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $3
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  local.get $2
  i32.store $0 offset=12
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<std/array/Ref>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 1344
    i32.const 1104
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   local.get $3
   i32.store $0 offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store $0
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 1
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#at (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  i32.const 0
  local.get $1
  i32.const 0
  i32.lt_s
  select
  i32.add
  local.tee $1
  local.get $2
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 143
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<i32>#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $3
  local.get $2
  local.get $1
  i32.store $0
  local.get $1
  i32.load $0 offset=12
  local.tee $2
  local.get $3
  i32.add
  local.tee $4
  i32.const 268435455
  i32.gt_u
  if
   i32.const 1056
   i32.const 1104
   i32.const 224
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 2
  i32.const 4
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $4
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  i32.load $0 offset=4
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $5
  local.get $0
  i32.load $0 offset=4
  local.get $3
  i32.const 2
  i32.shl
  local.tee $0
  memory.copy $0 $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $0
  local.get $5
  i32.add
  local.get $1
  i32.load $0 offset=4
  local.get $2
  i32.const 2
  i32.shl
  memory.copy $0 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/array/Array<i32>#copyWithin (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i32.const 0
  i32.store $0
  local.get $5
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $4
  local.get $5
  local.get $0
  i32.store $0
  local.get $3
  local.get $0
  i32.load $0 offset=12
  local.tee $5
  local.get $3
  local.get $5
  i32.lt_s
  select
  local.set $3
  local.get $4
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $5
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $5
   local.get $1
   local.get $5
   i32.lt_s
   select
  end
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  local.get $4
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $5
   i32.add
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
  else
   local.get $2
   local.get $5
   local.get $2
   local.get $5
   i32.lt_s
   select
  end
  local.tee $2
  i32.const 2
  i32.shl
  i32.add
  local.get $3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $3
   local.get $5
   i32.add
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
  else
   local.get $3
   local.get $5
   local.get $3
   local.get $5
   i32.lt_s
   select
  end
  local.get $2
  i32.sub
  local.tee $2
  local.get $5
  local.get $1
  i32.sub
  local.tee $1
  local.get $1
  local.get $2
  i32.gt_s
  select
  i32.const 2
  i32.shl
  memory.copy $0 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<i32>#copyWithin@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 2
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 2147483647
   local.set $3
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $2
  local.get $3
  call $~lib/array/Array<i32>#copyWithin
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $std/array/isArraysEqual<i32> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $folding-inner1
   block $folding-inner0
    local.get $2
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     call $~lib/array/Array<u8>#get:length
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     call $~lib/array/Array<u8>#get:length
     local.get $2
     i32.ne
     br_if $folding-inner0
     local.get $0
     local.get $1
     i32.eq
     br_if $folding-inner1
    end
    loop $for-loop|0
     local.get $2
     local.get $3
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0
      local.get $0
      local.get $3
      call $~lib/array/Array<i32>#__get
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0
      local.get $1
      local.get $3
      call $~lib/array/Array<i32>#__get
      local.get $4
      i32.ne
      br_if $folding-inner0
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $for-loop|0
     end
    end
    br $folding-inner1
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 0
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $~lib/array/Array<i32>#unshift (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  local.get $0
  i32.load $0 offset=12
  i32.const 1
  i32.add
  local.tee $2
  i32.const 1
  call $~lib/array/ensureCapacity
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.tee $3
  i32.const 4
  i32.add
  local.get $3
  local.get $2
  i32.const 1
  i32.sub
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $3
  local.get $1
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $2
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.lt_s
   select
  end
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
  else
   local.get $2
   local.get $3
   local.get $2
   local.get $3
   i32.lt_s
   select
  end
  local.get $1
  i32.sub
  local.tee $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $3
  i32.const 2
  i32.const 4
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $4
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $4
  i32.store $0
  local.get $4
  i32.load $0 offset=4
  local.set $5
  local.get $2
  local.get $0
  i32.store $0
  local.get $5
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $3
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $2
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/array/Array<i32>#slice@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $1
   end
   i32.const 2147483647
   local.set $2
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<i32>#slice
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<u8>#reverse (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.store $0
  local.get $4
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $2
  local.get $4
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.tee $4
  i32.const 1
  i32.gt_u
  if
   local.get $4
   i32.const 1
   i32.shr_u
   local.set $5
   local.get $4
   i32.const 8
   i32.sub
   local.set $6
   loop $while-continue|0
    local.get $1
    i32.const 7
    i32.add
    local.get $5
    i32.lt_u
    if
     local.get $1
     local.get $2
     i32.add
     local.tee $7
     i64.load $0
     local.tee $3
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $3
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.set $3
     local.get $7
     local.get $2
     local.get $6
     i32.add
     local.get $1
     i32.sub
     local.tee $7
     i64.load $0
     local.tee $8
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $8
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $8
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $8
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store $0
     local.get $7
     local.get $3
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $3
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store $0
     local.get $1
     i32.const 8
     i32.add
     local.set $1
     br $while-continue|0
    end
   end
   local.get $4
   i32.const 1
   i32.sub
   local.set $4
   loop $while-continue|1
    local.get $1
    local.get $5
    i32.lt_u
    if
     local.get $1
     local.get $2
     i32.add
     local.tee $6
     i32.load8_u $0
     local.set $7
     local.get $6
     local.get $2
     local.get $4
     local.get $1
     i32.sub
     i32.add
     local.tee $6
     i32.load8_u $0
     i32.store8 $0
     local.get $6
     local.get $7
     i32.store8 $0
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<u16>#reverse (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $2
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.tee $3
  i32.const 1
  i32.gt_u
  if
   local.get $3
   i32.const 1
   i32.shr_u
   local.set $4
   local.get $3
   i32.const 2
   i32.sub
   local.set $5
   loop $while-continue|0
    local.get $1
    i32.const 1
    i32.add
    local.get $4
    i32.lt_u
    if
     local.get $2
     local.get $5
     local.get $1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.tee $6
     i32.load $0
     i32.const 16
     i32.rotr
     local.set $7
     local.get $6
     local.get $2
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     local.tee $6
     i32.load $0
     i32.const 16
     i32.rotr
     i32.store $0
     local.get $6
     local.get $7
     i32.store $0
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|0
    end
   end
   local.get $3
   i32.const 1
   i32.sub
   local.set $3
   loop $while-continue|1
    local.get $1
    local.get $4
    i32.lt_u
    if
     local.get $2
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     local.tee $5
     i32.load16_u $0
     local.set $6
     local.get $5
     local.get $2
     local.get $3
     local.get $1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.tee $5
     i32.load16_u $0
     i32.store16 $0
     local.get $5
     local.get $6
     i32.store16 $0
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<u16>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<i32>#indexOf (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.tee $3
  i32.eqz
  local.get $2
  local.get $3
  i32.ge_s
  i32.or
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   return
  end
  local.get $2
  i32.const 0
  i32.lt_s
  if
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
   local.set $2
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $0
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $0
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const -1
 )
 (func $~lib/array/Array<i32>#lastIndexOf (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.tee $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const -1
   return
  end
  local.get $2
  local.get $3
  i32.add
  local.get $3
  i32.const 1
  i32.sub
  local.get $2
  local.get $2
  local.get $3
  i32.ge_s
  select
  local.get $2
  i32.const 0
  i32.lt_s
  select
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $0
  loop $while-continue|0
   local.get $2
   i32.const 0
   i32.ge_s
   if
    local.get $0
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $1
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $while-continue|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const -1
 )
 (func $~lib/array/Array<i32>#lastIndexOf@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $2
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<i32>#lastIndexOf
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<i32>#includes (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<i32>#indexOf
  i32.const 0
  i32.ge_s
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<i32>#splice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $3
  local.get $2
  local.get $0
  i32.load $0 offset=12
  local.tee $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.lt_s
   select
  end
  local.tee $1
  i32.sub
  local.tee $4
  local.get $2
  local.get $4
  i32.lt_s
  select
  local.tee $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  i32.const 2
  i32.const 4
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $4
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  local.get $4
  i32.store $0
  local.get $4
  i32.load $0 offset=4
  local.set $6
  local.get $5
  local.get $0
  i32.store $0
  local.get $6
  local.get $0
  i32.load $0 offset=4
  local.tee $5
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.tee $6
  local.get $2
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $1
  local.get $2
  i32.add
  local.tee $1
  local.get $3
  i32.ne
  if
   local.get $6
   local.get $5
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   local.get $3
   local.get $1
   i32.sub
   i32.const 2
   i32.shl
   memory.copy $0 $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $0
  i32.store $0
  local.get $0
  local.get $3
  local.get $2
  i32.sub
  i32.store $0 offset=12
  local.get $1
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/array/Array<i32>#splice@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 2147483647
   local.set $2
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<i32>#splice
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<std/array/Ref>#splice (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $2
  i32.const 2
  local.get $0
  i32.load $0 offset=12
  local.tee $2
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $2
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $2
   local.get $1
   local.get $2
   i32.lt_s
   select
  end
  local.tee $3
  i32.sub
  local.tee $1
  local.get $1
  i32.const 2
  i32.gt_s
  select
  local.tee $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.gt_s
  select
  local.tee $1
  i32.const 2
  i32.const 10
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $4
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  local.get $4
  i32.store $0
  local.get $4
  i32.load $0 offset=4
  local.set $6
  local.get $5
  local.get $0
  i32.store $0
  local.get $6
  local.get $0
  i32.load $0 offset=4
  local.tee $5
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  local.tee $6
  local.get $1
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $2
  local.get $1
  local.get $3
  i32.add
  local.tee $3
  i32.ne
  if
   local.get $6
   local.get $5
   local.get $3
   i32.const 2
   i32.shl
   i32.add
   local.get $2
   local.get $3
   i32.sub
   i32.const 2
   i32.shl
   memory.copy $0 $0
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $0
  local.get $2
  local.get $1
  i32.sub
  i32.store $0 offset=12
  local.get $3
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/array/Array<std/array/Ref>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  local.get $0
  i32.eqz
  if
   i32.const 6416
   i32.const 1104
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<std/array/Ref|null>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.store $0
  local.get $2
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  local.get $2
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<i32>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 1344
    i32.const 1104
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 1
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   local.get $3
   i32.store $0 offset=12
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store $0
  local.get $3
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#findIndex (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $2
   local.get $3
   local.get $0
   i32.load $0 offset=12
   local.tee $4
   local.get $3
   local.get $4
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0 offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $5
    local.get $4
    local.get $0
    i32.store $0
    i32.const 3
    global.set $~argumentsLength
    local.get $5
    local.get $2
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const -1
 )
 (func $start:std/array~anonymous|3 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|5 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $~lib/array/Array<i32>#findLastIndex (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $2
  loop $for-loop|0
   local.get $2
   i32.const 0
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0 offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $4
    local.get $3
    local.get $0
    i32.store $0
    i32.const 3
    global.set $~argumentsLength
    local.get $4
    local.get $2
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const -1
 )
 (func $~lib/array/Array<i32>#every (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $2
   local.get $3
   local.get $0
   i32.load $0 offset=12
   local.tee $4
   local.get $3
   local.get $4
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0 offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $5
    local.get $4
    local.get $0
    i32.store $0
    i32.const 3
    global.set $~argumentsLength
    local.get $5
    local.get $2
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 1
 )
 (func $start:std/array~anonymous|12 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  i32.const 10
  i32.lt_s
 )
 (func $start:std/array~anonymous|14 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  i32.const 3
  i32.lt_s
 )
 (func $~lib/array/Array<i32>#some (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $2
   local.get $3
   local.get $0
   i32.load $0 offset=12
   local.tee $4
   local.get $3
   local.get $4
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0 offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $5
    local.get $4
    local.get $0
    i32.store $0
    i32.const 3
    global.set $~argumentsLength
    local.get $5
    local.get $2
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 1
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $start:std/array~anonymous|17 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  i32.const 10
  i32.gt_s
 )
 (func $start:std/array~anonymous|19 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  i32.const 3
  i32.gt_s
 )
 (func $~lib/array/Array<i32>#forEach (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $2
   local.get $3
   local.get $0
   i32.load $0 offset=12
   local.tee $4
   local.get $3
   local.get $4
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0 offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $5
    local.get $4
    local.get $0
    i32.store $0
    i32.const 3
    global.set $~argumentsLength
    local.get $5
    local.get $2
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:std/array~anonymous|21 (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:std/array~anonymous|23 (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:std/array~anonymous|24 (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $1
  i32.eqz
  if
   loop $for-loop|0
    local.get $3
    i32.const 4
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $2
     call $~lib/array/Array<i32>#pop
     drop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   i32.const 0
   local.set $3
   loop $for-loop|1
    local.get $3
    i32.const 100
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $2
     local.get $3
     i32.const 100
     i32.add
     call $~lib/array/Array<i32>#push
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|1
    end
   end
   i32.const 0
   local.set $3
   loop $for-loop|2
    local.get $3
    i32.const 100
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $2
     call $~lib/array/Array<i32>#pop
     drop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|2
    end
   end
   i32.const 0
   local.set $3
   loop $for-loop|3
    local.get $3
    i32.const 100
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $2
     local.get $3
     i32.const 200
     i32.add
     call $~lib/array/Array<i32>#push
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|3
    end
   end
  end
  local.get $1
  i32.const 2
  i32.eq
  local.get $0
  i32.const 202
  i32.ne
  i32.and
  if
   i32.const 0
   i32.const 1552
   i32.const 767
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:std/array~anonymous|27 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<i32>#map<i32> (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.store $0 offset=8
  local.get $3
  local.get $0
  i32.store $0
  local.get $3
  local.get $0
  i32.load $0 offset=12
  local.tee $4
  i32.const 2
  i32.const 4
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0
  local.get $3
  i32.load $0 offset=4
  local.set $5
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $2
   local.get $4
   local.get $0
   i32.load $0 offset=12
   local.tee $3
   local.get $3
   local.get $4
   i32.gt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $6
    local.get $0
    i32.store $0 offset=8
    local.get $2
    i32.const 2
    i32.shl
    local.tee $7
    local.get $0
    i32.load $0 offset=4
    i32.add
    i32.load $0
    local.set $3
    local.get $6
    local.get $0
    i32.store $0
    i32.const 3
    global.set $~argumentsLength
    local.get $5
    local.get $7
    i32.add
    local.get $3
    local.get $2
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store $0
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:std/array~anonymous|29 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<i32>#filter (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  i32.const 0
  i32.const 2
  i32.const 4
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=12
  local.set $3
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $3
   local.get $0
   i32.load $0 offset=12
   local.tee $4
   local.get $3
   local.get $4
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0 offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $6
    local.get $4
    local.get $0
    i32.store $0 offset=4
    i32.const 3
    global.set $~argumentsLength
    local.get $6
    local.get $2
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0 offset=4
     local.get $5
     local.get $6
     call $~lib/array/Array<i32>#push
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $start:std/array~anonymous|31 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|33 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $2
  i32.store $0
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $~lib/array/Array<i32>#reduce<i32> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store $0
  local.get $4
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $4
  loop $for-loop|0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $3
   local.get $4
   local.get $0
   i32.load $0 offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $5
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0 offset=4
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $6
    local.get $5
    local.get $0
    i32.store $0
    i32.const 4
    global.set $~argumentsLength
    local.get $2
    local.get $6
    local.get $3
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $2
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $start:std/array~anonymous|38 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $3
  i32.store $0
  local.get $3
  i32.const 1
  call $~lib/array/Array<i32>#push
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.add
 )
 (func $start:std/array~anonymous|40 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $3
  i32.store $0
  local.get $3
  call $~lib/array/Array<i32>#pop
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.add
 )
 (func $~lib/array/Array<i32>#reduceRight<i32> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  i32.const 1
  i32.sub
  local.set $3
  loop $for-loop|0
   local.get $3
   i32.const 0
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $4
    local.get $0
    i32.store $0 offset=4
    local.get $0
    i32.load $0 offset=4
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $5
    local.get $4
    local.get $0
    i32.store $0
    i32.const 4
    global.set $~argumentsLength
    local.get $2
    local.get $5
    local.get $3
    local.get $0
    local.get $1
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $2
    local.get $3
    i32.const 1
    i32.sub
    local.set $3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $std/array/Dim#constructor (result i32)
  (local $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 8
   i32.const 22
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 0
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48992
  i32.const 49040
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/sort/SORT<f32> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i64)
  (local $15 f32)
  (local $16 f32)
  (local $17 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $folding-inner0
   local.get $1
   i32.const 48
   i32.le_s
   if
    local.get $1
    i32.const 1
    i32.le_s
    br_if $folding-inner0
    block $break|0
     block $case1|0
      local.get $1
      i32.const 3
      i32.ne
      if
       local.get $1
       i32.const 2
       i32.eq
       br_if $case1|0
       br $break|0
      end
      local.get $0
      f32.load $0
      local.set $9
      local.get $0
      f32.load $0 offset=4
      local.set $15
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $15
      local.get $9
      local.get $9
      local.get $15
      local.get $2
      i32.load $0
      call_indirect $0 (type $f32_f32_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $1
      select
      f32.store $0
      local.get $0
      f32.load $0 offset=8
      local.set $16
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $16
      local.get $9
      local.get $15
      local.get $1
      select
      local.tee $9
      local.get $9
      local.get $16
      local.get $2
      i32.load $0
      call_indirect $0 (type $f32_f32_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $1
      select
      f32.store $0 offset=4
      local.get $0
      local.get $9
      local.get $16
      local.get $1
      select
      f32.store $0 offset=8
     end
     local.get $0
     f32.load $0
     local.set $9
     local.get $0
     f32.load $0 offset=4
     local.set $15
     i32.const 2
     global.set $~argumentsLength
     local.get $0
     local.get $15
     local.get $9
     local.get $9
     local.get $15
     local.get $2
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.tee $1
     select
     f32.store $0
     local.get $0
     local.get $9
     local.get $15
     local.get $1
     select
     f32.store $0 offset=4
     br $folding-inner0
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $0
    i32.const 0
    local.get $1
    i32.const 1
    i32.sub
    i32.const 0
    local.get $2
    call $~lib/util/sort/insertionSort<f32>
    br $folding-inner0
   end
   i32.const 33
   local.get $1
   i32.clz
   i32.sub
   local.tee $4
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 1
   i32.shl
   local.set $6
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   local.get $5
   global.get $~lib/rt/tlsf/ROOT
   local.get $6
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.tee $11
   i32.add
   local.set $12
   loop $for-loop|1
    local.get $3
    local.get $4
    i32.lt_u
    if
     local.get $11
     local.get $3
     i32.const 2
     i32.shl
     i32.add
     i32.const -1
     i32.store $0
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|1
    end
   end
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   global.get $~lib/rt/tlsf/ROOT
   local.get $1
   i32.const 2
   i32.shl
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   local.tee $10
   local.get $2
   call $~lib/util/sort/extendRunRight<f32>
   local.tee $4
   i32.const 1
   i32.add
   local.tee $1
   i32.const 32
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $0
    i32.const 0
    i32.const 31
    local.get $10
    local.get $10
    i32.const 31
    i32.ge_s
    select
    local.tee $4
    local.get $1
    local.get $2
    call $~lib/util/sort/insertionSort<f32>
   end
   i32.const 0
   local.set $1
   i32.const 0
   local.set $3
   loop $while-continue|2
    local.get $4
    local.get $10
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $0
     local.get $4
     i32.const 1
     i32.add
     local.tee $6
     local.get $10
     local.get $2
     call $~lib/util/sort/extendRunRight<f32>
     local.tee $5
     local.get $6
     i32.sub
     i32.const 1
     i32.add
     local.tee $7
     i32.const 32
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $0
      local.get $6
      local.get $10
      local.get $6
      i32.const 31
      i32.add
      local.tee $5
      local.get $5
      local.get $10
      i32.gt_s
      select
      local.tee $5
      local.get $7
      local.get $2
      call $~lib/util/sort/insertionSort<f32>
     end
     local.get $3
     local.get $6
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $10
     i32.const 1
     i32.add
     i64.extend_i32_u
     local.tee $14
     i64.div_u
     local.get $5
     local.get $6
     i32.add
     i32.const 1
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $14
     i64.div_u
     i64.xor
     i32.wrap_i64
     i32.clz
     local.set $7
     loop $for-loop|3
      local.get $1
      local.get $7
      i32.gt_u
      if
       local.get $11
       local.get $1
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $8
       i32.const -1
       i32.ne
       if
        local.get $1
        i32.const 2
        i32.shl
        local.tee $17
        local.get $12
        i32.add
        i32.load $0
        i32.const 1
        i32.add
        local.set $3
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0
        local.get $0
        local.get $8
        local.get $3
        local.get $4
        local.get $13
        local.get $2
        call $~lib/util/sort/mergeRuns<f32>
        local.get $11
        local.get $17
        i32.add
        i32.const -1
        i32.store $0
        local.get $8
        local.set $3
       end
       local.get $1
       i32.const 1
       i32.sub
       local.set $1
       br $for-loop|3
      end
     end
     local.get $7
     i32.const 2
     i32.shl
     local.tee $1
     local.get $11
     i32.add
     local.get $3
     i32.store $0
     local.get $1
     local.get $12
     i32.add
     local.get $4
     i32.store $0
     local.get $6
     local.set $3
     local.get $5
     local.set $4
     local.get $7
     local.set $1
     br $while-continue|2
    end
   end
   loop $for-loop|4
    local.get $1
    if
     local.get $11
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $3
     i32.const -1
     i32.ne
     if
      local.get $12
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      i32.const 1
      i32.add
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $0
      local.get $3
      local.get $4
      local.get $10
      local.get $13
      local.get $2
      call $~lib/util/sort/mergeRuns<f32>
     end
     local.get $1
     i32.const 1
     i32.sub
     local.set $1
     br $for-loop|4
    end
   end
   local.get $13
   call $~lib/rt/tlsf/__free
   local.get $11
   call $~lib/rt/tlsf/__free
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<f32>#sort@varargs (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 10256
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 10256
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0 offset=4
   local.get $2
   local.get $1
   i32.store $0 offset=8
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.load $0 offset=4
   local.set $3
   local.get $2
   local.get $0
   i32.store $0 offset=4
   local.get $0
   i32.load $0 offset=12
   local.set $0
   local.get $2
   local.get $1
   i32.store $0
   local.get $3
   local.get $0
   local.get $1
   call $~lib/util/sort/SORT<f32>
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 48992
  i32.const 49040
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/sort/SORT<f64> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 f64)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i64)
  (local $15 f64)
  (local $16 f64)
  (local $17 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $folding-inner0
   local.get $1
   i32.const 48
   i32.le_s
   if
    local.get $1
    i32.const 1
    i32.le_s
    br_if $folding-inner0
    block $break|0
     block $case1|0
      local.get $1
      i32.const 3
      i32.ne
      if
       local.get $1
       i32.const 2
       i32.eq
       br_if $case1|0
       br $break|0
      end
      local.get $0
      f64.load $0
      local.set $9
      local.get $0
      f64.load $0 offset=8
      local.set $15
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $15
      local.get $9
      local.get $9
      local.get $15
      local.get $2
      i32.load $0
      call_indirect $0 (type $f64_f64_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $1
      select
      f64.store $0
      local.get $0
      f64.load $0 offset=16
      local.set $16
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $16
      local.get $9
      local.get $15
      local.get $1
      select
      local.tee $9
      local.get $9
      local.get $16
      local.get $2
      i32.load $0
      call_indirect $0 (type $f64_f64_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $1
      select
      f64.store $0 offset=8
      local.get $0
      local.get $9
      local.get $16
      local.get $1
      select
      f64.store $0 offset=16
     end
     local.get $0
     f64.load $0
     local.set $9
     local.get $0
     f64.load $0 offset=8
     local.set $15
     i32.const 2
     global.set $~argumentsLength
     local.get $0
     local.get $15
     local.get $9
     local.get $9
     local.get $15
     local.get $2
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.tee $1
     select
     f64.store $0
     local.get $0
     local.get $9
     local.get $15
     local.get $1
     select
     f64.store $0 offset=8
     br $folding-inner0
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $0
    i32.const 0
    local.get $1
    i32.const 1
    i32.sub
    i32.const 0
    local.get $2
    call $~lib/util/sort/insertionSort<f64>
    br $folding-inner0
   end
   i32.const 33
   local.get $1
   i32.clz
   i32.sub
   local.tee $4
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 1
   i32.shl
   local.set $6
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   local.get $5
   global.get $~lib/rt/tlsf/ROOT
   local.get $6
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.tee $11
   i32.add
   local.set $12
   loop $for-loop|1
    local.get $3
    local.get $4
    i32.lt_u
    if
     local.get $11
     local.get $3
     i32.const 2
     i32.shl
     i32.add
     i32.const -1
     i32.store $0
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|1
    end
   end
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   global.get $~lib/rt/tlsf/ROOT
   local.get $1
   i32.const 3
   i32.shl
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.set $13
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   local.tee $10
   local.get $2
   call $~lib/util/sort/extendRunRight<f64>
   local.tee $4
   i32.const 1
   i32.add
   local.tee $1
   i32.const 32
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $0
    i32.const 0
    i32.const 31
    local.get $10
    local.get $10
    i32.const 31
    i32.ge_s
    select
    local.tee $4
    local.get $1
    local.get $2
    call $~lib/util/sort/insertionSort<f64>
   end
   i32.const 0
   local.set $1
   i32.const 0
   local.set $3
   loop $while-continue|2
    local.get $4
    local.get $10
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $0
     local.get $4
     i32.const 1
     i32.add
     local.tee $6
     local.get $10
     local.get $2
     call $~lib/util/sort/extendRunRight<f64>
     local.tee $5
     local.get $6
     i32.sub
     i32.const 1
     i32.add
     local.tee $7
     i32.const 32
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $0
      local.get $6
      local.get $10
      local.get $6
      i32.const 31
      i32.add
      local.tee $5
      local.get $5
      local.get $10
      i32.gt_s
      select
      local.tee $5
      local.get $7
      local.get $2
      call $~lib/util/sort/insertionSort<f64>
     end
     local.get $3
     local.get $6
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $10
     i32.const 1
     i32.add
     i64.extend_i32_u
     local.tee $14
     i64.div_u
     local.get $5
     local.get $6
     i32.add
     i32.const 1
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $14
     i64.div_u
     i64.xor
     i32.wrap_i64
     i32.clz
     local.set $7
     loop $for-loop|3
      local.get $1
      local.get $7
      i32.gt_u
      if
       local.get $11
       local.get $1
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $8
       i32.const -1
       i32.ne
       if
        local.get $1
        i32.const 2
        i32.shl
        local.tee $17
        local.get $12
        i32.add
        i32.load $0
        i32.const 1
        i32.add
        local.set $3
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0
        local.get $0
        local.get $8
        local.get $3
        local.get $4
        local.get $13
        local.get $2
        call $~lib/util/sort/mergeRuns<f64>
        local.get $11
        local.get $17
        i32.add
        i32.const -1
        i32.store $0
        local.get $8
        local.set $3
       end
       local.get $1
       i32.const 1
       i32.sub
       local.set $1
       br $for-loop|3
      end
     end
     local.get $7
     i32.const 2
     i32.shl
     local.tee $1
     local.get $11
     i32.add
     local.get $3
     i32.store $0
     local.get $1
     local.get $12
     i32.add
     local.get $4
     i32.store $0
     local.get $6
     local.set $3
     local.get $5
     local.set $4
     local.get $7
     local.set $1
     br $while-continue|2
    end
   end
   loop $for-loop|4
    local.get $1
    if
     local.get $11
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $3
     i32.const -1
     i32.ne
     if
      local.get $12
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      i32.const 1
      i32.add
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $0
      local.get $3
      local.get $4
      local.get $10
      local.get $13
      local.get $2
      call $~lib/util/sort/mergeRuns<f64>
     end
     local.get $1
     i32.const 1
     i32.sub
     local.set $1
     br $for-loop|4
    end
   end
   local.get $13
   call $~lib/rt/tlsf/__free
   local.get $11
   call $~lib/rt/tlsf/__free
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<f64>#__get (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store $0
  local.get $3
  local.get $0
  i32.store $0
  local.get $1
  local.get $0
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  local.set $2
  local.get $3
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/util/sort/SORT<i32> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $folding-inner0
   local.get $1
   i32.const 48
   i32.le_s
   if
    local.get $1
    i32.const 1
    i32.le_s
    br_if $folding-inner0
    block $break|0
     block $case1|0
      local.get $1
      i32.const 3
      i32.ne
      if
       local.get $1
       i32.const 2
       i32.eq
       br_if $case1|0
       br $break|0
      end
      local.get $0
      i32.load $0
      local.set $1
      local.get $0
      i32.load $0 offset=4
      local.set $3
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $3
      local.get $1
      local.get $1
      local.get $3
      local.get $2
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $4
      select
      i32.store $0
      local.get $0
      i32.load $0 offset=8
      local.set $5
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $5
      local.get $1
      local.get $3
      local.get $4
      select
      local.tee $1
      local.get $1
      local.get $5
      local.get $2
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $3
      select
      i32.store $0 offset=4
      local.get $0
      local.get $1
      local.get $5
      local.get $3
      select
      i32.store $0 offset=8
     end
     local.get $0
     i32.load $0
     local.set $1
     local.get $0
     i32.load $0 offset=4
     local.set $3
     i32.const 2
     global.set $~argumentsLength
     local.get $0
     local.get $3
     local.get $1
     local.get $1
     local.get $3
     local.get $2
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.tee $2
     select
     i32.store $0
     local.get $0
     local.get $1
     local.get $3
     local.get $2
     select
     i32.store $0 offset=4
     br $folding-inner0
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $0
    i32.const 0
    local.get $1
    i32.const 1
    i32.sub
    i32.const 0
    local.get $2
    call $~lib/util/sort/insertionSort<i32>
    br $folding-inner0
   end
   i32.const 33
   local.get $1
   i32.clz
   i32.sub
   local.tee $4
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 1
   i32.shl
   local.set $6
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   local.get $5
   global.get $~lib/rt/tlsf/ROOT
   local.get $6
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.tee $10
   i32.add
   local.set $11
   loop $for-loop|1
    local.get $3
    local.get $4
    i32.lt_u
    if
     local.get $10
     local.get $3
     i32.const 2
     i32.shl
     i32.add
     i32.const -1
     i32.store $0
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|1
    end
   end
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   global.get $~lib/rt/tlsf/ROOT
   local.get $1
   i32.const 2
   i32.shl
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   local.tee $9
   local.get $2
   call $~lib/util/sort/extendRunRight<i32>
   local.tee $4
   i32.const 1
   i32.add
   local.tee $1
   i32.const 32
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $0
    i32.const 0
    i32.const 31
    local.get $9
    local.get $9
    i32.const 31
    i32.ge_s
    select
    local.tee $4
    local.get $1
    local.get $2
    call $~lib/util/sort/insertionSort<i32>
   end
   i32.const 0
   local.set $1
   i32.const 0
   local.set $3
   loop $while-continue|2
    local.get $4
    local.get $9
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $0
     local.get $4
     i32.const 1
     i32.add
     local.tee $6
     local.get $9
     local.get $2
     call $~lib/util/sort/extendRunRight<i32>
     local.tee $5
     local.get $6
     i32.sub
     i32.const 1
     i32.add
     local.tee $7
     i32.const 32
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $0
      local.get $6
      local.get $9
      local.get $6
      i32.const 31
      i32.add
      local.tee $5
      local.get $5
      local.get $9
      i32.gt_s
      select
      local.tee $5
      local.get $7
      local.get $2
      call $~lib/util/sort/insertionSort<i32>
     end
     local.get $3
     local.get $6
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $9
     i32.const 1
     i32.add
     i64.extend_i32_u
     local.tee $13
     i64.div_u
     local.get $5
     local.get $6
     i32.add
     i32.const 1
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $13
     i64.div_u
     i64.xor
     i32.wrap_i64
     i32.clz
     local.set $7
     loop $for-loop|3
      local.get $1
      local.get $7
      i32.gt_u
      if
       local.get $10
       local.get $1
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $8
       i32.const -1
       i32.ne
       if
        local.get $1
        i32.const 2
        i32.shl
        local.tee $14
        local.get $11
        i32.add
        i32.load $0
        i32.const 1
        i32.add
        local.set $3
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0
        local.get $0
        local.get $8
        local.get $3
        local.get $4
        local.get $12
        local.get $2
        call $~lib/util/sort/mergeRuns<i32>
        local.get $10
        local.get $14
        i32.add
        i32.const -1
        i32.store $0
        local.get $8
        local.set $3
       end
       local.get $1
       i32.const 1
       i32.sub
       local.set $1
       br $for-loop|3
      end
     end
     local.get $7
     i32.const 2
     i32.shl
     local.tee $1
     local.get $10
     i32.add
     local.get $3
     i32.store $0
     local.get $1
     local.get $11
     i32.add
     local.get $4
     i32.store $0
     local.get $6
     local.set $3
     local.get $5
     local.set $4
     local.get $7
     local.set $1
     br $while-continue|2
    end
   end
   loop $for-loop|4
    local.get $1
    if
     local.get $10
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $3
     i32.const -1
     i32.ne
     if
      local.get $11
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      i32.const 1
      i32.add
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $0
      local.get $3
      local.get $4
      local.get $9
      local.get $12
      local.get $2
      call $~lib/util/sort/mergeRuns<i32>
     end
     local.get $1
     i32.const 1
     i32.sub
     local.set $1
     br $for-loop|4
    end
   end
   local.get $12
   call $~lib/rt/tlsf/__free
   local.get $10
   call $~lib/rt/tlsf/__free
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#sort (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=4
  local.set $3
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=12
  local.set $4
  local.get $2
  local.get $1
  i32.store $0
  local.get $3
  local.get $4
  local.get $1
  call $~lib/util/sort/SORT<i32>
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/util/sort/SORT<u32> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $folding-inner0
   local.get $1
   i32.const 48
   i32.le_s
   if
    local.get $1
    i32.const 1
    i32.le_s
    br_if $folding-inner0
    block $break|0
     block $case1|0
      local.get $1
      i32.const 3
      i32.ne
      if
       local.get $1
       i32.const 2
       i32.eq
       br_if $case1|0
       br $break|0
      end
      local.get $0
      i32.load $0
      local.set $1
      local.get $0
      i32.load $0 offset=4
      local.set $3
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $3
      local.get $1
      local.get $1
      local.get $3
      local.get $2
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $4
      select
      i32.store $0
      local.get $0
      i32.load $0 offset=8
      local.set $5
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $5
      local.get $1
      local.get $3
      local.get $4
      select
      local.tee $1
      local.get $1
      local.get $5
      local.get $2
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $3
      select
      i32.store $0 offset=4
      local.get $0
      local.get $1
      local.get $5
      local.get $3
      select
      i32.store $0 offset=8
     end
     local.get $0
     i32.load $0
     local.set $1
     local.get $0
     i32.load $0 offset=4
     local.set $3
     i32.const 2
     global.set $~argumentsLength
     local.get $0
     local.get $3
     local.get $1
     local.get $1
     local.get $3
     local.get $2
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.tee $2
     select
     i32.store $0
     local.get $0
     local.get $1
     local.get $3
     local.get $2
     select
     i32.store $0 offset=4
     br $folding-inner0
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $0
    i32.const 0
    local.get $1
    i32.const 1
    i32.sub
    i32.const 0
    local.get $2
    call $~lib/util/sort/insertionSort<u32>
    br $folding-inner0
   end
   i32.const 33
   local.get $1
   i32.clz
   i32.sub
   local.tee $4
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 1
   i32.shl
   local.set $6
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   local.get $5
   global.get $~lib/rt/tlsf/ROOT
   local.get $6
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.tee $10
   i32.add
   local.set $11
   loop $for-loop|1
    local.get $3
    local.get $4
    i32.lt_u
    if
     local.get $10
     local.get $3
     i32.const 2
     i32.shl
     i32.add
     i32.const -1
     i32.store $0
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|1
    end
   end
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   global.get $~lib/rt/tlsf/ROOT
   local.get $1
   i32.const 2
   i32.shl
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   local.tee $9
   local.get $2
   call $~lib/util/sort/extendRunRight<u32>
   local.tee $4
   i32.const 1
   i32.add
   local.tee $1
   i32.const 32
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $0
    i32.const 0
    i32.const 31
    local.get $9
    local.get $9
    i32.const 31
    i32.ge_s
    select
    local.tee $4
    local.get $1
    local.get $2
    call $~lib/util/sort/insertionSort<u32>
   end
   i32.const 0
   local.set $1
   i32.const 0
   local.set $3
   loop $while-continue|2
    local.get $4
    local.get $9
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     local.get $0
     local.get $4
     i32.const 1
     i32.add
     local.tee $6
     local.get $9
     local.get $2
     call $~lib/util/sort/extendRunRight<u32>
     local.tee $5
     local.get $6
     i32.sub
     i32.const 1
     i32.add
     local.tee $7
     i32.const 32
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $0
      local.get $6
      local.get $9
      local.get $6
      i32.const 31
      i32.add
      local.tee $5
      local.get $5
      local.get $9
      i32.gt_s
      select
      local.tee $5
      local.get $7
      local.get $2
      call $~lib/util/sort/insertionSort<u32>
     end
     local.get $3
     local.get $6
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $9
     i32.const 1
     i32.add
     i64.extend_i32_u
     local.tee $13
     i64.div_u
     local.get $5
     local.get $6
     i32.add
     i32.const 1
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $13
     i64.div_u
     i64.xor
     i32.wrap_i64
     i32.clz
     local.set $7
     loop $for-loop|3
      local.get $1
      local.get $7
      i32.gt_u
      if
       local.get $10
       local.get $1
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $8
       i32.const -1
       i32.ne
       if
        local.get $1
        i32.const 2
        i32.shl
        local.tee $14
        local.get $11
        i32.add
        i32.load $0
        i32.const 1
        i32.add
        local.set $3
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0
        local.get $0
        local.get $8
        local.get $3
        local.get $4
        local.get $12
        local.get $2
        call $~lib/util/sort/mergeRuns<u32>
        local.get $10
        local.get $14
        i32.add
        i32.const -1
        i32.store $0
        local.get $8
        local.set $3
       end
       local.get $1
       i32.const 1
       i32.sub
       local.set $1
       br $for-loop|3
      end
     end
     local.get $7
     i32.const 2
     i32.shl
     local.tee $1
     local.get $10
     i32.add
     local.get $3
     i32.store $0
     local.get $1
     local.get $11
     i32.add
     local.get $4
     i32.store $0
     local.get $6
     local.set $3
     local.get $5
     local.set $4
     local.get $7
     local.set $1
     br $while-continue|2
    end
   end
   loop $for-loop|4
    local.get $1
    if
     local.get $10
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $3
     i32.const -1
     i32.ne
     if
      local.get $11
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      i32.const 1
      i32.add
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0
      local.get $0
      local.get $3
      local.get $4
      local.get $9
      local.get $12
      local.get $2
      call $~lib/util/sort/mergeRuns<u32>
     end
     local.get $1
     i32.const 1
     i32.sub
     local.set $1
     br $for-loop|4
    end
   end
   local.get $12
   call $~lib/rt/tlsf/__free
   local.get $10
   call $~lib/rt/tlsf/__free
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/array/createReverseOrderedArray (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  call $~lib/array/Array<i32>#constructor
  local.tee $2
  i32.store $0
  loop $for-loop|0
   local.get $0
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $2
    local.get $1
    local.get $0
    i32.const 1
    i32.sub
    local.get $1
    i32.sub
    call $~lib/array/Array<i32>#__set
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $std/array/createRandomOrderedArray (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  call $~lib/array/Array<i32>#constructor
  local.tee $2
  i32.store $0
  loop $for-loop|0
   local.get $0
   local.get $1
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=4
    local.get $2
    local.get $1
    call $~lib/math/NativeMath.random
    local.get $0
    f64.convert_i32_s
    f64.mul
    i32.trunc_sat_f64_s
    call $~lib/array/Array<i32>#__set
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $std/array/assertSorted<i32> (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i64.const 0
   i64.store $0 offset=8
   block $__inlined_func$std/array/isSorted<i32> (result i32)
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $2
    local.get $1
    i32.store $0 offset=12
    local.get $0
    local.get $1
    call $~lib/array/Array<i32>#sort
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i32.const 0
    i32.store $0
    i32.const 1
    local.set $0
    local.get $2
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/array/Array<u8>#get:length
    local.set $4
    loop $for-loop|0
     local.get $0
     local.get $4
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      local.get $0
      i32.const 1
      i32.sub
      call $~lib/array/Array<i32>#__get
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      local.get $0
      call $~lib/array/Array<i32>#__get
      local.set $2
      i32.const 2
      global.set $~argumentsLength
      local.get $5
      local.get $2
      local.get $1
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 0
       br $__inlined_func$std/array/isSorted<i32>
      end
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1080
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 48992
  i32.const 49040
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $std/array/assertSortedDefault<i32> (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 11120
  i32.store $0 offset=4
  local.get $0
  i32.const 11120
  call $std/array/assertSorted<i32>
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/array/assertStableSortedForComplexObjects~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0
  local.set $0
  local.get $2
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.load $0
  i32.sub
  local.set $0
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/util/sort/insertionSort<std/array/Dim> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  local.get $1
  local.get $3
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.tee $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  select
  i32.add
  local.set $8
  loop $for-loop|0
   local.get $2
   local.get $8
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $7
    local.get $0
    local.get $8
    i32.const 2
    i32.shl
    i32.add
    local.tee $5
    i32.load $0
    local.tee $3
    i32.store $0
    local.get $7
    local.get $5
    i32.load $0 offset=4
    local.tee $5
    i32.store $0 offset=4
    local.get $5
    local.set $6
    local.get $7
    local.get $5
    i32.store $0 offset=8
    local.get $7
    local.get $3
    i32.store $0 offset=12
    local.get $7
    local.get $3
    i32.store $0 offset=16
    local.get $7
    local.get $5
    i32.store $0 offset=20
    i32.const 2
    global.set $~argumentsLength
    local.get $3
    local.get $5
    local.get $4
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $7
     local.get $3
     local.tee $6
     i32.store $0 offset=8
     local.get $7
     local.get $5
     local.tee $3
     i32.store $0 offset=12
    end
    local.get $8
    i32.const 1
    i32.sub
    local.set $9
    loop $while-continue|1
     local.get $1
     local.get $9
     i32.le_s
     if
      block $while-break|1
       global.get $~lib/memory/__stack_pointer
       local.tee $5
       local.get $0
       local.get $9
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $7
       i32.store $0
       local.get $5
       local.get $7
       i32.store $0 offset=16
       local.get $5
       local.get $3
       i32.store $0 offset=20
       i32.const 2
       global.set $~argumentsLength
       local.get $7
       local.get $3
       local.get $4
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|1
       local.get $0
       local.get $9
       i32.const 2
       i32.shl
       i32.add
       local.get $7
       i32.store $0 offset=8
       local.get $9
       i32.const 1
       i32.sub
       local.set $9
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $9
    i32.const 2
    i32.shl
    i32.add
    local.get $3
    i32.store $0 offset=8
    loop $while-continue|2
     local.get $1
     local.get $9
     i32.le_s
     if
      block $while-break|2
       global.get $~lib/memory/__stack_pointer
       local.tee $5
       local.get $0
       local.get $9
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $3
       i32.store $0
       local.get $5
       local.get $3
       i32.store $0 offset=16
       local.get $5
       local.get $6
       i32.store $0 offset=20
       i32.const 2
       global.set $~argumentsLength
       local.get $3
       local.get $6
       local.get $4
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|2
       local.get $0
       local.get $9
       i32.const 2
       i32.shl
       i32.add
       local.get $3
       i32.store $0 offset=4
       local.get $9
       i32.const 1
       i32.sub
       local.set $9
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $9
    i32.const 2
    i32.shl
    i32.add
    local.get $6
    i32.store $0 offset=4
    local.get $8
    i32.const 2
    i32.add
    local.set $8
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/extendRunRight<std/array/Dim> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store $0
  local.get $4
  i32.const 0
  i32.store $0 offset=8
  local.get $1
  local.get $2
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $5
  i32.store $0
  local.get $4
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $6
  i32.store $0 offset=4
  i32.const 2
  global.set $~argumentsLength
  local.get $5
  local.get $6
  local.get $3
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $7
     i32.load $0 offset=4
     local.tee $5
     i32.store $0
     local.get $6
     local.get $7
     i32.load $0
     local.tee $6
     i32.store $0 offset=4
     i32.const 2
     global.set $~argumentsLength
     local.get $5
     local.get $6
     local.get $3
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $2
   loop $while-continue|1
    local.get $1
    local.get $2
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load $0
     local.tee $5
     i32.store $0 offset=8
     local.get $3
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load $0
     i32.store $0
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $3
     local.get $5
     i32.store $0
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $5
     i32.load $0 offset=4
     local.tee $6
     i32.store $0
     local.get $1
     local.get $5
     i32.load $0
     local.tee $1
     i32.store $0 offset=4
     i32.const 2
     global.set $~argumentsLength
     local.get $6
     local.get $1
     local.get $3
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/util/sort/mergeRuns<std/array/Dim> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $6
  i64.const 0
  i64.store $0
  local.get $6
  i64.const 0
  i64.store $0 offset=8
  local.get $3
  local.get $2
  i32.const 1
  i32.sub
  local.tee $2
  i32.add
  local.set $7
  local.get $2
  i32.const 1
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $1
   local.get $6
   i32.lt_s
   if
    local.get $6
    i32.const 1
    i32.sub
    local.tee $6
    i32.const 2
    i32.shl
    local.tee $8
    local.get $4
    i32.add
    local.get $0
    local.get $8
    i32.add
    i32.load $0
    i32.store $0
    br $for-loop|0
   end
  end
  loop $for-loop|1
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $4
    local.get $7
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
  loop $for-loop|2
   local.get $1
   local.get $3
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $8
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $9
    i32.store $0
    local.get $8
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $7
    i32.store $0 offset=4
    local.get $8
    local.get $9
    i32.store $0 offset=8
    local.get $8
    local.get $7
    i32.store $0 offset=12
    i32.const 2
    global.set $~argumentsLength
    local.get $9
    local.get $7
    local.get $5
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $9
     i32.store $0
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
    else
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store $0
     local.get $6
     i32.const 1
     i32.add
     local.set $6
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/SORT<std/array/Dim> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill $0
  block $folding-inner0
   local.get $1
   i32.const 48
   i32.le_s
   if
    local.get $1
    i32.const 1
    i32.le_s
    br_if $folding-inner0
    block $break|0
     block $case1|0
      local.get $1
      i32.const 3
      i32.ne
      if
       local.get $1
       i32.const 2
       i32.eq
       br_if $case1|0
       br $break|0
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.load $0
      local.tee $3
      i32.store $0
      local.get $1
      local.get $0
      i32.load $0 offset=4
      local.tee $4
      i32.store $0 offset=4
      local.get $1
      local.get $3
      i32.store $0 offset=8
      local.get $1
      local.get $4
      i32.store $0 offset=12
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $4
      local.get $3
      local.get $3
      local.get $4
      local.get $2
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $1
      select
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $3
      local.get $4
      local.get $1
      select
      local.tee $1
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load $0 offset=8
      local.tee $3
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.store $0 offset=8
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=12
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $3
      local.get $1
      local.get $1
      local.get $3
      local.get $2
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $4
      select
      i32.store $0 offset=4
      local.get $0
      local.get $1
      local.get $3
      local.get $4
      select
      i32.store $0 offset=8
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.load $0
     local.tee $3
     i32.store $0 offset=16
     local.get $1
     local.get $0
     i32.load $0 offset=4
     local.tee $4
     i32.store $0 offset=20
     local.get $1
     local.get $3
     i32.store $0 offset=8
     local.get $1
     local.get $4
     i32.store $0 offset=12
     i32.const 2
     global.set $~argumentsLength
     local.get $0
     local.get $4
     local.get $3
     local.get $3
     local.get $4
     local.get $2
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.tee $1
     select
     i32.store $0
     local.get $0
     local.get $3
     local.get $4
     local.get $1
     select
     i32.store $0 offset=4
     br $folding-inner0
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=8
    local.get $0
    i32.const 0
    local.get $1
    i32.const 1
    i32.sub
    i32.const 0
    local.get $2
    call $~lib/util/sort/insertionSort<std/array/Dim>
    br $folding-inner0
   end
   i32.const 33
   local.get $1
   i32.clz
   i32.sub
   local.tee $3
   i32.const 2
   i32.shl
   local.tee $5
   i32.const 1
   i32.shl
   local.set $6
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   local.get $5
   global.get $~lib/rt/tlsf/ROOT
   local.get $6
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.tee $10
   i32.add
   local.set $11
   loop $for-loop|1
    local.get $3
    local.get $4
    i32.gt_u
    if
     local.get $10
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.const -1
     i32.store $0
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|1
    end
   end
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   global.get $~lib/rt/tlsf/ROOT
   local.get $1
   i32.const 2
   i32.shl
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.set $12
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   local.tee $9
   local.get $2
   call $~lib/util/sort/extendRunRight<std/array/Dim>
   local.tee $5
   i32.const 1
   i32.add
   local.tee $1
   i32.const 32
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0 offset=8
    local.get $0
    i32.const 0
    i32.const 31
    local.get $9
    local.get $9
    i32.const 31
    i32.ge_s
    select
    local.tee $5
    local.get $1
    local.get $2
    call $~lib/util/sort/insertionSort<std/array/Dim>
   end
   i32.const 0
   local.set $4
   i32.const 0
   local.set $1
   loop $while-continue|2
    local.get $5
    local.get $9
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=8
     local.get $0
     local.get $5
     i32.const 1
     i32.add
     local.tee $6
     local.get $9
     local.get $2
     call $~lib/util/sort/extendRunRight<std/array/Dim>
     local.tee $3
     local.get $6
     i32.sub
     i32.const 1
     i32.add
     local.tee $7
     i32.const 32
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=8
      local.get $0
      local.get $6
      local.get $9
      local.get $6
      i32.const 31
      i32.add
      local.tee $3
      local.get $3
      local.get $9
      i32.gt_s
      select
      local.tee $3
      local.get $7
      local.get $2
      call $~lib/util/sort/insertionSort<std/array/Dim>
     end
     local.get $1
     local.get $6
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $9
     i32.const 1
     i32.add
     i64.extend_i32_u
     local.tee $13
     i64.div_u
     local.get $3
     local.get $6
     i32.add
     i32.const 1
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $13
     i64.div_u
     i64.xor
     i32.wrap_i64
     i32.clz
     local.set $7
     loop $for-loop|3
      local.get $4
      local.get $7
      i32.gt_u
      if
       local.get $10
       local.get $4
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.tee $8
       i32.const -1
       i32.ne
       if
        local.get $4
        i32.const 2
        i32.shl
        local.tee $14
        local.get $11
        i32.add
        i32.load $0
        i32.const 1
        i32.add
        local.set $1
        global.get $~lib/memory/__stack_pointer
        local.get $2
        i32.store $0 offset=8
        local.get $0
        local.get $8
        local.get $1
        local.get $5
        local.get $12
        local.get $2
        call $~lib/util/sort/mergeRuns<std/array/Dim>
        local.get $10
        local.get $14
        i32.add
        i32.const -1
        i32.store $0
        local.get $8
        local.set $1
       end
       local.get $4
       i32.const 1
       i32.sub
       local.set $4
       br $for-loop|3
      end
     end
     local.get $7
     i32.const 2
     i32.shl
     local.tee $4
     local.get $10
     i32.add
     local.get $1
     i32.store $0
     local.get $4
     local.get $11
     i32.add
     local.get $5
     i32.store $0
     local.get $6
     local.set $1
     local.get $3
     local.set $5
     local.get $7
     local.set $4
     br $while-continue|2
    end
   end
   loop $for-loop|4
    local.get $4
    if
     local.get $10
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $1
     i32.const -1
     i32.ne
     if
      local.get $11
      local.get $4
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      i32.const 1
      i32.add
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=8
      local.get $0
      local.get $1
      local.get $3
      local.get $9
      local.get $12
      local.get $2
      call $~lib/util/sort/mergeRuns<std/array/Dim>
     end
     local.get $4
     i32.const 1
     i32.sub
     local.set $4
     br $for-loop|4
    end
   end
   local.get $12
   call $~lib/rt/tlsf/__free
   local.get $10
   call $~lib/rt/tlsf/__free
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<std/array/Dim>#sort (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=4
  local.set $3
  local.get $2
  local.get $0
  i32.store $0 offset=4
  local.get $0
  i32.load $0 offset=12
  local.set $4
  local.get $2
  local.get $1
  i32.store $0
  local.get $3
  local.get $4
  local.get $1
  call $~lib/util/sort/SORT<std/array/Dim>
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $start:std/array~anonymous|52 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.const 0
  call $~lib/array/Array<i32>#__get
  local.set $0
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.sub
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $std/array/assertSorted<~lib/array/Array<i32>> (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i64.const 0
   i64.store $0 offset=8
   block $__inlined_func$std/array/isSorted<~lib/array/Array<i32>> (result i32)
    local.get $2
    local.get $0
    i32.store $0 offset=8
    local.get $2
    local.get $1
    i32.store $0 offset=12
    local.get $0
    local.get $1
    call $~lib/array/Array<std/array/Dim>#sort
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner0
    local.get $1
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i64.const 0
    i64.store $0
    local.get $2
    i32.const 0
    i32.store $0 offset=8
    i32.const 1
    local.set $1
    local.get $2
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/array/Array<u8>#get:length
    local.set $2
    loop $for-loop|0
     local.get $1
     local.get $2
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=8
      local.get $3
      local.get $1
      i32.const 1
      i32.sub
      call $~lib/array/Array<std/array/Ref>#__get
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=8
      local.get $3
      local.get $1
      call $~lib/array/Array<std/array/Ref>#__get
      local.set $5
      global.get $~lib/memory/__stack_pointer
      local.get $5
      i32.store $0 offset=4
      i32.const 2
      global.set $~argumentsLength
      local.get $4
      local.get $5
      local.get $0
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 0
       br $__inlined_func$std/array/isSorted<~lib/array/Array<i32>>
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1080
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 48992
  i32.const 49040
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/sort/COMPARATOR<~lib/string/String|null>~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  block $folding-inner0
   local.get $1
   i32.eqz
   local.get $0
   i32.eqz
   local.get $0
   local.get $1
   i32.eq
   i32.or
   i32.or
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   local.set $5
   local.get $2
   local.get $1
   i32.store $0
   local.get $1
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   local.tee $4
   local.get $5
   i32.or
   i32.eqz
   br_if $folding-inner0
   local.get $5
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const -1
    return
   end
   local.get $4
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
    return
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   block $__inlined_func$~lib/util/string/compareImpl (result i32)
    local.get $0
    i32.const 7
    i32.and
    local.get $1
    i32.const 7
    i32.and
    i32.or
    i32.eqz
    local.get $5
    local.get $4
    local.get $4
    local.get $5
    i32.gt_s
    select
    local.tee $2
    i32.const 4
    i32.ge_u
    i32.and
    if
     loop $do-loop|0
      local.get $0
      i64.load $0
      local.get $1
      i64.load $0
      i64.eq
      if
       local.get $0
       i32.const 8
       i32.add
       local.set $0
       local.get $1
       i32.const 8
       i32.add
       local.set $1
       local.get $2
       i32.const 4
       i32.sub
       local.tee $2
       i32.const 4
       i32.ge_u
       br_if $do-loop|0
      end
     end
    end
    loop $while-continue|1
     local.get $2
     local.tee $3
     i32.const 1
     i32.sub
     local.set $2
     local.get $3
     if
      local.get $0
      i32.load16_u $0
      local.tee $6
      local.get $1
      i32.load16_u $0
      local.tee $3
      i32.ne
      if
       local.get $6
       local.get $3
       i32.sub
       br $__inlined_func$~lib/util/string/compareImpl
      end
      local.get $0
      i32.const 2
      i32.add
      local.set $0
      local.get $1
      i32.const 2
      i32.add
      local.set $1
      br $while-continue|1
     end
    end
    i32.const 0
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $5
   local.get $4
   i32.sub
   local.get $0
   select
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $0
  local.get $1
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 1
   return
  end
  block $folding-inner0
   local.get $1
   i32.eqz
   local.get $0
   i32.eqz
   i32.or
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   local.set $3
   local.get $2
   local.get $1
   i32.store $0
   local.get $3
   local.get $1
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const 1
   i32.shr_u
   i32.ne
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   block $__inlined_func$~lib/util/string/compareImpl (result i32)
    local.get $0
    local.tee $2
    i32.const 7
    i32.and
    local.get $1
    i32.const 7
    i32.and
    i32.or
    i32.eqz
    local.get $3
    local.tee $0
    i32.const 4
    i32.ge_u
    i32.and
    if
     loop $do-loop|0
      local.get $2
      i64.load $0
      local.get $1
      i64.load $0
      i64.eq
      if
       local.get $2
       i32.const 8
       i32.add
       local.set $2
       local.get $1
       i32.const 8
       i32.add
       local.set $1
       local.get $0
       i32.const 4
       i32.sub
       local.tee $0
       i32.const 4
       i32.ge_u
       br_if $do-loop|0
      end
     end
    end
    loop $while-continue|1
     local.get $0
     local.tee $3
     i32.const 1
     i32.sub
     local.set $0
     local.get $3
     if
      local.get $2
      i32.load16_u $0
      local.tee $3
      local.get $1
      i32.load16_u $0
      local.tee $4
      i32.ne
      if
       local.get $3
       local.get $4
       i32.sub
       br $__inlined_func$~lib/util/string/compareImpl
      end
      local.get $2
      i32.const 2
      i32.add
      local.set $2
      local.get $1
      i32.const 2
      i32.add
      local.set $1
      br $while-continue|1
     end
    end
    i32.const 0
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.eqz
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  i32.const 0
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   local.get $1
   i32.store $0 offset=4
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $0
   local.tee $2
   i32.store $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const -2
   i32.and
   local.set $4
   local.get $3
   local.get $1
   i32.store $0
   block $__inlined_func$~lib/string/String#concat
    local.get $1
    i32.const 20
    i32.sub
    i32.load $0 offset=16
    i32.const -2
    i32.and
    local.tee $3
    local.get $4
    i32.add
    local.tee $0
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     local.set $0
     br $__inlined_func$~lib/string/String#concat
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store $0 offset=4
    local.get $0
    local.get $2
    local.get $4
    memory.copy $0 $0
    local.get $0
    local.get $4
    i32.add
    local.get $1
    local.get $3
    memory.copy $0 $0
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48992
  i32.const 49040
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $std/array/createRandomStringArray (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   i32.const 0
   i32.store $0 offset=8
   local.get $0
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   i32.const 16
   i32.const 16
   call $~lib/rt/itcms/__new
   local.tee $8
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   local.get $8
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $8
   i32.store $0 offset=4
   local.get $8
   i32.const 0
   i32.store $0 offset=4
   local.get $1
   local.get $8
   i32.store $0 offset=4
   local.get $8
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   local.get $8
   i32.store $0 offset=4
   local.get $8
   i32.const 0
   i32.store $0 offset=12
   local.get $1
   i32.const 1600
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=12
   local.get $8
   local.get $1
   i32.store $0
   local.get $1
   if
    local.get $8
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $8
   i32.store $0 offset=4
   local.get $8
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $8
   i32.store $0 offset=4
   local.get $8
   i32.const 1600
   i32.store $0 offset=8
   local.get $3
   local.get $8
   i32.store $0 offset=4
   local.get $8
   i32.const 400
   i32.store $0 offset=12
   local.get $3
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $8
   i32.store $0
   loop $for-loop|0
    local.get $2
    i32.const 400
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store $0 offset=4
     call $~lib/math/NativeMath.random
     f64.const 32
     f64.mul
     i32.trunc_sat_f64_s
     local.set $7
     i32.const 0
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 16192
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i32.const 0
     i32.const 20
     memory.fill $0
     i32.const 11568
     local.set $0
     local.get $1
     i32.const 11568
     i32.store $0
     loop $for-loop|01
      local.get $3
      local.get $7
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $4
       local.get $0
       i32.store $0 offset=4
       local.get $4
       i32.const 10032
       i32.store $0 offset=12
       call $~lib/math/NativeMath.random
       local.set $6
       global.get $~lib/memory/__stack_pointer
       i32.const 10032
       i32.store $0 offset=16
       local.get $6
       i32.const 10028
       i32.load $0
       i32.const 1
       i32.shr_u
       f64.convert_i32_s
       f64.mul
       f64.floor
       i32.trunc_sat_f64_s
       local.set $5
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 16192
       i32.lt_s
       br_if $folding-inner1
       global.get $~lib/memory/__stack_pointer
       local.tee $1
       i64.const 0
       i64.store $0
       local.get $1
       i32.const 10032
       i32.store $0
       block $__inlined_func$~lib/string/String#charAt
        local.get $5
        i32.const 10028
        i32.load $0
        i32.const 1
        i32.shr_u
        i32.ge_u
        if
         global.get $~lib/memory/__stack_pointer
         i32.const 8
         i32.add
         global.set $~lib/memory/__stack_pointer
         i32.const 11568
         local.set $1
         br $__inlined_func$~lib/string/String#charAt
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 2
        i32.const 2
        call $~lib/rt/itcms/__new
        local.tee $1
        i32.store $0 offset=4
        local.get $1
        local.get $5
        i32.const 1
        i32.shl
        i32.const 10032
        i32.add
        i32.load16_u $0
        i32.store16 $0
        global.get $~lib/memory/__stack_pointer
        i32.const 8
        i32.add
        global.set $~lib/memory/__stack_pointer
       end
       global.get $~lib/memory/__stack_pointer
       local.get $1
       i32.store $0 offset=8
       local.get $4
       local.get $0
       local.get $1
       call $~lib/string/String.__concat
       local.tee $0
       i32.store $0
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|01
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=8
     local.get $8
     local.get $2
     local.get $0
     call $~lib/array/Array<std/array/Ref>#__set
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  i32.const 48992
  i32.const 49040
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/string/String#substring (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i64.const 0
  i64.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  local.get $0
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  local.tee $1
  local.get $1
  local.get $2
  i32.gt_s
  select
  local.tee $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.le_s
  select
  i32.const 1
  i32.shl
  local.set $3
  local.get $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.ge_s
  select
  i32.const 1
  i32.shl
  local.tee $4
  local.get $3
  i32.sub
  local.tee $2
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 11568
   return
  end
  local.get $3
  i32.eqz
  local.get $4
  local.get $1
  i32.const 1
  i32.shl
  i32.eq
  i32.and
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0 offset=4
  local.get $1
  local.get $0
  local.get $3
  i32.add
  local.get $2
  memory.copy $0 $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<i32>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i32.const 0
   i32.store $0
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $4
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $0
   local.get $5
   local.get $1
   i32.store $0
   block $__inlined_func$~lib/util/string/joinIntegerArray<i32> (result i32)
    local.get $5
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store $0
    local.get $0
    i32.const 1
    i32.sub
    local.tee $6
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     br $__inlined_func$~lib/util/string/joinIntegerArray<i32>
    end
    block $folding-inner0
     local.get $6
     i32.eqz
     if
      local.get $4
      i32.load $0
      call $~lib/util/number/itoa32
      local.set $1
      br $folding-inner0
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $1
     i32.store $0
     local.get $0
     local.get $1
     i32.const 20
     i32.sub
     i32.load $0 offset=16
     i32.const 1
     i32.shr_u
     local.tee $0
     i32.const 11
     i32.add
     local.get $6
     i32.mul
     i32.const 11
     i32.add
     local.tee $5
     i32.const 1
     i32.shl
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $7
     i32.store $0 offset=4
     loop $for-loop|0
      local.get $3
      local.get $6
      i32.lt_s
      if
       local.get $7
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       local.get $4
       local.get $3
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       call $~lib/util/number/itoa_buffered<i32>
       local.get $2
       i32.add
       local.set $2
       local.get $0
       if
        local.get $7
        local.get $2
        i32.const 1
        i32.shl
        i32.add
        local.get $1
        local.get $0
        i32.const 1
        i32.shl
        memory.copy $0 $0
        local.get $0
        local.get $2
        i32.add
        local.set $2
       end
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|0
      end
     end
     local.get $7
     local.get $2
     i32.const 1
     i32.shl
     i32.add
     local.get $4
     local.get $6
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     call $~lib/util/number/itoa_buffered<i32>
     local.get $2
     i32.add
     local.tee $0
     local.get $5
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0
      local.get $7
      local.get $0
      call $~lib/string/String#substring
      local.set $1
      br $folding-inner0
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $7
     br $__inlined_func$~lib/util/string/joinIntegerArray<i32>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48992
  i32.const 49040
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<u32>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $5
   i32.const 0
   i32.store $0
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $4
   local.get $5
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $0
   local.get $5
   local.get $1
   i32.store $0
   block $__inlined_func$~lib/util/string/joinIntegerArray<u32> (result i32)
    local.get $5
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store $0
    local.get $0
    i32.const 1
    i32.sub
    local.tee $6
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     br $__inlined_func$~lib/util/string/joinIntegerArray<u32>
    end
    block $folding-inner0
     local.get $6
     i32.eqz
     if
      local.get $4
      i32.load $0
      call $~lib/util/number/utoa32
      local.set $1
      br $folding-inner0
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     local.get $1
     i32.store $0
     local.get $0
     local.get $1
     i32.const 20
     i32.sub
     i32.load $0 offset=16
     i32.const 1
     i32.shr_u
     local.tee $0
     i32.const 10
     i32.add
     local.get $6
     i32.mul
     i32.const 10
     i32.add
     local.tee $5
     i32.const 1
     i32.shl
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $7
     i32.store $0 offset=4
     loop $for-loop|0
      local.get $3
      local.get $6
      i32.lt_s
      if
       local.get $7
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       local.get $4
       local.get $3
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       call $~lib/util/number/itoa_buffered<u32>
       local.get $2
       i32.add
       local.set $2
       local.get $0
       if
        local.get $7
        local.get $2
        i32.const 1
        i32.shl
        i32.add
        local.get $1
        local.get $0
        i32.const 1
        i32.shl
        memory.copy $0 $0
        local.get $0
        local.get $2
        i32.add
        local.set $2
       end
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|0
      end
     end
     local.get $7
     local.get $2
     i32.const 1
     i32.shl
     i32.add
     local.get $4
     local.get $6
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     call $~lib/util/number/itoa_buffered<u32>
     local.get $2
     i32.add
     local.tee $0
     local.get $5
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0
      local.get $7
      local.get $0
      call $~lib/string/String#substring
      local.set $1
      br $folding-inner0
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $7
     br $__inlined_func$~lib/util/string/joinIntegerArray<u32>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48992
  i32.const 49040
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/string/joinFloatArray<f64> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   block $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store $0
    local.get $1
    i32.const 1
    i32.sub
    local.tee $6
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     return
    end
    local.get $6
    i32.eqz
    if
     local.get $0
     f64.load $0
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 16192
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store $0
     local.get $3
     f64.const 0
     f64.eq
     if
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 12320
      local.set $0
      br $folding-inner1
     end
     local.get $3
     local.get $3
     f64.sub
     f64.const 0
     f64.ne
     if
      local.get $3
      local.get $3
      f64.ne
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 12352
       local.set $0
       br $folding-inner1
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      i32.const 12384
      i32.const 12432
      local.get $3
      f64.const 0
      f64.lt
      select
      local.set $0
      br $folding-inner1
     end
     i32.const 12464
     local.get $3
     call $~lib/util/number/dtoa_core
     i32.const 1
     i32.shl
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $0
     i32.store $0
     local.get $0
     i32.const 12464
     local.get $1
     memory.copy $0 $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 12288
    i32.store $0
    local.get $1
    i32.const 12284
    i32.load $0
    i32.const 1
    i32.shr_u
    local.tee $7
    i32.const 28
    i32.add
    local.get $6
    i32.mul
    i32.const 28
    i32.add
    local.tee $1
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $5
    i32.store $0 offset=4
    loop $for-loop|0
     local.get $4
     local.get $6
     i32.lt_s
     if
      local.get $5
      local.get $2
      i32.const 1
      i32.shl
      i32.add
      local.get $0
      local.get $4
      i32.const 3
      i32.shl
      i32.add
      f64.load $0
      call $~lib/util/number/dtoa_buffered
      local.get $2
      i32.add
      local.set $2
      local.get $7
      if
       local.get $5
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       i32.const 12288
       local.get $7
       i32.const 1
       i32.shl
       memory.copy $0 $0
       local.get $2
       local.get $7
       i32.add
       local.set $2
      end
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|0
     end
    end
    local.get $5
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    call $~lib/util/number/dtoa_buffered
    local.get $2
    i32.add
    local.tee $0
    local.get $1
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $0
     call $~lib/string/String#substring
     local.set $0
     br $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $5
    return
   end
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/util/string/joinStringArray (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i64.const 0
  i64.store $0
  local.get $5
  i64.const 0
  i64.store $0 offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.tee $5
  i32.const 0
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 11568
   return
  end
  local.get $5
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.load $0
   local.tee $0
   i32.store $0
   local.get $1
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.const 11568
   local.get $0
   select
   return
  end
  loop $for-loop|0
   local.get $1
   local.get $4
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $6
    i32.store $0 offset=4
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $6
     i32.store $0 offset=8
     local.get $3
     local.get $6
     i32.const 20
     i32.sub
     i32.load $0 offset=16
     i32.const 1
     i32.shr_u
     i32.add
     local.set $3
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  local.get $2
  i32.store $0 offset=8
  local.get $1
  local.get $3
  local.get $2
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
  local.tee $1
  local.get $5
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store $0 offset=12
  i32.const 0
  local.set $3
  loop $for-loop|1
   local.get $3
   local.get $5
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $7
    i32.store $0 offset=4
    local.get $7
    if
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0 offset=8
     local.get $6
     local.get $4
     i32.const 1
     i32.shl
     i32.add
     local.get $7
     local.get $7
     i32.const 20
     i32.sub
     i32.load $0 offset=16
     i32.const 1
     i32.shr_u
     local.tee $7
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $4
     local.get $7
     i32.add
     local.set $4
    end
    local.get $1
    if
     local.get $6
     local.get $4
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $1
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $1
     local.get $4
     i32.add
     local.set $4
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.tee $0
  i32.store $0 offset=4
  local.get $0
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $6
   local.get $4
   i32.const 1
   i32.shl
   i32.add
   local.get $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load $0 offset=16
   i32.const -2
   i32.and
   memory.copy $0 $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<~lib/string/String|null>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store $0
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $3
  local.get $2
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $0
  local.get $2
  local.get $1
  i32.store $0
  local.get $3
  local.get $0
  local.get $1
  call $~lib/util/string/joinStringArray
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<std/array/Ref|null>#join (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $3
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $0
   local.get $2
   i32.const 11856
   i32.store $0
   block $__inlined_func$~lib/util/string/joinReferenceArray<std/array/Ref|null> (result i32)
    local.get $2
    i32.const 20
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 20
    memory.fill $0
    local.get $0
    i32.const 1
    i32.sub
    local.tee $4
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     br $__inlined_func$~lib/util/string/joinReferenceArray<std/array/Ref|null>
    end
    local.get $4
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load $0
     local.tee $0
     i32.store $0
     local.get $0
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      i32.const 13632
     else
      i32.const 11568
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$~lib/util/string/joinReferenceArray<std/array/Ref|null>
    end
    i32.const 11568
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.tee $2
    i32.const 11568
    i32.store $0 offset=8
    local.get $2
    i32.const 11856
    i32.store $0 offset=4
    i32.const 11852
    i32.load $0
    i32.const 1
    i32.shr_u
    local.set $2
    loop $for-loop|0
     local.get $1
     local.get $4
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.tee $6
      i32.store $0
      local.get $6
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $5
       local.get $0
       i32.store $0 offset=4
       local.get $5
       local.get $6
       i32.store $0 offset=16
       local.get $5
       i32.const 13632
       i32.store $0 offset=12
       local.get $5
       local.get $0
       i32.const 13632
       call $~lib/string/String.__concat
       local.tee $0
       i32.store $0 offset=8
      end
      local.get $2
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $5
       local.get $0
       i32.store $0 offset=4
       local.get $5
       i32.const 11856
       i32.store $0 offset=12
       local.get $5
       local.get $0
       i32.const 11856
       call $~lib/string/String.__concat
       local.tee $0
       i32.store $0 offset=8
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $1
    i32.store $0
    local.get $1
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $1
     i32.store $0 offset=16
     local.get $2
     i32.const 13632
     i32.store $0 offset=12
     local.get $2
     local.get $0
     i32.const 13632
     call $~lib/string/String.__concat
     local.tee $0
     i32.store $0 offset=8
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48992
  i32.const 49040
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<i32>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 11856
  i32.store $0 offset=4
  local.get $0
  i32.const 11856
  call $~lib/array/Array<i32>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<i8>#toString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $3
   i32.const 11856
   i32.store $0 offset=4
   local.get $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.store $0
   local.get $4
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $3
   local.get $4
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $0
   local.get $4
   i32.const 11856
   i32.store $0
   block $__inlined_func$~lib/util/string/joinIntegerArray<i8> (result i32)
    local.get $4
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store $0
    local.get $0
    i32.const 1
    i32.sub
    local.tee $5
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     br $__inlined_func$~lib/util/string/joinIntegerArray<i8>
    end
    block $folding-inner00
     local.get $5
     i32.eqz
     if
      local.get $3
      i32.load8_s $0
      call $~lib/util/number/itoa32
      local.set $0
      br $folding-inner00
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i32.const 11856
     i32.store $0
     local.get $0
     i32.const 11852
     i32.load $0
     i32.const 1
     i32.shr_u
     local.tee $0
     i32.const 11
     i32.add
     local.get $5
     i32.mul
     i32.const 11
     i32.add
     local.tee $4
     i32.const 1
     i32.shl
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $6
     i32.store $0 offset=4
     loop $for-loop|0
      local.get $2
      local.get $5
      i32.lt_s
      if
       local.get $6
       local.get $1
       i32.const 1
       i32.shl
       i32.add
       local.get $2
       local.get $3
       i32.add
       i32.load8_s $0
       call $~lib/util/number/itoa_buffered<i8>
       local.get $1
       i32.add
       local.set $1
       local.get $0
       if
        local.get $6
        local.get $1
        i32.const 1
        i32.shl
        i32.add
        i32.const 11856
        local.get $0
        i32.const 1
        i32.shl
        memory.copy $0 $0
        local.get $0
        local.get $1
        i32.add
        local.set $1
       end
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|0
      end
     end
     local.get $6
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     local.get $3
     local.get $5
     i32.add
     i32.load8_s $0
     call $~lib/util/number/itoa_buffered<i8>
     local.get $1
     i32.add
     local.tee $0
     local.get $4
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      local.get $0
      call $~lib/string/String#substring
      local.set $0
      br $folding-inner00
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $6
     br $__inlined_func$~lib/util/string/joinIntegerArray<i8>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48992
  i32.const 49040
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/string/joinIntegerArray<u64> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   block $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store $0
    local.get $1
    i32.const 1
    i32.sub
    local.tee $6
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     return
    end
    local.get $6
    i32.eqz
    if
     local.get $0
     i64.load $0
     local.set $3
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 16192
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store $0
     block $__inlined_func$~lib/util/number/utoa64
      local.get $3
      i64.eqz
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 7712
       local.set $1
       br $__inlined_func$~lib/util/number/utoa64
      end
      local.get $3
      i64.const 4294967295
      i64.le_u
      if
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i32.wrap_i64
       local.tee $0
       i32.const 100000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 100
        i32.lt_u
        if (result i32)
         local.get $0
         i32.const 10
         i32.ge_u
         i32.const 1
         i32.add
        else
         local.get $0
         i32.const 10000
         i32.ge_u
         i32.const 3
         i32.add
         local.get $0
         i32.const 1000
         i32.ge_u
         i32.add
        end
       else
        local.get $0
        i32.const 10000000
        i32.lt_u
        if (result i32)
         local.get $0
         i32.const 1000000
         i32.ge_u
         i32.const 6
         i32.add
        else
         local.get $0
         i32.const 1000000000
         i32.ge_u
         i32.const 8
         i32.add
         local.get $0
         i32.const 100000000
         i32.ge_u
         i32.add
        end
       end
       local.tee $2
       i32.const 1
       i32.shl
       i32.const 2
       call $~lib/rt/itcms/__new
       local.tee $1
       i32.store $0
       local.get $1
       local.get $0
       local.get $2
       call $~lib/util/number/utoa32_dec_lut
      else
       global.get $~lib/memory/__stack_pointer
       local.get $3
       i64.const 1000000000000000
       i64.lt_u
       if (result i32)
        local.get $3
        i64.const 1000000000000
        i64.lt_u
        if (result i32)
         local.get $3
         i64.const 100000000000
         i64.ge_u
         i32.const 10
         i32.add
         local.get $3
         i64.const 10000000000
         i64.ge_u
         i32.add
        else
         local.get $3
         i64.const 100000000000000
         i64.ge_u
         i32.const 13
         i32.add
         local.get $3
         i64.const 10000000000000
         i64.ge_u
         i32.add
        end
       else
        local.get $3
        i64.const 100000000000000000
        i64.lt_u
        if (result i32)
         local.get $3
         i64.const 10000000000000000
         i64.ge_u
         i32.const 16
         i32.add
        else
         local.get $3
         i64.const -8446744073709551616
         i64.ge_u
         i32.const 18
         i32.add
         local.get $3
         i64.const 1000000000000000000
         i64.ge_u
         i32.add
        end
       end
       local.tee $0
       i32.const 1
       i32.shl
       i32.const 2
       call $~lib/rt/itcms/__new
       local.tee $1
       i32.store $0
       local.get $1
       local.get $3
       local.get $0
       call $~lib/util/number/utoa64_dec_lut
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
     end
     br $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 11856
    i32.store $0
    local.get $1
    i32.const 11852
    i32.load $0
    i32.const 1
    i32.shr_u
    local.tee $7
    i32.const 20
    i32.add
    local.get $6
    i32.mul
    i32.const 20
    i32.add
    local.tee $1
    i32.const 1
    i32.shl
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $5
    i32.store $0 offset=4
    loop $for-loop|0
     local.get $4
     local.get $6
     i32.lt_s
     if
      local.get $5
      local.get $2
      i32.const 1
      i32.shl
      i32.add
      local.get $0
      local.get $4
      i32.const 3
      i32.shl
      i32.add
      i64.load $0
      call $~lib/util/number/itoa_buffered<u64>
      local.get $2
      i32.add
      local.set $2
      local.get $7
      if
       local.get $5
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       i32.const 11856
       local.get $7
       i32.const 1
       i32.shl
       memory.copy $0 $0
       local.get $2
       local.get $7
       i32.add
       local.set $2
      end
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|0
     end
    end
    local.get $5
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    call $~lib/util/number/itoa_buffered<u64>
    local.get $2
    i32.add
    local.tee $0
    local.get $1
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     i32.store $0
     local.get $5
     local.get $0
     call $~lib/string/String#substring
     local.set $1
     br $folding-inner1
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $5
    return
   end
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<~lib/string/String|null>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 11856
  i32.store $0 offset=4
  local.get $0
  i32.const 11856
  call $~lib/array/Array<~lib/string/String|null>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<u8>#toString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $3
   i32.const 11856
   i32.store $0 offset=4
   local.get $3
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i32.const 0
   i32.store $0
   local.get $4
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $3
   local.get $4
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $0
   local.get $4
   i32.const 11856
   i32.store $0
   block $__inlined_func$~lib/util/string/joinIntegerArray<u8> (result i32)
    local.get $4
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store $0
    local.get $0
    i32.const 1
    i32.sub
    local.tee $5
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     br $__inlined_func$~lib/util/string/joinIntegerArray<u8>
    end
    block $folding-inner00
     local.get $5
     i32.eqz
     if
      local.get $3
      i32.load8_u $0
      call $~lib/util/number/utoa32
      local.set $0
      br $folding-inner00
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i32.const 11856
     i32.store $0
     local.get $0
     i32.const 11852
     i32.load $0
     i32.const 1
     i32.shr_u
     local.tee $0
     i32.const 10
     i32.add
     local.get $5
     i32.mul
     i32.const 10
     i32.add
     local.tee $4
     i32.const 1
     i32.shl
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $6
     i32.store $0 offset=4
     loop $for-loop|0
      local.get $2
      local.get $5
      i32.lt_s
      if
       local.get $6
       local.get $1
       i32.const 1
       i32.shl
       i32.add
       local.get $2
       local.get $3
       i32.add
       i32.load8_u $0
       call $~lib/util/number/itoa_buffered<u8>
       local.get $1
       i32.add
       local.set $1
       local.get $0
       if
        local.get $6
        local.get $1
        i32.const 1
        i32.shl
        i32.add
        i32.const 11856
        local.get $0
        i32.const 1
        i32.shl
        memory.copy $0 $0
        local.get $0
        local.get $1
        i32.add
        local.set $1
       end
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|0
      end
     end
     local.get $6
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     local.get $3
     local.get $5
     i32.add
     i32.load8_u $0
     call $~lib/util/number/itoa_buffered<u8>
     local.get $1
     i32.add
     local.tee $0
     local.get $4
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $6
      i32.store $0
      local.get $6
      local.get $0
      call $~lib/string/String#substring
      local.set $0
      br $folding-inner00
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $6
     br $__inlined_func$~lib/util/string/joinIntegerArray<u8>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48992
  i32.const 49040
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<u32>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $1
  i32.const 11856
  i32.store $0 offset=4
  local.get $0
  i32.const 11856
  call $~lib/array/Array<u32>#join
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<~lib/array/Array<u32>>#toString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $2
   i32.const 11856
   i32.store $0 offset=4
   local.get $2
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $2
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $0
   local.get $3
   i32.const 11856
   i32.store $0
   block $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<u32>> (result i32)
    local.get $3
    i32.const 20
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 20
    memory.fill $0
    local.get $0
    i32.const 1
    i32.sub
    local.tee $4
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<u32>>
    end
    local.get $4
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load $0
     local.tee $0
     i32.store $0
     local.get $0
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      call $~lib/array/Array<u32>#toString
     else
      i32.const 11568
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $0
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<u32>>
    end
    i32.const 11568
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    i32.const 11568
    i32.store $0 offset=8
    local.get $3
    i32.const 11856
    i32.store $0 offset=4
    i32.const 11852
    i32.load $0
    i32.const 1
    i32.shr_u
    local.set $3
    loop $for-loop|0
     local.get $1
     local.get $4
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.tee $5
      i32.store $0
      local.get $5
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $6
       local.get $0
       i32.store $0 offset=4
       local.get $6
       local.get $5
       i32.store $0 offset=16
       local.get $5
       call $~lib/array/Array<u32>#toString
       local.set $5
       global.get $~lib/memory/__stack_pointer
       local.get $5
       i32.store $0 offset=12
       local.get $6
       local.get $0
       local.get $5
       call $~lib/string/String.__concat
       local.tee $0
       i32.store $0 offset=8
      end
      local.get $3
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $5
       local.get $0
       i32.store $0 offset=4
       local.get $5
       i32.const 11856
       i32.store $0 offset=12
       local.get $5
       local.get $0
       i32.const 11856
       call $~lib/string/String.__concat
       local.tee $0
       i32.store $0 offset=8
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $1
    i32.store $0
    local.get $1
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $1
     i32.store $0 offset=16
     local.get $1
     call $~lib/array/Array<u32>#toString
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=12
     local.get $2
     local.get $0
     local.get $1
     call $~lib/string/String.__concat
     local.tee $0
     i32.store $0 offset=8
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $0
   end
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 48992
  i32.const 49040
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#flat (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i64.const 0
  i64.store $0
  local.get $5
  i32.const 0
  i32.store $0 offset=8
  local.get $5
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=4
  local.set $4
  local.get $5
  local.get $0
  i32.store $0
  local.get $0
  i32.load $0 offset=12
  local.set $5
  loop $for-loop|0
   local.get $2
   local.get $5
   i32.lt_s
   if
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $0
    if (result i32)
     local.get $0
     i32.load $0 offset=12
    else
     i32.const 0
    end
    local.get $1
    i32.add
    local.set $1
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 2
  i32.shl
  local.tee $2
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 4
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store $0 offset=8
  local.get $0
  local.get $1
  i32.store $0 offset=12
  local.get $0
  local.get $2
  i32.store $0 offset=8
  local.get $0
  local.get $6
  i32.store $0 offset=4
  local.get $0
  local.get $6
  i32.store $0
  local.get $6
  if
   local.get $0
   local.get $6
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  i32.const 0
  local.set $1
  loop $for-loop|1
   local.get $3
   local.get $5
   i32.lt_s
   if
    local.get $4
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $2
    if
     local.get $1
     local.get $6
     i32.add
     local.get $2
     i32.load $0 offset=4
     local.get $2
     i32.load $0 offset=12
     i32.const 2
     i32.shl
     local.tee $2
     memory.copy $0 $0
     local.get $1
     local.get $2
     i32.add
     local.set $1
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $start:std/array~anonymous|54 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store $0
  local.get $1
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/array/Array<u8>#get:length
  i32.const 1
  i32.ne
  if
   i32.const 0
   i32.const 1552
   i32.const 1267
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  i32.const 3
  call $~lib/array/Array<i32>#push
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.store $0
  local.get $0
  call $~lib/array/Array<u8>#get:length
  i32.const 2
  i32.ne
  if
   i32.const 0
   i32.const 1552
   i32.const 1269
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $start:std/array
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 f64)
  (local $6 f32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 508
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 508
   memory.fill $0
   memory.size $0
   i32.const 16
   i32.shl
   i32.const 48960
   i32.sub
   i32.const 1
   i32.shr_u
   global.set $~lib/rt/itcms/threshold
   i32.const 1268
   i32.const 1264
   i32.store $0
   i32.const 1272
   i32.const 1264
   i32.store $0
   i32.const 1264
   global.set $~lib/rt/itcms/pinSpace
   i32.const 1300
   i32.const 1296
   i32.store $0
   i32.const 1304
   i32.const 1296
   i32.store $0
   i32.const 1296
   global.set $~lib/rt/itcms/toSpace
   i32.const 1444
   i32.const 1440
   i32.store $0
   i32.const 1448
   i32.const 1440
   i32.store $0
   i32.const 1440
   global.set $~lib/rt/itcms/fromSpace
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   global.set $std/array/arr
   i32.const 0
   call $std/array/Ref#constructor
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 12
   i32.const 6
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $1
   i32.store $0 offset=4
   local.get $7
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   i64.const 0
   i64.store $0
   local.get $8
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.const 3
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0
   local.get $8
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=4
   local.get $8
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $8
   i32.const 1
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $8
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=12
   local.get $1
   local.get $8
   i32.store $0
   local.get $8
   if
    local.get $1
    local.get $8
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $9
   local.get $1
   i32.store $0 offset=4
   local.get $1
   local.get $8
   i32.store $0 offset=4
   local.get $9
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.const 1
   i32.store $0 offset=8
   local.get $9
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $1
   i32.store $0
   local.get $7
   i32.const 1664
   i32.store $0
   local.get $7
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 53
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 0
   i32.const 7
   i32.const 1696
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 1
   i32.const 1
   i32.const 3
   call $~lib/array/Array<u8>#fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 0
   i32.const 7
   i32.const 1728
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<u8>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 61
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/array/Array<u8>#fill@varargs
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 0
   i32.const 7
   i32.const 1760
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<u8>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 64
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 1
   i32.const 0
   i32.const -3
   call $~lib/array/Array<u8>#fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 0
   i32.const 7
   i32.const 1792
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<u8>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 67
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 2
   global.set $~argumentsLength
   local.get $1
   i32.const 2
   i32.const -2
   call $~lib/array/Array<u8>#fill@varargs
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 0
   i32.const 7
   i32.const 1824
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<u8>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 70
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 0
   call $~lib/array/Array<u8>#fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 0
   i32.const 7
   i32.const 1856
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<u8>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 73
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   i32.const -1
   i32.const 0
   call $~lib/array/Array<u8>#fill@varargs
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 0
   i32.const 7
   i32.const 1888
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<u8>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 76
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 1920
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 1
   i32.const 1
   i32.const 3
   call $~lib/array/Array<u32>#fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 1968
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<u32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 83
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   i32.const 0
   i32.const 0
   call $~lib/array/Array<u32>#fill@varargs
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 2016
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<u32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 86
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 1
   i32.const 0
   i32.const -3
   call $~lib/array/Array<u32>#fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 2064
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<u32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 89
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 2
   global.set $~argumentsLength
   local.get $1
   i32.const 2
   i32.const -2
   call $~lib/array/Array<u32>#fill@varargs
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 2112
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<u32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 92
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 0
   call $~lib/array/Array<u32>#fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 2160
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<u32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 95
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   i32.const -1
   i32.const 0
   call $~lib/array/Array<u32>#fill@varargs
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 2208
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<u32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 98
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 9
   i32.const 2256
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=16
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   f32.const 1
   i32.const 1
   i32.const 3
   call $~lib/array/Array<f32>#fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 9
   i32.const 2304
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 105
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   f32.const 0
   i32.const 0
   call $~lib/array/Array<f32>#fill@varargs
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 9
   i32.const 2352
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 108
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   f32.const 1
   i32.const 0
   i32.const -3
   call $~lib/array/Array<f32>#fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 9
   i32.const 2400
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 111
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 2
   global.set $~argumentsLength
   local.get $1
   f32.const 2
   i32.const -2
   call $~lib/array/Array<f32>#fill@varargs
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 9
   i32.const 2448
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 114
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   f32.const 0
   i32.const 1
   i32.const 0
   call $~lib/array/Array<f32>#fill
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 9
   i32.const 2496
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 117
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   f32.const -1
   i32.const 0
   call $~lib/array/Array<f32>#fill@varargs
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 9
   i32.const 2544
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 120
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   f32.const -0
   i32.const 0
   call $~lib/array/Array<f32>#fill@varargs
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 9
   i32.const 2592
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 123
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   if
    i32.const 0
    i32.const 1552
    i32.const 129
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 130
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 42
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 134
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 135
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 136
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<i32>#pop
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 140
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   if
    i32.const 0
    i32.const 1552
    i32.const 141
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 142
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 43
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 146
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 147
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 148
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 44
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 152
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 153
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 154
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 155
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 45
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 159
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 160
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 161
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 162
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 45
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 163
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 2
   i32.const 2
   i32.const 10
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $7
   i32.store $0 offset=20
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.load $0 offset=4
   i32.store $0 offset=24
   local.get $7
   i32.const 0
   i32.const 0
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $7
   i32.const 1
   i32.const 0
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   local.get $7
   i32.store $0 offset=28
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   local.get $7
   i32.const 0
   i32.const 0
   call $~lib/array/ensureCapacity
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   i32.const 0
   i32.store $0 offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/array/Array<u8>#get:length
   if
    i32.const 0
    i32.const 1552
    i32.const 171
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 4
   i32.const 2688
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=32
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/array/Array<i32>#at
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 179
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 3
   call $~lib/array/Array<i32>#at
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 180
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const -1
   call $~lib/array/Array<i32>#at
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 181
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const -4
   call $~lib/array/Array<i32>#at
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 182
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   local.tee $1
   i32.store $0 offset=36
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $7
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   local.get $1
   call $~lib/array/Array<i32>#concat
   local.tee $7
   i32.store $0 offset=40
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $8
   i32.store $0
   local.get $8
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 191
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $8
   i32.store $0
   local.get $8
   call $~lib/array/Array<u8>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 192
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/array/Array<u8>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 193
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 2736
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=8
   local.get $7
   local.get $8
   call $~lib/array/Array<i32>#concat
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $8
   i32.store $0
   local.get $8
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 196
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 198
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 199
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 45
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 200
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 46
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 47
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $7
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $7
   local.get $1
   call $~lib/array/Array<i32>#concat
   local.tee $7
   i32.store $0 offset=40
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $8
   i32.store $0
   local.get $8
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 207
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 208
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/array/Array<u8>#get:length
   i32.const 5
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 209
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 210
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 211
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 45
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 212
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   i32.const 3
   call $~lib/array/Array<i32>#__get
   i32.const 46
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 213
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   i32.const 4
   call $~lib/array/Array<i32>#__get
   i32.const 47
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 214
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/array/Array<u8>#get:length
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 217
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 2768
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=44
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   if
    i32.const 0
    i32.const 1552
    i32.const 225
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $1
   i32.store $0
   local.get $7
   global.get $std/array/arr
   local.tee $8
   i32.store $0 offset=8
   local.get $7
   local.get $1
   local.get $8
   call $~lib/array/Array<i32>#concat
   local.tee $7
   i32.store $0 offset=40
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/array/Array<u8>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 227
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   if
    i32.const 0
    i32.const 1552
    i32.const 228
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 2800
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   i32.const 2
   global.set $~argumentsLength
   local.get $1
   i32.const 0
   i32.const 3
   call $~lib/array/Array<i32>#copyWithin@varargs
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 2848
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 235
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 2896
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   i32.const 2
   global.set $~argumentsLength
   local.get $1
   i32.const 1
   i32.const 3
   call $~lib/array/Array<i32>#copyWithin@varargs
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 2944
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 237
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 2992
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   i32.const 2
   global.set $~argumentsLength
   local.get $1
   i32.const 1
   i32.const 2
   call $~lib/array/Array<i32>#copyWithin@varargs
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3040
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 239
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3088
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   i32.const 2
   global.set $~argumentsLength
   local.get $1
   i32.const 2
   i32.const 2
   call $~lib/array/Array<i32>#copyWithin@varargs
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3136
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 241
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3184
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   local.get $1
   i32.const 0
   i32.const 3
   i32.const 4
   call $~lib/array/Array<i32>#copyWithin
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3232
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 243
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3280
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   local.get $1
   i32.const 1
   i32.const 3
   i32.const 4
   call $~lib/array/Array<i32>#copyWithin
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3328
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 245
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3376
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   local.get $1
   i32.const 1
   i32.const 2
   i32.const 4
   call $~lib/array/Array<i32>#copyWithin
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3424
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 247
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3472
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   i32.const 2
   global.set $~argumentsLength
   local.get $1
   i32.const 0
   i32.const -2
   call $~lib/array/Array<i32>#copyWithin@varargs
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3520
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 249
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3568
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   local.get $1
   i32.const 0
   i32.const -2
   i32.const -1
   call $~lib/array/Array<i32>#copyWithin
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3616
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 251
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3664
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   local.get $1
   i32.const -4
   i32.const -3
   i32.const -2
   call $~lib/array/Array<i32>#copyWithin
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3712
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 253
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3760
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   local.get $1
   i32.const -4
   i32.const -3
   i32.const -1
   call $~lib/array/Array<i32>#copyWithin
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3808
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 255
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3856
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=48
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   i32.const 2
   global.set $~argumentsLength
   local.get $1
   i32.const -4
   i32.const -3
   call $~lib/array/Array<i32>#copyWithin@varargs
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3904
   call $~lib/rt/__newArray
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=8
   local.get $1
   local.get $7
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 257
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 42
   call $~lib/array/Array<i32>#unshift
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 265
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 266
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 267
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 268
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 269
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 3
   call $~lib/array/Array<i32>#__get
   i32.const 45
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 270
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 41
   call $~lib/array/Array<i32>#unshift
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   i32.const 5
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 274
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 275
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 41
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 276
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 277
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 278
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 3
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 279
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 4
   call $~lib/array/Array<i32>#__get
   i32.const 45
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 280
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   global.get $std/array/arr
   local.tee $7
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $7
   i32.store $0
   local.get $7
   i32.load $0 offset=12
   local.tee $1
   i32.const 0
   i32.le_s
   if
    i32.const 2640
    i32.const 1104
    i32.const 330
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   local.get $7
   i32.store $0
   local.get $7
   i32.load $0 offset=4
   local.tee $9
   i32.load $0
   local.set $10
   local.get $9
   local.get $9
   i32.const 4
   i32.add
   local.get $1
   i32.const 1
   i32.sub
   local.tee $1
   i32.const 2
   i32.shl
   local.tee $11
   memory.copy $0 $0
   local.get $9
   local.get $11
   i32.add
   i32.const 0
   i32.store $0
   local.get $8
   local.get $7
   i32.store $0
   local.get $7
   local.get $1
   i32.store $0 offset=12
   local.get $8
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   global.set $std/array/i
   global.get $std/array/i
   i32.const 41
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 289
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 290
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 291
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 292
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 293
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 294
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 3
   call $~lib/array/Array<i32>#__get
   i32.const 45
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 295
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<i32>#pop
   global.set $std/array/i
   global.get $std/array/i
   i32.const 45
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 299
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 300
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 301
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 302
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 303
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $1
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 304
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 3952
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=56
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 2
   call $~lib/array/Array<i32>#slice@varargs
   local.tee $7
   i32.store $0 offset=60
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   i32.const 3
   i32.const 2
   i32.const 4
   i32.const 4000
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=8
   local.get $7
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 314
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $1
   i32.store $0
   local.get $7
   local.get $1
   i32.const 2
   i32.const 4
   call $~lib/array/Array<i32>#slice
   local.tee $7
   i32.store $0 offset=60
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 4032
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=8
   local.get $7
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 317
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $1
   i32.store $0
   local.get $7
   local.get $1
   i32.const 1
   i32.const 5
   call $~lib/array/Array<i32>#slice
   local.tee $7
   i32.store $0 offset=60
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   i32.const 4
   i32.const 2
   i32.const 4
   i32.const 4064
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=8
   local.get $7
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 320
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $1
   i32.store $0
   i32.const 0
   global.set $~argumentsLength
   local.get $7
   local.get $1
   i32.const 0
   call $~lib/array/Array<i32>#slice@varargs
   local.tee $7
   i32.store $0 offset=60
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $7
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 323
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $1
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $7
   local.get $1
   i32.const -2
   call $~lib/array/Array<i32>#slice@varargs
   local.tee $7
   i32.store $0 offset=60
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 4112
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=8
   local.get $7
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 326
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $1
   i32.store $0
   local.get $7
   local.get $1
   i32.const 2
   i32.const -1
   call $~lib/array/Array<i32>#slice
   local.tee $7
   i32.store $0 offset=60
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 4144
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=8
   local.get $7
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 329
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $1
   i32.store $0
   local.get $7
   local.get $1
   i32.const -3
   i32.const -1
   call $~lib/array/Array<i32>#slice
   local.tee $7
   i32.store $0 offset=60
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 4176
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0 offset=8
   local.get $7
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 332
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   i32.const -1
   i32.const -3
   call $~lib/array/Array<i32>#slice
   local.set $7
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $~lib/array/Array<u8>#get:length
   if
    i32.const 0
    i32.const 1552
    i32.const 334
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   i32.const 1
   global.set $~argumentsLength
   local.get $1
   i32.const 10
   call $~lib/array/Array<i32>#slice@varargs
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   if
    i32.const 0
    i32.const 1552
    i32.const 335
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   global.get $std/array/arr
   local.tee $7
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $7
   i32.store $0
   local.get $7
   i32.load $0 offset=4
   local.set $8
   local.get $1
   local.get $7
   i32.store $0
   local.get $7
   i32.load $0 offset=12
   local.tee $1
   i32.const 1
   i32.gt_u
   if
    local.get $1
    i32.const 1
    i32.shr_u
    local.set $7
    local.get $1
    i32.const 1
    i32.sub
    local.set $1
    loop $while-continue|0
     local.get $0
     local.get $7
     i32.lt_u
     if
      local.get $8
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      local.tee $9
      i32.load $0
      local.set $10
      local.get $9
      local.get $8
      local.get $1
      local.get $0
      i32.sub
      i32.const 2
      i32.shl
      i32.add
      local.tee $9
      i32.load $0
      i32.store $0
      local.get $9
      local.get $10
      i32.store $0
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|0
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 343
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 344
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 345
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 346
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 347
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 44
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   local.set $0
   i32.const 4
   i32.const 0
   i32.const 7
   i32.const 4208
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   call $~lib/array/Array<u8>#reverse
   local.tee $1
   i32.store $0 offset=64
   i32.const 0
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   local.set $7
   loop $for-loop|0
    local.get $0
    local.get $7
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     local.get $0
     call $~lib/array/Array<u8>#__get
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $8
     local.get $1
     call $~lib/array/Array<u8>#get:length
     local.get $0
     i32.sub
     i32.const 1
     i32.sub
     i32.ne
     if
      i32.const 0
      i32.const 1552
      i32.const 354
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.set $0
   i32.const 8
   i32.const 0
   i32.const 7
   i32.const 4240
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   call $~lib/array/Array<u8>#reverse
   local.tee $1
   i32.store $0 offset=68
   i32.const 0
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   local.set $7
   loop $for-loop|1
    local.get $0
    local.get $7
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     local.get $0
     call $~lib/array/Array<u8>#__get
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $8
     local.get $1
     call $~lib/array/Array<u8>#get:length
     local.get $0
     i32.sub
     i32.const 1
     i32.sub
     i32.ne
     if
      i32.const 0
      i32.const 1552
      i32.const 359
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.set $0
   i32.const 17
   i32.const 0
   i32.const 7
   i32.const 4272
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   call $~lib/array/Array<u8>#reverse
   local.tee $1
   i32.store $0 offset=72
   i32.const 0
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   local.set $7
   loop $for-loop|2
    local.get $0
    local.get $7
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     local.get $0
     call $~lib/array/Array<u8>#__get
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $8
     local.get $1
     call $~lib/array/Array<u8>#get:length
     local.get $0
     i32.sub
     i32.const 1
     i32.sub
     i32.ne
     if
      i32.const 0
      i32.const 1552
      i32.const 364
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|2
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.set $0
   i32.const 7
   i32.const 1
   i32.const 11
   i32.const 4320
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   call $~lib/array/Array<u16>#reverse
   local.tee $1
   i32.store $0 offset=76
   i32.const 0
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   local.set $7
   loop $for-loop|3
    local.get $0
    local.get $7
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     local.get $0
     call $~lib/array/Array<u16>#__get
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $8
     local.get $1
     call $~lib/array/Array<u8>#get:length
     local.get $0
     i32.sub
     i32.const 1
     i32.sub
     i32.ne
     if
      i32.const 0
      i32.const 1552
      i32.const 369
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|3
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.set $0
   i32.const 8
   i32.const 1
   i32.const 11
   i32.const 4368
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   call $~lib/array/Array<u16>#reverse
   local.tee $1
   i32.store $0 offset=80
   i32.const 0
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   local.set $7
   loop $for-loop|4
    local.get $0
    local.get $7
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     local.get $0
     call $~lib/array/Array<u16>#__get
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $8
     local.get $1
     call $~lib/array/Array<u8>#get:length
     local.get $0
     i32.sub
     i32.const 1
     i32.sub
     i32.ne
     if
      i32.const 0
      i32.const 1552
      i32.const 374
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|4
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.set $0
   i32.const 9
   i32.const 1
   i32.const 11
   i32.const 4416
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $0
   local.get $1
   call $~lib/array/Array<u16>#reverse
   local.tee $1
   i32.store $0 offset=84
   i32.const 0
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   local.set $7
   loop $for-loop|5
    local.get $0
    local.get $7
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $1
     local.get $0
     call $~lib/array/Array<u16>#__get
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0
     local.get $8
     local.get $1
     call $~lib/array/Array<u8>#get:length
     local.get $0
     i32.sub
     i32.const 1
     i32.sub
     i32.ne
     if
      i32.const 0
      i32.const 1552
      i32.const 379
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|5
    end
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 44
   i32.const 0
   call $~lib/array/Array<i32>#indexOf
   global.set $std/array/i
   global.get $std/array/i
   if
    i32.const 0
    i32.const 1552
    i32.const 387
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 42
   i32.const 0
   call $~lib/array/Array<i32>#indexOf
   global.set $std/array/i
   global.get $std/array/i
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 390
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 45
   i32.const 0
   call $~lib/array/Array<i32>#indexOf
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 393
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   i32.const 100
   call $~lib/array/Array<i32>#indexOf
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 396
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   i32.const -100
   call $~lib/array/Array<i32>#indexOf
   global.set $std/array/i
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 399
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   i32.const -2
   call $~lib/array/Array<i32>#indexOf
   global.set $std/array/i
   global.get $std/array/i
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 402
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   i32.const -4
   call $~lib/array/Array<i32>#indexOf
   global.set $std/array/i
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 405
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   i32.const 0
   call $~lib/array/Array<i32>#indexOf
   global.set $std/array/i
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 408
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   i32.const 1
   call $~lib/array/Array<i32>#indexOf
   global.set $std/array/i
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 411
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   i32.const 2
   call $~lib/array/Array<i32>#indexOf
   global.set $std/array/i
   global.get $std/array/i
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 414
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 1
   i32.const 2
   i32.const 9
   i32.const 4464
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0
   block $__inlined_func$~lib/array/Array<f32>#indexOf
    local.get $0
    i32.load $0 offset=12
    local.tee $1
    i32.eqz
    local.get $1
    i32.const 0
    i32.le_s
    i32.or
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const -1
     local.set $3
     br $__inlined_func$~lib/array/Array<f32>#indexOf
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
    local.set $0
    loop $while-continue|08
     local.get $1
     local.get $3
     i32.gt_s
     if
      local.get $0
      local.get $3
      i32.const 2
      i32.shl
      i32.add
      f32.load $0
      f32.const nan:0x400000
      f32.eq
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $__inlined_func$~lib/array/Array<f32>#indexOf
      end
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $while-continue|08
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const -1
    local.set $3
   end
   local.get $3
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 416
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 1
   i32.const 3
   i32.const 12
   i32.const 4496
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   i32.const 0
   local.set $3
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0
   block $__inlined_func$~lib/array/Array<f64>#indexOf
    local.get $0
    i32.load $0 offset=12
    local.tee $1
    i32.eqz
    local.get $1
    i32.const 0
    i32.le_s
    i32.or
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const -1
     local.set $3
     br $__inlined_func$~lib/array/Array<f64>#indexOf
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
    local.set $0
    loop $while-continue|09
     local.get $1
     local.get $3
     i32.gt_s
     if
      local.get $0
      local.get $3
      i32.const 3
      i32.shl
      i32.add
      f64.load $0
      f64.const nan:0x8000000000000
      f64.eq
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       br $__inlined_func$~lib/array/Array<f64>#indexOf
      end
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $while-continue|09
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const -1
    local.set $3
   end
   local.get $3
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 417
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 4
   i32.const 4528
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=88
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#lastIndexOf@varargs
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 424
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   i32.const 7
   call $~lib/array/Array<i32>#lastIndexOf@varargs
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 425
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 2
   i32.const 3
   call $~lib/array/Array<i32>#lastIndexOf
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 426
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 2
   i32.const 2
   call $~lib/array/Array<i32>#lastIndexOf
   if
    i32.const 0
    i32.const 1552
    i32.const 427
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 2
   i32.const -2
   call $~lib/array/Array<i32>#lastIndexOf
   if
    i32.const 0
    i32.const 1552
    i32.const 428
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 2
   i32.const -1
   call $~lib/array/Array<i32>#lastIndexOf
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 429
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 44
   i32.const 0
   call $~lib/array/Array<i32>#includes
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 437
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 42
   i32.const 0
   call $~lib/array/Array<i32>#includes
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 440
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 45
   i32.const 0
   call $~lib/array/Array<i32>#includes
   if
    i32.const 0
    i32.const 1552
    i32.const 443
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   i32.const 100
   call $~lib/array/Array<i32>#includes
   if
    i32.const 0
    i32.const 1552
    i32.const 446
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   i32.const -100
   call $~lib/array/Array<i32>#includes
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 449
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   i32.const -2
   call $~lib/array/Array<i32>#includes
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 452
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   i32.const -4
   call $~lib/array/Array<i32>#includes
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 455
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   i32.const 0
   call $~lib/array/Array<i32>#includes
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 458
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   i32.const 1
   call $~lib/array/Array<i32>#includes
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 461
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 43
   i32.const 2
   call $~lib/array/Array<i32>#includes
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 464
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~lib/array/Array<f32>#includes (result i32)
    i32.const 1
    i32.const 2
    i32.const 9
    i32.const 4576
    call $~lib/rt/__newArray
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    i32.const 0
    local.set $3
    local.get $1
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner2
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 0
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=12
    local.tee $1
    i32.eqz
    local.get $1
    i32.const 0
    i32.le_s
    i32.or
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     br $__inlined_func$~lib/array/Array<f32>#includes
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
    local.set $0
    loop $while-continue|010
     local.get $1
     local.get $3
     i32.gt_s
     if
      local.get $0
      local.get $3
      i32.const 2
      i32.shl
      i32.add
      f32.load $0
      local.tee $6
      local.get $6
      f32.ne
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 1
       br $__inlined_func$~lib/array/Array<f32>#includes
      end
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $while-continue|010
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 466
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~lib/array/Array<f64>#includes (result i32)
    i32.const 1
    i32.const 3
    i32.const 12
    i32.const 4608
    call $~lib/rt/__newArray
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    local.get $0
    i32.store $0
    i32.const 0
    local.set $3
    local.get $1
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner2
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 0
    i32.store $0
    local.get $1
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=12
    local.tee $1
    i32.eqz
    local.get $1
    i32.const 0
    i32.le_s
    i32.or
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     br $__inlined_func$~lib/array/Array<f64>#includes
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    i32.load $0 offset=4
    local.set $0
    loop $while-continue|011
     local.get $1
     local.get $3
     i32.gt_s
     if
      local.get $0
      local.get $3
      i32.const 3
      i32.shl
      i32.add
      f64.load $0
      local.tee $5
      local.get $5
      f64.ne
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 1
       br $__inlined_func$~lib/array/Array<f64>#includes
      end
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $while-continue|011
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 467
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 1
   i32.const 1
   call $~lib/array/Array<i32>#splice
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 471
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 472
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 473
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 474
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 4640
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#splice@varargs
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 4688
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 481
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 4736
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 482
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 4768
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 4816
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 485
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 4848
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 486
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 4896
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#splice@varargs
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 3
   i32.const 2
   i32.const 4
   i32.const 4944
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 489
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 4976
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 490
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 5008
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   i32.const 2
   i32.const 2
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 5056
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 493
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 3
   i32.const 2
   i32.const 4
   i32.const 5088
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 494
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 5120
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   i32.const 0
   i32.const 1
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 5168
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 497
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 4
   i32.const 2
   i32.const 4
   i32.const 5200
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 498
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 5248
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   i32.const -1
   call $~lib/array/Array<i32>#splice@varargs
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 5296
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 501
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 4
   i32.const 2
   i32.const 4
   i32.const 5328
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 502
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 5376
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   i32.const -2
   call $~lib/array/Array<i32>#splice@varargs
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 5424
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 505
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 3
   i32.const 2
   i32.const 4
   i32.const 5456
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 506
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 5488
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   i32.const -2
   i32.const 1
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 5536
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 509
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 4
   i32.const 2
   i32.const 4
   i32.const 5568
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 510
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 5616
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   i32.const -7
   i32.const 1
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 5664
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 513
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 4
   i32.const 2
   i32.const 4
   i32.const 5696
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 514
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 5744
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   i32.const -2
   i32.const -1
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 5792
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 517
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 5824
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 518
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 5872
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   i32.const 1
   i32.const -2
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 5920
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 521
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 5952
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 522
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 6000
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   i32.const 4
   i32.const 0
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 6048
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 525
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 6080
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 526
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 6128
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   i32.const 7
   i32.const 0
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 6176
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 529
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 6208
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 530
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 6256
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=92
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   i32.const 7
   i32.const 5
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 6304
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 533
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 6336
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 534
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 10
   i32.const 6384
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=96
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 1
   call $~lib/array/Array<std/array/Ref>#splice
   local.tee $1
   i32.store $0 offset=100
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   if
    i32.const 0
    i32.const 1552
    i32.const 538
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   if
    i32.const 0
    i32.const 1552
    i32.const 539
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 5
   i32.const 2
   i32.const 10
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=104
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0 offset=4
   i32.store $0 offset=108
   local.get $1
   i32.const 0
   i32.const 1
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 1
   i32.const 2
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 2
   i32.const 3
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 3
   i32.const 4
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 4
   i32.const 5
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $0
   local.get $1
   i32.store $0 offset=96
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 2
   call $~lib/array/Array<std/array/Ref>#splice
   local.tee $0
   i32.store $0 offset=100
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 544
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $0
   i32.const 0
   call $~lib/array/Array<std/array/Ref>#__get
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   i32.load $0
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 545
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $0
   i32.const 1
   call $~lib/array/Array<std/array/Ref>#__get
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 546
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 548
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   i32.const 0
   call $~lib/array/Array<std/array/Ref>#__get
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 549
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   i32.const 1
   call $~lib/array/Array<std/array/Ref>#__get
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 550
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   i32.const 2
   call $~lib/array/Array<std/array/Ref>#__get
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   i32.const 5
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 551
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 3
   i32.const 2
   i32.const 13
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=112
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0 offset=4
   i32.store $0 offset=116
   local.get $1
   i32.const 0
   i32.const 1
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 1
   i32.const 0
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 2
   i32.const 2
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $0
   local.get $1
   i32.store $0 offset=120
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=12
   local.tee $7
   i32.const 0
   local.get $7
   i32.const 0
   i32.le_s
   select
   local.set $8
   local.get $3
   i32.const 1
   local.get $7
   local.get $8
   i32.sub
   local.tee $3
   local.get $3
   i32.const 1
   i32.gt_s
   select
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.const 13
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $9
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $10
   local.get $9
   i32.store $0
   local.get $9
   i32.load $0 offset=4
   local.set $11
   local.get $10
   local.get $1
   i32.store $0
   local.get $11
   local.get $1
   i32.load $0 offset=4
   local.tee $10
   local.get $8
   i32.const 2
   i32.shl
   i32.add
   local.tee $11
   local.get $3
   i32.const 2
   i32.shl
   memory.copy $0 $0
   local.get $3
   local.get $8
   i32.add
   local.tee $8
   local.get $7
   i32.ne
   if
    local.get $11
    local.get $10
    local.get $8
    i32.const 2
    i32.shl
    i32.add
    local.get $7
    local.get $8
    i32.sub
    i32.const 2
    i32.shl
    memory.copy $0 $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   local.get $1
   i32.store $0
   local.get $1
   local.get $7
   local.get $3
   i32.sub
   i32.store $0 offset=12
   local.get $8
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $9
   i32.store $0 offset=124
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0
   local.get $9
   call $~lib/array/Array<u8>#get:length
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 556
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $9
   i32.store $0 offset=8
   local.get $0
   local.get $9
   i32.const 0
   call $~lib/array/Array<std/array/Ref|null>#__get
   local.tee $0
   i32.store $0 offset=128
   local.get $0
   i32.eqz
   if
    i32.const 6544
    i32.const 1552
    i32.const 557
    i32.const 10
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 557
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $~lib/array/Array<u8>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 559
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 0
   call $~lib/array/Array<std/array/Ref|null>#__get
   if
    i32.const 0
    i32.const 1552
    i32.const 560
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   i32.const 1
   call $~lib/array/Array<std/array/Ref|null>#__get
   local.tee $0
   i32.store $0 offset=132
   local.get $0
   i32.eqz
   if
    i32.const 6544
    i32.const 1552
    i32.const 561
    i32.const 10
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 561
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/array/Array<i32>#__set
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 1
   i32.const 1
   call $~lib/array/Array<i32>#__set
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 2
   i32.const 2
   call $~lib/array/Array<i32>#__set
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 3
   i32.const 3
   call $~lib/array/Array<i32>#__set
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 6672
   i32.store $0 offset=8
   local.get $0
   i32.const 6672
   call $~lib/array/Array<i32>#findIndex
   global.set $std/array/i
   global.get $std/array/i
   if
    i32.const 0
    i32.const 1552
    i32.const 574
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 6704
   i32.store $0 offset=8
   local.get $1
   i32.const 6704
   call $~lib/array/Array<i32>#findIndex
   global.set $std/array/i
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 577
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 6736
   i32.store $0 offset=8
   local.get $1
   i32.const 6736
   call $~lib/array/Array<i32>#findIndex
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 580
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 6768
   i32.store $0 offset=8
   local.get $1
   i32.const 6768
   call $~lib/array/Array<i32>#findIndex
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 588
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 589
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 6800
   i32.store $0 offset=8
   local.get $1
   i32.const 6800
   call $~lib/array/Array<i32>#findIndex
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.eq
   if
    i32.const 0
    i32.const 1552
    i32.const 591
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 6832
   i32.store $0 offset=8
   local.get $0
   i32.const 6832
   call $~lib/array/Array<i32>#findIndex
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 604
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 605
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 4
   i32.const 6864
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=136
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 6912
   i32.store $0 offset=8
   local.get $0
   i32.const 6912
   call $~lib/array/Array<i32>#findLastIndex
   global.set $std/array/i
   global.get $std/array/i
   if
    i32.const 0
    i32.const 1552
    i32.const 618
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 6944
   i32.store $0 offset=8
   local.get $0
   i32.const 6944
   call $~lib/array/Array<i32>#findLastIndex
   global.set $std/array/i
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 621
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 6976
   i32.store $0 offset=8
   local.get $0
   i32.const 6976
   call $~lib/array/Array<i32>#findLastIndex
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 624
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 7008
   i32.store $0 offset=8
   local.get $0
   i32.const 7008
   call $~lib/array/Array<i32>#findLastIndex
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 633
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 7040
   i32.store $0 offset=8
   local.get $1
   i32.const 7040
   call $~lib/array/Array<i32>#every
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 640
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 7072
   i32.store $0 offset=8
   local.get $1
   i32.const 7072
   call $~lib/array/Array<i32>#every
   if
    i32.const 0
    i32.const 1552
    i32.const 643
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 7104
   i32.store $0 offset=8
   local.get $1
   i32.const 7104
   call $~lib/array/Array<i32>#every
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 651
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 652
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 7136
   i32.store $0 offset=8
   local.get $1
   i32.const 7136
   call $~lib/array/Array<i32>#every
   if
    i32.const 0
    i32.const 1552
    i32.const 654
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7168
   i32.store $0 offset=8
   local.get $0
   i32.const 7168
   call $~lib/array/Array<i32>#every
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 667
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 668
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7200
   i32.store $0 offset=8
   local.get $0
   i32.const 7200
   call $~lib/array/Array<i32>#some
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 678
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 7232
   i32.store $0 offset=8
   local.get $1
   i32.const 7232
   call $~lib/array/Array<i32>#some
   if
    i32.const 0
    i32.const 1552
    i32.const 681
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 7264
   i32.store $0 offset=8
   local.get $1
   i32.const 7264
   call $~lib/array/Array<i32>#some
   if
    i32.const 0
    i32.const 1552
    i32.const 689
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 690
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 7296
   i32.store $0 offset=8
   local.get $1
   i32.const 7296
   call $~lib/array/Array<i32>#some
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 692
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7328
   i32.store $0 offset=8
   local.get $0
   i32.const 7328
   call $~lib/array/Array<i32>#some
   if
    i32.const 0
    i32.const 1552
    i32.const 705
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 706
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7360
   i32.store $0 offset=8
   local.get $0
   i32.const 7360
   call $~lib/array/Array<i32>#forEach
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 717
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 7392
   i32.store $0 offset=8
   local.get $1
   i32.const 7392
   call $~lib/array/Array<i32>#forEach
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 726
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 727
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 7424
   i32.store $0 offset=8
   local.get $1
   i32.const 7424
   call $~lib/array/Array<i32>#forEach
   global.get $std/array/i
   i32.const 406
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 730
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7456
   i32.store $0 offset=8
   local.get $0
   i32.const 7456
   call $~lib/array/Array<i32>#forEach
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 744
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 745
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 7488
   i32.store $0 offset=8
   local.get $0
   i32.const 7488
   call $~lib/array/Array<i32>#forEach
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 100
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 770
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   local.set $3
   loop $for-loop|6
    local.get $3
    i32.const 100
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     global.get $std/array/arr
     local.tee $0
     i32.store $0
     local.get $0
     call $~lib/array/Array<i32>#pop
     drop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|6
    end
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 9296
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   local.get $1
   local.get $3
   i32.store $0
   local.get $1
   local.get $3
   i32.load $0 offset=12
   local.tee $7
   i32.const 2
   i32.const 16
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $8
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   i32.load $0 offset=4
   local.set $9
   i32.const 0
   local.set $1
   loop $for-loop|012
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $1
    local.get $7
    local.get $3
    i32.load $0 offset=12
    local.tee $10
    local.get $7
    local.get $10
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $10
     local.get $3
     i32.store $0 offset=8
     local.get $1
     i32.const 2
     i32.shl
     local.tee $11
     local.get $3
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.set $12
     local.get $10
     local.get $3
     i32.store $0
     i32.const 3
     global.set $~argumentsLength
     local.get $10
     local.get $12
     local.get $1
     local.get $3
     i32.const 9296
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     local.tee $10
     i32.store $0 offset=12
     local.get $9
     local.get $11
     i32.add
     local.get $10
     i32.store $0
     local.get $10
     if
      local.get $8
      local.get $10
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|012
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $8
   i32.store $0 offset=140
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 9328
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   local.get $1
   local.get $3
   i32.store $0
   local.get $1
   local.get $3
   i32.load $0 offset=12
   local.tee $7
   i32.const 2
   i32.const 9
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $8
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   i32.load $0 offset=4
   local.set $9
   i32.const 0
   local.set $1
   loop $for-loop|013
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $1
    local.get $7
    local.get $3
    i32.load $0 offset=12
    local.tee $10
    local.get $7
    local.get $10
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $10
     local.get $3
     i32.store $0 offset=8
     local.get $1
     i32.const 2
     i32.shl
     local.tee $11
     local.get $3
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.set $12
     local.get $10
     local.get $3
     i32.store $0
     i32.const 3
     global.set $~argumentsLength
     local.get $9
     local.get $11
     i32.add
     local.get $12
     local.get $1
     local.get $3
     i32.const 9328
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_f32)
     f32.store $0
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|013
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $8
   i32.store $0 offset=144
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $~lib/array/Array<u8>#get:length
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 786
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   i32.const 0
   call $~lib/array/Array<f32>#__get
   local.set $6
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $6
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   f32.convert_i32_s
   f32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 787
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 9360
   i32.store $0 offset=8
   local.get $1
   i32.const 9360
   call $~lib/array/Array<i32>#map<i32>
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 796
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 797
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 9392
   i32.store $0 offset=8
   local.get $1
   i32.const 9392
   call $~lib/array/Array<i32>#map<i32>
   global.get $std/array/i
   i32.const 406
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 804
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 9424
   i32.store $0 offset=8
   local.get $0
   i32.const 9424
   call $~lib/array/Array<i32>#map<i32>
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 819
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 820
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 9456
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 9456
   call $~lib/array/Array<i32>#filter
   local.tee $0
   i32.store $0 offset=148
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 830
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 9488
   i32.store $0 offset=8
   local.get $1
   i32.const 9488
   call $~lib/array/Array<i32>#filter
   drop
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 839
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 840
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 9520
   i32.store $0 offset=8
   local.get $1
   i32.const 9520
   call $~lib/array/Array<i32>#filter
   drop
   global.get $std/array/i
   i32.const 406
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 847
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 9552
   i32.store $0 offset=8
   local.get $0
   i32.const 9552
   call $~lib/array/Array<i32>#filter
   drop
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 862
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 863
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 9584
   i32.store $0 offset=8
   local.get $0
   i32.const 9584
   i32.const 0
   call $~lib/array/Array<i32>#reduce<i32>
   global.set $std/array/i
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 873
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 9616
   i32.store $0 offset=8
   local.get $1
   i32.const 9616
   i32.const 4
   call $~lib/array/Array<i32>#reduce<i32>
   global.set $std/array/i
   global.get $std/array/i
   i32.const 10
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 877
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 9648
   i32.store $0 offset=8
   local.get $1
   i32.const 9648
   i32.const 0
   call $~lib/array/Array<i32>#reduce<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 880
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 9680
   i32.store $0 offset=8
   local.get $1
   i32.const 9680
   i32.const 0
   call $~lib/array/Array<i32>#reduce<i32>
   if
    i32.const 0
    i32.const 1552
    i32.const 883
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 9712
   i32.store $0 offset=8
   local.get $1
   i32.const 9712
   i32.const 0
   call $~lib/array/Array<i32>#reduce<i32>
   global.set $std/array/i
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 891
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 892
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 9744
   i32.store $0 offset=8
   local.get $1
   i32.const 9744
   i32.const 0
   call $~lib/array/Array<i32>#reduce<i32>
   global.set $std/array/i
   global.get $std/array/i
   i32.const 10
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 894
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 9776
   i32.store $0 offset=8
   local.get $0
   i32.const 9776
   i32.const 0
   call $~lib/array/Array<i32>#reduce<i32>
   global.set $std/array/i
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 907
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 908
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 9808
   i32.store $0 offset=8
   local.get $0
   i32.const 9808
   i32.const 0
   call $~lib/array/Array<i32>#reduceRight<i32>
   global.set $std/array/i
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 918
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 9840
   i32.store $0 offset=8
   local.get $1
   i32.const 9840
   i32.const 4
   call $~lib/array/Array<i32>#reduceRight<i32>
   global.set $std/array/i
   global.get $std/array/i
   i32.const 10
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 922
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 9872
   i32.store $0 offset=8
   local.get $1
   i32.const 9872
   i32.const 0
   call $~lib/array/Array<i32>#reduceRight<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 925
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 9904
   i32.store $0 offset=8
   local.get $1
   i32.const 9904
   i32.const 0
   call $~lib/array/Array<i32>#reduceRight<i32>
   if
    i32.const 0
    i32.const 1552
    i32.const 928
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 9936
   i32.store $0 offset=8
   local.get $1
   i32.const 9936
   i32.const 0
   call $~lib/array/Array<i32>#reduceRight<i32>
   global.set $std/array/i
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 936
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 937
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store $0
   local.get $0
   i32.const 9968
   i32.store $0 offset=8
   local.get $1
   i32.const 9968
   i32.const 0
   call $~lib/array/Array<i32>#reduceRight<i32>
   global.set $std/array/i
   global.get $std/array/i
   i32.const 10
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 939
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 10000
   i32.store $0 offset=8
   local.get $0
   i32.const 10000
   i32.const 0
   call $~lib/array/Array<i32>#reduceRight<i32>
   global.set $std/array/i
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 952
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   if
    i32.const 0
    i32.const 1552
    i32.const 953
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store $0
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   i64.const -7046029254386353131
   call $~lib/bindings/dom/Math.random
   i64.reinterpret_f64
   local.tee $4
   local.get $4
   i64.eqz
   select
   local.tee $4
   local.get $4
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -49064778989728563
   i64.mul
   local.tee $4
   local.get $4
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -4265267296055464877
   i64.mul
   local.tee $4
   local.get $4
   i64.const 33
   i64.shr_u
   i64.xor
   global.set $~lib/math/random_state0_64
   global.get $~lib/math/random_state0_64
   i64.const -1
   i64.xor
   local.tee $4
   local.get $4
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -49064778989728563
   i64.mul
   local.tee $4
   local.get $4
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -4265267296055464877
   i64.mul
   local.tee $4
   local.get $4
   i64.const 33
   i64.shr_u
   i64.xor
   global.set $~lib/math/random_state1_64
   i32.const 1
   global.set $~lib/math/random_seeded
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 2
   i32.const 23
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=152
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=4
   i32.store $0 offset=156
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=160
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 100
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 80
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=164
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 90
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 90
   i32.store $0 offset=4
   local.get $0
   i32.const 1
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=168
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 70
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 95
   i32.store $0 offset=4
   local.get $0
   i32.const 2
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=172
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 100
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 100
   i32.store $0 offset=4
   local.get $0
   i32.const 3
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=176
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 80
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 110
   i32.store $0 offset=4
   local.get $0
   i32.const 4
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=180
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 110
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 115
   i32.store $0 offset=4
   local.get $0
   i32.const 5
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=184
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 100
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 120
   i32.store $0 offset=4
   local.get $0
   i32.const 6
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=188
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 70
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 125
   i32.store $0 offset=4
   local.get $0
   i32.const 7
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=192
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 70
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 130
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=196
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 100
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 135
   i32.store $0 offset=4
   local.get $0
   i32.const 9
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=200
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 75
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 140
   i32.store $0 offset=4
   local.get $0
   i32.const 10
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=204
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 70
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 140
   i32.store $0 offset=4
   local.get $0
   i32.const 11
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $0
   global.set $std/array/inputStabArr
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 2
   i32.const 23
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=208
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load $0 offset=4
   i32.store $0 offset=212
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=216
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 70
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 95
   i32.store $0 offset=4
   local.get $0
   i32.const 0
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=220
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 70
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 125
   i32.store $0 offset=4
   local.get $0
   i32.const 1
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=224
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 70
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 130
   i32.store $0 offset=4
   local.get $0
   i32.const 2
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=228
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 70
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 140
   i32.store $0 offset=4
   local.get $0
   i32.const 3
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=232
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 75
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 140
   i32.store $0 offset=4
   local.get $0
   i32.const 4
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=236
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 80
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 110
   i32.store $0 offset=4
   local.get $0
   i32.const 5
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=240
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 90
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 90
   i32.store $0 offset=4
   local.get $0
   i32.const 6
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=244
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 100
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 80
   i32.store $0 offset=4
   local.get $0
   i32.const 7
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=248
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 100
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 100
   i32.store $0 offset=4
   local.get $0
   i32.const 8
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=252
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 100
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 120
   i32.store $0 offset=4
   local.get $0
   i32.const 9
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=256
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 100
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 135
   i32.store $0 offset=4
   local.get $0
   i32.const 10
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store $0 offset=260
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 110
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   i32.const 115
   i32.store $0 offset=4
   local.get $0
   i32.const 11
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $0
   global.set $std/array/outputStabArr
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 9
   i32.const 10224
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=264
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 0
   global.set $~argumentsLength
   local.get $0
   call $~lib/array/Array<f32>#sort@varargs
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 3
   i32.const 2
   i32.const 9
   i32.const 10288
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1091
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 2
   i32.const 9
   i32.const 10320
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=268
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 0
   global.set $~argumentsLength
   local.get $0
   call $~lib/array/Array<f32>#sort@varargs
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 8
   i32.const 2
   i32.const 9
   i32.const 10384
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $0
   local.get $1
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1095
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 3
   i32.const 12
   i32.const 10448
   call $~lib/rt/__newArray
   local.tee $3
   i32.store $0 offset=272
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   i32.const 0
   global.set $~argumentsLength
   i32.const 0
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   block $1of1
    block $0of1
     block $outOfRange
      global.get $~argumentsLength
      br_table $0of1 $1of1 $outOfRange
     end
     unreachable
    end
    i32.const 10544
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 10544
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $3
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=8
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.load $0 offset=4
   local.set $7
   local.get $1
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.load $0 offset=12
   local.set $8
   local.get $1
   local.get $0
   i32.store $0
   local.get $7
   local.get $8
   local.get $0
   call $~lib/util/sort/SORT<f64>
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   i32.const 8
   i32.const 3
   i32.const 12
   i32.const 10576
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   block $__inlined_func$std/array/isArraysEqual<f64> (result i32)
    i32.const 0
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner2
    global.get $~lib/memory/__stack_pointer
    local.tee $7
    i32.const 0
    i32.store $0
    local.get $7
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/array/Array<u8>#get:length
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    block $folding-inner1
     block $folding-inner01
      local.get $0
      call $~lib/array/Array<u8>#get:length
      local.get $7
      i32.ne
      br_if $folding-inner01
      local.get $0
      local.get $3
      i32.eq
      br_if $folding-inner1
      loop $for-loop|02
       local.get $1
       local.get $7
       i32.lt_s
       if
        global.get $~lib/memory/__stack_pointer
        local.get $3
        i32.store $0
        local.get $3
        local.get $1
        call $~lib/array/Array<f64>#__get
        local.tee $5
        local.get $5
        f64.ne
        if (result i32)
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         local.get $0
         local.get $1
         call $~lib/array/Array<f64>#__get
         local.tee $5
         local.get $5
         f64.ne
        else
         i32.const 0
        end
        i32.eqz
        if
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0
         local.get $3
         local.get $1
         call $~lib/array/Array<f64>#__get
         i64.reinterpret_f64
         i64.const 63
         i64.shr_u
         i32.wrap_i64
         local.set $8
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         local.get $8
         local.get $0
         local.get $1
         call $~lib/array/Array<f64>#__get
         i64.reinterpret_f64
         i64.const 63
         i64.shr_u
         i32.wrap_i64
         i32.ne
         br_if $folding-inner01
         global.get $~lib/memory/__stack_pointer
         local.get $3
         i32.store $0
         local.get $3
         local.get $1
         call $~lib/array/Array<f64>#__get
         local.set $5
         global.get $~lib/memory/__stack_pointer
         local.get $0
         i32.store $0
         local.get $0
         local.get $1
         call $~lib/array/Array<f64>#__get
         local.get $5
         f64.ne
         br_if $folding-inner01
        end
        local.get $1
        i32.const 1
        i32.add
        local.set $1
        br $for-loop|02
       end
      end
      br $folding-inner1
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     br $__inlined_func$std/array/isArraysEqual<f64>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1099
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 10672
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=276
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 0
   global.set $~argumentsLength
   i32.const 0
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   block $1of116
    block $0of117
     block $outOfRange18
      global.get $~argumentsLength
      br_table $0of117 $1of116 $outOfRange18
     end
     unreachable
    end
    i32.const 10720
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 10720
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   call $~lib/array/Array<i32>#sort
   drop
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 4
   i32.const 10752
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1103
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 10800
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=280
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 0
   global.set $~argumentsLength
   i32.const 0
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   block $1of112
    block $0of113
     block $outOfRange14
      global.get $~argumentsLength
      br_table $0of113 $1of112 $outOfRange14
     end
     unreachable
    end
    i32.const 10848
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 10848
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $1
   i32.store $0 offset=4
   local.get $3
   local.get $0
   i32.store $0 offset=8
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.load $0 offset=4
   local.set $7
   local.get $3
   local.get $1
   i32.store $0 offset=4
   local.get $1
   i32.load $0 offset=12
   local.set $8
   local.get $3
   local.get $0
   i32.store $0
   local.get $7
   local.get $8
   local.get $0
   call $~lib/util/sort/SORT<u32>
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 10880
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=8
   local.get $1
   local.get $0
   call $std/array/isArraysEqual<u32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1107
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 10928
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=284
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 10960
   call $~lib/rt/__newArray
   local.tee $3
   i32.store $0 offset=288
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 10992
   call $~lib/rt/__newArray
   local.tee $7
   i32.store $0 offset=292
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 4
   i32.const 11024
   call $~lib/rt/__newArray
   local.tee $8
   i32.store $0 offset=296
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 4
   i32.const 11072
   call $~lib/rt/__newArray
   local.tee $9
   i32.store $0 offset=300
   global.get $~lib/memory/__stack_pointer
   i32.const 64
   call $std/array/createReverseOrderedArray
   local.tee $10
   i32.store $0 offset=304
   global.get $~lib/memory/__stack_pointer
   i32.const 128
   call $std/array/createReverseOrderedArray
   local.tee $11
   i32.store $0 offset=308
   global.get $~lib/memory/__stack_pointer
   i32.const 1024
   call $std/array/createReverseOrderedArray
   local.tee $12
   i32.store $0 offset=312
   global.get $~lib/memory/__stack_pointer
   i32.const 10000
   call $std/array/createReverseOrderedArray
   local.tee $0
   i32.store $0 offset=316
   global.get $~lib/memory/__stack_pointer
   i32.const 512
   call $std/array/createRandomOrderedArray
   local.tee $13
   i32.store $0 offset=320
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   local.get $1
   call $std/array/assertSortedDefault<i32>
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   local.get $3
   call $std/array/assertSortedDefault<i32>
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 11152
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $3
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1127
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   call $std/array/assertSortedDefault<i32>
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 11184
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $7
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1130
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   local.get $8
   call $std/array/assertSortedDefault<i32>
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $8
   local.get $9
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1133
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0
   local.get $10
   call $std/array/assertSortedDefault<i32>
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $10
   local.get $9
   i32.const 4
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1136
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   local.get $11
   call $std/array/assertSortedDefault<i32>
   global.get $~lib/memory/__stack_pointer
   local.get $11
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $11
   local.get $9
   i32.const 4
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1139
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store $0
   local.get $12
   call $std/array/assertSortedDefault<i32>
   global.get $~lib/memory/__stack_pointer
   local.get $12
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $12
   local.get $9
   i32.const 4
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1142
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $std/array/assertSortedDefault<i32>
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store $0 offset=8
   local.get $0
   local.get $9
   i32.const 4
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1145
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $13
   i32.store $0
   local.get $13
   call $std/array/assertSortedDefault<i32>
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.const 24
   memory.fill $0
   local.get $0
   global.get $std/array/inputStabArr
   local.tee $1
   i32.store $0 offset=8
   i32.const 1
   global.set $~argumentsLength
   local.get $0
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store $0
   block $2of2
    block $1of2
     block $outOfRange3
      global.get $~argumentsLength
      br_table $1of2 $1of2 $2of2 $outOfRange3
     end
     unreachable
    end
    i32.const 2147483647
    local.set $2
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   local.get $1
   i32.store $0
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=12
   local.tee $7
   i32.const 0
   local.get $7
   i32.const 0
   i32.le_s
   select
   local.set $8
   local.get $2
   i32.const 0
   i32.lt_s
   if (result i32)
    local.get $2
    local.get $7
    i32.add
    local.tee $2
    i32.const 0
    local.get $2
    i32.const 0
    i32.gt_s
    select
   else
    local.get $2
    local.get $7
    local.get $2
    local.get $7
    i32.lt_s
    select
   end
   local.set $7
   i32.const 0
   local.set $2
   local.get $3
   local.get $7
   local.get $8
   i32.sub
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.const 23
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $7
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.tee $9
   local.get $7
   i32.store $0
   local.get $7
   i32.load $0 offset=4
   local.set $10
   local.get $9
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=4
   local.get $8
   i32.const 2
   i32.shl
   i32.add
   local.set $1
   local.get $3
   i32.const 2
   i32.shl
   local.set $3
   loop $while-continue|04
    local.get $2
    local.get $3
    i32.lt_u
    if
     local.get $2
     local.get $10
     i32.add
     local.get $1
     local.get $2
     i32.add
     i32.load $0
     local.tee $8
     i32.store $0
     local.get $8
     if
      local.get $7
      local.get $8
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $2
     i32.const 4
     i32.add
     local.set $2
     br $while-continue|04
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $7
   i32.store $0
   local.get $1
   i32.const 11216
   i32.store $0 offset=4
   local.get $0
   local.get $7
   i32.const 11216
   call $~lib/array/Array<std/array/Dim>#sort
   local.tee $2
   i32.store $0 offset=12
   i32.const 1
   local.set $0
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/inputStabArr
   local.tee $3
   i32.store $0
   local.get $3
   call $~lib/array/Array<u8>#get:length
   local.set $3
   loop $for-loop|014
    local.get $1
    local.get $3
    i32.lt_s
    if
     block $for-break0
      global.get $~lib/memory/__stack_pointer
      local.tee $7
      local.get $2
      i32.store $0
      local.get $7
      local.get $2
      local.get $1
      call $~lib/array/Array<std/array/Ref>#__get
      local.tee $7
      i32.store $0 offset=16
      global.get $~lib/memory/__stack_pointer
      global.get $std/array/outputStabArr
      local.tee $8
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $8
      local.get $1
      call $~lib/array/Array<std/array/Ref>#__get
      local.tee $8
      i32.store $0 offset=20
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0
      local.get $7
      i32.load $0
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store $0
      local.get $9
      local.get $8
      i32.load $0
      i32.ne
      if (result i32)
       i32.const 1
      else
       global.get $~lib/memory/__stack_pointer
       local.tee $9
       local.get $7
       i32.store $0
       local.get $7
       i32.load $0 offset=4
       local.set $7
       local.get $9
       local.get $8
       i32.store $0
       local.get $7
       local.get $8
       i32.load $0 offset=4
       i32.ne
      end
      if
       i32.const 0
       local.set $0
       br $for-break0
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|014
     end
    end
   end
   local.get $0
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1076
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 64
   call $std/array/createRandomOrderedArray
   local.tee $0
   i32.store $0 offset=324
   global.get $~lib/memory/__stack_pointer
   i32.const 257
   call $std/array/createRandomOrderedArray
   local.tee $1
   i32.store $0 offset=328
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 11248
   i32.store $0 offset=8
   local.get $0
   i32.const 11248
   call $std/array/assertSorted<i32>
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 11280
   i32.store $0 offset=8
   local.get $0
   i32.const 11280
   call $std/array/assertSorted<i32>
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 11312
   i32.store $0 offset=8
   local.get $1
   i32.const 11312
   call $std/array/assertSorted<i32>
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 11344
   i32.store $0 offset=8
   local.get $1
   i32.const 11344
   call $std/array/assertSorted<i32>
   global.get $~lib/memory/__stack_pointer
   local.set $0
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i64.const 0
   i64.store $0 offset=8
   local.get $2
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   i32.const 16
   i32.const 29
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=4
   local.get $7
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $7
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=12
   local.get $7
   i32.const 32
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $7
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=12
   local.get $3
   local.get $7
   i32.store $0
   local.get $7
   if
    local.get $3
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   local.get $3
   i32.store $0 offset=4
   local.get $3
   local.get $7
   i32.store $0 offset=4
   local.get $8
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 32
   i32.store $0 offset=8
   local.get $8
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 2
   i32.store $0 offset=12
   local.get $8
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   i32.store $0
   loop $for-loop|04
    local.get $1
    i32.const 2
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 1
     call $~lib/array/Array<i32>#constructor
     local.tee $2
     i32.store $0 offset=4
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=8
     local.get $2
     i32.const 0
     i32.const 1
     local.get $1
     i32.sub
     call $~lib/array/Array<i32>#__set
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=12
     local.get $3
     local.get $1
     local.get $2
     call $~lib/array/Array<std/array/Ref>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|04
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $3
   i32.store $0 offset=332
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $3
   i32.store $0
   local.get $0
   i32.const 11376
   i32.store $0 offset=8
   local.get $3
   i32.const 11376
   call $std/array/assertSorted<~lib/array/Array<i32>>
   global.get $~lib/memory/__stack_pointer
   local.set $0
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store $0
   local.get $2
   i32.const 0
   i32.store $0 offset=8
   local.get $2
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i64.const 0
   i64.store $0 offset=8
   local.get $3
   i32.const 16
   i32.const 32
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.tee $7
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=4
   local.get $7
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $7
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 0
   i32.store $0 offset=12
   local.get $7
   i32.const 2048
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $7
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0 offset=12
   local.get $3
   local.get $7
   i32.store $0
   local.get $7
   if
    local.get $3
    local.get $7
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   local.get $3
   i32.store $0 offset=4
   local.get $3
   local.get $7
   i32.store $0 offset=4
   local.get $8
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 2048
   i32.store $0 offset=8
   local.get $8
   local.get $3
   i32.store $0 offset=4
   local.get $3
   i32.const 512
   i32.store $0 offset=12
   local.get $8
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   i32.store $0
   loop $for-loop|05
    local.get $1
    i32.const 512
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $3
     i32.store $0 offset=4
     local.get $2
     i32.const 8
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 16192
     i32.lt_s
     br_if $folding-inner2
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     i64.const 0
     i64.store $0
     local.get $2
     i32.const 4
     i32.const 31
     call $~lib/rt/itcms/__new
     local.tee $2
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.tee $7
     local.get $2
     i32.store $0 offset=4
     local.get $2
     i32.const 511
     local.get $1
     i32.sub
     i32.store $0
     local.get $7
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0 offset=8
     local.get $3
     local.get $1
     local.get $2
     call $~lib/array/Array<std/array/Ref>#__set
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|05
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $3
   i32.store $0 offset=336
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   local.get $3
   i32.store $0
   local.get $0
   i32.const 11408
   i32.store $0 offset=8
   local.get $3
   i32.const 11408
   call $std/array/assertSorted<~lib/array/Array<i32>>
   global.get $~lib/memory/__stack_pointer
   i32.const 7
   i32.const 2
   i32.const 34
   i32.const 11600
   call $~lib/rt/__newArray
   local.tee $2
   i32.store $0 offset=340
   global.get $~lib/memory/__stack_pointer
   i32.const 7
   i32.const 2
   i32.const 34
   i32.const 11648
   call $~lib/rt/__newArray
   local.tee $3
   i32.store $0 offset=344
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   block $1of113
    block $0of114
     block $outOfRange15
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of114 $1of113 $outOfRange15
     end
     unreachable
    end
    i32.const 11696
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 11696
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $2
   i32.store $0 offset=4
   local.get $1
   local.get $0
   i32.store $0 offset=8
   local.get $1
   i32.const 16
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i64.const 0
   i64.store $0 offset=8
   block $__inlined_func$std/array/isSorted<~lib/string/String|null> (result i32)
    local.get $1
    local.get $2
    i32.store $0 offset=8
    local.get $1
    local.get $0
    i32.store $0 offset=12
    local.get $2
    local.get $0
    call $~lib/array/Array<std/array/Dim>#sort
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0 offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner2
    global.get $~lib/memory/__stack_pointer
    local.tee $8
    i64.const 0
    i64.store $0
    local.get $8
    i32.const 0
    i32.store $0 offset=8
    i32.const 1
    local.set $1
    local.get $8
    local.get $7
    i32.store $0
    local.get $7
    call $~lib/array/Array<u8>#get:length
    local.set $8
    loop $for-loop|015
     local.get $1
     local.get $8
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=8
      local.get $7
      local.get $1
      i32.const 1
      i32.sub
      call $~lib/array/Array<std/array/Ref|null>#__get
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0 offset=8
      local.get $7
      local.get $1
      call $~lib/array/Array<std/array/Ref|null>#__get
      local.set $10
      global.get $~lib/memory/__stack_pointer
      local.get $10
      i32.store $0 offset=4
      i32.const 2
      global.set $~argumentsLength
      local.get $9
      local.get $10
      local.get $0
      i32.load $0
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 0
       br $__inlined_func$std/array/isSorted<~lib/string/String|null>
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|015
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1080
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   block $__inlined_func$std/array/isArraysEqual<~lib/string/String|null> (result i32)
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0 offset=8
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16192
    i32.lt_s
    br_if $folding-inner2
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    i64.const 0
    i64.store $0
    local.get $0
    i32.const 0
    i32.store $0 offset=8
    local.get $0
    local.get $2
    i32.store $0
    local.get $2
    call $~lib/array/Array<u8>#get:length
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.store $0
    local.get $3
    call $~lib/array/Array<u8>#get:length
    local.get $0
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     br $__inlined_func$std/array/isArraysEqual<~lib/string/String|null>
    end
    local.get $2
    local.get $3
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 1
     br $__inlined_func$std/array/isArraysEqual<~lib/string/String|null>
    end
    i32.const 0
    local.set $1
    loop $for-loop|016
     local.get $0
     local.get $1
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      i32.store $0 offset=8
      local.get $2
      local.get $1
      call $~lib/array/Array<std/array/Ref|null>#__get
      local.set $7
      global.get $~lib/memory/__stack_pointer
      local.get $7
      i32.store $0
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0 offset=8
      local.get $3
      local.get $1
      call $~lib/array/Array<std/array/Ref|null>#__get
      local.set $8
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store $0 offset=4
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 16192
      i32.lt_s
      br_if $folding-inner2
      global.get $~lib/memory/__stack_pointer
      local.tee $9
      i64.const 0
      i64.store $0
      local.get $9
      local.get $7
      i32.store $0
      local.get $9
      local.get $8
      i32.store $0 offset=4
      local.get $7
      local.get $8
      call $~lib/string/String.__eq
      i32.eqz
      local.set $7
      global.get $~lib/memory/__stack_pointer
      i32.const 8
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $7
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 12
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 0
       br $__inlined_func$std/array/isArraysEqual<~lib/string/String|null>
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|016
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1184
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   call $std/array/createRandomStringArray
   local.tee $0
   i32.store $0 offset=348
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   i32.const 0
   i32.store $0 offset=8
   block $1of114
    block $0of115
     block $outOfRange16
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of115 $1of114 $outOfRange16
     end
     unreachable
    end
    i32.const 11728
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 11728
    i32.store $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=4
   local.get $1
   local.get $3
   i32.store $0 offset=8
   local.get $0
   local.get $3
   call $std/array/assertSorted<~lib/array/Array<i32>>
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 0
   i32.const 37
   i32.const 11760
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   i32.const 11856
   i32.store $0 offset=352
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store $0
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $7
   local.get $3
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $0
   local.get $3
   i32.const 11856
   i32.store $0
   i32.const 0
   local.set $2
   i32.const 0
   local.set $1
   local.get $3
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   block $__inlined_func$~lib/util/string/joinBooleanArray
    local.get $0
    i32.const 1
    i32.sub
    local.tee $0
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     local.set $3
     br $__inlined_func$~lib/util/string/joinBooleanArray
    end
    block $folding-inner05
     local.get $0
     i32.eqz
     if
      i32.const 11792
      i32.const 11824
      local.get $7
      i32.load8_u $0
      select
      local.set $3
      br $folding-inner05
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 11856
     i32.store $0
     local.get $3
     i32.const 11852
     i32.load $0
     i32.const 1
     i32.shr_u
     local.tee $8
     i32.const 5
     i32.add
     local.get $0
     i32.mul
     i32.const 5
     i32.add
     local.tee $9
     i32.const 1
     i32.shl
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $3
     i32.store $0 offset=4
     loop $for-loop|16
      local.get $0
      local.get $1
      i32.gt_s
      if
       local.get $1
       local.get $7
       i32.add
       i32.load8_u $0
       local.tee $10
       i32.eqz
       i32.const 4
       i32.add
       local.set $11
       local.get $3
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       i32.const 11792
       i32.const 11824
       local.get $10
       select
       local.get $11
       i32.const 1
       i32.shl
       memory.copy $0 $0
       local.get $2
       local.get $11
       i32.add
       local.set $2
       local.get $8
       if
        local.get $3
        local.get $2
        i32.const 1
        i32.shl
        i32.add
        i32.const 11856
        local.get $8
        i32.const 1
        i32.shl
        memory.copy $0 $0
        local.get $2
        local.get $8
        i32.add
        local.set $2
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|16
      end
     end
     local.get $0
     local.get $7
     i32.add
     i32.load8_u $0
     local.tee $0
     i32.eqz
     i32.const 4
     i32.add
     local.set $1
     local.get $3
     local.get $2
     i32.const 1
     i32.shl
     i32.add
     i32.const 11792
     i32.const 11824
     local.get $0
     select
     local.get $1
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $1
     local.get $2
     i32.add
     local.tee $0
     local.get $9
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      local.get $0
      call $~lib/string/String#substring
      local.set $3
      br $folding-inner05
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinBooleanArray
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 11888
   i32.store $0 offset=8
   local.get $3
   i32.const 11888
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1193
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 2
   i32.const 4
   i32.const 11936
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=52
   local.get $1
   i32.const 11568
   i32.store $0 offset=352
   local.get $0
   i32.const 11568
   call $~lib/array/Array<i32>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 11968
   i32.store $0 offset=8
   local.get $0
   i32.const 11968
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1194
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 2
   i32.const 8
   i32.const 12000
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=52
   local.get $1
   i32.const 12032
   i32.store $0 offset=352
   local.get $0
   i32.const 12032
   call $~lib/array/Array<u32>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 11968
   i32.store $0 offset=8
   local.get $0
   i32.const 11968
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1195
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 12064
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=52
   local.get $1
   i32.const 12096
   i32.store $0 offset=352
   local.get $0
   i32.const 12096
   call $~lib/array/Array<i32>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 12128
   i32.store $0 offset=8
   local.get $0
   i32.const 12128
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1196
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 6
   i32.const 3
   i32.const 12
   i32.const 12208
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=52
   local.get $1
   i32.const 12288
   i32.store $0 offset=352
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $2
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $0
   local.get $1
   i32.const 12288
   i32.store $0
   local.get $2
   local.get $0
   call $~lib/util/string/joinFloatArray<f64>
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 13456
   i32.store $0 offset=8
   local.get $0
   i32.const 13456
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1197
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 2
   i32.const 34
   i32.const 13600
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=52
   local.get $1
   i32.const 11568
   i32.store $0 offset=352
   local.get $0
   i32.const 11568
   call $~lib/array/Array<~lib/string/String|null>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 13568
   i32.store $0 offset=8
   local.get $0
   i32.const 13568
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1198
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 3
   i32.const 2
   i32.const 13
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=356
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0 offset=4
   i32.store $0 offset=360
   local.get $1
   i32.const 0
   i32.const 0
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 1
   i32.const 0
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 2
   i32.const 0
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $0
   local.get $1
   i32.store $0 offset=364
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   i32.const 11856
   i32.store $0 offset=352
   local.get $1
   call $~lib/array/Array<std/array/Ref|null>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 13696
   i32.store $0 offset=8
   local.get $0
   i32.const 13696
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1200
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 2
   i32.const 2
   i32.const 10
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=368
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0 offset=4
   i32.store $0 offset=372
   local.get $1
   i32.const 0
   i32.const 0
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 1
   i32.const 0
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $0
   local.get $1
   i32.store $0 offset=376
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   i32.const 11856
   i32.store $0 offset=352
   local.get $1
   call $~lib/array/Array<std/array/Ref|null>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 13792
   i32.store $0 offset=8
   local.get $0
   i32.const 13792
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1203
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 13888
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=380
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 13920
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=384
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 13952
   call $~lib/rt/__newArray
   local.tee $2
   i32.store $0 offset=388
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 4
   i32.const 13984
   call $~lib/rt/__newArray
   local.tee $3
   i32.store $0 offset=392
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   call $~lib/array/Array<i32>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 11568
   i32.store $0 offset=8
   local.get $0
   i32.const 11568
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1213
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   local.get $1
   call $~lib/array/Array<i32>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 13568
   i32.store $0 offset=8
   local.get $0
   i32.const 13568
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1214
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=52
   local.get $2
   call $~lib/array/Array<i32>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14032
   i32.store $0 offset=8
   local.get $0
   i32.const 14032
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1215
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0 offset=52
   local.get $3
   call $~lib/array/Array<i32>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14064
   i32.store $0 offset=8
   local.get $0
   i32.const 14064
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1216
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 0
   i32.const 38
   i32.const 14112
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   call $~lib/array/Array<i8>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14144
   i32.store $0 offset=8
   local.get $0
   i32.const 14144
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1218
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 0
   i32.const 38
   i32.const 14176
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   call $~lib/array/Array<i8>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14208
   i32.store $0 offset=8
   local.get $0
   i32.const 14208
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1219
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 1
   i32.const 11
   i32.const 14256
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=52
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 11856
   i32.store $0 offset=4
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $7
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $3
   local.get $2
   i32.const 11856
   i32.store $0
   i32.const 0
   local.set $0
   i32.const 0
   local.set $1
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   block $__inlined_func$~lib/util/string/joinIntegerArray<u16>
    local.get $3
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     local.set $3
     br $__inlined_func$~lib/util/string/joinIntegerArray<u16>
    end
    block $folding-inner06
     local.get $2
     i32.eqz
     if
      local.get $7
      i32.load16_u $0
      call $~lib/util/number/utoa32
      local.set $3
      br $folding-inner06
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 11856
     i32.store $0
     local.get $3
     i32.const 11852
     i32.load $0
     i32.const 1
     i32.shr_u
     local.tee $8
     i32.const 10
     i32.add
     local.get $2
     i32.mul
     i32.const 10
     i32.add
     local.tee $9
     i32.const 1
     i32.shl
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $3
     i32.store $0 offset=4
     loop $for-loop|07
      local.get $1
      local.get $2
      i32.lt_s
      if
       local.get $3
       local.get $0
       i32.const 1
       i32.shl
       i32.add
       local.get $7
       local.get $1
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u $0
       call $~lib/util/number/itoa_buffered<u16>
       local.get $0
       i32.add
       local.set $0
       local.get $8
       if
        local.get $3
        local.get $0
        i32.const 1
        i32.shl
        i32.add
        i32.const 11856
        local.get $8
        i32.const 1
        i32.shl
        memory.copy $0 $0
        local.get $0
        local.get $8
        i32.add
        local.set $0
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|07
      end
     end
     local.get $3
     local.get $0
     i32.const 1
     i32.shl
     i32.add
     local.get $7
     local.get $2
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     call $~lib/util/number/itoa_buffered<u16>
     local.get $0
     i32.add
     local.tee $0
     local.get $9
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      local.get $0
      call $~lib/string/String#substring
      local.set $3
      br $folding-inner06
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<u16>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14288
   i32.store $0 offset=8
   local.get $3
   i32.const 14288
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1220
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 2
   i32.const 1
   i32.const 39
   i32.const 14336
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=52
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 11856
   i32.store $0 offset=4
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $7
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $3
   local.get $2
   i32.const 11856
   i32.store $0
   i32.const 0
   local.set $0
   i32.const 0
   local.set $1
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   block $__inlined_func$~lib/util/string/joinIntegerArray<i16>
    local.get $3
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     local.set $3
     br $__inlined_func$~lib/util/string/joinIntegerArray<i16>
    end
    block $folding-inner07
     local.get $2
     i32.eqz
     if
      local.get $7
      i32.load16_s $0
      call $~lib/util/number/itoa32
      local.set $3
      br $folding-inner07
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 11856
     i32.store $0
     local.get $3
     i32.const 11852
     i32.load $0
     i32.const 1
     i32.shr_u
     local.tee $8
     i32.const 11
     i32.add
     local.get $2
     i32.mul
     i32.const 11
     i32.add
     local.tee $9
     i32.const 1
     i32.shl
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $3
     i32.store $0 offset=4
     loop $for-loop|08
      local.get $1
      local.get $2
      i32.lt_s
      if
       local.get $3
       local.get $0
       i32.const 1
       i32.shl
       i32.add
       local.get $7
       local.get $1
       i32.const 1
       i32.shl
       i32.add
       i32.load16_s $0
       call $~lib/util/number/itoa_buffered<i16>
       local.get $0
       i32.add
       local.set $0
       local.get $8
       if
        local.get $3
        local.get $0
        i32.const 1
        i32.shl
        i32.add
        i32.const 11856
        local.get $8
        i32.const 1
        i32.shl
        memory.copy $0 $0
        local.get $0
        local.get $8
        i32.add
        local.set $0
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|08
      end
     end
     local.get $3
     local.get $0
     i32.const 1
     i32.shl
     i32.add
     local.get $7
     local.get $2
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     call $~lib/util/number/itoa_buffered<i16>
     local.get $0
     i32.add
     local.tee $0
     local.get $9
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      local.get $0
      call $~lib/string/String#substring
      local.set $3
      br $folding-inner07
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<i16>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14368
   i32.store $0 offset=8
   local.get $3
   i32.const 14368
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1221
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 14416
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   call $~lib/array/Array<i32>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14448
   i32.store $0 offset=8
   local.get $0
   i32.const 14448
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1222
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 3
   i32.const 40
   i32.const 14512
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=52
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 11856
   i32.store $0 offset=4
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $2
   local.get $1
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $0
   local.get $1
   i32.const 11856
   i32.store $0
   local.get $2
   local.get $0
   call $~lib/util/string/joinIntegerArray<u64>
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14560
   i32.store $0 offset=8
   local.get $0
   i32.const 14560
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1223
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 5
   i32.const 3
   i32.const 41
   i32.const 14640
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store $0 offset=52
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store $0
   local.get $1
   local.get $0
   i32.store $0
   local.get $1
   i32.const 11856
   i32.store $0 offset=4
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store $0
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=4
   local.set $7
   local.get $2
   local.get $0
   i32.store $0
   local.get $0
   i32.load $0 offset=12
   local.set $3
   local.get $2
   i32.const 11856
   i32.store $0
   i32.const 0
   local.set $0
   i32.const 0
   local.set $1
   local.get $2
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store $0
   block $__inlined_func$~lib/util/string/joinIntegerArray<i64>
    local.get $3
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     local.set $3
     br $__inlined_func$~lib/util/string/joinIntegerArray<i64>
    end
    block $folding-inner08
     local.get $2
     i32.eqz
     if
      block $__inlined_func$~lib/util/number/itoa64 (result i32)
       local.get $7
       i64.load $0
       i64.extend32_s
       local.set $4
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 16192
       i32.lt_s
       br_if $folding-inner2
       global.get $~lib/memory/__stack_pointer
       i32.const 0
       i32.store $0
       local.get $4
       i64.eqz
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 7712
        br $__inlined_func$~lib/util/number/itoa64
       end
       i64.const 0
       local.get $4
       i64.sub
       local.get $4
       local.get $4
       i64.const 63
       i64.shr_u
       i32.wrap_i64
       i32.const 1
       i32.shl
       local.tee $1
       select
       local.tee $4
       i64.const 4294967295
       i64.le_u
       if
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i32.wrap_i64
        local.tee $2
        i32.const 100000
        i32.lt_u
        if (result i32)
         local.get $2
         i32.const 100
         i32.lt_u
         if (result i32)
          local.get $2
          i32.const 10
          i32.ge_u
          i32.const 1
          i32.add
         else
          local.get $2
          i32.const 10000
          i32.ge_u
          i32.const 3
          i32.add
          local.get $2
          i32.const 1000
          i32.ge_u
          i32.add
         end
        else
         local.get $2
         i32.const 10000000
         i32.lt_u
         if (result i32)
          local.get $2
          i32.const 1000000
          i32.ge_u
          i32.const 6
          i32.add
         else
          local.get $2
          i32.const 1000000000
          i32.ge_u
          i32.const 8
          i32.add
          local.get $2
          i32.const 100000000
          i32.ge_u
          i32.add
         end
        end
        local.tee $3
        i32.const 1
        i32.shl
        local.get $1
        i32.add
        i32.const 2
        call $~lib/rt/itcms/__new
        local.tee $0
        i32.store $0
        local.get $0
        local.get $1
        i32.add
        local.get $2
        local.get $3
        call $~lib/util/number/utoa32_dec_lut
       else
        global.get $~lib/memory/__stack_pointer
        local.get $4
        i64.const 1000000000000000
        i64.lt_u
        if (result i32)
         local.get $4
         i64.const 1000000000000
         i64.lt_u
         if (result i32)
          local.get $4
          i64.const 100000000000
          i64.ge_u
          i32.const 10
          i32.add
          local.get $4
          i64.const 10000000000
          i64.ge_u
          i32.add
         else
          local.get $4
          i64.const 100000000000000
          i64.ge_u
          i32.const 13
          i32.add
          local.get $4
          i64.const 10000000000000
          i64.ge_u
          i32.add
         end
        else
         local.get $4
         i64.const 100000000000000000
         i64.lt_u
         if (result i32)
          local.get $4
          i64.const 10000000000000000
          i64.ge_u
          i32.const 16
          i32.add
         else
          local.get $4
          i64.const -8446744073709551616
          i64.ge_u
          i32.const 18
          i32.add
          local.get $4
          i64.const 1000000000000000000
          i64.ge_u
          i32.add
         end
        end
        local.tee $2
        i32.const 1
        i32.shl
        local.get $1
        i32.add
        i32.const 2
        call $~lib/rt/itcms/__new
        local.tee $0
        i32.store $0
        local.get $0
        local.get $1
        i32.add
        local.get $4
        local.get $2
        call $~lib/util/number/utoa64_dec_lut
       end
       local.get $1
       if
        local.get $0
        i32.const 45
        i32.store16 $0
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       local.get $0
      end
      local.set $3
      br $folding-inner08
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $3
     i32.const 11856
     i32.store $0
     local.get $3
     i32.const 11852
     i32.load $0
     i32.const 1
     i32.shr_u
     local.tee $8
     i32.const 21
     i32.add
     local.get $2
     i32.mul
     i32.const 21
     i32.add
     local.tee $9
     i32.const 1
     i32.shl
     i32.const 2
     call $~lib/rt/itcms/__new
     local.tee $3
     i32.store $0 offset=4
     loop $for-loop|09
      local.get $1
      local.get $2
      i32.lt_s
      if
       local.get $3
       local.get $0
       i32.const 1
       i32.shl
       i32.add
       local.get $7
       local.get $1
       i32.const 3
       i32.shl
       i32.add
       i64.load $0
       call $~lib/util/number/itoa_buffered<i64>
       local.get $0
       i32.add
       local.set $0
       local.get $8
       if
        local.get $3
        local.get $0
        i32.const 1
        i32.shl
        i32.add
        i32.const 11856
        local.get $8
        i32.const 1
        i32.shl
        memory.copy $0 $0
        local.get $0
        local.get $8
        i32.add
        local.set $0
       end
       local.get $1
       i32.const 1
       i32.add
       local.set $1
       br $for-loop|09
      end
     end
     local.get $3
     local.get $0
     i32.const 1
     i32.shl
     i32.add
     local.get $7
     local.get $2
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     call $~lib/util/number/itoa_buffered<i64>
     local.get $0
     i32.add
     local.tee $0
     local.get $9
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store $0
      local.get $3
      local.get $0
      call $~lib/string/String#substring
      local.set $3
      br $folding-inner08
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<i64>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14704
   i32.store $0 offset=8
   local.get $3
   i32.const 14704
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1224
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 7
   i32.const 2
   i32.const 34
   i32.const 14864
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=396
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   call $~lib/array/Array<~lib/string/String|null>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 14912
   i32.store $0 offset=8
   local.get $0
   i32.const 14912
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1231
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 4
   i32.const 2
   i32.const 34
   i32.const 15024
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0 offset=52
   local.get $0
   call $~lib/array/Array<~lib/string/String|null>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 15072
   i32.store $0 offset=8
   local.get $0
   i32.const 15072
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1232
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 2
   i32.const 2
   i32.const 29
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=400
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0 offset=4
   i32.store $0 offset=404
   local.get $1
   i32.const 0
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 15104
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 1
   i32.const 2
   i32.const 2
   i32.const 4
   i32.const 15136
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $0
   local.get $1
   i32.store $0 offset=408
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   local.get $1
   i32.store $0
   local.get $0
   i32.const 11856
   i32.store $0 offset=4
   local.get $0
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=4
   local.set $2
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=12
   local.set $3
   local.get $0
   i32.const 11856
   i32.store $0
   i32.const 0
   local.set $1
   local.get $0
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill $0
   block $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<i32>>
    local.get $3
    i32.const 1
    i32.sub
    local.tee $3
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     local.set $0
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<i32>>
    end
    local.get $3
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load $0
     local.tee $0
     i32.store $0
     local.get $0
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      call $~lib/array/Array<i32>#toString
     else
      i32.const 11568
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<i32>>
    end
    i32.const 11568
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.tee $7
    i32.const 11568
    i32.store $0 offset=8
    local.get $7
    i32.const 11856
    i32.store $0 offset=4
    i32.const 11852
    i32.load $0
    i32.const 1
    i32.shr_u
    local.set $7
    loop $for-loop|00
     local.get $1
     local.get $3
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.tee $8
      i32.store $0
      local.get $8
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $9
       local.get $0
       i32.store $0 offset=4
       local.get $9
       local.get $8
       i32.store $0 offset=16
       local.get $8
       call $~lib/array/Array<i32>#toString
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store $0 offset=12
       local.get $9
       local.get $0
       local.get $8
       call $~lib/string/String.__concat
       local.tee $0
       i32.store $0 offset=8
      end
      local.get $7
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $8
       local.get $0
       i32.store $0 offset=4
       local.get $8
       i32.const 11856
       i32.store $0 offset=12
       local.get $8
       local.get $0
       i32.const 11856
       call $~lib/string/String.__concat
       local.tee $0
       i32.store $0 offset=8
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|00
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $1
    i32.store $0
    local.get $1
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $1
     i32.store $0 offset=16
     local.get $1
     call $~lib/array/Array<i32>#toString
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=12
     local.get $2
     local.get $0
     local.get $1
     call $~lib/string/String.__concat
     local.tee $0
     i32.store $0 offset=8
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 15168
   i32.store $0 offset=8
   local.get $0
   i32.const 15168
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1235
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 2
   i32.const 2
   i32.const 42
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=412
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0 offset=4
   i32.store $0 offset=416
   local.get $1
   i32.const 0
   i32.const 2
   i32.const 0
   i32.const 7
   i32.const 15216
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 1
   i32.const 2
   i32.const 0
   i32.const 7
   i32.const 15248
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $0
   local.get $1
   i32.store $0 offset=420
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   local.get $1
   i32.store $0
   local.get $0
   i32.const 11856
   i32.store $0 offset=4
   local.get $0
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=4
   local.set $2
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=12
   local.set $3
   local.get $0
   i32.const 11856
   i32.store $0
   i32.const 0
   local.set $1
   local.get $0
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill $0
   block $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<u8>>
    local.get $3
    i32.const 1
    i32.sub
    local.tee $3
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     local.set $0
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<u8>>
    end
    local.get $3
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load $0
     local.tee $0
     i32.store $0
     local.get $0
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      call $~lib/array/Array<u8>#toString
     else
      i32.const 11568
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<u8>>
    end
    i32.const 11568
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.tee $7
    i32.const 11568
    i32.store $0 offset=8
    local.get $7
    i32.const 11856
    i32.store $0 offset=4
    i32.const 11852
    i32.load $0
    i32.const 1
    i32.shr_u
    local.set $7
    loop $for-loop|01
     local.get $1
     local.get $3
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.tee $8
      i32.store $0
      local.get $8
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $9
       local.get $0
       i32.store $0 offset=4
       local.get $9
       local.get $8
       i32.store $0 offset=16
       local.get $8
       call $~lib/array/Array<u8>#toString
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store $0 offset=12
       local.get $9
       local.get $0
       local.get $8
       call $~lib/string/String.__concat
       local.tee $0
       i32.store $0 offset=8
      end
      local.get $7
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $8
       local.get $0
       i32.store $0 offset=4
       local.get $8
       i32.const 11856
       i32.store $0 offset=12
       local.get $8
       local.get $0
       i32.const 11856
       call $~lib/string/String.__concat
       local.tee $0
       i32.store $0 offset=8
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|01
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $1
    i32.store $0
    local.get $1
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $1
     i32.store $0 offset=16
     local.get $1
     call $~lib/array/Array<u8>#toString
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=12
     local.get $2
     local.get $0
     local.get $1
     call $~lib/string/String.__concat
     local.tee $0
     i32.store $0 offset=8
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 15168
   i32.store $0 offset=8
   local.get $0
   i32.const 15168
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1238
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 1
   i32.const 2
   i32.const 44
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=424
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0 offset=4
   i32.store $0 offset=428
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 43
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $2
   i32.store $0 offset=432
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load $0 offset=4
   i32.store $0 offset=436
   local.get $2
   i32.const 0
   i32.const 1
   i32.const 2
   i32.const 8
   i32.const 15280
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 0
   local.get $2
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $0
   local.get $1
   i32.store $0 offset=440
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store $0
   local.get $0
   local.get $1
   i32.store $0
   local.get $0
   i32.const 11856
   i32.store $0 offset=4
   local.get $0
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store $0
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=4
   local.set $2
   local.get $0
   local.get $1
   i32.store $0
   local.get $1
   i32.load $0 offset=12
   local.set $3
   local.get $0
   i32.const 11856
   i32.store $0
   i32.const 0
   local.set $1
   local.get $0
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 20
   memory.fill $0
   block $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<~lib/array/Array<u32>>>
    local.get $3
    i32.const 1
    i32.sub
    local.tee $3
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 11568
     local.set $0
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<~lib/array/Array<u32>>>
    end
    local.get $3
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.load $0
     local.tee $0
     i32.store $0
     local.get $0
     if (result i32)
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.store $0 offset=4
      local.get $0
      call $~lib/array/Array<~lib/array/Array<u32>>#toString
     else
      i32.const 11568
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 20
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<~lib/array/Array<u32>>>
    end
    i32.const 11568
    local.set $0
    global.get $~lib/memory/__stack_pointer
    local.tee $7
    i32.const 11568
    i32.store $0 offset=8
    local.get $7
    i32.const 11856
    i32.store $0 offset=4
    i32.const 11852
    i32.load $0
    i32.const 1
    i32.shr_u
    local.set $7
    loop $for-loop|03
     local.get $1
     local.get $3
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $2
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.tee $8
      i32.store $0
      local.get $8
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $9
       local.get $0
       i32.store $0 offset=4
       local.get $9
       local.get $8
       i32.store $0 offset=16
       local.get $8
       call $~lib/array/Array<~lib/array/Array<u32>>#toString
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store $0 offset=12
       local.get $9
       local.get $0
       local.get $8
       call $~lib/string/String.__concat
       local.tee $0
       i32.store $0 offset=8
      end
      local.get $7
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $8
       local.get $0
       i32.store $0 offset=4
       local.get $8
       i32.const 11856
       i32.store $0 offset=12
       local.get $8
       local.get $0
       i32.const 11856
       call $~lib/string/String.__concat
       local.tee $0
       i32.store $0 offset=8
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|03
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $2
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.tee $1
    i32.store $0
    local.get $1
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $2
     local.get $0
     i32.store $0 offset=4
     local.get $2
     local.get $1
     i32.store $0 offset=16
     local.get $1
     call $~lib/array/Array<~lib/array/Array<u32>>#toString
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store $0 offset=12
     local.get $2
     local.get $0
     local.get $1
     call $~lib/string/String.__concat
     local.tee $0
     i32.store $0 offset=8
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 20
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   i32.const 13568
   i32.store $0 offset=8
   local.get $0
   i32.const 13568
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1241
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 4
   i32.const 2
   i32.const 29
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=444
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0 offset=4
   i32.store $0 offset=448
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 15312
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 1
   i32.const 3
   i32.const 2
   i32.const 4
   i32.const 15344
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 2
   i32.const 3
   i32.const 2
   i32.const 4
   i32.const 15376
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 3
   i32.const 3
   i32.const 2
   i32.const 4
   i32.const 15408
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $0
   local.get $1
   i32.store $0 offset=452
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/array/Array<~lib/array/Array<i32>>#flat
   local.tee $0
   i32.store $0 offset=456
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 10
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 1248
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   local.set $3
   loop $for-loop|7
    local.get $3
    i32.const 10
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0
     local.get $0
     local.get $3
     call $~lib/array/Array<i32>#__get
     local.get $3
     i32.ne
     if
      i32.const 0
      i32.const 1552
      i32.const 1250
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|7
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 4
   i32.const 2
   i32.const 45
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $2
   i32.store $0 offset=460
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load $0 offset=4
   i32.store $0 offset=464
   local.get $2
   i32.const 0
   i32.const 1
   i32.const 2
   i32.const 34
   i32.const 15472
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $2
   i32.const 1
   i32.const 3
   i32.const 2
   i32.const 34
   i32.const 15568
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $2
   i32.const 2
   i32.const 3
   i32.const 2
   i32.const 34
   i32.const 15696
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $2
   i32.const 3
   i32.const 1
   i32.const 2
   i32.const 34
   i32.const 15760
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $0
   local.get $2
   i32.store $0 offset=468
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0
   global.get $~lib/memory/__stack_pointer
   local.set $7
   i32.const 0
   local.set $0
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store $0
   local.get $3
   i32.const 0
   i32.store $0 offset=8
   local.get $3
   local.get $2
   i32.store $0
   local.get $2
   i32.load $0 offset=4
   local.set $8
   local.get $3
   local.get $2
   i32.store $0
   local.get $2
   i32.load $0 offset=12
   local.set $9
   i32.const 0
   local.set $3
   loop $for-loop|06
    local.get $3
    local.get $9
    i32.lt_s
    if
     local.get $8
     local.get $3
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $2
     if (result i32)
      local.get $2
      i32.load $0 offset=12
     else
      i32.const 0
     end
     local.get $0
     i32.add
     local.set $0
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|06
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 2
   i32.shl
   local.tee $2
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 34
   call $~lib/rt/itcms/__new
   local.tee $10
   i32.store $0 offset=8
   local.get $10
   local.get $0
   i32.store $0 offset=12
   local.get $10
   local.get $2
   i32.store $0 offset=8
   local.get $10
   local.get $3
   i32.store $0 offset=4
   local.get $10
   local.get $3
   i32.store $0
   i32.const 0
   local.set $2
   local.get $3
   if
    local.get $10
    local.get $3
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   loop $for-loop|17
    local.get $2
    local.get $9
    i32.lt_s
    if
     local.get $8
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $11
     if
      local.get $1
      local.get $3
      i32.add
      local.get $11
      i32.load $0 offset=4
      local.get $11
      i32.load $0 offset=12
      i32.const 2
      i32.shl
      local.tee $11
      memory.copy $0 $0
      local.get $1
      local.get $11
      i32.add
      local.set $1
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|17
    end
   end
   i32.const 0
   local.set $2
   loop $for-loop|28
    local.get $0
    local.get $2
    i32.gt_s
    if
     local.get $3
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.tee $1
     if
      local.get $3
      local.get $1
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|28
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   local.get $10
   i32.store $0 offset=472
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 2
   i32.const 34
   i32.const 15792
   call $~lib/rt/__newArray
   local.tee $0
   i32.store $0 offset=476
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.store $0
   local.get $10
   call $~lib/array/Array<u8>#get:length
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 1256
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   local.set $1
   loop $for-loop|8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store $0
    local.get $0
    call $~lib/array/Array<u8>#get:length
    local.get $1
    i32.gt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $10
     i32.store $0 offset=52
     local.get $10
     local.get $1
     call $~lib/array/Array<std/array/Ref|null>#__get
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store $0
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.store $0 offset=52
     local.get $0
     local.get $1
     call $~lib/array/Array<std/array/Ref|null>#__get
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store $0 offset=8
     local.get $2
     local.get $3
     call $~lib/string/String.__eq
     i32.eqz
     if
      i32.const 0
      i32.const 1552
      i32.const 1258
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|8
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 2
   i32.const 2
   i32.const 29
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store $0 offset=480
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load $0 offset=4
   i32.store $0 offset=484
   local.get $1
   i32.const 0
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 15856
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $1
   i32.const 1
   i32.const 0
   i32.const 2
   i32.const 4
   i32.const 15888
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $0
   local.get $1
   i32.store $0 offset=488
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store $0 offset=8
   local.get $1
   call $~lib/array/Array<~lib/array/Array<i32>>#flat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   if
    i32.const 0
    i32.const 1552
    i32.const 1262
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 2
   i32.const 2
   i32.const 29
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $2
   i32.store $0 offset=492
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load $0 offset=4
   i32.store $0 offset=496
   local.get $2
   i32.const 0
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 15920
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $2
   i32.const 1
   i32.const 1
   i32.const 2
   i32.const 4
   i32.const 15952
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__set
   local.get $0
   local.get $2
   i32.store $0 offset=500
   global.get $~lib/memory/__stack_pointer
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.store $0 offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 15984
   i32.store $0 offset=52
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16192
   i32.lt_s
   br_if $folding-inner2
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.const 20
   memory.fill $0
   local.get $1
   local.get $2
   i32.store $0
   local.get $1
   local.get $2
   i32.load $0 offset=12
   local.tee $3
   i32.const 2
   i32.const 29
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $7
   i32.store $0 offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $7
   i32.load $0 offset=4
   local.set $8
   i32.const 0
   local.set $1
   loop $for-loop|020
    global.get $~lib/memory/__stack_pointer
    local.get $2
    i32.store $0
    local.get $1
    local.get $3
    local.get $2
    i32.load $0 offset=12
    local.tee $9
    local.get $3
    local.get $9
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $9
     local.get $2
     i32.store $0 offset=12
     local.get $9
     local.get $1
     i32.const 2
     i32.shl
     local.tee $10
     local.get $2
     i32.load $0 offset=4
     i32.add
     i32.load $0
     local.tee $11
     i32.store $0
     local.get $9
     local.get $2
     i32.store $0 offset=8
     i32.const 3
     global.set $~argumentsLength
     local.get $9
     local.get $11
     local.get $1
     local.get $2
     i32.const 15984
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     local.tee $9
     i32.store $0 offset=16
     local.get $8
     local.get $10
     i32.add
     local.get $9
     i32.store $0
     local.get $9
     if
      local.get $7
      local.get $9
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|020
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 20
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $7
   i32.store $0
   local.get $0
   local.get $7
   call $~lib/array/Array<~lib/array/Array<i32>>#flat
   local.tee $0
   i32.store $0 offset=504
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   call $~lib/array/Array<u8>#get:length
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 1272
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 1273
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 1274
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 1275
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store $0
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#__get
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 1276
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $std/array/arr
   i32.const 0
   global.set $std/array/inputStabArr
   i32.const 0
   global.set $std/array/outputStabArr
   i32.const 48960
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.gt_s
   if
    loop $while-continue|06
     global.get $~lib/rt/itcms/state
     if
      call $~lib/rt/itcms/step
      drop
      br $while-continue|06
     end
    end
   end
   call $~lib/rt/itcms/step
   drop
   loop $while-continue|1
    global.get $~lib/rt/itcms/state
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|1
    end
   end
   global.get $~lib/rt/itcms/total
   i64.extend_i32_u
   i64.const 200
   i64.mul
   i64.const 100
   i64.div_u
   i32.wrap_i64
   i32.const 1024
   i32.add
   global.set $~lib/rt/itcms/threshold
   global.get $~lib/memory/__stack_pointer
   i32.const 508
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 48992
  i32.const 49040
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.store $0
  local.get $0
  local.get $1
  i32.shl
  local.tee $5
  i32.const 1
  call $~lib/rt/itcms/__new
  local.set $1
  local.get $3
  if
   local.get $1
   local.get $3
   local.get $5
   memory.copy $0 $0
  end
  local.get $4
  local.get $1
  i32.store $0
  i32.const 16
  local.get $2
  call $~lib/rt/itcms/__new
  local.tee $2
  local.get $1
  i32.store $0
  local.get $1
  if
   local.get $2
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $2
  local.get $1
  i32.store $0 offset=4
  local.get $2
  local.get $5
  i32.store $0 offset=8
  local.get $2
  local.get $0
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/util/number/itoa32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 7712
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  i32.sub
  local.get $0
  local.get $0
  i32.const 31
  i32.shr_u
  i32.const 1
  i32.shl
  local.tee $0
  select
  local.tee $2
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $2
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $2
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $2
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $2
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $2
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $2
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $2
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.tee $1
  i32.const 1
  i32.shl
  local.get $0
  i32.add
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store $0
  local.get $0
  local.get $3
  i32.add
  local.get $2
  local.get $1
  call $~lib/util/number/utoa32_dec_lut
  local.get $0
  if
   local.get $3
   i32.const 45
   i32.store16 $0
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/util/number/utoa32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.lt_s
  if
   i32.const 48992
   i32.const 49040
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 7712
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $0
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $0
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $0
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $0
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $0
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $0
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $0
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $0
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.tee $2
  i32.const 1
  i32.shl
  i32.const 2
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store $0
  local.get $1
  local.get $0
  local.get $2
  call $~lib/util/number/utoa32_dec_lut
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $byn-split-outlined-A$~lib/rt/itcms/__visit (param $0 i32)
  global.get $~lib/rt/itcms/white
  local.get $0
  i32.const 20
  i32.sub
  local.tee $0
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $byn-split-outlined-A$~lib/rt/itcms/__link (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 1216
   i32.const 295
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/white
  local.get $1
  i32.const 20
  i32.sub
  local.tee $1
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $0
   i32.load $0 offset=4
   i32.const 3
   i32.and
   local.tee $3
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $0
    local.get $1
    local.get $2
    select
    call $~lib/rt/itcms/Object#makeGray
   else
    global.get $~lib/rt/itcms/state
    i32.const 1
    i32.eq
    local.get $3
    i32.const 3
    i32.eq
    i32.and
    if
     local.get $1
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
)

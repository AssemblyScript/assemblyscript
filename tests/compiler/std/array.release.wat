(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $f32_f32_=>_i32 (func (param f32 f32) (result i32)))
 (type $f64_f64_=>_i32 (func (param f64 f64) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32)))
 (type $none_=>_none (func))
 (type $none_=>_i32 (func (result i32)))
 (type $none_=>_f64 (func (result f64)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i32_i32_i32_=>_f32 (func (param i32 i32 i32) (result f32)))
 (type $i32_f64_=>_i32 (func (param i32 f64) (result i32)))
 (type $i32_i64_=>_i32 (func (param i32 i64) (result i32)))
 (type $i32_f32_i32_i32_=>_none (func (param i32 f32 i32 i32)))
 (type $i32_i32_=>_f32 (func (param i32 i32) (result f32)))
 (type $i32_i32_=>_f64 (func (param i32 i32) (result f64)))
 (type $i32_i64_i64_i32_i64_i32_=>_i32 (func (param i32 i64 i64 i32 i64 i32) (result i32)))
 (type $i32_i64_i32_=>_none (func (param i32 i64 i32)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "Math.random" (func $~lib/bindings/dom/Math.random (result f64)))
 (import "env" "seed" (func $~lib/builtins/seed (result f64)))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $std/array/arr (mut i32) (i32.const 0))
 (global $std/array/i (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/math/random_state0_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state1_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_seeded (mut i32) (i32.const 0))
 (global $std/array/inputStabArr (mut i32) (i32.const 0))
 (global $std/array/outputStabArr (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 32652))
 (global $~started (mut i32) (i32.const 0))
 (memory $0 1)
 (data (i32.const 1036) ",")
 (data (i32.const 1048) "\01\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h")
 (data (i32.const 1084) ",")
 (data (i32.const 1096) "\01\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s")
 (data (i32.const 1132) "<")
 (data (i32.const 1144) "\01\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e")
 (data (i32.const 1196) "<")
 (data (i32.const 1208) "\01\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s")
 (data (i32.const 1324) "<")
 (data (i32.const 1336) "\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e")
 (data (i32.const 1388) ",")
 (data (i32.const 1400) "\01\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s")
 (data (i32.const 1468) "<")
 (data (i32.const 1480) "\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s")
 (data (i32.const 1532) ",")
 (data (i32.const 1544) "\01\00\00\00\18\00\00\00s\00t\00d\00/\00a\00r\00r\00a\00y\00.\00t\00s")
 (data (i32.const 1580) "<")
 (data (i32.const 1592) "\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s")
 (data (i32.const 1644) "\1c")
 (data (i32.const 1656) "\01\00\00\00\06\00\00\00a\00b\00c")
 (data (i32.const 1676) "\1c")
 (data (i32.const 1692) "\05\00\00\00\01\02\03\04\05")
 (data (i32.const 1708) "\1c")
 (data (i32.const 1724) "\05\00\00\00\01\01\01\04\05")
 (data (i32.const 1740) "\1c")
 (data (i32.const 1756) "\05")
 (data (i32.const 1772) "\1c")
 (data (i32.const 1788) "\05\00\00\00\01\01")
 (data (i32.const 1804) "\1c")
 (data (i32.const 1820) "\05\00\00\00\01\01\00\02\02")
 (data (i32.const 1836) "\1c")
 (data (i32.const 1852) "\05\00\00\00\01\01\00\02\02")
 (data (i32.const 1868) "\1c")
 (data (i32.const 1884) "\05\00\00\00\ff\ff\ff\ff\ff")
 (data (i32.const 1900) ",")
 (data (i32.const 1916) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 1948) ",")
 (data (i32.const 1964) "\14\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\05")
 (data (i32.const 1996) ",")
 (data (i32.const 2012) "\14")
 (data (i32.const 2044) ",")
 (data (i32.const 2060) "\14\00\00\00\01\00\00\00\01")
 (data (i32.const 2092) ",")
 (data (i32.const 2108) "\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02")
 (data (i32.const 2140) ",")
 (data (i32.const 2156) "\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02")
 (data (i32.const 2188) ",")
 (data (i32.const 2204) "\14\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 2236) ",")
 (data (i32.const 2252) "\14\00\00\00\00\00\00?\00\00\80?\00\00\c0?\00\00 @\00\00@@")
 (data (i32.const 2284) ",")
 (data (i32.const 2300) "\14\00\00\00\00\00\00?\00\00\80?\00\00\80?\00\00 @\00\00@@")
 (data (i32.const 2332) ",")
 (data (i32.const 2348) "\14")
 (data (i32.const 2380) ",")
 (data (i32.const 2396) "\14\00\00\00\00\00\80?\00\00\80?")
 (data (i32.const 2428) ",")
 (data (i32.const 2444) "\14\00\00\00\00\00\80?\00\00\80?\00\00\00\00\00\00\00@\00\00\00@")
 (data (i32.const 2476) ",")
 (data (i32.const 2492) "\14\00\00\00\00\00\80?\00\00\80?\00\00\00\00\00\00\00@\00\00\00@")
 (data (i32.const 2524) ",")
 (data (i32.const 2540) "\14\00\00\00\00\00\80\bf\00\00\80\bf\00\00\80\bf\00\00\80\bf\00\00\80\bf")
 (data (i32.const 2572) ",")
 (data (i32.const 2588) "\14\00\00\00\00\00\00\80\00\00\00\80\00\00\00\80\00\00\00\80\00\00\00\80")
 (data (i32.const 2620) ",")
 (data (i32.const 2632) "\01\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y")
 (data (i32.const 2668) ",")
 (data (i32.const 2684) "\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04")
 (data (i32.const 2716) "\1c")
 (data (i32.const 2748) "\1c")
 (data (i32.const 2780) ",")
 (data (i32.const 2796) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 2828) ",")
 (data (i32.const 2844) "\14\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 2876) ",")
 (data (i32.const 2892) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 2924) ",")
 (data (i32.const 2940) "\14\00\00\00\01\00\00\00\04\00\00\00\05\00\00\00\04\00\00\00\05")
 (data (i32.const 2972) ",")
 (data (i32.const 2988) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3020) ",")
 (data (i32.const 3036) "\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05")
 (data (i32.const 3068) ",")
 (data (i32.const 3084) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3116) ",")
 (data (i32.const 3132) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3164) ",")
 (data (i32.const 3180) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3212) ",")
 (data (i32.const 3228) "\14\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3260) ",")
 (data (i32.const 3276) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3308) ",")
 (data (i32.const 3324) "\14\00\00\00\01\00\00\00\04\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3356) ",")
 (data (i32.const 3372) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3404) ",")
 (data (i32.const 3420) "\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05")
 (data (i32.const 3452) ",")
 (data (i32.const 3468) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3500) ",")
 (data (i32.const 3516) "\14\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3548) ",")
 (data (i32.const 3564) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3596) ",")
 (data (i32.const 3612) "\14\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3644) ",")
 (data (i32.const 3660) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3692) ",")
 (data (i32.const 3708) "\14\00\00\00\01\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3740) ",")
 (data (i32.const 3756) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3788) ",")
 (data (i32.const 3804) "\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05")
 (data (i32.const 3836) ",")
 (data (i32.const 3852) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 3884) ",")
 (data (i32.const 3900) "\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05")
 (data (i32.const 3932) ",")
 (data (i32.const 3948) "\14\00\00\00\03\00\00\00\05\00\00\00\07\00\00\00\t\00\00\00\0b")
 (data (i32.const 3980) "\1c")
 (data (i32.const 3996) "\0c\00\00\00\07\00\00\00\t\00\00\00\0b")
 (data (i32.const 4012) "\1c")
 (data (i32.const 4028) "\08\00\00\00\07\00\00\00\t")
 (data (i32.const 4044) ",")
 (data (i32.const 4060) "\10\00\00\00\05\00\00\00\07\00\00\00\t\00\00\00\0b")
 (data (i32.const 4092) "\1c")
 (data (i32.const 4108) "\08\00\00\00\t\00\00\00\0b")
 (data (i32.const 4124) "\1c")
 (data (i32.const 4140) "\08\00\00\00\07\00\00\00\t")
 (data (i32.const 4156) "\1c")
 (data (i32.const 4172) "\08\00\00\00\07\00\00\00\t")
 (data (i32.const 4188) "\1c")
 (data (i32.const 4204) "\04\00\00\00\00\01\02\03")
 (data (i32.const 4220) "\1c")
 (data (i32.const 4236) "\08\00\00\00\00\01\02\03\04\05\06\07")
 (data (i32.const 4252) ",")
 (data (i32.const 4268) "\11\00\00\00\00\01\02\03\04\05\06\07\08\t\n\0b\0c\0d\0e\0f\10")
 (data (i32.const 4300) ",")
 (data (i32.const 4316) "\0e\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06")
 (data (i32.const 4348) ",")
 (data (i32.const 4364) "\10\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07")
 (data (i32.const 4396) ",")
 (data (i32.const 4412) "\12\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\08")
 (data (i32.const 4444) "\1c")
 (data (i32.const 4460) "\04\00\00\00\00\00\c0\7f")
 (data (i32.const 4476) "\1c")
 (data (i32.const 4492) "\08")
 (data (i32.const 4502) "\f8\7f")
 (data (i32.const 4508) ",")
 (data (i32.const 4524) "\10\00\00\00\02\00\00\00\05\00\00\00\t\00\00\00\02")
 (data (i32.const 4556) "\1c")
 (data (i32.const 4572) "\04\00\00\00\00\00\c0\7f")
 (data (i32.const 4588) "\1c")
 (data (i32.const 4604) "\08")
 (data (i32.const 4614) "\f8\7f")
 (data (i32.const 4620) ",")
 (data (i32.const 4636) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4668) ",")
 (data (i32.const 4684) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4716) "\1c")
 (data (i32.const 4748) ",")
 (data (i32.const 4764) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4796) "\1c")
 (data (i32.const 4828) ",")
 (data (i32.const 4844) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4876) ",")
 (data (i32.const 4892) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4924) "\1c")
 (data (i32.const 4940) "\0c\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 4956) "\1c")
 (data (i32.const 4972) "\08\00\00\00\01\00\00\00\02")
 (data (i32.const 4988) ",")
 (data (i32.const 5004) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5036) "\1c")
 (data (i32.const 5052) "\08\00\00\00\03\00\00\00\04")
 (data (i32.const 5068) "\1c")
 (data (i32.const 5084) "\0c\00\00\00\01\00\00\00\02\00\00\00\05")
 (data (i32.const 5100) ",")
 (data (i32.const 5116) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5148) "\1c")
 (data (i32.const 5164) "\04\00\00\00\01")
 (data (i32.const 5180) ",")
 (data (i32.const 5196) "\10\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5228) ",")
 (data (i32.const 5244) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5276) "\1c")
 (data (i32.const 5292) "\04\00\00\00\05")
 (data (i32.const 5308) ",")
 (data (i32.const 5324) "\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04")
 (data (i32.const 5356) ",")
 (data (i32.const 5372) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5404) "\1c")
 (data (i32.const 5420) "\08\00\00\00\04\00\00\00\05")
 (data (i32.const 5436) "\1c")
 (data (i32.const 5452) "\0c\00\00\00\01\00\00\00\02\00\00\00\03")
 (data (i32.const 5468) ",")
 (data (i32.const 5484) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5516) "\1c")
 (data (i32.const 5532) "\04\00\00\00\04")
 (data (i32.const 5548) ",")
 (data (i32.const 5564) "\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\05")
 (data (i32.const 5596) ",")
 (data (i32.const 5612) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5644) "\1c")
 (data (i32.const 5660) "\04\00\00\00\01")
 (data (i32.const 5676) ",")
 (data (i32.const 5692) "\10\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5724) ",")
 (data (i32.const 5740) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5772) "\1c")
 (data (i32.const 5804) ",")
 (data (i32.const 5820) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5852) ",")
 (data (i32.const 5868) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5900) "\1c")
 (data (i32.const 5932) ",")
 (data (i32.const 5948) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 5980) ",")
 (data (i32.const 5996) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 6028) "\1c")
 (data (i32.const 6060) ",")
 (data (i32.const 6076) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 6108) ",")
 (data (i32.const 6124) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 6156) "\1c")
 (data (i32.const 6188) ",")
 (data (i32.const 6204) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 6236) ",")
 (data (i32.const 6252) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 6284) "\1c")
 (data (i32.const 6316) ",")
 (data (i32.const 6332) "\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05")
 (data (i32.const 6364) "\1c")
 (data (i32.const 6396) "|")
 (data (i32.const 6408) "\01\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y")
 (data (i32.const 6524) "<")
 (data (i32.const 6536) "\01\00\00\00\1e\00\00\00u\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00n\00u\00l\00l")
 (data (i32.const 6588) "\1c")
 (data (i32.const 6600) "\0d\00\00\00\08\00\00\00\01")
 (data (i32.const 6620) "\1c")
 (data (i32.const 6632) "\0d\00\00\00\08\00\00\00\02")
 (data (i32.const 6652) "\1c")
 (data (i32.const 6664) "\0d\00\00\00\08\00\00\00\03")
 (data (i32.const 6684) "\1c")
 (data (i32.const 6696) "\0d\00\00\00\08\00\00\00\04")
 (data (i32.const 6716) "\1c")
 (data (i32.const 6728) "\0d\00\00\00\08\00\00\00\05")
 (data (i32.const 6748) "\1c")
 (data (i32.const 6760) "\0d\00\00\00\08\00\00\00\06")
 (data (i32.const 6780) ",")
 (data (i32.const 6796) "\10\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03")
 (data (i32.const 6828) "\1c")
 (data (i32.const 6840) "\0d\00\00\00\08\00\00\00\07")
 (data (i32.const 6860) "\1c")
 (data (i32.const 6872) "\0d\00\00\00\08\00\00\00\08")
 (data (i32.const 6892) "\1c")
 (data (i32.const 6904) "\0d\00\00\00\08\00\00\00\t")
 (data (i32.const 6924) "\1c")
 (data (i32.const 6936) "\0d\00\00\00\08\00\00\00\n")
 (data (i32.const 6956) "\1c")
 (data (i32.const 6968) "\0d\00\00\00\08\00\00\00\0b")
 (data (i32.const 6988) "\1c")
 (data (i32.const 7000) "\0d\00\00\00\08\00\00\00\0c")
 (data (i32.const 7020) "\1c")
 (data (i32.const 7032) "\0d\00\00\00\08\00\00\00\0d")
 (data (i32.const 7052) "\1c")
 (data (i32.const 7064) "\0d\00\00\00\08\00\00\00\0e")
 (data (i32.const 7084) "\1c")
 (data (i32.const 7096) "\0d\00\00\00\08\00\00\00\0f")
 (data (i32.const 7116) "\1c")
 (data (i32.const 7128) "\0d\00\00\00\08\00\00\00\10")
 (data (i32.const 7148) "\1c")
 (data (i32.const 7160) "\0d\00\00\00\08\00\00\00\11")
 (data (i32.const 7180) "\1c")
 (data (i32.const 7192) "\0d\00\00\00\08\00\00\00\12")
 (data (i32.const 7212) "\1c")
 (data (i32.const 7224) "\0d\00\00\00\08\00\00\00\13")
 (data (i32.const 7244) "\1c")
 (data (i32.const 7256) "\0d\00\00\00\08\00\00\00\14")
 (data (i32.const 7276) "\1c")
 (data (i32.const 7288) "\0e\00\00\00\08\00\00\00\15")
 (data (i32.const 7308) "\1c")
 (data (i32.const 7320) "\0e\00\00\00\08\00\00\00\16")
 (data (i32.const 7340) "\1c")
 (data (i32.const 7352) "\0e\00\00\00\08\00\00\00\17")
 (data (i32.const 7372) "\1c")
 (data (i32.const 7384) "\0e\00\00\00\08\00\00\00\18")
 (data (i32.const 7404) "\1c")
 (data (i32.const 7416) "\0e\00\00\00\08\00\00\00\19")
 (data (i32.const 7436) "\1c")
 (data (i32.const 7448) "\0f\00\00\00\08\00\00\00\1a")
 (data (i32.const 7468) "\1c")
 (data (i32.const 7480) "\10\00\00\00\08\00\00\00\1b")
 (data (i32.const 7500) "\1c")
 (data (i32.const 7512) "\10\00\00\00\08\00\00\00\1c")
 (data (i32.const 7532) "\1c")
 (data (i32.const 7544) "\10\00\00\00\08\00\00\00\1d")
 (data (i32.const 7564) "\1c")
 (data (i32.const 7576) "\0d\00\00\00\08\00\00\00\1e")
 (data (i32.const 7596) "\1c")
 (data (i32.const 7608) "\0d\00\00\00\08\00\00\00\1f")
 (data (i32.const 7628) "\1c")
 (data (i32.const 7640) "\0d\00\00\00\08\00\00\00 ")
 (data (i32.const 7660) "\1c")
 (data (i32.const 7672) "\0d\00\00\00\08\00\00\00!")
 (data (i32.const 7692) "\1c")
 (data (i32.const 7704) "\11\00\00\00\08\00\00\00\"")
 (data (i32.const 7724) "\1c")
 (data (i32.const 7736) "\11\00\00\00\08\00\00\00#")
 (data (i32.const 7756) "\1c")
 (data (i32.const 7768) "\12\00\00\00\08\00\00\00$")
 (data (i32.const 7788) "\1c")
 (data (i32.const 7800) "\12\00\00\00\08\00\00\00%")
 (data (i32.const 7820) "\1c")
 (data (i32.const 7832) "\11\00\00\00\08\00\00\00&")
 (data (i32.const 7852) "\1c")
 (data (i32.const 7864) "\11\00\00\00\08\00\00\00\'")
 (data (i32.const 7884) "\1c")
 (data (i32.const 7896) "\11\00\00\00\08\00\00\00(")
 (data (i32.const 7916) "\1c")
 (data (i32.const 7928) "\11\00\00\00\08\00\00\00)")
 (data (i32.const 7948) "\1c")
 (data (i32.const 7960) "\11\00\00\00\08\00\00\00*")
 (data (i32.const 7980) "\1c")
 (data (i32.const 7992) "\12\00\00\00\08\00\00\00+")
 (data (i32.const 8012) "\1c")
 (data (i32.const 8024) "\12\00\00\00\08\00\00\00,")
 (data (i32.const 8044) "\1c")
 (data (i32.const 8056) "\11\00\00\00\08\00\00\00-")
 (data (i32.const 8076) "\1c")
 (data (i32.const 8088) "\11\00\00\00\08\00\00\00.")
 (data (i32.const 8108) "\1c")
 (data (i32.const 8120) "\11\00\00\00\08\00\00\00/")
 (data (i32.const 8140) "\bc")
 (data (i32.const 8152) "\01\00\00\00\ac\00\00\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\000\001\002\003\004\005\006\007\008\009\00_\00-\00,\00.\00+\00/\00\\\00[\00]\00{\00}\00(\00)\00<\00>\00*\00&\00$\00%\00^\00@\00#\00!\00?")
 (data (i32.const 8332) "\1c")
 (data (i32.const 8348) "\0c\00\00\00\00\00\00@\00\00\80\bf")
 (data (i32.const 8364) "\1c")
 (data (i32.const 8376) "\15\00\00\00\08\00\00\000")
 (data (i32.const 8396) "\1c")
 (data (i32.const 8412) "\0c\00\00\00\00\00\80\bf\00\00\00\00\00\00\00@")
 (data (i32.const 8428) "<")
 (data (i32.const 8444) " \00\00\00\00\00\80?\00\00\c0\7f\00\00\80\ff\00\00\80?\00\00\00\00\00\00\80\bf\00\00\00\c0\00\00\80\7f")
 (data (i32.const 8492) "<")
 (data (i32.const 8508) " \00\00\00\00\00\80\ff\00\00\00\c0\00\00\80\bf\00\00\00\00\00\00\80?\00\00\80?\00\00\80\7f\00\00\c0\7f")
 (data (i32.const 8556) "\\")
 (data (i32.const 8572) "@")
 (data (i32.const 8582) "\f0?\00\00\00\00\00\00\f8\7f\00\00\00\00\00\00\f0\ff\05\00\00\00\00\00\f0?")
 (data (i32.const 8622) "\f0\bf\00\00\00\00\00\00\00\c0\00\00\00\00\00\00\f0\7f")
 (data (i32.const 8652) "\1c")
 (data (i32.const 8664) "\16\00\00\00\08\00\00\001")
 (data (i32.const 8684) "\\")
 (data (i32.const 8700) "@")
 (data (i32.const 8710) "\f0\ff\00\00\00\00\00\00\00\c0\00\00\00\00\00\00\f0\bf")
 (data (i32.const 8742) "\f0?\05\00\00\00\00\00\f0?\00\00\00\00\00\00\f0\7f\00\00\00\00\00\00\f8\7f")
 (data (i32.const 8780) ",")
 (data (i32.const 8796) "\14\00\00\00\01\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\02")
 (data (i32.const 8828) "\1c")
 (data (i32.const 8840) "\17\00\00\00\08\00\00\002")
 (data (i32.const 8860) ",")
 (data (i32.const 8876) "\14\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\01\00\00\00\02")
 (data (i32.const 8908) ",")
 (data (i32.const 8924) "\14\00\00\00\01\00\00\00\ff\ff\ff\ff\fe\ff\ff\ff\00\00\00\00\02")
 (data (i32.const 8956) "\1c")
 (data (i32.const 8968) "\18\00\00\00\08\00\00\003")
 (data (i32.const 8988) ",")
 (data (i32.const 9004) "\14\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 9036) "\1c")
 (data (i32.const 9068) "\1c")
 (data (i32.const 9084) "\04\00\00\00\01")
 (data (i32.const 9100) "\1c")
 (data (i32.const 9116) "\08\00\00\00\02\00\00\00\01")
 (data (i32.const 9132) ",")
 (data (i32.const 9148) "\10\00\00\00\03\00\00\00\02\00\00\00\01")
 (data (i32.const 9180) ",")
 (data (i32.const 9196) "\10\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03")
 (data (i32.const 9228) "\1c")
 (data (i32.const 9240) "\17\00\00\00\08\00\00\004")
 (data (i32.const 9260) "\1c")
 (data (i32.const 9276) "\04\00\00\00\01")
 (data (i32.const 9292) "\1c")
 (data (i32.const 9308) "\08\00\00\00\01\00\00\00\02")
 (data (i32.const 9324) "\1c")
 (data (i32.const 9336) "\19\00\00\00\08\00\00\005")
 (data (i32.const 9356) "\1c")
 (data (i32.const 9368) "\17\00\00\00\08\00\00\006")
 (data (i32.const 9388) "\1c")
 (data (i32.const 9400) "\17\00\00\00\08\00\00\007")
 (data (i32.const 9420) "\1c")
 (data (i32.const 9432) "\17\00\00\00\08\00\00\008")
 (data (i32.const 9452) "\1c")
 (data (i32.const 9464) "\17\00\00\00\08\00\00\009")
 (data (i32.const 9484) "\1c")
 (data (i32.const 9496) "\1b\00\00\00\08\00\00\00:")
 (data (i32.const 9516) "\1c")
 (data (i32.const 9528) "\1e\00\00\00\08\00\00\00;")
 (data (i32.const 9548) "\1c")
 (data (i32.const 9560) "\01\00\00\00\02\00\00\00a")
 (data (i32.const 9580) "\1c")
 (data (i32.const 9592) "\01\00\00\00\02\00\00\00b")
 (data (i32.const 9612) "\1c")
 (data (i32.const 9624) "\01\00\00\00\04\00\00\00a\00b")
 (data (i32.const 9644) "\1c")
 (data (i32.const 9656) "\01\00\00\00\04\00\00\00b\00a")
 (data (i32.const 9676) "\1c")
 (data (i32.const 9688) "\01")
 (data (i32.const 9708) ",")
 (data (i32.const 9724) "\1c\00\00\00`%\00\00\80%\00\00`%\00\00\a0%\00\00\c0%\00\00\e0%")
 (data (i32.const 9756) ",")
 (data (i32.const 9772) "\1c\00\00\00\e0%\00\00`%\00\00`%\00\00\a0%\00\00\80%\00\00\c0%")
 (data (i32.const 9804) "\1c")
 (data (i32.const 9816) " \00\00\00\08\00\00\00<")
 (data (i32.const 9836) "\1c")
 (data (i32.const 9848) "\"\00\00\00\08\00\00\00=")
 (data (i32.const 9868) "\1c")
 (data (i32.const 9884) "\02\00\00\00\01")
 (data (i32.const 9900) "\1c")
 (data (i32.const 9912) "\01\00\00\00\08\00\00\00t\00r\00u\00e")
 (data (i32.const 9932) "\1c")
 (data (i32.const 9944) "\01\00\00\00\n\00\00\00f\00a\00l\00s\00e")
 (data (i32.const 9964) "\1c")
 (data (i32.const 9976) "\01\00\00\00\02\00\00\00,")
 (data (i32.const 9996) ",")
 (data (i32.const 10008) "\01\00\00\00\14\00\00\00t\00r\00u\00e\00,\00f\00a\00l\00s\00e")
 (data (i32.const 10044) "\1c")
 (data (i32.const 10060) "\0c\00\00\00\01\00\00\00\fe\ff\ff\ff\fd\ff\ff\ff")
 (data (i32.const 10076) "|")
 (data (i32.const 10088) "\01\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006")
 (data (i32.const 10204) "<")
 (data (i32.const 10216) "\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s")
 (data (i32.const 10268) "\1c")
 (data (i32.const 10280) "\01\00\00\00\02\00\00\000")
 (data (i32.const
 (data (i32.const 10700) "\1c\04")
 (data (i32.const 10712) "\01\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f")
 (data (i32.const 11756) "\\")
 (data (i32.const 11768) "\01\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data (i32.const 11852) "\1c")
 (data (i32.const 11864) "\01\00\00\00\n\00\00\001\00-\002\00-\003")
 (data (i32.const 11884) "\1c")
 (data (i32.const 11900) "\0c\00\00\00\01\00\00\00\02\00\00\00\03")
 (data (i32.const 11916) "\1c")
 (data (i32.const 11928) "\01\00\00\00\02\00\00\00-")
 (data (i32.const 11948) "\1c")
 (data (i32.const 11964) "\08\00\00\00\00\00\00\80\00\00\00\80")
 (data (i32.const 11980) "\1c")
 (data (i32.const 11992) "\01\00\00\00\04\00\00\00_\00_")
 (data (i32.const 12012) "L")
 (data (i32.const 12024) "\01\00\00\000\00\00\00-\002\001\004\007\004\008\003\006\004\008\00_\00_\00-\002\001\004\007\004\008\003\006\004\008")
 (data (i32.const 12092) "L")
 (data (i32.const 12108) "0")
 (data (i32.const 12126) "\f0?\00\00\00\00\00\00\00\c0\00\00\00\00\00\00\f8\7f\00\00\00\00\00\00\f0\ff\00\00\00\00\00\00\f0\7f")
 (data (i32.const 12172) "\1c")
 (data (i32.const 12184) "\01\00\00\00\04\00\00\00,\00 ")
 (data (i32.const 12204) "\1c")
 (data (i32.const 12216) "\01\00\00\00\06\00\00\000\00.\000")
 (data (i32.const 12236) "\1c")
 (data (i32.const 12248) "\01\00\00\00\06\00\00\00N\00a\00N")
 (data (i32.const 12268) ",")
 (data (i32.const 12280) "\01\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y")
 (data (i32.const 12316) ",")
 (data (i32.const 12328) "\01\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y")
 (data (i32.const 12424) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\0dXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data (i32.const 13120) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\0d\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data (i32.const 13296) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data (i32.const 13340) "l")
 (data (i32.const 13352) "\01\00\00\00P\00\00\000\00.\000\00,\00 \001\00.\000\00,\00 \00-\002\00.\000\00,\00 \00N\00a\00N\00,\00 \00-\00I\00n\00f\00i\00n\00i\00t\00y\00,\00 \00I\00n\00f\00i\00n\00i\00t\00y")
 (data (i32.const 13452) "\1c")
 (data (i32.const 13464) "\01\00\00\00\02\00\00\001")
 (data (i32.const 13484) "\1c")
 (data (i32.const 13500) "\0c\00\00\00\e0%\00\00\a04")
 (data (i32.const 13516) "<")
 (data (i32.const 13528) "\01\00\00\00\1e\00\00\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]")
 (data (i32.const 13580) "\\")
 (data (i32.const 13592) "\01\00\00\00@\00\00\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]\00,\00,\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]")
 (data (i32.const 13676) "\\")
 (data (i32.const 13688) "\01\00\00\00>\00\00\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]\00,\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]")
 (data (i32.const 13772) "\1c")
 (data (i32.const 13804) "\1c")
 (data (i32.const 13820) "\04\00\00\00\01")
 (data (i32.const 13836) "\1c")
 (data (i32.const 13852) "\08\00\00\00\01\00\00\00\02")
 (data (i32.const 13868) ",")
 (data (i32.const 13884) "\10\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03")
 (data (i32.const 13916) "\1c")
 (data (i32.const 13928) "\01\00\00\00\06\00\00\001\00,\002")
 (data (i32.const 13948) ",")
 (data (i32.const 13960) "\01\00\00\00\0e\00\00\000\00,\001\00,\002\00,\003")
 (data (i32.const 13996) "\1c")
 (data (i32.const 14012) "\03\00\00\00\01\ff")
 (data (i32.const 14028) "\1c")
 (data (i32.const 14040) "\01\00\00\00\0c\00\00\001\00,\00-\001\00,\000")
 (data (i32.const 14060) "\1c")
 (data (i32.const 14076) "\03\00\00\00\80\81\80")
 (data (i32.const 14092) ",")
 (data (i32.const 14104) "\01\00\00\00\1c\00\00\00-\001\002\008\00,\00-\001\002\007\00,\00-\001\002\008")
 (data (i32.const 14140) "\1c")
 (data (i32.const 14156) "\06\00\00\00\01\00\ff\ff")
 (data (i32.const 14172) ",")
 (data (i32.const 14184) "\01\00\00\00\12\00\00\001\00,\006\005\005\003\005\00,\000")
 (data (i32.const 14220) "\1c")
 (data (i32.const 14236) "\04\00\00\00\00\80\01\ff")
 (data (i32.const 14252) ",")
 (data (i32.const 14264) "\01\00\00\00\16\00\00\00-\003\002\007\006\008\00,\00-\002\005\005")
 (data (i32.const 14300) "\1c")
 (data (i32.const 14316) "\08\00\00\00\00\00\00\80\80\ff\ff\ff")
 (data (i32.const 14332) "<")
 (data (i32.const 14344) "\01\00\00\00 \00\00\00-\002\001\004\007\004\008\003\006\004\008\00,\00-\001\002\008")
 (data (i32.const 14396) ",")
 (data (i32.const 14412) "\18\00\00\00\01\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 14444) "L")
 (data (i32.const 14456) "\01\00\00\000\00\00\001\00,\001\008\004\004\006\007\004\004\000\007\003\007\000\009\005\005\001\006\001\005\00,\000")
 (data (i32.const 14524) "<")
 (data (i32.const 14540) "(\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff@Eu\c3*\9d\fb\ff\00\00\00\00\00\00\00\80\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\7f")
 (data (i32.const 14588) "\9c")
 (data (i32.const 14600) "\01\00\00\00~\00\00\00-\001\00,\00-\001\002\003\004\005\006\007\008\009\000\001\002\003\004\005\006\00,\00-\009\002\002\003\003\007\002\000\003\006\008\005\004\007\007\005\008\000\008\00,\000\00,\009\002\002\003\003\007\002\000\003\006\008\005\004\007\007\005\008\000\007")
 (data (i32.const 14748) ",")
 (data (i32.const 14764) "\1c\00\00\00\e0%\00\00`%\00\00`%\00\00\a0%\00\00\80%\00\00\c0%")
 (data (i32.const 14796) ",")
 (data (i32.const 14808) "\01\00\00\00\1a\00\00\00,\00a\00,\00a\00,\00a\00b\00,\00b\00,\00b\00a\00,")
 (data (i32.const 14844) "\1c")
 (data (i32.const 14856) "\01\00\00\00\02\00\00\002")
 (data (i32.const 14876) "\1c")
 (data (i32.const 14888) "\01\00\00\00\02\00\00\004")
 (data (i32.const 14908) ",")
 (data (i32.const 14924) "\10\00\00\00\a04\00\00\10:\00\00\00\00\00\000:")
 (data (i32.const 14956) "\1c")
 (data (i32.const 14968) "\01\00\00\00\0c\00\00\001\00,\002\00,\00,\004")
 (data (i32.const 14988) "\1c")
 (data (i32.const 15004) "\08\00\00\00\01\00\00\00\02")
 (data (i32.const 15020) "\1c")
 (data (i32.const 15036) "\08\00\00\00\03\00\00\00\04")
 (data (i32.const 15052) ",")
 (data (i32.const 15064) "\01\00\00\00\0e\00\00\001\00,\002\00,\003\00,\004")
 (data (i32.const 15100) "\1c")
 (data (i32.const 15116) "\02\00\00\00\01\02")
 (data (i32.const 15132) "\1c")
 (data (i32.const 15148) "\02\00\00\00\03\04")
 (data (i32.const 15164) "\1c")
 (data (i32.const 15180) "\04\00\00\00\01")
 (data (i32.const 15196) "\1c")
 (data (i32.const 15212) "\04")
 (data (i32.const 15228) "\1c")
 (data (i32.const 15244) "\0c\00\00\00\01\00\00\00\02\00\00\00\03")
 (data (i32.const 15260) "\1c")
 (data (i32.const 15276) "\0c\00\00\00\04\00\00\00\05\00\00\00\06")
 (data (i32.const 15292) "\1c")
 (data (i32.const 15308) "\0c\00\00\00\07\00\00\00\08\00\00\00\t")
 (data (i32.const 15324) "\1c")
 (data (i32.const 15336) "\01\00\00\00\06\00\00\00o\00n\00e")
 (data (i32.const 15356) "\1c")
 (data (i32.const 15372) "\04\00\00\00\f0;")
 (data (i32.const 15388) "\1c")
 (data (i32.const 15400) "\01\00\00\00\06\00\00\00t\00w\00o")
 (data (i32.const 15420) "\1c")
 (data (i32.const 15432) "\01\00\00\00\n\00\00\00t\00h\00r\00e\00e")
 (data (i32.const 15452) "\1c")
 (data (i32.const 15468) "\0c\00\00\000<\00\00\00\00\00\00P<")
 (data (i32.const 15484) "\1c")
 (data (i32.const 15496) "\01\00\00\00\08\00\00\00f\00o\00u\00r")
 (data (i32.const 15516) "\1c")
 (data (i32.const 15528) "\01\00\00\00\08\00\00\00f\00i\00v\00e")
 (data (i32.const 15548) "\1c")
 (data (i32.const 15560) "\01\00\00\00\06\00\00\00s\00i\00x")
 (data (i32.const 15580) "\1c")
 (data (i32.const 15596) "\0c\00\00\00\90<\00\00\b0<\00\00\d0<")
 (data (i32.const 15612) "\1c")
 (data (i32.const 15624) "\01\00\00\00\n\00\00\00s\00e\00v\00e\00n")
 (data (i32.const 15644) "\1c")
 (data (i32.const 15660) "\04\00\00\00\10=")
 (data (i32.const 15676) "<")
 (data (i32.const 15692) " \00\00\00\f0;\00\000<\00\00\00\00\00\00P<\00\00\90<\00\00\b0<\00\00\d0<\00\00\10=")
 (data (i32.const 15740) "\1c")
 (data (i32.const 15772) "\1c")
 (data (i32.const 15804) "\1c")
 (data (i32.const 15820) "\04\00\00\00\01")
 (data (i32.const 15836) "\1c")
 (data (i32.const 15852) "\04\00\00\00\02")
 (data (i32.const 15868) "\1c")
 (data (i32.const 15880) ",\00\00\00\08\00\00\00>")
 (data (i32.const 15904) "-\00\00\00 \00\00\00\00\00\00\00 ")
 (data (i32.const 15932) "\02\t\00\00\00\00\00\00 \00\00\00\00\00\00\00A\00\00\00\02\00\00\00B\00\00\00\00\00\00\00\02\01\00\00\00\00\00\00\02\19\00\00\00\00\00\00\02A\00\00\00\00\00\00\82\00\00\00\00\00\00\00\02\1a\00\00\00\00\00\00\02a")
 (data (i32.const 16060) " \00\00\00\00\00\00\00\02A")
 (data (i32.const 16116) "\02A")
 (data (i32.const 16132) " \00\00\00\00\00\00\00\02A")
 (data (i32.const 16156) "\02a")
 (data (i32.const 16172) "\02A")
 (data (i32.const 16188) "B\00\00\00\00\00\00\00B\08\00\00\00\00\00\00\82\08\00\00\00\00\00\00\02\02\00\00\00\00\00\00\02\n\00\00\00\00\00\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00\02A")
 (table $0 63 63 funcref)
 (elem $0 (i32.const 1) $start:std/array~anonymous|0 $start:std/array~anonymous|1 $start:std/array~anonymous|2 $start:std/array~anonymous|3 $start:std/array~anonymous|2 $start:std/array~anonymous|5 $start:std/array~anonymous|0 $start:std/array~anonymous|1 $start:std/array~anonymous|2 $start:std/array~anonymous|5 $start:std/array~anonymous|10 $start:std/array~anonymous|11 $start:std/array~anonymous|12 $start:std/array~anonymous|13 $start:std/array~anonymous|14 $start:std/array~anonymous|15 $start:std/array~anonymous|16 $start:std/array~anonymous|17 $start:std/array~anonymous|18 $start:std/array~anonymous|19 $start:std/array~anonymous|20 $start:std/array~anonymous|21 $start:std/array~anonymous|20 $start:std/array~anonymous|23 $start:std/array~anonymous|24 $start:std/array~anonymous|25 $start:std/array~anonymous|26 $start:std/array~anonymous|27 $start:std/array~anonymous|28 $start:std/array~anonymous|29 $start:std/array~anonymous|30 $start:std/array~anonymous|31 $start:std/array~anonymous|32 $start:std/array~anonymous|33 $start:std/array~anonymous|33 $start:std/array~anonymous|35 $start:std/array~anonymous|36 $start:std/array~anonymous|37 $start:std/array~anonymous|33 $start:std/array~anonymous|39 $start:std/array~anonymous|33 $start:std/array~anonymous|33 $start:std/array~anonymous|35 $start:std/array~anonymous|36 $start:std/array~anonymous|37 $start:std/array~anonymous|33 $start:std/array~anonymous|39 $~lib/util/sort/COMPARATOR<f32>~anonymous|0 $~lib/util/sort/COMPARATOR<f64>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $~lib/util/sort/COMPARATOR<u32>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $std/array/assertStableSortedForComplexObjects~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $start:std/array~anonymous|48 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $start:std/array~anonymous|48 $start:std/array~anonymous|51 $std/array/assertStableSortedForComplexObjects~anonymous|0 $~lib/util/sort/COMPARATOR<~lib/string/String|null>~anonymous|0 $~lib/util/sort/COMPARATOR<~lib/string/String|null>~anonymous|0 $start:std/array~anonymous|53)
 (export "memory" (memory $0))
 (export "_start" (func $~start))
 (func $~lib/rt/itcms/visitRoots
  (local $0 i32)
  (local $1 i32)
  global.get $std/array/arr
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  i32.const 8160
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $std/array/inputStabArr
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  global.get $std/array/outputStabArr
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
  i32.const 1344
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1056
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 2640
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 6416
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 1152
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 10720
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  i32.const 11776
  call $byn-split-outlined-A$~lib/rt/itcms/__visit
  global.get $~lib/rt/itcms/pinSpace
  local.tee $1
  i32.load offset=4
  i32.const -4
  i32.and
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.ne
   if
    local.get $0
    i32.load offset=4
    i32.const 3
    i32.and
    i32.const 3
    i32.ne
    if
     i32.const 0
     i32.const 1216
     i32.const 159
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 20
    i32.add
    call $~lib/rt/__visit_members
    local.get $0
    i32.load offset=4
    i32.const -4
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#makeGray (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 1216
    i32.const 147
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   global.set $~lib/rt/itcms/iter
  end
  block $__inlined_func$~lib/rt/itcms/Object#unlink
   local.get $0
   i32.load offset=4
   i32.const -4
   i32.and
   local.tee $1
   i32.eqz
   if
    i32.const 0
    local.get $0
    i32.const 32652
    i32.lt_u
    local.get $0
    i32.load offset=8
    select
    i32.eqz
    if
     i32.const 0
     i32.const 1216
     i32.const 127
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    br $__inlined_func$~lib/rt/itcms/Object#unlink
   end
   local.get $0
   i32.load offset=8
   local.tee $2
   i32.eqz
   if
    i32.const 0
    i32.const 1216
    i32.const 131
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $2
   local.get $1
   local.get $2
   i32.load offset=4
   i32.const 3
   i32.and
   i32.or
   i32.store offset=4
  end
  global.get $~lib/rt/itcms/toSpace
  local.set $2
  local.get $0
  i32.load offset=12
  local.tee $1
  i32.const 1
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 15904
   i32.load
   i32.gt_u
   if
    i32.const 1344
    i32.const 1408
    i32.const 22
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 3
   i32.shl
   i32.const 15908
   i32.add
   i32.load
   i32.const 32
   i32.and
  end
  local.set $3
  local.get $2
  i32.load offset=8
  local.set $1
  local.get $0
  global.get $~lib/rt/itcms/white
  i32.eqz
  i32.const 2
  local.get $3
  select
  local.get $2
  i32.or
  i32.store offset=4
  local.get $0
  local.get $1
  i32.store offset=8
  local.get $1
  local.get $0
  local.get $1
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store offset=4
  local.get $2
  local.get $0
  i32.store offset=8
 )
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1488
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 1488
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   local.get $2
   i32.const 1073741820
   local.get $2
   i32.const 1073741820
   i32.lt_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $4
   i32.const 7
   i32.sub
   local.set $3
   local.get $2
   local.get $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $3
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1488
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=8
  local.set $5
  local.get $1
  i32.load offset=4
  local.tee $4
  if
   local.get $4
   local.get $5
   i32.store offset=8
  end
  local.get $5
  if
   local.get $5
   local.get $4
   i32.store offset=4
  end
  local.get $1
  local.get $0
  local.get $3
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  i32.eq
  if
   local.get $0
   local.get $3
   i32.const 4
   i32.shl
   local.get $2
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $5
   i32.store offset=96
   local.get $5
   i32.eqz
   if
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    local.tee $1
    i32.load offset=4
    i32.const -2
    local.get $2
    i32.rotl
    i32.and
    local.set $2
    local.get $1
    local.get $2
    i32.store offset=4
    local.get $2
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load
     i32.const -2
     local.get $3
     i32.rotl
     i32.and
     i32.store
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 1488
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1488
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.add
  local.tee $4
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  if
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $3
   i32.const 4
   i32.add
   local.get $2
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.tee $4
   i32.load
   local.set $2
  end
  local.get $3
  i32.const 2
  i32.and
  if
   local.get $1
   i32.const 4
   i32.sub
   i32.load
   local.tee $1
   i32.load
   local.tee $6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 1488
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $6
   i32.const 4
   i32.add
   local.get $3
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.store
  end
  local.get $4
  local.get $2
  i32.const 2
  i32.or
  i32.store
  local.get $3
  i32.const -4
  i32.and
  local.tee $2
  i32.const 12
  i32.lt_u
  if
   i32.const 0
   i32.const 1488
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  local.get $1
  i32.const 4
  i32.add
  local.get $2
  i32.add
  i32.ne
  if
   i32.const 0
   i32.const 1488
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   local.get $2
   i32.const 1073741820
   local.get $2
   i32.const 1073741820
   i32.lt_u
   select
   local.tee $2
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $5
   local.get $2
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $2
  i32.const 16
  i32.lt_u
  local.get $5
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1488
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  local.set $3
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  local.get $3
  i32.store offset=8
  local.get $3
  if
   local.get $3
   local.get $1
   i32.store offset=4
  end
  local.get $0
  local.get $5
  i32.const 4
  i32.shl
  local.get $2
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store offset=96
  local.get $0
  local.get $0
  i32.load
  i32.const 1
  local.get $5
  i32.shl
  i32.or
  i32.store
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  local.tee $0
  local.get $0
  i32.load offset=4
  i32.const 1
  local.get $2
  i32.shl
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.get $2
  i32.gt_u
  if
   i32.const 0
   i32.const 1488
   i32.const 377
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.load offset=1568
  local.tee $4
  if
   local.get $4
   i32.const 4
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 1488
    i32.const 384
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 16
   i32.sub
   local.get $4
   i32.eq
   if
    local.get $4
    i32.load
    local.set $3
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
   end
  else
   local.get $0
   i32.const 1572
   i32.add
   local.get $1
   i32.gt_u
   if
    i32.const 0
    i32.const 1488
    i32.const 397
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  i32.const -16
  i32.and
  local.get $1
  i32.sub
  local.tee $2
  i32.const 20
  i32.lt_u
  if
   return
  end
  local.get $1
  local.get $3
  i32.const 2
  i32.and
  local.get $2
  i32.const 8
  i32.sub
  local.tee $2
  i32.const 1
  i32.or
  i32.or
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 4
  i32.add
  local.get $2
  i32.add
  local.tee $2
  i32.const 2
  i32.store
  local.get $0
  local.get $2
  i32.store offset=1568
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  memory.size
  local.tee $1
  i32.const 0
  i32.le_s
  if (result i32)
   i32.const 1
   local.get $1
   i32.sub
   memory.grow
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  i32.const 32656
  i32.const 0
  i32.store
  i32.const 34224
  i32.const 0
  i32.store
  loop $for-loop|0
   local.get $0
   i32.const 23
   i32.lt_u
   if
    local.get $0
    i32.const 2
    i32.shl
    i32.const 32656
    i32.add
    i32.const 0
    i32.store offset=4
    i32.const 0
    local.set $1
    loop $for-loop|1
     local.get $1
     i32.const 16
     i32.lt_u
     if
      local.get $0
      i32.const 4
      i32.shl
      local.get $1
      i32.add
      i32.const 2
      i32.shl
      i32.const 32656
      i32.add
      i32.const 0
      i32.store offset=96
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|1
     end
    end
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  i32.const 32656
  i32.const 34228
  memory.size
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  i32.const 32656
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/__free (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.const 32652
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.const 15
  i32.and
  i32.const 1
  local.get $0
  select
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.load
   i32.const 1
   i32.and
  end
  if
   i32.const 0
   i32.const 1488
   i32.const 559
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $1
  i32.load
  i32.const 1
  i32.or
  i32.store
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      br_table $case0|0 $case1|0 $case2|0 $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $1
    global.get $~lib/rt/itcms/iter
    i32.load offset=4
    i32.const -4
    i32.and
    local.set $0
    loop $while-continue|1
     local.get $0
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     if
      local.get $0
      global.set $~lib/rt/itcms/iter
      local.get $1
      local.get $0
      i32.load offset=4
      i32.const 3
      i32.and
      i32.ne
      if
       local.get $0
       local.get $0
       i32.load offset=4
       i32.const -4
       i32.and
       local.get $1
       i32.or
       i32.store offset=4
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $0
       i32.const 20
       i32.add
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       return
      end
      local.get $0
      i32.load offset=4
      i32.const -4
      i32.and
      local.set $0
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/toSpace
    global.get $~lib/rt/itcms/iter
    i32.load offset=4
    i32.const -4
    i32.and
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     local.set $0
     loop $while-continue|0
      local.get $0
      i32.const 32652
      i32.lt_u
      if
       local.get $0
       i32.load
       local.tee $2
       if
        local.get $2
        call $byn-split-outlined-A$~lib/rt/itcms/__visit
       end
       local.get $0
       i32.const 4
       i32.add
       local.set $0
       br $while-continue|0
      end
     end
     global.get $~lib/rt/itcms/iter
     i32.load offset=4
     i32.const -4
     i32.and
     local.set $0
     loop $while-continue|2
      local.get $0
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $1
       local.get $0
       i32.load offset=4
       i32.const 3
       i32.and
       i32.ne
       if
        local.get $0
        local.get $0
        i32.load offset=4
        i32.const -4
        i32.and
        local.get $1
        i32.or
        i32.store offset=4
        local.get $0
        i32.const 20
        i32.add
        call $~lib/rt/__visit_members
       end
       local.get $0
       i32.load offset=4
       i32.const -4
       i32.and
       local.set $0
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $0
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $0
     global.set $~lib/rt/itcms/toSpace
     local.get $1
     global.set $~lib/rt/itcms/white
     local.get $0
     i32.load offset=4
     i32.const -4
     i32.and
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    return
   end
   global.get $~lib/rt/itcms/iter
   local.tee $0
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $0
    i32.load offset=4
    local.tee $1
    i32.const -4
    i32.and
    global.set $~lib/rt/itcms/iter
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.get $1
    i32.const 3
    i32.and
    i32.ne
    if
     i32.const 0
     i32.const 1216
     i32.const 228
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 32652
    i32.lt_u
    if
     local.get $0
     i32.const 0
     i32.store offset=4
     local.get $0
     i32.const 0
     i32.store offset=8
    else
     global.get $~lib/rt/itcms/total
     local.get $0
     i32.load
     i32.const -4
     i32.and
     i32.const 4
     i32.add
     i32.sub
     global.set $~lib/rt/itcms/total
     local.get $0
     i32.const 4
     i32.add
     call $~lib/rt/tlsf/__free
    end
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   local.tee $0
   local.get $0
   i32.store offset=4
   local.get $0
   local.get $0
   i32.store offset=8
   i32.const 0
   global.set $~lib/rt/itcms/state
  end
  i32.const 0
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 4
   i32.shr_u
  else
   i32.const 31
   local.get $1
   i32.const 1
   i32.const 27
   local.get $1
   i32.clz
   i32.sub
   i32.shl
   i32.add
   i32.const 1
   i32.sub
   local.get $1
   local.get $1
   i32.const 536870910
   i32.lt_u
   select
   local.tee $1
   i32.clz
   i32.sub
   local.tee $3
   i32.const 7
   i32.sub
   local.set $2
   local.get $1
   local.get $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
  end
  local.tee $1
  i32.const 16
  i32.lt_u
  local.get $2
  i32.const 23
  i32.lt_u
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1488
   i32.const 330
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const -1
  local.get $1
  i32.shl
  i32.and
  local.tee $1
  if (result i32)
   local.get $0
   local.get $1
   i32.ctz
   local.get $2
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
  else
   local.get $0
   i32.load
   i32.const -1
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.tee $1
   if (result i32)
    local.get $0
    local.get $1
    i32.ctz
    local.tee $1
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.tee $2
    i32.eqz
    if
     i32.const 0
     i32.const 1488
     i32.const 343
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.ctz
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=96
   else
    i32.const 0
   end
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 1152
   i32.const 1488
   i32.const 458
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 12
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.get $1
  i32.const 12
  i32.le_u
  select
  local.tee $3
  call $~lib/rt/tlsf/searchBlock
  local.tee $1
  i32.eqz
  if
   memory.size
   local.tee $1
   i32.const 4
   local.get $0
   i32.load offset=1568
   local.get $1
   i32.const 16
   i32.shl
   i32.const 4
   i32.sub
   i32.ne
   i32.shl
   local.get $3
   i32.const 1
   i32.const 27
   local.get $3
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.get $3
   local.get $3
   i32.const 536870910
   i32.lt_u
   select
   i32.add
   i32.const 65535
   i32.add
   i32.const -65536
   i32.and
   i32.const 16
   i32.shr_u
   local.tee $2
   local.get $1
   local.get $2
   i32.gt_s
   select
   memory.grow
   i32.const 0
   i32.lt_s
   if
    local.get $2
    memory.grow
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
   local.get $0
   local.get $1
   i32.const 16
   i32.shl
   memory.size
   i32.const 16
   i32.shl
   call $~lib/rt/tlsf/addMemory
   local.get $0
   local.get $3
   call $~lib/rt/tlsf/searchBlock
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 1488
    i32.const 496
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $3
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.gt_u
  if
   i32.const 0
   i32.const 1488
   i32.const 498
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/removeBlock
  local.get $1
  i32.load
  local.set $4
  local.get $3
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  if
   i32.const 0
   i32.const 1488
   i32.const 357
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const -4
  i32.and
  local.get $3
  i32.sub
  local.tee $2
  i32.const 16
  i32.ge_u
  if
   local.get $1
   local.get $3
   local.get $4
   i32.const 2
   i32.and
   i32.or
   i32.store
   local.get $1
   i32.const 4
   i32.add
   local.get $3
   i32.add
   local.tee $3
   local.get $2
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   i32.store
   local.get $0
   local.get $3
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $1
   local.get $4
   i32.const -2
   i32.and
   i32.store
   local.get $1
   i32.const 4
   i32.add
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.tee $0
   local.get $0
   i32.load
   i32.const -3
   i32.and
   i32.store
  end
  local.get $1
 )
 (func $~lib/rt/itcms/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 1152
   i32.const 1216
   i32.const 260
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   block $__inlined_func$~lib/rt/itcms/interrupt
    i32.const 2048
    local.set $2
    loop $do-loop|0
     local.get $2
     call $~lib/rt/itcms/step
     i32.sub
     local.set $2
     global.get $~lib/rt/itcms/state
     i32.eqz
     if
      global.get $~lib/rt/itcms/total
      i64.extend_i32_u
      i64.const 200
      i64.mul
      i64.const 100
      i64.div_u
      i32.wrap_i64
      i32.const 1024
      i32.add
      global.set $~lib/rt/itcms/threshold
      br $__inlined_func$~lib/rt/itcms/interrupt
     end
     local.get $2
     i32.const 0
     i32.gt_s
     br_if $do-loop|0
    end
    global.get $~lib/rt/itcms/total
    local.tee $2
    global.get $~lib/rt/itcms/threshold
    i32.sub
    i32.const 1024
    i32.lt_u
    i32.const 10
    i32.shl
    local.get $2
    i32.add
    global.set $~lib/rt/itcms/threshold
   end
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  i32.const 16
  i32.add
  call $~lib/rt/tlsf/allocateBlock
  local.tee $2
  local.get $1
  i32.store offset=12
  local.get $2
  local.get $0
  i32.store offset=16
  global.get $~lib/rt/itcms/fromSpace
  local.tee $1
  i32.load offset=8
  local.set $3
  local.get $2
  local.get $1
  global.get $~lib/rt/itcms/white
  i32.or
  i32.store offset=4
  local.get $2
  local.get $3
  i32.store offset=8
  local.get $3
  local.get $2
  local.get $3
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store offset=4
  local.get $1
  local.get $2
  i32.store offset=8
  global.get $~lib/rt/itcms/total
  local.get $2
  i32.load
  i32.const -4
  i32.and
  i32.const 4
  i32.add
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $2
  i32.const 20
  i32.add
  local.tee $1
  i32.const 0
  local.get $0
  memory.fill
  local.get $1
 )
 (func $~lib/array/Array<u8>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.add
  i32.load8_u
 )
 (func $std/array/isArraysEqual<u8> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.tee $3
  local.get $1
  i32.load offset=12
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   return
  end
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $0
    local.get $2
    call $~lib/array/Array<u8>#__get
    local.get $1
    local.get $2
    call $~lib/array/Array<u8>#__get
    i32.ne
    if
     i32.const 0
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $~lib/array/Array<u32>#fill (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.load offset=4
  local.set $5
  local.get $0
  i32.load offset=12
  local.tee $4
  local.get $2
  i32.add
  local.get $2
  local.get $4
  local.get $2
  local.get $4
  i32.lt_s
  select
  local.get $2
  i32.const 0
  i32.lt_s
  select
  local.set $0
  local.get $3
  local.get $4
  i32.add
  local.get $3
  local.get $4
  local.get $3
  local.get $4
  i32.lt_s
  select
  local.get $3
  i32.const 0
  i32.lt_s
  select
  local.set $2
  block $__inlined_func$~lib/util/bytes/FILL<u32>
   local.get $1
   i32.eqz
   local.get $1
   i32.const -1
   i32.eq
   i32.or
   if
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $5
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     local.get $1
     local.get $2
     local.get $0
     i32.sub
     i32.const 2
     i32.shl
     memory.fill
    end
    br $__inlined_func$~lib/util/bytes/FILL<u32>
   end
   loop $for-loop|0
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $5
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     local.get $1
     i32.store
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
  end
 )
 (func $~lib/array/Array<u32>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
 )
 (func $std/array/isArraysEqual<u32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.tee $3
  local.get $1
  i32.load offset=12
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   return
  end
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $0
    local.get $2
    call $~lib/array/Array<u32>#__get
    local.get $1
    local.get $2
    call $~lib/array/Array<u32>#__get
    i32.ne
    if
     i32.const 0
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $~lib/array/Array<f32>#fill (param $0 i32) (param $1 f32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.load offset=4
  local.set $5
  local.get $0
  i32.load offset=12
  local.tee $4
  local.get $2
  i32.add
  local.get $2
  local.get $4
  local.get $2
  local.get $4
  i32.lt_s
  select
  local.get $2
  i32.const 0
  i32.lt_s
  select
  local.set $0
  local.get $3
  local.get $4
  i32.add
  local.get $3
  local.get $4
  local.get $3
  local.get $4
  i32.lt_s
  select
  local.get $3
  i32.const 0
  i32.lt_s
  select
  local.set $2
  block $__inlined_func$~lib/util/bytes/FILL<f32>
   local.get $1
   i32.reinterpret_f32
   i32.eqz
   if
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $5
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.const 0
     local.get $2
     local.get $0
     i32.sub
     i32.const 2
     i32.shl
     memory.fill
    end
    br $__inlined_func$~lib/util/bytes/FILL<f32>
   end
   loop $for-loop|0
    local.get $0
    local.get $2
    i32.lt_s
    if
     local.get $5
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     local.get $1
     f32.store
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0
    end
   end
  end
 )
 (func $~lib/array/Array<f32>#__get (param $0 i32) (param $1 i32) (result f32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  f32.load
 )
 (func $std/array/isArraysEqual<f32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 f32)
  (local $4 i32)
  local.get $0
  i32.load offset=12
  local.tee $4
  local.get $1
  i32.load offset=12
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   return
  end
  loop $for-loop|0
   local.get $2
   local.get $4
   i32.lt_s
   if
    local.get $0
    local.get $2
    call $~lib/array/Array<f32>#__get
    local.tee $3
    local.get $3
    f32.ne
    if (result i32)
     local.get $1
     local.get $2
     call $~lib/array/Array<f32>#__get
     local.tee $3
     local.get $3
     f32.ne
    else
     i32.const 0
    end
    i32.eqz
    if
     local.get $0
     local.get $2
     call $~lib/array/Array<f32>#__get
     f64.promote_f32
     i64.reinterpret_f64
     i64.const 63
     i64.shr_u
     i32.wrap_i64
     local.get $1
     local.get $2
     call $~lib/array/Array<f32>#__get
     f64.promote_f32
     i64.reinterpret_f64
     i64.const 63
     i64.shr_u
     i32.wrap_i64
     i32.ne
     if
      i32.const 0
      return
     end
     local.get $0
     local.get $2
     call $~lib/array/Array<f32>#__get
     local.get $1
     local.get $2
     call $~lib/array/Array<f32>#__get
     f32.ne
     if
      i32.const 0
      return
     end
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $~lib/array/ensureCapacity (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.get $0
  i32.load offset=8
  local.tee $4
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 268435455
   i32.gt_u
   if
    i32.const 1056
    i32.const 1104
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load
   local.set $3
   local.get $1
   i32.const 8
   local.get $1
   i32.const 8
   i32.gt_u
   select
   i32.const 2
   i32.shl
   local.set $1
   local.get $2
   if
    local.get $4
    i32.const 1
    i32.shl
    local.tee $2
    i32.const 1073741820
    local.get $2
    i32.const 1073741820
    i32.lt_u
    select
    local.tee $2
    local.get $1
    local.get $1
    local.get $2
    i32.lt_u
    select
    local.set $1
   end
   block $__inlined_func$~lib/rt/itcms/__renew
    local.get $3
    i32.const 20
    i32.sub
    local.tee $4
    i32.load
    i32.const -4
    i32.and
    i32.const 16
    i32.sub
    local.get $1
    i32.ge_u
    if
     local.get $4
     local.get $1
     i32.store offset=16
     local.get $3
     local.set $2
     br $__inlined_func$~lib/rt/itcms/__renew
    end
    local.get $1
    local.get $4
    i32.load offset=12
    call $~lib/rt/itcms/__new
    local.tee $2
    local.get $3
    local.get $1
    local.get $4
    i32.load offset=16
    local.tee $4
    local.get $1
    local.get $4
    i32.lt_u
    select
    memory.copy
   end
   local.get $2
   local.get $3
   i32.ne
   if
    local.get $0
    local.get $2
    i32.store
    local.get $0
    local.get $2
    i32.store offset=4
    local.get $2
    if
     local.get $0
     local.get $2
     i32.const 0
     call $byn-split-outlined-A$~lib/rt/itcms/__link
    end
   end
   local.get $0
   local.get $1
   i32.store offset=8
  end
 )
 (func $~lib/array/Array<i32>#push (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.get $0
  i32.load offset=12
  local.tee $2
  i32.const 1
  i32.add
  local.tee $3
  i32.const 1
  call $~lib/array/ensureCapacity
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $3
  i32.store offset=12
 )
 (func $~lib/array/Array<i32>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
 )
 (func $~lib/array/Array<i32>#pop (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load offset=12
  local.tee $1
  i32.const 0
  i32.le_s
  if
   i32.const 2640
   i32.const 1104
   i32.const 275
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<std/array/Ref>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  local.get $2
  if
   local.get $0
   local.get $2
   i32.const 1
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
 )
 (func $~lib/array/Array<i32>#at (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 0
  local.get $0
  i32.load offset=12
  local.tee $2
  local.get $1
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.tee $1
  local.get $2
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 147
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
 )
 (func $~lib/array/Array<i32>#copyWithin (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  local.get $3
  local.get $0
  i32.load offset=12
  local.tee $4
  local.get $3
  local.get $4
  i32.lt_s
  select
  local.set $5
  local.get $0
  i32.load offset=4
  local.tee $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $4
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $4
   local.get $1
   local.get $4
   i32.lt_s
   select
  end
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  local.get $3
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $4
   i32.add
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
  else
   local.get $2
   local.get $4
   local.get $2
   local.get $4
   i32.lt_s
   select
  end
  local.tee $2
  i32.const 2
  i32.shl
  i32.add
  local.get $5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $4
   local.get $5
   i32.add
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
  else
   local.get $5
   local.get $4
   local.get $4
   local.get $5
   i32.gt_s
   select
  end
  local.get $2
  i32.sub
  local.tee $2
  local.get $4
  local.get $1
  i32.sub
  local.tee $1
  local.get $1
  local.get $2
  i32.gt_s
  select
  i32.const 2
  i32.shl
  memory.copy
  local.get $0
 )
 (func $std/array/isArraysEqual<i32> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $2
  i32.eqz
  if
   local.get $0
   i32.load offset=12
   local.tee $2
   local.get $1
   i32.load offset=12
   i32.ne
   if
    i32.const 0
    return
   end
   local.get $0
   local.get $1
   i32.eq
   if
    i32.const 1
    return
   end
  end
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.gt_s
   if
    local.get $0
    local.get $3
    call $~lib/array/Array<i32>#__get
    local.get $1
    local.get $3
    call $~lib/array/Array<i32>#__get
    i32.ne
    if
     i32.const 0
     return
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $~lib/array/Array<i32>#unshift (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.get $0
  i32.load offset=12
  i32.const 1
  i32.add
  local.tee $2
  i32.const 1
  call $~lib/array/ensureCapacity
  local.get $0
  i32.load offset=4
  local.tee $3
  i32.const 4
  i32.add
  local.get $3
  local.get $2
  i32.const 1
  i32.sub
  i32.const 2
  i32.shl
  memory.copy
  local.get $3
  local.get $1
  i32.store
  local.get $0
  local.get $2
  i32.store offset=12
 )
 (func $~lib/array/Array<u8>#reverse (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.tee $5
  i32.const 1
  i32.gt_u
  if
   local.get $5
   i32.const 1
   i32.shr_u
   local.set $4
   local.get $5
   i32.const 8
   i32.sub
   local.set $6
   loop $while-continue|0
    local.get $1
    i32.const 7
    i32.add
    local.get $4
    i32.lt_u
    if
     local.get $1
     local.get $2
     i32.add
     local.tee $7
     i64.load
     local.tee $3
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $3
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.set $3
     local.get $7
     local.get $2
     local.get $6
     i32.add
     local.get $1
     i32.sub
     local.tee $7
     i64.load
     local.tee $8
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $8
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $8
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $8
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store
     local.get $7
     local.get $3
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $3
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store
     local.get $1
     i32.const 8
     i32.add
     local.set $1
     br $while-continue|0
    end
   end
   local.get $5
   i32.const 1
   i32.sub
   local.set $5
   loop $while-continue|1
    local.get $1
    local.get $4
    i32.lt_u
    if
     local.get $1
     local.get $2
     i32.add
     local.tee $6
     i32.load8_u
     local.set $7
     local.get $6
     local.get $2
     local.get $5
     local.get $1
     i32.sub
     i32.add
     local.tee $6
     i32.load8_u
     i32.store8
     local.get $6
     local.get $7
     i32.store8
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
  end
  local.get $0
 )
 (func $~lib/array/Array<u16>#reverse (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.tee $4
  i32.const 1
  i32.gt_u
  if
   local.get $4
   i32.const 1
   i32.shr_u
   local.set $3
   local.get $4
   i32.const 2
   i32.sub
   local.set $5
   loop $while-continue|0
    local.get $1
    i32.const 1
    i32.add
    local.get $3
    i32.lt_u
    if
     local.get $2
     local.get $5
     local.get $1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.tee $6
     i32.load
     i32.const 16
     i32.rotr
     local.set $7
     local.get $6
     local.get $2
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     local.tee $6
     i32.load
     i32.const 16
     i32.rotr
     i32.store
     local.get $6
     local.get $7
     i32.store
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|0
    end
   end
   local.get $4
   i32.const 1
   i32.sub
   local.set $4
   loop $while-continue|1
    local.get $1
    local.get $3
    i32.lt_u
    if
     local.get $2
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     local.tee $5
     i32.load16_u
     local.set $6
     local.get $5
     local.get $2
     local.get $4
     local.get $1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.tee $5
     i32.load16_u
     i32.store16
     local.get $5
     local.get $6
     i32.store16
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
  end
  local.get $0
 )
 (func $~lib/array/Array<u16>#__get (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
 )
 (func $~lib/array/Array<i32>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 1344
    i32.const 1104
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   local.get $3
   i32.store offset=12
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
 )
 (func $start:std/array~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.eqz
 )
 (func $start:std/array~anonymous|1 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 1
  i32.eq
 )
 (func $start:std/array~anonymous|2 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|3 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|5 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|10 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  i32.ge_s
 )
 (func $start:std/array~anonymous|11 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  i32.le_s
 )
 (func $start:std/array~anonymous|12 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  local.get $0
  i32.const 10
  i32.lt_s
 )
 (func $start:std/array~anonymous|13 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 10
  i32.lt_s
 )
 (func $start:std/array~anonymous|14 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  local.get $0
  i32.const 3
  i32.lt_s
 )
 (func $start:std/array~anonymous|15 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 3
  i32.ge_s
 )
 (func $start:std/array~anonymous|16 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  i32.lt_s
 )
 (func $start:std/array~anonymous|17 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  local.get $0
  i32.const 10
  i32.gt_s
 )
 (func $start:std/array~anonymous|18 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 10
  i32.gt_s
 )
 (func $start:std/array~anonymous|19 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  local.get $0
  i32.const 3
  i32.gt_s
 )
 (func $start:std/array~anonymous|20 (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|21 (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|23 (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|24 (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  i32.eqz
  if
   loop $for-loop|0
    local.get $3
    i32.const 4
    i32.lt_s
    if
     local.get $2
     call $~lib/array/Array<i32>#pop
     drop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   i32.const 0
   local.set $3
   loop $for-loop|1
    local.get $3
    i32.const 100
    i32.lt_s
    if
     local.get $2
     local.get $3
     i32.const 100
     i32.add
     call $~lib/array/Array<i32>#push
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|1
    end
   end
   i32.const 0
   local.set $3
   loop $for-loop|2
    local.get $3
    i32.const 100
    i32.lt_s
    if
     local.get $2
     call $~lib/array/Array<i32>#pop
     drop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|2
    end
   end
   i32.const 0
   local.set $3
   loop $for-loop|3
    local.get $3
    i32.const 100
    i32.lt_s
    if
     local.get $2
     local.get $3
     i32.const 200
     i32.add
     call $~lib/array/Array<i32>#push
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|3
    end
   end
  end
  local.get $1
  i32.const 2
  i32.eq
  local.get $0
  i32.const 202
  i32.ne
  i32.and
  if
   i32.const 0
   i32.const 1552
   i32.const 767
   i32.const 7
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $start:std/array~anonymous|25 (param $0 i32) (param $1 i32) (param $2 i32) (result f32)
  local.get $0
  f32.convert_i32_s
 )
 (func $start:std/array~anonymous|26 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
 )
 (func $start:std/array~anonymous|27 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
 )
 (func $start:std/array~anonymous|28 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
 )
 (func $start:std/array~anonymous|29 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|30 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|31 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|32 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|33 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $1
  i32.add
 )
 (func $start:std/array~anonymous|35 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  i32.const 1
  local.get $1
  i32.const 2
  i32.gt_s
  local.get $0
  select
 )
 (func $start:std/array~anonymous|36 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  i32.const 1
  local.get $1
  i32.const 100
  i32.gt_s
  local.get $0
  select
 )
 (func $start:std/array~anonymous|37 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $3
  i32.const 1
  call $~lib/array/Array<i32>#push
  local.get $0
  local.get $1
  i32.add
 )
 (func $start:std/array~anonymous|39 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $3
  call $~lib/array/Array<i32>#pop
  drop
  local.get $0
  local.get $1
  i32.add
 )
 (func $~lib/util/sort/insertionSort<f32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 f32)
  (local $6 f32)
  (local $7 i32)
  (local $8 f32)
  local.get $1
  local.get $3
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.tee $7
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $7
  i32.const 1
  i32.and
  local.get $3
  select
  i32.add
  local.set $7
  loop $for-loop|0
   local.get $2
   local.get $7
   i32.ge_s
   if
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    local.tee $3
    f32.load offset=4
    local.tee $8
    local.set $6
    local.get $3
    f32.load
    local.set $5
    i32.const 2
    global.set $~argumentsLength
    local.get $5
    local.get $8
    local.get $4
    i32.load
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $5
     local.set $6
     local.get $8
     local.set $5
    end
    local.get $7
    i32.const 1
    i32.sub
    local.set $3
    loop $while-continue|1
     local.get $1
     local.get $3
     i32.le_s
     if
      block $while-break|1
       local.get $0
       local.get $3
       i32.const 2
       i32.shl
       i32.add
       f32.load
       local.set $8
       i32.const 2
       global.set $~argumentsLength
       local.get $8
       local.get $5
       local.get $4
       i32.load
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|1
       local.get $0
       local.get $3
       i32.const 2
       i32.shl
       i32.add
       local.get $8
       f32.store offset=8
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    local.get $5
    f32.store offset=8
    loop $while-continue|2
     local.get $1
     local.get $3
     i32.le_s
     if
      block $while-break|2
       local.get $0
       local.get $3
       i32.const 2
       i32.shl
       i32.add
       f32.load
       local.set $5
       i32.const 2
       global.set $~argumentsLength
       local.get $5
       local.get $6
       local.get $4
       i32.load
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|2
       local.get $0
       local.get $3
       i32.const 2
       i32.shl
       i32.add
       local.get $5
       f32.store offset=4
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    local.get $6
    f32.store offset=4
    local.get $7
    i32.const 2
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 i32)
  (local $7 f32)
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   return
  end
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  f32.load
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  f32.load
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  i32.load
  call_indirect $0 (type $f32_f32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $6
     f32.load offset=4
     local.get $6
     f32.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $2
   loop $while-continue|1
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     f32.load
     local.set $5
     local.get $3
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     f32.load
     f32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $3
     local.get $5
     f32.store
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $1
     f32.load offset=4
     local.get $1
     f32.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
 )
 (func $~lib/util/sort/mergeRuns<f32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 f32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  local.get $2
  i32.const 1
  i32.sub
  local.tee $6
  local.get $3
  i32.add
  local.set $9
  local.get $6
  i32.const 1
  i32.add
  local.set $2
  loop $for-loop|0
   local.get $1
   local.get $2
   i32.lt_s
   if
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 2
    i32.shl
    local.tee $10
    local.get $4
    i32.add
    local.get $0
    local.get $10
    i32.add
    f32.load
    f32.store
    br $for-loop|0
   end
  end
  loop $for-loop|1
   local.get $3
   local.get $6
   i32.gt_s
   if
    local.get $4
    local.get $9
    local.get $6
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    f32.load offset=4
    f32.store
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|1
   end
  end
  loop $for-loop|2
   local.get $1
   local.get $3
   i32.le_s
   if
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    f32.load
    local.set $7
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    f32.load
    local.set $8
    i32.const 2
    global.set $~argumentsLength
    local.get $7
    local.get $8
    local.get $5
    i32.load
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     f32.store
     local.get $6
     i32.const 1
     i32.sub
     local.set $6
    else
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $8
     f32.store
     local.get $2
     i32.const 1
     i32.add
     local.set $2
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<f32> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  (local $14 f32)
  (local $15 f32)
  (local $16 i32)
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    return
   end
   block $break|0
    block $case1|0
     local.get $1
     i32.const 3
     i32.ne
     if
      local.get $1
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $0
     f32.load
     local.set $14
     local.get $0
     f32.load offset=4
     local.set $15
     i32.const 2
     global.set $~argumentsLength
     local.get $0
     local.get $15
     local.get $14
     local.get $14
     local.get $15
     local.get $2
     i32.load
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.tee $1
     select
     f32.store
     local.get $0
     f32.load offset=8
     local.set $8
     i32.const 2
     global.set $~argumentsLength
     local.get $14
     local.get $15
     local.get $1
     select
     local.tee $14
     local.get $8
     local.get $2
     i32.load
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $1
     local.get $0
     local.get $8
     local.get $14
     local.get $1
     select
     f32.store offset=4
     local.get $0
     local.get $14
     local.get $8
     local.get $1
     select
     f32.store offset=8
    end
    local.get $0
    f32.load
    local.set $8
    local.get $0
    f32.load offset=4
    local.set $14
    i32.const 2
    global.set $~argumentsLength
    local.get $0
    local.get $14
    local.get $8
    local.get $8
    local.get $14
    local.get $2
    i32.load
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.gt_s
    local.tee $1
    select
    f32.store
    local.get $0
    local.get $8
    local.get $14
    local.get $1
    select
    f32.store offset=4
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   local.get $2
   call $~lib/util/sort/insertionSort<f32>
   return
  end
  i32.const 33
  local.get $1
  i32.clz
  i32.sub
  local.tee $6
  i32.const 2
  i32.shl
  local.tee $7
  i32.const 1
  i32.shl
  local.set $9
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  local.get $7
  global.get $~lib/rt/tlsf/ROOT
  local.get $9
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
  local.tee $10
  i32.add
  local.set $11
  loop $for-loop|1
   local.get $5
   local.get $6
   i32.lt_u
   if
    local.get $10
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|1
   end
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $1
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
  local.set $12
  local.get $0
  i32.const 0
  local.get $1
  i32.const 1
  i32.sub
  local.tee $9
  local.get $2
  call $~lib/util/sort/extendRunRight<f32>
  local.tee $1
  i32.const 1
  i32.add
  local.tee $5
  i32.const 32
  i32.lt_s
  if
   local.get $0
   i32.const 0
   local.get $9
   i32.const 31
   local.get $9
   i32.const 31
   i32.lt_s
   select
   local.tee $1
   local.get $5
   local.get $2
   call $~lib/util/sort/insertionSort<f32>
  end
  loop $while-continue|2
   local.get $1
   local.get $9
   i32.lt_s
   if
    local.get $0
    local.get $1
    i32.const 1
    i32.add
    local.tee $6
    local.get $9
    local.get $2
    call $~lib/util/sort/extendRunRight<f32>
    local.tee $5
    local.get $6
    i32.sub
    i32.const 1
    i32.add
    local.tee $7
    i32.const 32
    i32.lt_s
    if
     local.get $0
     local.get $6
     local.get $9
     local.get $6
     i32.const 31
     i32.add
     local.tee $5
     local.get $5
     local.get $9
     i32.gt_s
     select
     local.tee $5
     local.get $7
     local.get $2
     call $~lib/util/sort/insertionSort<f32>
    end
    local.get $3
    local.get $6
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $9
    i32.const 1
    i32.add
    i64.extend_i32_u
    local.tee $13
    i64.div_u
    local.get $5
    local.get $6
    i32.add
    i32.const 1
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $13
    i64.div_u
    i64.xor
    i32.wrap_i64
    i32.clz
    local.set $7
    loop $for-loop|3
     local.get $4
     local.get $7
     i32.gt_u
     if
      local.get $10
      local.get $4
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.tee $16
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $16
       local.get $4
       i32.const 2
       i32.shl
       local.tee $3
       local.get $11
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $1
       local.get $12
       local.get $2
       call $~lib/util/sort/mergeRuns<f32>
       local.get $3
       local.get $10
       i32.add
       i32.const -1
       i32.store
       local.get $16
       local.set $3
      end
      local.get $4
      i32.const 1
      i32.sub
      local.set $4
      br $for-loop|3
     end
    end
    local.get $7
    i32.const 2
    i32.shl
    local.tee $4
    local.get $10
    i32.add
    local.get $3
    i32.store
    local.get $4
    local.get $11
    i32.add
    local.get $1
    i32.store
    local.get $6
    local.set $3
    local.get $5
    local.set $1
    local.get $7
    local.set $4
    br $while-continue|2
   end
  end
  loop $for-loop|4
   local.get $4
   if
    local.get $10
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $1
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $1
     local.get $11
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $9
     local.get $12
     local.get $2
     call $~lib/util/sort/mergeRuns<f32>
    end
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    br $for-loop|4
   end
  end
  local.get $12
  call $~lib/rt/tlsf/__free
  local.get $10
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/util/sort/COMPARATOR<f32>~anonymous|0 (param $0 f32) (param $1 f32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.reinterpret_f32
  local.tee $2
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  local.get $2
  i32.xor
  local.tee $2
  local.get $1
  i32.reinterpret_f32
  local.tee $3
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  local.get $3
  i32.xor
  local.tee $3
  i32.gt_s
  local.get $2
  local.get $3
  i32.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<f64> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 f64)
  (local $6 f64)
  (local $7 i32)
  (local $8 f64)
  local.get $1
  local.get $3
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.tee $7
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $7
  i32.const 1
  i32.and
  local.get $3
  select
  i32.add
  local.set $7
  loop $for-loop|0
   local.get $2
   local.get $7
   i32.ge_s
   if
    local.get $0
    local.get $7
    i32.const 3
    i32.shl
    i32.add
    local.tee $3
    f64.load offset=8
    local.tee $8
    local.set $6
    local.get $3
    f64.load
    local.set $5
    i32.const 2
    global.set $~argumentsLength
    local.get $5
    local.get $8
    local.get $4
    i32.load
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $5
     local.set $6
     local.get $8
     local.set $5
    end
    local.get $7
    i32.const 1
    i32.sub
    local.set $3
    loop $while-continue|1
     local.get $1
     local.get $3
     i32.le_s
     if
      block $while-break|1
       local.get $0
       local.get $3
       i32.const 3
       i32.shl
       i32.add
       f64.load
       local.set $8
       i32.const 2
       global.set $~argumentsLength
       local.get $8
       local.get $5
       local.get $4
       i32.load
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|1
       local.get $0
       local.get $3
       i32.const 3
       i32.shl
       i32.add
       local.get $8
       f64.store offset=16
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $3
    i32.const 3
    i32.shl
    i32.add
    local.get $5
    f64.store offset=16
    loop $while-continue|2
     local.get $1
     local.get $3
     i32.le_s
     if
      block $while-break|2
       local.get $0
       local.get $3
       i32.const 3
       i32.shl
       i32.add
       f64.load
       local.set $5
       i32.const 2
       global.set $~argumentsLength
       local.get $5
       local.get $6
       local.get $4
       i32.load
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|2
       local.get $0
       local.get $3
       i32.const 3
       i32.shl
       i32.add
       local.get $5
       f64.store offset=8
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $3
    i32.const 3
    i32.shl
    i32.add
    local.get $6
    f64.store offset=8
    local.get $7
    i32.const 2
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f64> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i32)
  (local $7 f64)
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   return
  end
  local.get $0
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  local.tee $4
  i32.const 3
  i32.shl
  i32.add
  f64.load
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  i32.load
  call_indirect $0 (type $f64_f64_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 3
     i32.shl
     i32.add
     local.tee $6
     f64.load offset=8
     local.get $6
     f64.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $2
   loop $while-continue|1
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 3
     i32.shl
     i32.add
     local.tee $3
     f64.load
     local.set $5
     local.get $3
     local.get $0
     local.get $2
     i32.const 3
     i32.shl
     i32.add
     local.tee $3
     f64.load
     f64.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $3
     local.get $5
     f64.store
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 3
     i32.shl
     i32.add
     local.tee $1
     f64.load offset=8
     local.get $1
     f64.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
 )
 (func $~lib/util/sort/mergeRuns<f64> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 f64)
  (local $8 f64)
  (local $9 i32)
  (local $10 i32)
  local.get $2
  i32.const 1
  i32.sub
  local.tee $6
  local.get $3
  i32.add
  local.set $9
  local.get $6
  i32.const 1
  i32.add
  local.set $2
  loop $for-loop|0
   local.get $1
   local.get $2
   i32.lt_s
   if
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 3
    i32.shl
    local.tee $10
    local.get $4
    i32.add
    local.get $0
    local.get $10
    i32.add
    f64.load
    f64.store
    br $for-loop|0
   end
  end
  loop $for-loop|1
   local.get $3
   local.get $6
   i32.gt_s
   if
    local.get $4
    local.get $9
    local.get $6
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 3
    i32.shl
    i32.add
    f64.load offset=8
    f64.store
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|1
   end
  end
  loop $for-loop|2
   local.get $1
   local.get $3
   i32.le_s
   if
    local.get $4
    local.get $6
    i32.const 3
    i32.shl
    i32.add
    f64.load
    local.set $7
    local.get $4
    local.get $2
    i32.const 3
    i32.shl
    i32.add
    f64.load
    local.set $8
    i32.const 2
    global.set $~argumentsLength
    local.get $7
    local.get $8
    local.get $5
    i32.load
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 3
     i32.shl
     i32.add
     local.get $7
     f64.store
     local.get $6
     i32.const 1
     i32.sub
     local.set $6
    else
     local.get $0
     local.get $1
     i32.const 3
     i32.shl
     i32.add
     local.get $8
     f64.store
     local.get $2
     i32.const 1
     i32.add
     local.set $2
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<f64> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  (local $14 f64)
  (local $15 f64)
  (local $16 i32)
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    return
   end
   block $break|0
    block $case1|0
     local.get $1
     i32.const 3
     i32.ne
     if
      local.get $1
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $0
     f64.load
     local.set $14
     local.get $0
     f64.load offset=8
     local.set $15
     i32.const 2
     global.set $~argumentsLength
     local.get $0
     local.get $15
     local.get $14
     local.get $14
     local.get $15
     local.get $2
     i32.load
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.tee $1
     select
     f64.store
     local.get $0
     f64.load offset=16
     local.set $8
     i32.const 2
     global.set $~argumentsLength
     local.get $14
     local.get $15
     local.get $1
     select
     local.tee $14
     local.get $8
     local.get $2
     i32.load
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $1
     local.get $0
     local.get $8
     local.get $14
     local.get $1
     select
     f64.store offset=8
     local.get $0
     local.get $14
     local.get $8
     local.get $1
     select
     f64.store offset=16
    end
    local.get $0
    f64.load
    local.set $8
    local.get $0
    f64.load offset=8
    local.set $14
    i32.const 2
    global.set $~argumentsLength
    local.get $0
    local.get $14
    local.get $8
    local.get $8
    local.get $14
    local.get $2
    i32.load
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.gt_s
    local.tee $1
    select
    f64.store
    local.get $0
    local.get $8
    local.get $14
    local.get $1
    select
    f64.store offset=8
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   local.get $2
   call $~lib/util/sort/insertionSort<f64>
   return
  end
  i32.const 33
  local.get $1
  i32.clz
  i32.sub
  local.tee $6
  i32.const 2
  i32.shl
  local.tee $7
  i32.const 1
  i32.shl
  local.set $9
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  local.get $7
  global.get $~lib/rt/tlsf/ROOT
  local.get $9
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
  local.tee $10
  i32.add
  local.set $11
  loop $for-loop|1
   local.get $5
   local.get $6
   i32.lt_u
   if
    local.get $10
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|1
   end
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $1
  i32.const 3
  i32.shl
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
  local.set $12
  local.get $0
  i32.const 0
  local.get $1
  i32.const 1
  i32.sub
  local.tee $9
  local.get $2
  call $~lib/util/sort/extendRunRight<f64>
  local.tee $1
  i32.const 1
  i32.add
  local.tee $5
  i32.const 32
  i32.lt_s
  if
   local.get $0
   i32.const 0
   local.get $9
   i32.const 31
   local.get $9
   i32.const 31
   i32.lt_s
   select
   local.tee $1
   local.get $5
   local.get $2
   call $~lib/util/sort/insertionSort<f64>
  end
  loop $while-continue|2
   local.get $1
   local.get $9
   i32.lt_s
   if
    local.get $0
    local.get $1
    i32.const 1
    i32.add
    local.tee $6
    local.get $9
    local.get $2
    call $~lib/util/sort/extendRunRight<f64>
    local.tee $5
    local.get $6
    i32.sub
    i32.const 1
    i32.add
    local.tee $7
    i32.const 32
    i32.lt_s
    if
     local.get $0
     local.get $6
     local.get $9
     local.get $6
     i32.const 31
     i32.add
     local.tee $5
     local.get $5
     local.get $9
     i32.gt_s
     select
     local.tee $5
     local.get $7
     local.get $2
     call $~lib/util/sort/insertionSort<f64>
    end
    local.get $3
    local.get $6
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $9
    i32.const 1
    i32.add
    i64.extend_i32_u
    local.tee $13
    i64.div_u
    local.get $5
    local.get $6
    i32.add
    i32.const 1
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $13
    i64.div_u
    i64.xor
    i32.wrap_i64
    i32.clz
    local.set $7
    loop $for-loop|3
     local.get $4
     local.get $7
     i32.gt_u
     if
      local.get $10
      local.get $4
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.tee $16
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $16
       local.get $4
       i32.const 2
       i32.shl
       local.tee $3
       local.get $11
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $1
       local.get $12
       local.get $2
       call $~lib/util/sort/mergeRuns<f64>
       local.get $3
       local.get $10
       i32.add
       i32.const -1
       i32.store
       local.get $16
       local.set $3
      end
      local.get $4
      i32.const 1
      i32.sub
      local.set $4
      br $for-loop|3
     end
    end
    local.get $7
    i32.const 2
    i32.shl
    local.tee $4
    local.get $10
    i32.add
    local.get $3
    i32.store
    local.get $4
    local.get $11
    i32.add
    local.get $1
    i32.store
    local.get $6
    local.set $3
    local.get $5
    local.set $1
    local.get $7
    local.set $4
    br $while-continue|2
   end
  end
  loop $for-loop|4
   local.get $4
   if
    local.get $10
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $1
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $1
     local.get $11
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $9
     local.get $12
     local.get $2
     call $~lib/util/sort/mergeRuns<f64>
    end
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    br $for-loop|4
   end
  end
  local.get $12
  call $~lib/rt/tlsf/__free
  local.get $10
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/util/sort/COMPARATOR<f64>~anonymous|0 (param $0 f64) (param $1 f64) (result i32)
  (local $2 i64)
  (local $3 i64)
  local.get $0
  i64.reinterpret_f64
  local.tee $2
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  local.get $2
  i64.xor
  local.tee $2
  local.get $1
  i64.reinterpret_f64
  local.tee $3
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  local.get $3
  i64.xor
  local.tee $3
  i64.gt_s
  local.get $2
  local.get $3
  i64.lt_s
  i32.sub
 )
 (func $~lib/array/Array<f64>#__get (param $0 i32) (param $1 i32) (result f64)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load
 )
 (func $~lib/util/sort/insertionSort<i32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.get $3
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.tee $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  select
  i32.add
  local.set $7
  loop $for-loop|0
   local.get $2
   local.get $7
   i32.ge_s
   if
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    local.tee $3
    i32.load offset=4
    local.tee $6
    local.set $5
    local.get $3
    i32.load
    local.set $3
    i32.const 2
    global.set $~argumentsLength
    local.get $3
    local.get $6
    local.get $4
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $3
     local.set $5
     local.get $6
     local.set $3
    end
    local.get $7
    i32.const 1
    i32.sub
    local.set $6
    loop $while-continue|1
     local.get $1
     local.get $6
     i32.le_s
     if
      block $while-break|1
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.set $8
       i32.const 2
       global.set $~argumentsLength
       local.get $8
       local.get $3
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|1
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       local.get $8
       i32.store offset=8
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    local.get $3
    i32.store offset=8
    loop $while-continue|2
     local.get $1
     local.get $6
     i32.le_s
     if
      block $while-break|2
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.set $3
       i32.const 2
       global.set $~argumentsLength
       local.get $3
       local.get $5
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|2
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       local.get $3
       i32.store offset=4
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    local.get $5
    i32.store offset=4
    local.get $7
    i32.const 2
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   return
  end
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  i32.load
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $5
     i32.load offset=4
     local.get $5
     i32.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $2
   loop $while-continue|1
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load
     local.set $5
     local.get $3
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $3
     local.get $5
     i32.store
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $1
     i32.load offset=4
     local.get $1
     i32.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
 )
 (func $~lib/util/sort/mergeRuns<i32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $2
  i32.const 1
  i32.sub
  local.tee $6
  local.get $3
  i32.add
  local.set $7
  local.get $6
  i32.const 1
  i32.add
  local.set $2
  loop $for-loop|0
   local.get $1
   local.get $2
   i32.lt_s
   if
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 2
    i32.shl
    local.tee $8
    local.get $4
    i32.add
    local.get $0
    local.get $8
    i32.add
    i32.load
    i32.store
    br $for-loop|0
   end
  end
  loop $for-loop|1
   local.get $3
   local.get $6
   i32.gt_s
   if
    local.get $4
    local.get $7
    local.get $6
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    i32.store
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|1
   end
  end
  loop $for-loop|2
   local.get $1
   local.get $3
   i32.le_s
   if
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $7
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $8
    i32.const 2
    global.set $~argumentsLength
    local.get $7
    local.get $8
    local.get $5
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store
     local.get $6
     i32.const 1
     i32.sub
     local.set $6
    else
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $8
     i32.store
     local.get $2
     i32.const 1
     i32.add
     local.set $2
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i32> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    return
   end
   block $break|0
    block $case1|0
     local.get $1
     i32.const 3
     i32.ne
     if
      local.get $1
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $0
     i32.load
     local.set $5
     local.get $0
     i32.load offset=4
     local.set $3
     i32.const 2
     global.set $~argumentsLength
     local.get $0
     local.get $3
     local.get $5
     local.get $5
     local.get $3
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.tee $1
     select
     i32.store
     local.get $0
     i32.load offset=8
     local.set $4
     i32.const 2
     global.set $~argumentsLength
     local.get $5
     local.get $3
     local.get $1
     select
     local.tee $3
     local.get $4
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $1
     local.get $0
     local.get $4
     local.get $3
     local.get $1
     select
     i32.store offset=4
     local.get $0
     local.get $3
     local.get $4
     local.get $1
     select
     i32.store offset=8
    end
    local.get $0
    i32.load
    local.set $4
    local.get $0
    i32.load offset=4
    local.set $3
    i32.const 2
    global.set $~argumentsLength
    local.get $0
    local.get $3
    local.get $4
    local.get $4
    local.get $3
    local.get $2
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.tee $1
    select
    i32.store
    local.get $0
    local.get $4
    local.get $3
    local.get $1
    select
    i32.store offset=4
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   local.get $2
   call $~lib/util/sort/insertionSort<i32>
   return
  end
  i32.const 33
  local.get $1
  i32.clz
  i32.sub
  local.tee $8
  i32.const 2
  i32.shl
  local.tee $7
  i32.const 1
  i32.shl
  local.set $5
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  local.get $7
  global.get $~lib/rt/tlsf/ROOT
  local.get $5
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
  local.tee $10
  i32.add
  local.set $11
  loop $for-loop|1
   local.get $6
   local.get $8
   i32.lt_u
   if
    local.get $10
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|1
   end
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $1
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
  local.set $12
  local.get $0
  i32.const 0
  local.get $1
  i32.const 1
  i32.sub
  local.tee $9
  local.get $2
  call $~lib/util/sort/extendRunRight<i32>
  local.tee $7
  i32.const 1
  i32.add
  local.tee $1
  i32.const 32
  i32.lt_s
  if
   local.get $0
   i32.const 0
   local.get $9
   i32.const 31
   local.get $9
   i32.const 31
   i32.lt_s
   select
   local.tee $7
   local.get $1
   local.get $2
   call $~lib/util/sort/insertionSort<i32>
  end
  loop $while-continue|2
   local.get $7
   local.get $9
   i32.lt_s
   if
    local.get $0
    local.get $7
    i32.const 1
    i32.add
    local.tee $5
    local.get $9
    local.get $2
    call $~lib/util/sort/extendRunRight<i32>
    local.tee $6
    local.get $5
    i32.sub
    i32.const 1
    i32.add
    local.tee $8
    i32.const 32
    i32.lt_s
    if
     local.get $0
     local.get $5
     local.get $9
     local.get $5
     i32.const 31
     i32.add
     local.tee $1
     local.get $1
     local.get $9
     i32.gt_s
     select
     local.tee $6
     local.get $8
     local.get $2
     call $~lib/util/sort/insertionSort<i32>
    end
    local.get $3
    local.get $5
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $9
    i32.const 1
    i32.add
    i64.extend_i32_u
    local.tee $13
    i64.div_u
    local.get $5
    local.get $6
    i32.add
    i32.const 1
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $13
    i64.div_u
    i64.xor
    i32.wrap_i64
    i32.clz
    local.set $1
    loop $for-loop|3
     local.get $1
     local.get $4
     i32.lt_u
     if
      local.get $10
      local.get $4
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.tee $8
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $8
       local.get $4
       i32.const 2
       i32.shl
       local.tee $3
       local.get $11
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $7
       local.get $12
       local.get $2
       call $~lib/util/sort/mergeRuns<i32>
       local.get $3
       local.get $10
       i32.add
       i32.const -1
       i32.store
       local.get $8
       local.set $3
      end
      local.get $4
      i32.const 1
      i32.sub
      local.set $4
      br $for-loop|3
     end
    end
    local.get $1
    i32.const 2
    i32.shl
    local.tee $4
    local.get $10
    i32.add
    local.get $3
    i32.store
    local.get $4
    local.get $11
    i32.add
    local.get $7
    i32.store
    local.get $5
    local.set $3
    local.get $6
    local.set $7
    local.get $1
    local.set $4
    br $while-continue|2
   end
  end
  loop $for-loop|4
   local.get $4
   if
    local.get $10
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $1
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $1
     local.get $11
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $9
     local.get $12
     local.get $2
     call $~lib/util/sort/mergeRuns<i32>
    end
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    br $for-loop|4
   end
  end
  local.get $12
  call $~lib/rt/tlsf/__free
  local.get $10
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  local.get $3
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.tee $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  select
  i32.add
  local.set $7
  loop $for-loop|0
   local.get $2
   local.get $7
   i32.ge_s
   if
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    local.tee $3
    i32.load offset=4
    local.tee $6
    local.set $5
    local.get $3
    i32.load
    local.set $3
    i32.const 2
    global.set $~argumentsLength
    local.get $3
    local.get $6
    local.get $4
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $3
     local.set $5
     local.get $6
     local.set $3
    end
    local.get $7
    i32.const 1
    i32.sub
    local.set $6
    loop $while-continue|1
     local.get $1
     local.get $6
     i32.le_s
     if
      block $while-break|1
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.set $8
       i32.const 2
       global.set $~argumentsLength
       local.get $8
       local.get $3
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|1
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       local.get $8
       i32.store offset=8
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    local.get $3
    i32.store offset=8
    loop $while-continue|2
     local.get $1
     local.get $6
     i32.le_s
     if
      block $while-break|2
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.set $3
       i32.const 2
       global.set $~argumentsLength
       local.get $3
       local.get $5
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|2
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       local.get $3
       i32.store offset=4
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    local.get $5
    i32.store offset=4
    local.get $7
    i32.const 2
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   return
  end
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  i32.load
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $5
     i32.load offset=4
     local.get $5
     i32.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $2
   loop $while-continue|1
    local.get $1
    local.get $2
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load
     local.set $5
     local.get $3
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $3
     local.get $5
     i32.store
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $1
     i32.load offset=4
     local.get $1
     i32.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
 )
 (func $~lib/util/sort/mergeRuns<u32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $2
  i32.const 1
  i32.sub
  local.tee $6
  local.get $3
  i32.add
  local.set $7
  local.get $6
  i32.const 1
  i32.add
  local.set $2
  loop $for-loop|0
   local.get $1
   local.get $2
   i32.lt_s
   if
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 2
    i32.shl
    local.tee $8
    local.get $4
    i32.add
    local.get $0
    local.get $8
    i32.add
    i32.load
    i32.store
    br $for-loop|0
   end
  end
  loop $for-loop|1
   local.get $3
   local.get $6
   i32.gt_s
   if
    local.get $4
    local.get $7
    local.get $6
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    i32.store
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|1
   end
  end
  loop $for-loop|2
   local.get $1
   local.get $3
   i32.le_s
   if
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $7
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $8
    i32.const 2
    global.set $~argumentsLength
    local.get $7
    local.get $8
    local.get $5
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store
     local.get $6
     i32.const 1
     i32.sub
     local.set $6
    else
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $8
     i32.store
     local.get $2
     i32.const 1
     i32.add
     local.set $2
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u32> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    return
   end
   block $break|0
    block $case1|0
     local.get $1
     i32.const 3
     i32.ne
     if
      local.get $1
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $0
     i32.load
     local.set $5
     local.get $0
     i32.load offset=4
     local.set $3
     i32.const 2
     global.set $~argumentsLength
     local.get $0
     local.get $3
     local.get $5
     local.get $5
     local.get $3
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.tee $1
     select
     i32.store
     local.get $0
     i32.load offset=8
     local.set $4
     i32.const 2
     global.set $~argumentsLength
     local.get $5
     local.get $3
     local.get $1
     select
     local.tee $3
     local.get $4
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $1
     local.get $0
     local.get $4
     local.get $3
     local.get $1
     select
     i32.store offset=4
     local.get $0
     local.get $3
     local.get $4
     local.get $1
     select
     i32.store offset=8
    end
    local.get $0
    i32.load
    local.set $4
    local.get $0
    i32.load offset=4
    local.set $3
    i32.const 2
    global.set $~argumentsLength
    local.get $0
    local.get $3
    local.get $4
    local.get $4
    local.get $3
    local.get $2
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.tee $1
    select
    i32.store
    local.get $0
    local.get $4
    local.get $3
    local.get $1
    select
    i32.store offset=4
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   local.get $2
   call $~lib/util/sort/insertionSort<u32>
   return
  end
  i32.const 33
  local.get $1
  i32.clz
  i32.sub
  local.tee $8
  i32.const 2
  i32.shl
  local.tee $7
  i32.const 1
  i32.shl
  local.set $5
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  local.get $7
  global.get $~lib/rt/tlsf/ROOT
  local.get $5
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
  local.tee $10
  i32.add
  local.set $11
  loop $for-loop|1
   local.get $6
   local.get $8
   i32.lt_u
   if
    local.get $10
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|1
   end
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $1
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
  local.set $12
  local.get $0
  i32.const 0
  local.get $1
  i32.const 1
  i32.sub
  local.tee $9
  local.get $2
  call $~lib/util/sort/extendRunRight<u32>
  local.tee $7
  i32.const 1
  i32.add
  local.tee $1
  i32.const 32
  i32.lt_s
  if
   local.get $0
   i32.const 0
   local.get $9
   i32.const 31
   local.get $9
   i32.const 31
   i32.lt_s
   select
   local.tee $7
   local.get $1
   local.get $2
   call $~lib/util/sort/insertionSort<u32>
  end
  loop $while-continue|2
   local.get $7
   local.get $9
   i32.lt_s
   if
    local.get $0
    local.get $7
    i32.const 1
    i32.add
    local.tee $5
    local.get $9
    local.get $2
    call $~lib/util/sort/extendRunRight<u32>
    local.tee $6
    local.get $5
    i32.sub
    i32.const 1
    i32.add
    local.tee $8
    i32.const 32
    i32.lt_s
    if
     local.get $0
     local.get $5
     local.get $9
     local.get $5
     i32.const 31
     i32.add
     local.tee $1
     local.get $1
     local.get $9
     i32.gt_s
     select
     local.tee $6
     local.get $8
     local.get $2
     call $~lib/util/sort/insertionSort<u32>
    end
    local.get $3
    local.get $5
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $9
    i32.const 1
    i32.add
    i64.extend_i32_u
    local.tee $13
    i64.div_u
    local.get $5
    local.get $6
    i32.add
    i32.const 1
    i32.add
    i64.extend_i32_u
    i64.const 30
    i64.shl
    local.get $13
    i64.div_u
    i64.xor
    i32.wrap_i64
    i32.clz
    local.set $1
    loop $for-loop|3
     local.get $1
     local.get $4
     i32.lt_u
     if
      local.get $10
      local.get $4
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.tee $8
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $8
       local.get $4
       i32.const 2
       i32.shl
       local.tee $3
       local.get $11
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $7
       local.get $12
       local.get $2
       call $~lib/util/sort/mergeRuns<u32>
       local.get $3
       local.get $10
       i32.add
       i32.const -1
       i32.store
       local.get $8
       local.set $3
      end
      local.get $4
      i32.const 1
      i32.sub
      local.set $4
      br $for-loop|3
     end
    end
    local.get $1
    i32.const 2
    i32.shl
    local.tee $4
    local.get $10
    i32.add
    local.get $3
    i32.store
    local.get $4
    local.get $11
    i32.add
    local.get $7
    i32.store
    local.get $5
    local.set $3
    local.get $6
    local.set $7
    local.get $1
    local.set $4
    br $while-continue|2
   end
  end
  loop $for-loop|4
   local.get $4
   if
    local.get $10
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $1
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $1
     local.get $11
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $9
     local.get $12
     local.get $2
     call $~lib/util/sort/mergeRuns<u32>
    end
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    br $for-loop|4
   end
  end
  local.get $12
  call $~lib/rt/tlsf/__free
  local.get $10
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/util/sort/COMPARATOR<u32>~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.gt_u
  local.get $0
  local.get $1
  i32.lt_u
  i32.sub
 )
 (func $~lib/math/NativeMath.random (result f64)
  (local $0 i64)
  (local $1 i64)
  global.get $~lib/math/random_seeded
  i32.eqz
  if
   i64.const -7046029254386353131
   call $~lib/builtins/seed
   i64.reinterpret_f64
   local.tee $0
   local.get $0
   i64.eqz
   select
   local.tee $0
   local.get $0
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -49064778989728563
   i64.mul
   local.tee $0
   local.get $0
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -4265267296055464877
   i64.mul
   local.tee $0
   local.get $0
   i64.const 33
   i64.shr_u
   i64.xor
   global.set $~lib/math/random_state0_64
   global.get $~lib/math/random_state0_64
   i64.const -1
   i64.xor
   local.tee $0
   local.get $0
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -49064778989728563
   i64.mul
   local.tee $0
   local.get $0
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -4265267296055464877
   i64.mul
   local.tee $0
   local.get $0
   i64.const 33
   i64.shr_u
   i64.xor
   global.set $~lib/math/random_state1_64
   i32.const 1
   global.set $~lib/math/random_seeded
  end
  global.get $~lib/math/random_state0_64
  local.set $1
  global.get $~lib/math/random_state1_64
  local.tee $0
  global.set $~lib/math/random_state0_64
  local.get $1
  local.get $1
  i64.const 23
  i64.shl
  i64.xor
  local.tee $1
  local.get $1
  i64.const 17
  i64.shr_u
  i64.xor
  local.get $0
  i64.xor
  local.get $0
  i64.const 26
  i64.shr_u
  i64.xor
  global.set $~lib/math/random_state1_64
  local.get $0
  i64.const 12
  i64.shr_u
  i64.const 4607182418800017408
  i64.or
  f64.reinterpret_i64
  f64.const 1
  f64.sub
 )
 (func $std/array/assertStableSortedForComplexObjects~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load
  local.get $1
  i32.load
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<std/array/Dim> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $1
  local.get $3
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.tee $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  select
  i32.add
  local.set $7
  loop $for-loop|0
   local.get $2
   local.get $7
   i32.ge_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $3
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    local.tee $5
    i32.load
    local.tee $6
    i32.store
    local.get $3
    local.get $5
    i32.load offset=4
    local.tee $5
    i32.store offset=4
    local.get $6
    local.set $3
    i32.const 2
    global.set $~argumentsLength
    local.get $6
    local.get $5
    local.get $4
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $5
     local.set $3
     local.get $6
     local.set $5
    end
    local.get $7
    i32.const 1
    i32.sub
    local.set $6
    loop $while-continue|1
     local.get $1
     local.get $6
     i32.le_s
     if
      block $while-break|1
       global.get $~lib/memory/__stack_pointer
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $8
       i32.store
       i32.const 2
       global.set $~argumentsLength
       local.get $8
       local.get $3
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|1
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       local.get $8
       i32.store offset=8
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    local.get $3
    i32.store offset=8
    loop $while-continue|2
     local.get $1
     local.get $6
     i32.le_s
     if
      block $while-break|2
       global.get $~lib/memory/__stack_pointer
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $3
       i32.store
       i32.const 2
       global.set $~argumentsLength
       local.get $3
       local.get $5
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.le_s
       br_if $while-break|2
       local.get $0
       local.get $6
       i32.const 2
       i32.shl
       i32.add
       local.get $3
       i32.store offset=4
       local.get $6
       i32.const 1
       i32.sub
       local.set $6
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    local.get $5
    i32.store offset=4
    local.get $7
    i32.const 2
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/mergeRuns<std/array/Dim> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $3
  local.get $2
  i32.const 1
  i32.sub
  local.tee $2
  i32.add
  local.set $7
  local.get $2
  i32.const 1
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $1
   local.get $6
   i32.lt_s
   if
    local.get $6
    i32.const 1
    i32.sub
    local.tee $6
    i32.const 2
    i32.shl
    local.tee $8
    local.get $4
    i32.add
    local.get $0
    local.get $8
    i32.add
    i32.load
    i32.store
    br $for-loop|0
   end
  end
  loop $for-loop|1
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $4
    local.get $7
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|1
   end
  end
  loop $for-loop|2
   local.get $1
   local.get $3
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $7
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $8
    i32.store
    local.get $7
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $7
    i32.store offset=4
    i32.const 2
    global.set $~argumentsLength
    local.get $8
    local.get $7
    local.get $5
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $8
     i32.store
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
    else
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store
     local.get $6
     i32.const 1
     i32.add
     local.set $6
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/SORT<std/array/Dim> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i64)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i64.const 0
  i64.store
  local.get $5
  i32.const 0
  i32.store offset=8
  block $folding-inner0
   local.get $1
   i32.const 48
   i32.le_s
   if
    local.get $1
    i32.const 1
    i32.le_s
    br_if $folding-inner0
    block $break|0
     block $case1|0
      local.get $1
      i32.const 3
      i32.ne
      if
       local.get $1
       i32.const 2
       i32.eq
       br_if $case1|0
       br $break|0
      end
      global.get $~lib/memory/__stack_pointer
      local.tee $1
      local.get $0
      i32.load
      local.tee $3
      i32.store
      local.get $1
      local.get $0
      i32.load offset=4
      local.tee $1
      i32.store offset=4
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $1
      local.get $3
      local.get $3
      local.get $1
      local.get $2
      i32.load
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $4
      select
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $3
      local.get $1
      local.get $4
      select
      local.tee $1
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.load offset=8
      local.tee $3
      i32.store offset=4
      i32.const 2
      global.set $~argumentsLength
      local.get $0
      local.get $3
      local.get $1
      local.get $1
      local.get $3
      local.get $2
      i32.load
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      local.tee $4
      select
      i32.store offset=4
      local.get $0
      local.get $1
      local.get $3
      local.get $4
      select
      i32.store offset=8
     end
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     i32.load
     local.tee $3
     i32.store offset=8
     local.get $1
     local.get $0
     i32.load offset=4
     local.tee $1
     i32.store offset=4
     i32.const 2
     global.set $~argumentsLength
     local.get $0
     local.get $1
     local.get $3
     local.get $3
     local.get $1
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.tee $2
     select
     i32.store
     local.get $0
     local.get $3
     local.get $1
     local.get $2
     select
     i32.store offset=4
     br $folding-inner0
    end
    local.get $0
    i32.const 0
    local.get $1
    i32.const 1
    i32.sub
    i32.const 0
    local.get $2
    call $~lib/util/sort/insertionSort<std/array/Dim>
    br $folding-inner0
   end
   i32.const 33
   local.get $1
   i32.clz
   i32.sub
   local.tee $5
   i32.const 2
   i32.shl
   local.tee $6
   i32.const 1
   i32.shl
   local.set $7
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   local.get $6
   global.get $~lib/rt/tlsf/ROOT
   local.get $7
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.tee $10
   i32.add
   local.set $11
   loop $for-loop|1
    local.get $4
    local.get $5
    i32.lt_u
    if
     local.get $10
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.const -1
     i32.store
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|1
    end
   end
   global.get $~lib/rt/tlsf/ROOT
   i32.eqz
   if
    call $~lib/rt/tlsf/initialize
   end
   global.get $~lib/rt/tlsf/ROOT
   local.get $1
   i32.const 2
   i32.shl
   call $~lib/rt/tlsf/allocateBlock
   i32.const 4
   i32.add
   local.set $12
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   local.tee $9
   local.get $2
   call $~lib/util/sort/extendRunRight<std/array/Dim>
   local.tee $4
   i32.const 1
   i32.add
   local.tee $1
   i32.const 32
   i32.lt_s
   if
    local.get $0
    i32.const 0
    local.get $9
    i32.const 31
    local.get $9
    i32.const 31
    i32.lt_s
    select
    local.tee $4
    local.get $1
    local.get $2
    call $~lib/util/sort/insertionSort<std/array/Dim>
   end
   i32.const 0
   local.set $1
   loop $while-continue|2
    local.get $4
    local.get $9
    i32.lt_s
    if
     local.get $0
     local.get $4
     i32.const 1
     i32.add
     local.tee $6
     local.get $9
     local.get $2
     call $~lib/util/sort/extendRunRight<std/array/Dim>
     local.tee $5
     local.get $6
     i32.sub
     i32.const 1
     i32.add
     local.tee $7
     i32.const 32
     i32.lt_s
     if
      local.get $0
      local.get $6
      local.get $9
      local.get $6
      i32.const 31
      i32.add
      local.tee $5
      local.get $5
      local.get $9
      i32.gt_s
      select
      local.tee $5
      local.get $7
      local.get $2
      call $~lib/util/sort/insertionSort<std/array/Dim>
     end
     local.get $3
     local.get $6
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $9
     i32.const 1
     i32.add
     i64.extend_i32_u
     local.tee $13
     i64.div_u
     local.get $5
     local.get $6
     i32.add
     i32.const 1
     i32.add
     i64.extend_i32_u
     i64.const 30
     i64.shl
     local.get $13
     i64.div_u
     i64.xor
     i32.wrap_i64
     i32.clz
     local.set $7
     loop $for-loop|3
      local.get $1
      local.get $7
      i32.gt_u
      if
       local.get $10
       local.get $1
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $8
       i32.const -1
       i32.ne
       if
        local.get $0
        local.get $8
        local.get $1
        i32.const 2
        i32.shl
        local.tee $3
        local.get $11
        i32.add
        i32.load
        i32.const 1
        i32.add
        local.get $4
        local.get $12
        local.get $2
        call $~lib/util/sort/mergeRuns<std/array/Dim>
        local.get $3
        local.get $10
        i32.add
        i32.const -1
        i32.store
        local.get $8
        local.set $3
       end
       local.get $1
       i32.const 1
       i32.sub
       local.set $1
       br $for-loop|3
      end
     end
     local.get $7
     i32.const 2
     i32.shl
     local.tee $1
     local.get $10
     i32.add
     local.get $3
     i32.store
     local.get $1
     local.get $11
     i32.add
     local.get $4
     i32.store
     local.get $6
     local.set $3
     local.get $5
     local.set $4
     local.get $7
     local.set $1
     br $while-continue|2
    end
   end
   loop $for-loop|4
    local.get $1
    if
     local.get $10
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $3
     i32.const -1
     i32.ne
     if
      local.get $0
      local.get $3
      local.get $11
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 1
      i32.add
      local.get $9
      local.get $12
      local.get $2
      call $~lib/util/sort/mergeRuns<std/array/Dim>
     end
     local.get $1
     i32.const 1
     i32.sub
     local.set $1
     br $for-loop|4
    end
   end
   local.get $12
   call $~lib/rt/tlsf/__free
   local.get $10
   call $~lib/rt/tlsf/__free
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:std/array~anonymous|48 (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.sub
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 1344
    i32.const 1104
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   local.tee $3
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   local.get $3
   i32.store offset=12
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<std/array/Ref>#__uset
 )
 (func $start:std/array~anonymous|51 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  call $~lib/array/Array<i32>#__get
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.sub
 )
 (func $~lib/util/sort/COMPARATOR<~lib/string/String|null>~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $1
  i32.eqz
  local.get $0
  i32.eqz
  local.get $0
  local.get $1
  i32.eq
  i32.or
  i32.or
  if
   i32.const 0
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $6
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $5
  i32.or
  i32.eqz
  if
   i32.const 0
   return
  end
  local.get $6
  i32.eqz
  if
   i32.const -1
   return
  end
  local.get $5
  i32.eqz
  if
   i32.const 1
   return
  end
  block $__inlined_func$~lib/util/string/compareImpl (result i32)
   local.get $0
   i32.const 7
   i32.and
   local.get $1
   i32.const 7
   i32.and
   i32.or
   i32.eqz
   local.get $6
   local.get $5
   local.get $5
   local.get $6
   i32.gt_s
   select
   local.tee $3
   i32.const 4
   i32.ge_u
   i32.and
   if
    loop $do-loop|0
     local.get $0
     i64.load
     local.get $1
     i64.load
     i64.eq
     if
      local.get $0
      i32.const 8
      i32.add
      local.set $0
      local.get $1
      i32.const 8
      i32.add
      local.set $1
      local.get $3
      i32.const 4
      i32.sub
      local.tee $3
      i32.const 4
      i32.ge_u
      br_if $do-loop|0
     end
    end
   end
   loop $while-continue|1
    local.get $3
    local.tee $2
    i32.const 1
    i32.sub
    local.set $3
    local.get $2
    if
     local.get $0
     i32.load16_u
     local.tee $4
     local.get $1
     i32.load16_u
     local.tee $2
     i32.ne
     if
      local.get $4
      local.get $2
      i32.sub
      br $__inlined_func$~lib/util/string/compareImpl
     end
     local.get $0
     i32.const 2
     i32.add
     local.set $0
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
   i32.const 0
  end
  local.tee $0
  local.get $6
  local.get $5
  i32.sub
  local.get $0
  select
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   return
  end
  local.get $1
  i32.const 0
  local.get $0
  select
  i32.eqz
  if
   i32.const 0
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $3
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.ne
  if
   i32.const 0
   return
  end
  block $__inlined_func$~lib/util/string/compareImpl (result i32)
   local.get $0
   local.tee $2
   i32.const 7
   i32.and
   local.get $1
   i32.const 7
   i32.and
   i32.or
   i32.eqz
   local.get $3
   local.tee $0
   i32.const 4
   i32.ge_u
   i32.and
   if
    loop $do-loop|0
     local.get $2
     i64.load
     local.get $1
     i64.load
     i64.eq
     if
      local.get $2
      i32.const 8
      i32.add
      local.set $2
      local.get $1
      i32.const 8
      i32.add
      local.set $1
      local.get $0
      i32.const 4
      i32.sub
      local.tee $0
      i32.const 4
      i32.ge_u
      br_if $do-loop|0
     end
    end
   end
   loop $while-continue|1
    local.get $0
    local.tee $3
    i32.const 1
    i32.sub
    local.set $0
    local.get $3
    if
     local.get $2
     i32.load16_u
     local.tee $3
     local.get $1
     i32.load16_u
     local.tee $4
     i32.ne
     if
      local.get $3
      local.get $4
      i32.sub
      br $__inlined_func$~lib/util/string/compareImpl
     end
     local.get $2
     i32.const 2
     i32.add
     local.set $2
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
   i32.const 0
  end
  i32.eqz
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$~lib/string/String#concat
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 1
   i32.shl
   local.tee $3
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 1
   i32.shl
   local.tee $4
   i32.add
   local.tee $2
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 9696
    local.set $2
    br $__inlined_func$~lib/string/String#concat
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   local.get $2
   local.get $0
   local.get $3
   memory.copy
   local.get $2
   local.get $3
   i32.add
   local.get $1
   local.get $4
   memory.copy
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
  end
  local.get $2
 )
 (func $~lib/util/number/utoa32_dec_lut (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  loop $while-continue|0
   local.get $1
   i32.const 10000
   i32.ge_u
   if
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $3
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $1
    local.get $0
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 10300
    i32.add
    i64.load32_u
    local.get $3
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 10300
    i32.add
    i64.load32_u
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   local.tee $2
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 100
   i32.rem_u
   i32.const 2
   i32.shl
   i32.const 10300
   i32.add
   i32.load
   i32.store
   local.get $1
   i32.const 100
   i32.div_u
   local.set $1
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $0
   local.get $2
   i32.const 2
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 2
   i32.shl
   i32.const 10300
   i32.add
   i32.load
   i32.store
  else
   local.get $0
   local.get $2
   i32.const 1
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.get $1
   i32.const 48
   i32.add
   i32.store16
  end
 )
 (func $~lib/util/number/itoa_buffered<i32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 0
  i32.lt_s
  local.tee $2
  if
   local.get $0
   i32.const 45
   i32.store16
   i32.const 0
   local.get $1
   i32.sub
   local.set $1
  end
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.set $0
  local.get $1
  i32.const 10
  i32.lt_u
  if
   local.get $0
   local.get $1
   i32.const 48
   i32.or
   i32.store16
   local.get $2
   i32.const 1
   i32.add
   return
  end
  local.get $0
  local.get $1
  local.get $1
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $1
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $1
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $1
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $1
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $1
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.tee $0
  call $~lib/util/number/utoa32_dec_lut
  local.get $0
  local.get $2
  i32.add
 )
 (func $~lib/array/Array<i32>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=4
  local.set $4
  local.get $0
  i32.load offset=12
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$~lib/util/string/joinIntegerArray<i32>
   local.get $0
   i32.const 1
   i32.sub
   local.tee $3
   i32.const 0
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 9696
    local.set $0
    br $__inlined_func$~lib/util/string/joinIntegerArray<i32>
   end
   local.get $3
   i32.eqz
   if
    local.get $4
    i32.load
    call $~lib/util/number/itoa32
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    br $__inlined_func$~lib/util/string/joinIntegerArray<i32>
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.tee $5
   i32.const 11
   i32.add
   local.get $3
   i32.mul
   i32.const 11
   i32.add
   local.tee $7
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   i32.const 0
   local.set $0
   loop $for-loop|0
    local.get $3
    local.get $6
    i32.gt_s
    if
     local.get $2
     local.get $0
     i32.const 1
     i32.shl
     i32.add
     local.get $4
     local.get $6
     i32.const 2
     i32.shl
     i32.add
     i32.load
     call $~lib/util/number/itoa_buffered<i32>
     local.get $0
     i32.add
     local.set $0
     local.get $5
     if
      local.get $2
      local.get $0
      i32.const 1
      i32.shl
      i32.add
      local.get $1
      local.get $5
      i32.const 1
      i32.shl
      memory.copy
      local.get $0
      local.get $5
      i32.add
      local.set $0
     end
     local.get $6
     i32.const 1
     i32.add
     local.set $6
     br $for-loop|0
    end
   end
   local.get $2
   local.get $0
   i32.const 1
   i32.shl
   i32.add
   local.get $4
   local.get $3
   i32.const 2
   i32.shl
   i32.add
   i32.load
   call $~lib/util/number/itoa_buffered<i32>
   local.get $0
   i32.add
   local.tee $0
   local.get $7
   i32.lt_s
   if
    local.get $2
    local.get $0
    call $~lib/string/String#substring
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    br $__inlined_func$~lib/util/string/joinIntegerArray<i32>
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.set $0
  end
  local.get $0
 )
 (func $~lib/util/number/itoa_buffered<u32> (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  i32.const 10
  i32.lt_u
  if
   local.get $0
   local.get $1
   i32.const 48
   i32.or
   i32.store16
   i32.const 1
   return
  end
  local.get $0
  local.get $1
  local.get $1
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $1
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $1
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $1
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $1
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $1
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.tee $0
  call $~lib/util/number/utoa32_dec_lut
  local.get $0
 )
 (func $~lib/array/Array<u32>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=4
  local.set $4
  local.get $0
  i32.load offset=12
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$~lib/util/string/joinIntegerArray<u32>
   local.get $0
   i32.const 1
   i32.sub
   local.tee $3
   i32.const 0
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 9696
    local.set $0
    br $__inlined_func$~lib/util/string/joinIntegerArray<u32>
   end
   local.get $3
   i32.eqz
   if
    local.get $4
    i32.load
    call $~lib/util/number/utoa32
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    br $__inlined_func$~lib/util/string/joinIntegerArray<u32>
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   local.tee $5
   i32.const 10
   i32.add
   local.get $3
   i32.mul
   i32.const 10
   i32.add
   local.tee $7
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   i32.const 0
   local.set $0
   loop $for-loop|0
    local.get $3
    local.get $6
    i32.gt_s
    if
     local.get $2
     local.get $0
     i32.const 1
     i32.shl
     i32.add
     local.get $4
     local.get $6
     i32.const 2
     i32.shl
     i32.add
     i32.load
     call $~lib/util/number/itoa_buffered<u32>
     local.get $0
     i32.add
     local.set $0
     local.get $5
     if
      local.get $2
      local.get $0
      i32.const 1
      i32.shl
      i32.add
      local.get $1
      local.get $5
      i32.const 1
      i32.shl
      memory.copy
      local.get $0
      local.get $5
      i32.add
      local.set $0
     end
     local.get $6
     i32.const 1
     i32.add
     local.set $6
     br $for-loop|0
    end
   end
   local.get $2
   local.get $0
   i32.const 1
   i32.shl
   i32.add
   local.get $4
   local.get $3
   i32.const 2
   i32.shl
   i32.add
   i32.load
   call $~lib/util/number/itoa_buffered<u32>
   local.get $0
   i32.add
   local.tee $0
   local.get $7
   i32.lt_s
   if
    local.get $2
    local.get $0
    call $~lib/string/String#substring
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    br $__inlined_func$~lib/util/string/joinIntegerArray<u32>
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $2
   local.set $0
  end
  local.get $0
 )
 (func $~lib/util/number/genDigits (param $0 i32) (param $1 i64) (param $2 i64) (param $3 i32) (param $4 i64) (param $5 i32) (result i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  local.get $2
  local.get $1
  i64.sub
  local.set $12
  i64.const 1
  i32.const 0
  local.get $3
  i32.sub
  local.tee $10
  i64.extend_i32_s
  local.tee $1
  i64.shl
  local.tee $13
  i64.const 1
  i64.sub
  local.tee $11
  local.get $2
  i64.and
  local.set $7
  local.get $2
  local.get $1
  i64.shr_u
  i32.wrap_i64
  local.tee $3
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $3
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $3
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $3
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $3
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $3
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $3
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $3
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $3
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.set $9
  loop $while-continue|0
   local.get $9
   i32.const 0
   i32.gt_s
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $9
                i32.const 1
                i32.sub
                br_table $case9|1 $case8|1 $case7|1 $case6|1 $case5|1 $case4|1 $case3|1 $case2|1 $case1|1 $case0|1 $case10|1
               end
               local.get $3
               i32.const 1000000000
               i32.div_u
               local.set $6
               local.get $3
               i32.const 1000000000
               i32.rem_u
               local.set $3
               br $break|1
              end
              local.get $3
              i32.const 100000000
              i32.div_u
              local.set $6
              local.get $3
              i32.const 100000000
              i32.rem_u
              local.set $3
              br $break|1
             end
             local.get $3
             i32.const 10000000
             i32.div_u
             local.set $6
             local.get $3
             i32.const 10000000
             i32.rem_u
             local.set $3
             br $break|1
            end
            local.get $3
            i32.const 1000000
            i32.div_u
            local.set $6
            local.get $3
            i32.const 1000000
            i32.rem_u
            local.set $3
            br $break|1
           end
           local.get $3
           i32.const 100000
           i32.div_u
           local.set $6
           local.get $3
           i32.const 100000
           i32.rem_u
           local.set $3
           br $break|1
          end
          local.get $3
          i32.const 10000
          i32.div_u
          local.set $6
          local.get $3
          i32.const 10000
          i32.rem_u
          local.set $3
          br $break|1
         end
         local.get $3
         i32.const 1000
         i32.div_u
         local.set $6
         local.get $3
         i32.const 1000
         i32.rem_u
         local.set $3
         br $break|1
        end
        local.get $3
        i32.const 100
        i32.div_u
        local.set $6
        local.get $3
        i32.const 100
        i32.rem_u
        local.set $3
        br $break|1
       end
       local.get $3
       i32.const 10
       i32.div_u
       local.set $6
       local.get $3
       i32.const 10
       i32.rem_u
       local.set $3
       br $break|1
      end
      local.get $3
      local.set $6
      i32.const 0
      local.set $3
      br $break|1
     end
     i32.const 0
     local.set $6
    end
    local.get $5
    local.get $6
    i32.or
    if
     local.get $5
     local.tee $8
     i32.const 1
     i32.add
     local.set $5
     local.get $0
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $6
     i32.const 65535
     i32.and
     i32.const 48
     i32.add
     i32.store16
    end
    local.get $9
    i32.const 1
    i32.sub
    local.set $9
    local.get $3
    i64.extend_i32_u
    local.get $10
    i64.extend_i32_s
    i64.shl
    local.get $7
    i64.add
    local.tee $1
    local.get $4
    i64.le_u
    if
     global.get $~lib/util/number/_K
     local.get $9
     i32.add
     global.set $~lib/util/number/_K
     local.get $9
     i32.const 2
     i32.shl
     i32.const 13296
     i32.add
     i64.load32_u
     local.get $10
     i64.extend_i32_s
     i64.shl
     local.set $2
     local.get $0
     local.get $5
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.tee $0
     i32.load16_u
     local.set $9
     loop $while-continue|3
      local.get $1
      local.get $12
      i64.lt_u
      local.get $4
      local.get $1
      i64.sub
      local.get $2
      i64.ge_u
      i32.and
      if (result i32)
       local.get $12
       local.get $1
       i64.sub
       local.get $1
       local.get $2
       i64.add
       local.tee $7
       local.get $12
       i64.sub
       i64.gt_u
       local.get $7
       local.get $12
       i64.lt_u
       i32.or
      else
       i32.const 0
      end
      if
       local.get $9
       i32.const 1
       i32.sub
       local.set $9
       local.get $1
       local.get $2
       i64.add
       local.set $1
       br $while-continue|3
      end
     end
     local.get $0
     local.get $9
     i32.store16
     local.get $5
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4 (result i32)
   local.get $4
   i64.const 10
   i64.mul
   local.set $4
   local.get $7
   i64.const 10
   i64.mul
   local.tee $1
   local.get $10
   i64.extend_i32_s
   i64.shr_u
   local.tee $2
   local.get $5
   i64.extend_i32_s
   i64.or
   i64.const 0
   i64.ne
   if
    local.get $5
    local.tee $3
    i32.const 1
    i32.add
    local.set $5
    local.get $0
    local.get $3
    i32.const 1
    i32.shl
    i32.add
    local.get $2
    i32.wrap_i64
    i32.const 65535
    i32.and
    i32.const 48
    i32.add
    i32.store16
   end
   local.get $9
   i32.const 1
   i32.sub
   local.set $9
   local.get $4
   local.get $1
   local.get $11
   i64.and
   local.tee $7
   i64.le_u
   br_if $while-continue|4
   global.get $~lib/util/number/_K
   local.get $9
   i32.add
   global.set $~lib/util/number/_K
   local.get $7
   local.set $1
   local.get $12
   i32.const 0
   local.get $9
   i32.sub
   i32.const 2
   i32.shl
   i32.const 13296
   i32.add
   i64.load32_u
   i64.mul
   local.set $2
   local.get $0
   local.get $5
   i32.const 1
   i32.sub
   i32.const 1
   i32.shl
   i32.add
   local.tee $0
   i32.load16_u
   local.set $9
   loop $while-continue|6
    local.get $1
    local.get $2
    i64.lt_u
    local.get $4
    local.get $1
    i64.sub
    local.get $13
    i64.ge_u
    i32.and
    if (result i32)
     local.get $2
     local.get $1
     i64.sub
     local.get $1
     local.get $13
     i64.add
     local.tee $7
     local.get $2
     i64.sub
     i64.gt_u
     local.get $2
     local.get $7
     i64.gt_u
     i32.or
    else
     i32.const 0
    end
    if
     local.get $9
     i32.const 1
     i32.sub
     local.set $9
     local.get $1
     local.get $13
     i64.add
     local.set $1
     br $while-continue|6
    end
   end
   local.get $0
   local.get $9
   i32.store16
   local.get $5
  end
 )
 (func $~lib/util/number/prettify (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  i32.eqz
  if
   local.get $0
   local.get $1
   i32.const 1
   i32.shl
   i32.add
   i32.const 3145774
   i32.store
   local.get $1
   i32.const 2
   i32.add
   return
  end
  local.get $1
  local.get $2
  i32.add
  local.tee $3
  i32.const 21
  i32.le_s
  local.get $1
  local.get $3
  i32.le_s
  i32.and
  if (result i32)
   loop $for-loop|0
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   local.get $0
   local.get $3
   i32.const 1
   i32.shl
   i32.add
   i32.const 3145774
   i32.store
   local.get $3
   i32.const 2
   i32.add
  else
   local.get $3
   i32.const 21
   i32.le_s
   local.get $3
   i32.const 0
   i32.gt_s
   i32.and
   if (result i32)
    local.get $0
    local.get $3
    i32.const 1
    i32.shl
    i32.add
    local.tee $0
    i32.const 2
    i32.add
    local.get $0
    i32.const 0
    local.get $2
    i32.sub
    i32.const 1
    i32.shl
    memory.copy
    local.get $0
    i32.const 46
    i32.store16
    local.get $1
    i32.const 1
    i32.add
   else
    local.get $3
    i32.const 0
    i32.le_s
    local.get $3
    i32.const -6
    i32.gt_s
    i32.and
    if (result i32)
     local.get $0
     i32.const 2
     local.get $3
     i32.sub
     local.tee $3
     i32.const 1
     i32.shl
     i32.add
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     memory.copy
     local.get $0
     i32.const 3014704
     i32.store
     i32.const 2
     local.set $2
     loop $for-loop|1
      local.get $2
      local.get $3
      i32.lt_s
      if
       local.get $0
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     local.get $1
     local.get $3
     i32.add
    else
     local.get $1
     i32.const 1
     i32.eq
     if
      local.get $0
      i32.const 101
      i32.store16 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.tee $2
      local.get $3
      i32.const 1
      i32.sub
      local.tee $0
      i32.const 0
      i32.lt_s
      local.tee $3
      if
       i32.const 0
       local.get $0
       i32.sub
       local.set $0
      end
      local.get $0
      local.get $0
      i32.const 100000
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 100
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 10
        i32.ge_u
        i32.const 1
        i32.add
       else
        local.get $0
        i32.const 10000
        i32.ge_u
        i32.const 3
        i32.add
        local.get $0
        i32.const 1000
        i32.ge_u
        i32.add
       end
      else
       local.get $0
       i32.const 10000000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 1000000
        i32.ge_u
        i32.const 6
        i32.add
       else
        local.get $0
        i32.const 1000000000
        i32.ge_u
        i32.const 8
        i32.add
        local.get $0
        i32.const 100000000
        i32.ge_u
        i32.add
       end
      end
      i32.const 1
      i32.add
      local.tee $1
      call $~lib/util/number/utoa32_dec_lut
      local.get $2
      i32.const 45
      i32.const 43
      local.get $3
      select
      i32.store16
     else
      local.get $0
      i32.const 4
      i32.add
      local.get $0
      i32.const 2
      i32.add
      local.get $1
      i32.const 1
      i32.shl
      local.tee $2
      i32.const 2
      i32.sub
      memory.copy
      local.get $0
      i32.const 46
      i32.store16 offset=2
      local.get $0
      local.get $2
      i32.add
      local.tee $0
      i32.const 101
      i32.store16 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.tee $4
      local.get $3
      i32.const 1
      i32.sub
      local.tee $0
      i32.const 0
      i32.lt_s
      local.tee $2
      if
       i32.const 0
       local.get $0
       i32.sub
       local.set $0
      end
      local.get $0
      local.get $0
      i32.const 100000
      i32.lt_u
      if (result i32)
       local.get $0
       i32.const 100
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 10
        i32.ge_u
        i32.const 1
        i32.add
       else
        local.get $0
        i32.const 10000
        i32.ge_u
        i32.const 3
        i32.add
        local.get $0
        i32.const 1000
        i32.ge_u
        i32.add
       end
      else
       local.get $0
       i32.const 10000000
       i32.lt_u
       if (result i32)
        local.get $0
        i32.const 1000000
        i32.ge_u
        i32.const 6
        i32.add
       else
        local.get $0
        i32.const 1000000000
        i32.ge_u
        i32.const 8
        i32.add
        local.get $0
        i32.const 100000000
        i32.ge_u
        i32.add
       end
      end
      i32.const 1
      i32.add
      local.tee $0
      call $~lib/util/number/utoa32_dec_lut
      local.get $4
      i32.const 45
      i32.const 43
      local.get $2
      select
      i32.store16
      local.get $0
      local.get $1
      i32.add
      local.set $1
     end
     local.get $1
     i32.const 2
     i32.add
    end
   end
  end
 )
 (func $~lib/util/number/dtoa_core (param $0 i32) (param $1 f64) (result i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i64)
  (local $11 i64)
  (local $12 i64)
  (local $13 i64)
  (local $14 i64)
  (local $15 i64)
  local.get $1
  f64.const 0
  f64.lt
  local.tee $3
  if (result f64)
   local.get $0
   i32.const 45
   i32.store16
   local.get $1
   f64.neg
  else
   local.get $1
  end
  i64.reinterpret_f64
  local.tee $2
  i64.const 9218868437227405312
  i64.and
  i64.const 52
  i64.shr_u
  i32.wrap_i64
  local.tee $7
  i32.const 1
  local.get $7
  select
  i32.const 1075
  i32.sub
  local.tee $8
  i32.const 1
  i32.sub
  local.get $2
  i64.const 4503599627370495
  i64.and
  local.get $7
  i32.const 0
  i32.ne
  i64.extend_i32_u
  i64.const 52
  i64.shl
  i64.add
  local.tee $2
  i64.const 1
  i64.shl
  i64.const 1
  i64.add
  local.tee $4
  i64.clz
  i32.wrap_i64
  local.tee $7
  i32.sub
  local.set $9
  local.get $4
  local.get $7
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_plus
  local.get $2
  local.get $2
  i64.const 4503599627370496
  i64.eq
  i32.const 1
  i32.add
  local.tee $7
  i64.extend_i32_s
  i64.shl
  i64.const 1
  i64.sub
  local.get $8
  local.get $7
  i32.sub
  local.get $9
  i32.sub
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_minus
  local.get $9
  global.set $~lib/util/number/_exp
  i32.const 348
  i32.const -61
  global.get $~lib/util/number/_exp
  local.tee $7
  i32.sub
  f64.convert_i32_s
  f64.const 0.30102999566398114
  f64.mul
  f64.const 347
  f64.add
  local.tee $1
  i32.trunc_sat_f64_s
  local.tee $8
  local.get $8
  f64.convert_i32_s
  local.get $1
  f64.ne
  i32.add
  i32.const 3
  i32.shr_s
  i32.const 1
  i32.add
  local.tee $8
  i32.const 3
  i32.shl
  local.tee $9
  i32.sub
  global.set $~lib/util/number/_K
  local.get $9
  i32.const 12424
  i32.add
  i64.load
  global.set $~lib/util/number/_frc_pow
  local.get $8
  i32.const 1
  i32.shl
  i32.const 13120
  i32.add
  i32.load16_s
  global.set $~lib/util/number/_exp_pow
  local.get $2
  local.get $2
  i64.clz
  i64.shl
  local.tee $2
  i64.const 4294967295
  i64.and
  local.set $5
  local.get $2
  i64.const 32
  i64.shr_u
  local.tee $4
  global.get $~lib/util/number/_frc_pow
  local.tee $10
  i64.const 4294967295
  i64.and
  local.tee $11
  i64.mul
  local.get $5
  local.get $11
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $12
  global.get $~lib/util/number/_frc_plus
  local.tee $2
  i64.const 4294967295
  i64.and
  local.set $13
  local.get $11
  local.get $2
  i64.const 32
  i64.shr_u
  local.tee $6
  i64.mul
  local.get $11
  local.get $13
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $14
  global.get $~lib/util/number/_frc_minus
  local.tee $15
  i64.const 4294967295
  i64.and
  local.set $2
  local.get $11
  local.get $15
  i64.const 32
  i64.shr_u
  local.tee $15
  i64.mul
  local.get $2
  local.get $11
  i64.mul
  i64.const 32
  i64.shr_u
  i64.add
  local.set $11
  local.get $10
  i64.const 32
  i64.shr_u
  local.tee $10
  local.get $6
  i64.mul
  local.get $14
  i64.const 32
  i64.shr_u
  i64.add
  local.get $10
  local.get $13
  i64.mul
  local.get $14
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  i64.const 1
  i64.sub
  local.set $6
  local.get $0
  local.get $3
  i32.const 1
  i32.shl
  i32.add
  local.get $0
  local.get $4
  local.get $10
  i64.mul
  local.get $12
  i64.const 32
  i64.shr_u
  i64.add
  local.get $5
  local.get $10
  i64.mul
  local.get $12
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  local.get $6
  local.get $7
  global.get $~lib/util/number/_exp_pow
  i32.add
  i32.const -64
  i32.sub
  local.get $6
  local.get $10
  local.get $15
  i64.mul
  local.get $11
  i64.const 32
  i64.shr_u
  i64.add
  local.get $2
  local.get $10
  i64.mul
  local.get $11
  i64.const 4294967295
  i64.and
  i64.add
  i64.const 2147483647
  i64.add
  i64.const 32
  i64.shr_u
  i64.add
  i64.const 1
  i64.add
  i64.sub
  local.get $3
  call $~lib/util/number/genDigits
  local.get $3
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.get $3
  i32.add
 )
 (func $~lib/util/number/dtoa_buffered (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  local.get $1
  f64.const 0
  f64.eq
  if
   local.get $0
   i32.const 48
   i32.store16
   local.get $0
   i32.const 46
   i32.store16 offset=2
   local.get $0
   i32.const 48
   i32.store16 offset=4
   i32.const 3
   return
  end
  local.get $1
  local.get $1
  f64.sub
  f64.const 0
  f64.ne
  if
   local.get $1
   local.get $1
   f64.ne
   if
    local.get $0
    i32.const 78
    i32.store16
    local.get $0
    i32.const 97
    i32.store16 offset=2
    local.get $0
    i32.const 78
    i32.store16 offset=4
    i32.const 3
    return
   else
    local.get $1
    f64.const 0
    f64.lt
    local.tee $2
    if
     local.get $0
     i32.const 45
     i32.store16
     local.get $0
     i32.const 2
     i32.add
     local.set $0
    end
    local.get $0
    i64.const 29555310648492105
    i64.store
    local.get $0
    i64.const 34058970405077102
    i64.store offset=8
    local.get $2
    i32.const 8
    i32.add
    return
   end
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/util/number/dtoa_core
 )
 (func $~lib/array/Array<f64>#join (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 f64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=4
  local.set $4
  local.get $0
  i32.load offset=12
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$~lib/util/string/joinFloatArray<f64>
    local.get $0
    i32.const 1
    i32.sub
    local.tee $3
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 9696
     local.set $0
     br $__inlined_func$~lib/util/string/joinFloatArray<f64>
    end
    local.get $3
    i32.eqz
    if
     local.get $4
     f64.load
     local.set $2
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 16268
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     i32.const 0
     i32.store
     block $__inlined_func$~lib/util/number/dtoa
      local.get $2
      f64.const 0
      f64.eq
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 12224
       local.set $0
       br $__inlined_func$~lib/util/number/dtoa
      end
      local.get $2
      local.get $2
      f64.sub
      f64.const 0
      f64.ne
      if
       local.get $2
       local.get $2
       f64.ne
       if
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
        i32.const 12256
        local.set $0
        br $__inlined_func$~lib/util/number/dtoa
       end
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 12288
       i32.const 12336
       local.get $2
       f64.const 0
       f64.lt
       select
       local.set $0
       br $__inlined_func$~lib/util/number/dtoa
      end
      i32.const 12368
      local.get $2
      call $~lib/util/number/dtoa_core
      i32.const 1
      i32.shl
      local.set $1
      global.get $~lib/memory/__stack_pointer
      local.get $1
      i32.const 1
      call $~lib/rt/itcms/__new
      local.tee $0
      i32.store
      local.get $0
      i32.const 12368
      local.get $1
      memory.copy
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinFloatArray<f64>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12188
    i32.load
    i32.const 1
    i32.shr_u
    local.tee $5
    i32.const 28
    i32.add
    local.get $3
    i32.mul
    i32.const 28
    i32.add
    local.tee $7
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
    i32.const 0
    local.set $0
    loop $for-loop|0
     local.get $3
     local.get $6
     i32.gt_s
     if
      local.get $1
      local.get $0
      i32.const 1
      i32.shl
      i32.add
      local.get $4
      local.get $6
      i32.const 3
      i32.shl
      i32.add
      f64.load
      call $~lib/util/number/dtoa_buffered
      local.get $0
      i32.add
      local.set $0
      local.get $5
      if
       local.get $1
       local.get $0
       i32.const 1
       i32.shl
       i32.add
       i32.const 12192
       local.get $5
       i32.const 1
       i32.shl
       memory.copy
       local.get $0
       local.get $5
       i32.add
       local.set $0
      end
      local.get $6
      i32.const 1
      i32.add
      local.set $6
      br $for-loop|0
     end
    end
    local.get $1
    local.get $0
    i32.const 1
    i32.shl
    i32.add
    local.get $4
    local.get $3
    i32.const 3
    i32.shl
    i32.add
    f64.load
    call $~lib/util/number/dtoa_buffered
    local.get $0
    i32.add
    local.tee $0
    local.get $7
    i32.lt_s
    if
     local.get $1
     local.get $0
     call $~lib/string/String#substring
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinFloatArray<f64>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.set $0
   end
   local.get $0
   return
  end
  i32.const 32672
  i32.const 32720
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<std/array/Ref|null>#join (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i64.const 0
  i64.store
  local.get $3
  i32.const 0
  i32.store offset=8
  block $__inlined_func$~lib/util/string/joinReferenceArray<std/array/Ref|null>
   local.get $0
   i32.const 1
   i32.sub
   local.tee $3
   i32.const 0
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 9696
    local.set $0
    br $__inlined_func$~lib/util/string/joinReferenceArray<std/array/Ref|null>
   end
   local.get $3
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    local.get $2
    i32.load
    local.tee $1
    i32.store
    local.get $0
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 13536
    i32.const 9696
    local.get $1
    select
    local.set $0
    br $__inlined_func$~lib/util/string/joinReferenceArray<std/array/Ref|null>
   end
   i32.const 9696
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 9696
   i32.store offset=4
   i32.const 9980
   i32.load
   i32.const 1
   i32.shr_u
   local.set $4
   loop $for-loop|0
    local.get $1
    local.get $3
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $2
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $5
     i32.store
     local.get $5
     if
      global.get $~lib/memory/__stack_pointer
      local.tee $5
      i32.const 13536
      i32.store offset=8
      local.get $5
      local.get $0
      i32.const 13536
      call $~lib/string/String.__concat
      local.tee $0
      i32.store offset=4
     end
     local.get $4
     if
      global.get $~lib/memory/__stack_pointer
      local.get $0
      i32.const 9984
      call $~lib/string/String.__concat
      local.tee $0
      i32.store offset=4
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $2
   local.get $3
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.tee $1
   i32.store
   local.get $1
   if
    global.get $~lib/memory/__stack_pointer
    local.tee $1
    i32.const 13536
    i32.store offset=8
    local.get $1
    local.get $0
    i32.const 13536
    call $~lib/string/String.__concat
    local.tee $0
    i32.store offset=4
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
  end
  local.get $0
 )
 (func $~lib/util/number/itoa_buffered<i8> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.extend8_s
  i32.const 0
  i32.lt_s
  local.tee $2
  if
   local.get $1
   i32.const 255
   i32.and
   i32.const 128
   i32.eq
   if
    local.get $0
    i64.const 15762813447372845
    i64.store
    i32.const 4
    return
   end
   local.get $0
   i32.const 45
   i32.store16
   i32.const 0
   local.get $1
   i32.sub
   local.set $1
  end
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.set $3
  local.get $1
  i32.extend8_s
  i32.const 10
  i32.lt_u
  if
   local.get $3
   local.get $1
   i32.extend8_s
   i32.const 48
   i32.or
   i32.store16
   local.get $2
   i32.const 1
   i32.add
   return
  end
  local.get $1
  i32.extend8_s
  local.tee $1
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $1
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $1
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $1
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $1
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $1
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.set $0
  local.get $3
  local.get $1
  local.get $0
  call $~lib/util/number/utoa32_dec_lut
  local.get $0
  local.get $2
  i32.add
 )
 (func $~lib/util/number/itoa_buffered<u16> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 65535
  i32.and
  i32.const 10
  i32.lt_u
  if
   local.get $0
   local.get $1
   i32.const 65535
   i32.and
   i32.const 48
   i32.or
   i32.store16
   i32.const 1
   return
  end
  local.get $1
  i32.const 65535
  i32.and
  local.tee $2
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $2
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $2
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $2
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $2
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $2
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $2
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $2
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.set $1
  local.get $0
  local.get $2
  local.get $1
  call $~lib/util/number/utoa32_dec_lut
  local.get $1
 )
 (func $~lib/util/number/itoa_buffered<i16> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  i32.extend16_s
  i32.const 0
  i32.lt_s
  local.tee $2
  if
   local.get $1
   i32.const 65535
   i32.and
   i32.const 32768
   i32.eq
   if
    local.get $0
    i64.const 15481338470793261
    i64.store
    local.get $0
    i32.const 3670070
    i32.store offset=8
    i32.const 6
    return
   end
   local.get $0
   i32.const 45
   i32.store16
   i32.const 0
   local.get $1
   i32.sub
   local.set $1
  end
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.set $3
  local.get $1
  i32.extend16_s
  i32.const 10
  i32.lt_u
  if
   local.get $3
   local.get $1
   i32.extend16_s
   i32.const 48
   i32.or
   i32.store16
   local.get $2
   i32.const 1
   i32.add
   return
  end
  local.get $1
  i32.extend16_s
  local.tee $1
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $1
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $1
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $1
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $1
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $1
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.set $0
  local.get $3
  local.get $1
  local.get $0
  call $~lib/util/number/utoa32_dec_lut
  local.get $0
  local.get $2
  i32.add
 )
 (func $~lib/util/number/utoa64_dec_lut (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  loop $while-continue|0
   local.get $1
   i64.const 100000000
   i64.ge_u
   if
    local.get $0
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $1
    local.get $1
    i64.const 100000000
    i64.div_u
    local.tee $1
    i64.const 100000000
    i64.mul
    i64.sub
    i32.wrap_i64
    local.tee $3
    i32.const 10000
    i32.rem_u
    local.tee $4
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 10300
    i32.add
    i64.load32_u
    local.get $4
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 10300
    i32.add
    i64.load32_u
    i64.const 32
    i64.shl
    i64.or
    i64.store
    local.get $0
    local.get $2
    i32.const 4
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    i32.const 10000
    i32.div_u
    local.tee $3
    i32.const 100
    i32.div_u
    i32.const 2
    i32.shl
    i32.const 10300
    i32.add
    i64.load32_u
    local.get $3
    i32.const 100
    i32.rem_u
    i32.const 2
    i32.shl
    i32.const 10300
    i32.add
    i64.load32_u
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $0
  local.get $1
  i32.wrap_i64
  local.get $2
  call $~lib/util/number/utoa32_dec_lut
 )
 (func $~lib/util/number/itoa_buffered<u64> (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  local.set $2
  local.get $1
  i64.const 10
  i64.lt_u
  if
   local.get $2
   local.get $1
   i64.const 48
   i64.or
   i64.store16
   i32.const 1
   return
  end
  local.get $1
  i64.const 4294967295
  i64.le_u
  if
   local.get $1
   i32.wrap_i64
   local.tee $3
   i32.const 100000
   i32.lt_u
   if (result i32)
    local.get $3
    i32.const 100
    i32.lt_u
    if (result i32)
     local.get $3
     i32.const 10
     i32.ge_u
     i32.const 1
     i32.add
    else
     local.get $3
     i32.const 10000
     i32.ge_u
     i32.const 3
     i32.add
     local.get $3
     i32.const 1000
     i32.ge_u
     i32.add
    end
   else
    local.get $3
    i32.const 10000000
    i32.lt_u
    if (result i32)
     local.get $3
     i32.const 1000000
     i32.ge_u
     i32.const 6
     i32.add
    else
     local.get $3
     i32.const 1000000000
     i32.ge_u
     i32.const 8
     i32.add
     local.get $3
     i32.const 100000000
     i32.ge_u
     i32.add
    end
   end
   local.set $0
   local.get $2
   local.get $3
   local.get $0
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $2
   local.get $1
   local.get $1
   i64.const 1000000000000000
   i64.lt_u
   if (result i32)
    local.get $1
    i64.const 1000000000000
    i64.lt_u
    if (result i32)
     local.get $1
     i64.const 100000000000
     i64.ge_u
     i32.const 10
     i32.add
     local.get $1
     i64.const 10000000000
     i64.ge_u
     i32.add
    else
     local.get $1
     i64.const 100000000000000
     i64.ge_u
     i32.const 13
     i32.add
     local.get $1
     i64.const 10000000000000
     i64.ge_u
     i32.add
    end
   else
    local.get $1
    i64.const 100000000000000000
    i64.lt_u
    if (result i32)
     local.get $1
     i64.const 10000000000000000
     i64.ge_u
     i32.const 16
     i32.add
    else
     local.get $1
     i64.const -8446744073709551616
     i64.ge_u
     i32.const 18
     i32.add
     local.get $1
     i64.const 1000000000000000000
     i64.ge_u
     i32.add
    end
   end
   local.tee $0
   call $~lib/util/number/utoa64_dec_lut
  end
  local.get $0
 )
 (func $~lib/array/Array<u64>#join (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=4
  local.set $7
  local.get $0
  i32.load offset=12
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$~lib/util/string/joinIntegerArray<u64>
    local.get $0
    i32.const 1
    i32.sub
    local.tee $6
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 9696
     local.set $0
     br $__inlined_func$~lib/util/string/joinIntegerArray<u64>
    end
    local.get $6
    i32.eqz
    if
     block $__inlined_func$~lib/util/number/utoa64 (result i32)
      local.get $7
      i64.load
      local.set $2
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 16268
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store
      local.get $2
      i64.eqz
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 10288
       br $__inlined_func$~lib/util/number/utoa64
      end
      local.get $2
      i64.const 4294967295
      i64.le_u
      if
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.wrap_i64
       local.tee $1
       i32.const 100000
       i32.lt_u
       if (result i32)
        local.get $1
        i32.const 100
        i32.lt_u
        if (result i32)
         local.get $1
         i32.const 10
         i32.ge_u
         i32.const 1
         i32.add
        else
         local.get $1
         i32.const 10000
         i32.ge_u
         i32.const 3
         i32.add
         local.get $1
         i32.const 1000
         i32.ge_u
         i32.add
        end
       else
        local.get $1
        i32.const 10000000
        i32.lt_u
        if (result i32)
         local.get $1
         i32.const 1000000
         i32.ge_u
         i32.const 6
         i32.add
        else
         local.get $1
         i32.const 1000000000
         i32.ge_u
         i32.const 8
         i32.add
         local.get $1
         i32.const 100000000
         i32.ge_u
         i32.add
        end
       end
       local.tee $3
       i32.const 1
       i32.shl
       i32.const 1
       call $~lib/rt/itcms/__new
       local.tee $0
       i32.store
       local.get $0
       local.get $1
       local.get $3
       call $~lib/util/number/utoa32_dec_lut
      else
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i64.const 1000000000000000
       i64.lt_u
       if (result i32)
        local.get $2
        i64.const 1000000000000
        i64.lt_u
        if (result i32)
         local.get $2
         i64.const 100000000000
         i64.ge_u
         i32.const 10
         i32.add
         local.get $2
         i64.const 10000000000
         i64.ge_u
         i32.add
        else
         local.get $2
         i64.const 100000000000000
         i64.ge_u
         i32.const 13
         i32.add
         local.get $2
         i64.const 10000000000000
         i64.ge_u
         i32.add
        end
       else
        local.get $2
        i64.const 100000000000000000
        i64.lt_u
        if (result i32)
         local.get $2
         i64.const 10000000000000000
         i64.ge_u
         i32.const 16
         i32.add
        else
         local.get $2
         i64.const -8446744073709551616
         i64.ge_u
         i32.const 18
         i32.add
         local.get $2
         i64.const 1000000000000000000
         i64.ge_u
         i32.add
        end
       end
       local.tee $1
       i32.const 1
       i32.shl
       i32.const 1
       call $~lib/rt/itcms/__new
       local.tee $0
       i32.store
       local.get $0
       local.get $2
       local.get $1
       call $~lib/util/number/utoa64_dec_lut
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $0
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<u64>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 9980
    i32.load
    i32.const 1
    i32.shr_u
    local.tee $3
    i32.const 20
    i32.add
    local.get $6
    i32.mul
    i32.const 20
    i32.add
    local.tee $5
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
    i32.const 0
    local.set $0
    loop $for-loop|0
     local.get $4
     local.get $6
     i32.lt_s
     if
      local.get $1
      local.get $0
      i32.const 1
      i32.shl
      i32.add
      local.get $7
      local.get $4
      i32.const 3
      i32.shl
      i32.add
      i64.load
      call $~lib/util/number/itoa_buffered<u64>
      local.get $0
      i32.add
      local.set $0
      local.get $3
      if
       local.get $1
       local.get $0
       i32.const 1
       i32.shl
       i32.add
       i32.const 9984
       local.get $3
       i32.const 1
       i32.shl
       memory.copy
       local.get $0
       local.get $3
       i32.add
       local.set $0
      end
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|0
     end
    end
    local.get $1
    local.get $0
    i32.const 1
    i32.shl
    i32.add
    local.get $7
    local.get $6
    i32.const 3
    i32.shl
    i32.add
    i64.load
    call $~lib/util/number/itoa_buffered<u64>
    local.get $0
    i32.add
    local.tee $0
    local.get $5
    i32.lt_s
    if
     local.get $1
     local.get $0
     call $~lib/string/String#substring
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<u64>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.set $0
   end
   local.get $0
   return
  end
  i32.const 32672
  i32.const 32720
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/number/itoa_buffered<i64> (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i64.const 0
  i64.lt_s
  local.tee $3
  if
   local.get $0
   i32.const 45
   i32.store16
   i64.const 0
   local.get $1
   i64.sub
   local.set $1
  end
  local.get $0
  local.get $3
  i32.const 1
  i32.shl
  i32.add
  local.set $4
  local.get $1
  i64.const 10
  i64.lt_u
  if
   local.get $4
   local.get $1
   i64.const 48
   i64.or
   i64.store16
   local.get $3
   i32.const 1
   i32.add
   return
  end
  local.get $1
  i64.const 4294967295
  i64.le_u
  if
   local.get $1
   i32.wrap_i64
   local.tee $2
   i32.const 100000
   i32.lt_u
   if (result i32)
    local.get $2
    i32.const 100
    i32.lt_u
    if (result i32)
     local.get $2
     i32.const 10
     i32.ge_u
     i32.const 1
     i32.add
    else
     local.get $2
     i32.const 10000
     i32.ge_u
     i32.const 3
     i32.add
     local.get $2
     i32.const 1000
     i32.ge_u
     i32.add
    end
   else
    local.get $2
    i32.const 10000000
    i32.lt_u
    if (result i32)
     local.get $2
     i32.const 1000000
     i32.ge_u
     i32.const 6
     i32.add
    else
     local.get $2
     i32.const 1000000000
     i32.ge_u
     i32.const 8
     i32.add
     local.get $2
     i32.const 100000000
     i32.ge_u
     i32.add
    end
   end
   local.set $0
   local.get $4
   local.get $2
   local.get $0
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $4
   local.get $1
   local.get $1
   i64.const 1000000000000000
   i64.lt_u
   if (result i32)
    local.get $1
    i64.const 1000000000000
    i64.lt_u
    if (result i32)
     local.get $1
     i64.const 100000000000
     i64.ge_u
     i32.const 10
     i32.add
     local.get $1
     i64.const 10000000000
     i64.ge_u
     i32.add
    else
     local.get $1
     i64.const 100000000000000
     i64.ge_u
     i32.const 13
     i32.add
     local.get $1
     i64.const 10000000000000
     i64.ge_u
     i32.add
    end
   else
    local.get $1
    i64.const 100000000000000000
    i64.lt_u
    if (result i32)
     local.get $1
     i64.const 10000000000000000
     i64.ge_u
     i32.const 16
     i32.add
    else
     local.get $1
     i64.const -8446744073709551616
     i64.ge_u
     i32.const 18
     i32.add
     local.get $1
     i64.const 1000000000000000000
     i64.ge_u
     i32.add
    end
   end
   local.tee $0
   call $~lib/util/number/utoa64_dec_lut
  end
  local.get $0
  local.get $3
  i32.add
 )
 (func $~lib/array/Array<i64>#join (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i64)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=4
  local.set $5
  local.get $0
  i32.load offset=12
  local.set $0
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$~lib/util/string/joinIntegerArray<i64>
    local.get $0
    i32.const 1
    i32.sub
    local.tee $6
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 9696
     local.set $0
     br $__inlined_func$~lib/util/string/joinIntegerArray<i64>
    end
    local.get $6
    i32.eqz
    if
     block $__inlined_func$~lib/util/number/itoa64 (result i32)
      local.get $5
      i64.load
      i64.extend32_s
      local.set $2
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.sub
      global.set $~lib/memory/__stack_pointer
      global.get $~lib/memory/__stack_pointer
      i32.const 16268
      i32.lt_s
      br_if $folding-inner0
      global.get $~lib/memory/__stack_pointer
      i32.const 0
      i32.store
      local.get $2
      i64.eqz
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 10288
       br $__inlined_func$~lib/util/number/itoa64
      end
      i64.const 0
      local.get $2
      i64.sub
      local.get $2
      local.get $2
      i64.const 63
      i64.shr_u
      i32.wrap_i64
      i32.const 1
      i32.shl
      local.tee $1
      select
      local.tee $2
      i64.const 4294967295
      i64.le_u
      if
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i32.wrap_i64
       local.tee $3
       i32.const 100000
       i32.lt_u
       if (result i32)
        local.get $3
        i32.const 100
        i32.lt_u
        if (result i32)
         local.get $3
         i32.const 10
         i32.ge_u
         i32.const 1
         i32.add
        else
         local.get $3
         i32.const 10000
         i32.ge_u
         i32.const 3
         i32.add
         local.get $3
         i32.const 1000
         i32.ge_u
         i32.add
        end
       else
        local.get $3
        i32.const 10000000
        i32.lt_u
        if (result i32)
         local.get $3
         i32.const 1000000
         i32.ge_u
         i32.const 6
         i32.add
        else
         local.get $3
         i32.const 1000000000
         i32.ge_u
         i32.const 8
         i32.add
         local.get $3
         i32.const 100000000
         i32.ge_u
         i32.add
        end
       end
       local.tee $4
       i32.const 1
       i32.shl
       local.get $1
       i32.add
       i32.const 1
       call $~lib/rt/itcms/__new
       local.tee $0
       i32.store
       local.get $0
       local.get $1
       i32.add
       local.get $3
       local.get $4
       call $~lib/util/number/utoa32_dec_lut
      else
       global.get $~lib/memory/__stack_pointer
       local.get $2
       i64.const 1000000000000000
       i64.lt_u
       if (result i32)
        local.get $2
        i64.const 1000000000000
        i64.lt_u
        if (result i32)
         local.get $2
         i64.const 100000000000
         i64.ge_u
         i32.const 10
         i32.add
         local.get $2
         i64.const 10000000000
         i64.ge_u
         i32.add
        else
         local.get $2
         i64.const 100000000000000
         i64.ge_u
         i32.const 13
         i32.add
         local.get $2
         i64.const 10000000000000
         i64.ge_u
         i32.add
        end
       else
        local.get $2
        i64.const 100000000000000000
        i64.lt_u
        if (result i32)
         local.get $2
         i64.const 10000000000000000
         i64.ge_u
         i32.const 16
         i32.add
        else
         local.get $2
         i64.const -8446744073709551616
         i64.ge_u
         i32.const 18
         i32.add
         local.get $2
         i64.const 1000000000000000000
         i64.ge_u
         i32.add
        end
       end
       local.tee $3
       i32.const 1
       i32.shl
       local.get $1
       i32.add
       i32.const 1
       call $~lib/rt/itcms/__new
       local.tee $0
       i32.store
       local.get $0
       local.get $1
       i32.add
       local.get $2
       local.get $3
       call $~lib/util/number/utoa64_dec_lut
      end
      local.get $1
      if
       local.get $0
       i32.const 45
       i32.store16
      end
      global.get $~lib/memory/__stack_pointer
      i32.const 4
      i32.add
      global.set $~lib/memory/__stack_pointer
      local.get $0
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<i64>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 9980
    i32.load
    i32.const 1
    i32.shr_u
    local.tee $7
    i32.const 21
    i32.add
    local.get $6
    i32.mul
    i32.const 21
    i32.add
    local.tee $4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
    i32.const 0
    local.set $0
    loop $for-loop|0
     local.get $3
     local.get $6
     i32.lt_s
     if
      local.get $1
      local.get $0
      i32.const 1
      i32.shl
      i32.add
      local.get $5
      local.get $3
      i32.const 3
      i32.shl
      i32.add
      i64.load
      call $~lib/util/number/itoa_buffered<i64>
      local.get $0
      i32.add
      local.set $0
      local.get $7
      if
       local.get $1
       local.get $0
       i32.const 1
       i32.shl
       i32.add
       i32.const 9984
       local.get $7
       i32.const 1
       i32.shl
       memory.copy
       local.get $0
       local.get $7
       i32.add
       local.set $0
      end
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $for-loop|0
     end
    end
    local.get $1
    local.get $0
    i32.const 1
    i32.shl
    i32.add
    local.get $5
    local.get $6
    i32.const 3
    i32.shl
    i32.add
    i64.load
    call $~lib/util/number/itoa_buffered<i64>
    local.get $0
    i32.add
    local.tee $0
    local.get $4
    i32.lt_s
    if
     local.get $1
     local.get $0
     call $~lib/string/String#substring
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<i64>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.set $0
   end
   local.get $0
   return
  end
  i32.const 32672
  i32.const 32720
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/util/number/itoa_buffered<u8> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 255
  i32.and
  i32.const 10
  i32.lt_u
  if
   local.get $0
   local.get $1
   i32.const 255
   i32.and
   i32.const 48
   i32.or
   i32.store16
   i32.const 1
   return
  end
  local.get $1
  i32.const 255
  i32.and
  local.tee $2
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $2
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $2
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $2
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $2
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $2
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $2
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $2
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.set $1
  local.get $0
  local.get $2
  local.get $1
  call $~lib/util/number/utoa32_dec_lut
  local.get $1
 )
 (func $start:std/array~anonymous|53 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.load offset=12
  i32.const 1
  i32.ne
  if
   i32.const 0
   i32.const 1552
   i32.const 1265
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 3
  call $~lib/array/Array<i32>#push
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.ne
  if
   i32.const 0
   i32.const 1552
   i32.const 1267
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
 )
 (func $~lib/rt/__visit_members (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  block $folding-inner4
   block $folding-inner3
    block $folding-inner1
     block $invalid
      block $std/array/Proxy<i32>
       block $std/array/Dim
        block $std/array/Ref
         block $~lib/string/String
          block $~lib/arraybuffer/ArrayBuffer
           local.get $0
           i32.const 8
           i32.sub
           i32.load
           br_table $~lib/arraybuffer/ArrayBuffer $~lib/string/String $folding-inner4 $folding-inner4 $std/array/Ref $folding-inner4 $folding-inner4 $folding-inner4 $folding-inner4 $folding-inner1 $folding-inner4 $folding-inner4 $folding-inner1 $folding-inner3 $folding-inner3 $folding-inner3 $folding-inner3 $folding-inner3 $folding-inner3 $std/array/Dim $folding-inner1 $folding-inner3 $folding-inner3 $folding-inner3 $folding-inner3 $folding-inner3 $folding-inner1 $folding-inner3 $std/array/Proxy<i32> $folding-inner1 $folding-inner3 $folding-inner1 $folding-inner3 $folding-inner1 $folding-inner3 $folding-inner4 $folding-inner4 $folding-inner4 $folding-inner4 $folding-inner4 $folding-inner1 $folding-inner1 $folding-inner1 $folding-inner1 $folding-inner3 $invalid
          end
          return
         end
         return
        end
        return
       end
       return
      end
      return
     end
     unreachable
    end
    local.get $0
    i32.load offset=4
    local.tee $1
    local.get $0
    i32.load offset=12
    i32.const 2
    i32.shl
    i32.add
    local.set $3
    loop $while-continue|0
     local.get $1
     local.get $3
     i32.lt_u
     if
      local.get $1
      i32.load
      local.tee $2
      if
       local.get $2
       call $byn-split-outlined-A$~lib/rt/itcms/__visit
      end
      local.get $1
      i32.const 4
      i32.add
      local.set $1
      br $while-continue|0
     end
    end
    br $folding-inner4
   end
   local.get $0
   i32.load offset=4
   local.tee $0
   if
    local.get $0
    call $byn-split-outlined-A$~lib/rt/itcms/__visit
   end
   return
  end
  local.get $0
  i32.load
  local.tee $0
  if
   local.get $0
   call $byn-split-outlined-A$~lib/rt/itcms/__visit
  end
 )
 (func $~start
  global.get $~started
  if
   return
  end
  i32.const 1
  global.set $~started
  call $start:std/array
 )
 (func $std/array/assertSorted<i32> (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$std/array/isSorted<i32> (result i32)
   i32.const 1
   local.set $2
   local.get $0
   i32.load offset=4
   local.get $0
   i32.load offset=12
   local.get $1
   call $~lib/util/sort/SORT<i32>
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=12
   local.set $3
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $2
     i32.const 1
     i32.sub
     call $~lib/array/Array<i32>#__get
     local.set $4
     local.get $0
     local.get $2
     call $~lib/array/Array<i32>#__get
     local.set $5
     i32.const 2
     global.set $~argumentsLength
     i32.const 0
     local.get $4
     local.get $5
     local.get $1
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     br_if $__inlined_func$std/array/isSorted<i32>
     drop
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   i32.const 1
  end
  i32.eqz
  if
   i32.const 0
   i32.const 1552
   i32.const 1078
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/array/assertSortedDefault<i32> (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 9248
  i32.store
  local.get $0
  i32.const 9248
  call $std/array/assertSorted<i32>
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/extendRunRight<std/array/Dim> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i64.const 0
  i64.store
  local.get $4
  i32.const 0
  i32.store offset=8
  local.get $1
  local.get $2
  i32.eq
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  local.get $0
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $5
  i32.store
  local.get $4
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $6
  i32.store offset=4
  i32.const 2
  global.set $~argumentsLength
  local.get $5
  local.get $6
  local.get $3
  i32.load
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $6
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $7
     i32.load offset=4
     local.tee $5
     i32.store
     local.get $6
     local.get $7
     i32.load
     local.tee $6
     i32.store offset=4
     i32.const 2
     global.set $~argumentsLength
     local.get $5
     local.get $6
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $2
   loop $while-continue|1
    local.get $1
    local.get $2
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load
     local.tee $5
     i32.store offset=8
     local.get $3
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.tee $3
     i32.load
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $3
     local.get $5
     i32.store
     local.get $2
     i32.const 1
     i32.sub
     local.set $2
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $2
    local.get $4
    i32.gt_s
    if (result i32)
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     local.tee $5
     i32.load offset=4
     local.tee $6
     i32.store
     local.get $1
     local.get $5
     i32.load
     local.tee $1
     i32.store offset=4
     i32.const 2
     global.set $~argumentsLength
     local.get $6
     local.get $1
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $std/array/assertSorted<~lib/array/Array<i32>> (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$std/array/isSorted<~lib/array/Array<i32>> (result i32)
    local.get $0
    i32.load offset=4
    local.get $0
    i32.load offset=12
    local.get $1
    call $~lib/util/sort/SORT<std/array/Dim>
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16268
    i32.lt_s
    br_if $folding-inner0
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    i32.const 1
    local.set $2
    local.get $0
    i32.load offset=12
    local.set $5
    loop $for-loop|0
     local.get $2
     local.get $5
     i32.lt_s
     if
      local.get $0
      local.get $2
      i32.const 1
      i32.sub
      call $~lib/array/Array<std/array/Ref>#__get
      local.set $3
      global.get $~lib/memory/__stack_pointer
      local.get $3
      i32.store
      local.get $0
      local.get $2
      call $~lib/array/Array<std/array/Ref>#__get
      local.set $4
      global.get $~lib/memory/__stack_pointer
      local.get $4
      i32.store offset=4
      i32.const 2
      global.set $~argumentsLength
      local.get $3
      local.get $4
      local.get $1
      i32.load
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 0
       br $__inlined_func$std/array/isSorted<~lib/array/Array<i32>>
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1078
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 32672
  i32.const 32720
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $std/array/createRandomStringArray (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store
   local.get $1
   i32.const 16
   i32.const 33
   call $~lib/rt/itcms/__new
   local.tee $8
   i32.store
   local.get $8
   i32.const 0
   i32.store
   local.get $8
   i32.const 0
   i32.store offset=4
   local.get $8
   i32.const 0
   i32.store offset=8
   local.get $8
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 1600
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $1
   i32.store offset=4
   local.get $8
   local.get $1
   i32.store
   local.get $1
   if
    local.get $8
    local.get $1
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $8
   local.get $1
   i32.store offset=4
   local.get $8
   i32.const 1600
   i32.store offset=8
   local.get $8
   i32.const 400
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $8
   i32.store
   loop $for-loop|0
    local.get $2
    i32.const 400
    i32.lt_s
    if
     call $~lib/math/NativeMath.random
     f64.const 32
     f64.mul
     i32.trunc_sat_f64_s
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 16268
     i32.lt_s
     br_if $folding-inner0
     global.get $~lib/memory/__stack_pointer
     local.tee $0
     i64.const 0
     i64.store
     local.get $0
     i32.const 0
     i32.store offset=8
     i32.const 9696
     local.set $1
     local.get $0
     i32.const 9696
     i32.store
     i32.const 0
     local.set $3
     loop $for-loop|03
      local.get $3
      local.get $5
      i32.lt_s
      if
       global.get $~lib/memory/__stack_pointer
       local.tee $7
       i32.const 8160
       i32.store offset=4
       call $~lib/math/NativeMath.random
       global.get $~lib/memory/__stack_pointer
       i32.const 8160
       i32.store offset=8
       i32.const 8156
       i32.load
       i32.const 1
       i32.shr_u
       f64.convert_i32_s
       f64.mul
       f64.floor
       i32.trunc_sat_f64_s
       local.set $4
       global.get $~lib/memory/__stack_pointer
       i32.const 4
       i32.sub
       global.set $~lib/memory/__stack_pointer
       global.get $~lib/memory/__stack_pointer
       i32.const 16268
       i32.lt_s
       br_if $folding-inner0
       global.get $~lib/memory/__stack_pointer
       i32.const 0
       i32.store
       block $__inlined_func$~lib/string/String#charAt
        local.get $4
        i32.const 8156
        i32.load
        i32.const 1
        i32.shr_u
        i32.ge_u
        if
         global.get $~lib/memory/__stack_pointer
         i32.const 4
         i32.add
         global.set $~lib/memory/__stack_pointer
         i32.const 9696
         local.set $0
         br $__inlined_func$~lib/string/String#charAt
        end
        global.get $~lib/memory/__stack_pointer
        i32.const 2
        i32.const 1
        call $~lib/rt/itcms/__new
        local.tee $0
        i32.store
        local.get $0
        local.get $4
        i32.const 1
        i32.shl
        i32.const 8160
        i32.add
        i32.load16_u
        i32.store16
        global.get $~lib/memory/__stack_pointer
        i32.const 4
        i32.add
        global.set $~lib/memory/__stack_pointer
       end
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.store offset=4
       local.get $7
       local.get $1
       local.get $0
       call $~lib/string/String.__concat
       local.tee $1
       i32.store
       local.get $3
       i32.const 1
       i32.add
       local.set $3
       br $for-loop|03
      end
     end
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $8
     local.get $2
     local.get $1
     call $~lib/array/Array<~lib/array/Array<i32>>#__set
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  i32.const 32672
  i32.const 32720
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<i32>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 9984
  i32.store
  local.get $0
  i32.const 9984
  call $~lib/array/Array<i32>#join
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i8>#toString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 9984
   i32.store
   local.get $0
   i32.load offset=4
   local.set $4
   local.get $0
   i32.load offset=12
   local.set $0
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$~lib/util/string/joinIntegerArray<i8>
    local.get $0
    i32.const 1
    i32.sub
    local.tee $3
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 9696
     local.set $0
     br $__inlined_func$~lib/util/string/joinIntegerArray<i8>
    end
    local.get $3
    i32.eqz
    if
     local.get $4
     i32.load8_s
     call $~lib/util/number/itoa32
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<i8>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 9980
    i32.load
    i32.const 1
    i32.shr_u
    local.tee $5
    i32.const 11
    i32.add
    local.get $3
    i32.mul
    i32.const 11
    i32.add
    local.tee $6
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
    i32.const 0
    local.set $0
    loop $for-loop|0
     local.get $2
     local.get $3
     i32.lt_s
     if
      local.get $1
      local.get $0
      i32.const 1
      i32.shl
      i32.add
      local.get $2
      local.get $4
      i32.add
      i32.load8_s
      call $~lib/util/number/itoa_buffered<i8>
      local.get $0
      i32.add
      local.set $0
      local.get $5
      if
       local.get $1
       local.get $0
       i32.const 1
       i32.shl
       i32.add
       i32.const 9984
       local.get $5
       i32.const 1
       i32.shl
       memory.copy
       local.get $0
       local.get $5
       i32.add
       local.set $0
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    local.get $1
    local.get $0
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    local.get $4
    i32.add
    i32.load8_s
    call $~lib/util/number/itoa_buffered<i8>
    local.get $0
    i32.add
    local.tee $0
    local.get $6
    i32.lt_s
    if
     local.get $1
     local.get $0
     call $~lib/string/String#substring
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<i8>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 32672
  i32.const 32720
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<~lib/string/String|null>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 9984
  i32.store
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=12
  i32.const 9984
  call $~lib/util/string/joinStringArray
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<u8>#toString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 9984
   i32.store
   local.get $0
   i32.load offset=4
   local.set $4
   local.get $0
   i32.load offset=12
   local.set $0
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$~lib/util/string/joinIntegerArray<u8>
    local.get $0
    i32.const 1
    i32.sub
    local.tee $3
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 9696
     local.set $0
     br $__inlined_func$~lib/util/string/joinIntegerArray<u8>
    end
    local.get $3
    i32.eqz
    if
     local.get $4
     i32.load8_u
     call $~lib/util/number/utoa32
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<u8>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 9980
    i32.load
    i32.const 1
    i32.shr_u
    local.tee $5
    i32.const 10
    i32.add
    local.get $3
    i32.mul
    i32.const 10
    i32.add
    local.tee $6
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
    i32.const 0
    local.set $0
    loop $for-loop|0
     local.get $2
     local.get $3
     i32.lt_s
     if
      local.get $1
      local.get $0
      i32.const 1
      i32.shl
      i32.add
      local.get $2
      local.get $4
      i32.add
      i32.load8_u
      call $~lib/util/number/itoa_buffered<u8>
      local.get $0
      i32.add
      local.set $0
      local.get $5
      if
       local.get $1
       local.get $0
       i32.const 1
       i32.shl
       i32.add
       i32.const 9984
       local.get $5
       i32.const 1
       i32.shl
       memory.copy
       local.get $0
       local.get $5
       i32.add
       local.set $0
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|0
     end
    end
    local.get $1
    local.get $0
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    local.get $4
    i32.add
    i32.load8_u
    call $~lib/util/number/itoa_buffered<u8>
    local.get $0
    i32.add
    local.tee $0
    local.get $6
    i32.lt_s
    if
     local.get $1
     local.get $0
     call $~lib/string/String#substring
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<u8>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 32672
  i32.const 32720
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<u32>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 9984
  i32.store
  local.get $0
  i32.const 9984
  call $~lib/array/Array<u32>#join
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/array/Array<u32>>#toString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner0
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i32.const 0
   i32.store
   local.get $2
   i32.const 9984
   i32.store
   local.get $0
   i32.load offset=4
   local.set $3
   local.get $0
   i32.load offset=12
   local.set $0
   local.get $2
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner0
   global.get $~lib/memory/__stack_pointer
   local.tee $2
   i64.const 0
   i64.store
   local.get $2
   i32.const 0
   i32.store offset=8
   block $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<u32>>
    local.get $0
    i32.const 1
    i32.sub
    local.tee $4
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 9696
     local.set $0
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<u32>>
    end
    local.get $4
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load
     local.tee $0
     i32.store
     local.get $0
     if (result i32)
      local.get $0
      call $~lib/array/Array<u32>#toString
     else
      i32.const 9696
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<u32>>
    end
    i32.const 9696
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 9696
    i32.store offset=4
    i32.const 9980
    i32.load
    i32.const 1
    i32.shr_u
    local.set $5
    loop $for-loop|0
     local.get $1
     local.get $4
     i32.lt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      local.get $1
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.tee $6
      i32.store
      local.get $6
      if
       global.get $~lib/memory/__stack_pointer
       local.get $6
       call $~lib/array/Array<u32>#toString
       local.set $6
       global.get $~lib/memory/__stack_pointer
       local.get $6
       i32.store offset=8
       local.get $0
       local.get $6
       call $~lib/string/String.__concat
       local.tee $0
       i32.store offset=4
      end
      local.get $5
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.const 9984
       call $~lib/string/String.__concat
       local.tee $0
       i32.store offset=4
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|0
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $1
    i32.store
    local.get $1
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     call $~lib/array/Array<u32>#toString
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     local.get $0
     local.get $1
     call $~lib/string/String.__concat
     local.tee $0
     i32.store offset=4
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  i32.const 32672
  i32.const 32720
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $start:std/array
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i64)
  (local $6 f64)
  (local $7 f32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 172
  i32.sub
  global.set $~lib/memory/__stack_pointer
  block $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 172
   memory.fill
   memory.size
   i32.const 16
   i32.shl
   i32.const 32652
   i32.sub
   i32.const 1
   i32.shr_u
   global.set $~lib/rt/itcms/threshold
   i32.const 1268
   i32.const 1264
   i32.store
   i32.const 1272
   i32.const 1264
   i32.store
   i32.const 1264
   global.set $~lib/rt/itcms/pinSpace
   i32.const 1300
   i32.const 1296
   i32.store
   i32.const 1304
   i32.const 1296
   i32.store
   i32.const 1296
   global.set $~lib/rt/itcms/toSpace
   i32.const 1444
   i32.const 1440
   i32.store
   i32.const 1448
   i32.const 1440
   i32.store
   i32.const 1440
   global.set $~lib/rt/itcms/fromSpace
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   global.set $std/array/arr
   i32.const 0
   call $std/array/Ref#constructor
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 12
   i32.const 5
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   local.get $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.const 2
    call $~lib/rt/itcms/__new
    local.tee $0
    i32.store
   end
   local.get $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $9
   i32.store offset=4
   local.get $0
   local.get $9
   i32.store
   local.get $9
   if
    local.get $0
    local.get $9
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $0
   local.get $9
   i32.store offset=4
   local.get $0
   i32.const 1
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 1664
   i32.store
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 53
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 1696
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=4
   local.get $0
   i32.load offset=4
   local.set $8
   i32.const 1
   local.get $0
   i32.load offset=12
   local.tee $9
   local.get $9
   i32.const 1
   i32.gt_s
   select
   local.tee $10
   i32.const 3
   local.get $9
   local.get $9
   i32.const 3
   i32.gt_s
   select
   local.tee $9
   i32.lt_s
   if
    local.get $8
    local.get $10
    i32.add
    i32.const 1
    local.get $9
    local.get $10
    i32.sub
    memory.fill
   end
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 1728
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<u8>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 61
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load offset=4
   local.set $8
   i32.const 0
   local.get $0
   i32.load offset=12
   local.tee $9
   local.get $9
   i32.const 0
   i32.gt_s
   select
   local.tee $10
   local.get $9
   i32.lt_s
   if
    local.get $8
    local.get $10
    i32.add
    i32.const 0
    local.get $9
    local.get $10
    i32.sub
    memory.fill
   end
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 1760
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<u8>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 64
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load offset=4
   local.set $8
   i32.const 0
   local.get $0
   i32.load offset=12
   local.tee $9
   local.get $9
   i32.const 0
   i32.gt_s
   select
   local.tee $10
   local.get $9
   i32.const 3
   i32.sub
   local.tee $9
   i32.lt_s
   if
    local.get $8
    local.get $10
    i32.add
    i32.const 1
    local.get $9
    local.get $10
    i32.sub
    memory.fill
   end
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 1792
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<u8>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 67
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load offset=4
   local.set $8
   local.get $0
   i32.load offset=12
   local.tee $9
   i32.const 2
   i32.sub
   local.set $10
   local.get $9
   local.get $10
   i32.gt_s
   if
    local.get $8
    local.get $10
    i32.add
    i32.const 2
    local.get $9
    local.get $10
    i32.sub
    memory.fill
   end
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 1824
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<u8>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 70
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load offset=4
   local.set $8
   i32.const 1
   local.get $0
   i32.load offset=12
   local.tee $9
   local.get $9
   i32.const 1
   i32.gt_s
   select
   local.tee $10
   i32.const 0
   local.get $9
   local.get $9
   i32.const 0
   i32.gt_s
   select
   local.tee $9
   i32.lt_s
   if
    local.get $8
    local.get $10
    i32.add
    i32.const 0
    local.get $9
    local.get $10
    i32.sub
    memory.fill
   end
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 1856
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<u8>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 73
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load offset=4
   local.set $8
   i32.const 0
   local.get $0
   i32.load offset=12
   local.tee $9
   local.get $9
   i32.const 0
   i32.gt_s
   select
   local.tee $10
   local.get $9
   i32.lt_s
   if
    local.get $8
    local.get $10
    i32.add
    i32.const -1
    local.get $9
    local.get $10
    i32.sub
    memory.fill
   end
   i32.const 5
   i32.const 0
   i32.const 6
   i32.const 1888
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<u8>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 76
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 1920
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=12
   local.get $0
   i32.const 1
   i32.const 1
   i32.const 3
   call $~lib/array/Array<u32>#fill
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 1968
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<u32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 83
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 0
   i32.const 0
   i32.const 2147483647
   call $~lib/array/Array<u32>#fill
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 2016
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<u32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 86
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 1
   i32.const 0
   i32.const -3
   call $~lib/array/Array<u32>#fill
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 2064
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<u32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 89
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 2
   i32.const -2
   i32.const 2147483647
   call $~lib/array/Array<u32>#fill
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 2112
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<u32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 92
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 0
   i32.const 1
   i32.const 0
   call $~lib/array/Array<u32>#fill
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 2160
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<u32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 95
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const -1
   i32.const 0
   i32.const 2147483647
   call $~lib/array/Array<u32>#fill
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 2208
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<u32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 98
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 2256
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=4
   local.get $0
   f32.const 1
   i32.const 1
   i32.const 3
   call $~lib/array/Array<f32>#fill
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 2304
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 105
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   f32.const 0
   i32.const 0
   i32.const 2147483647
   call $~lib/array/Array<f32>#fill
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 2352
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 108
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   f32.const 1
   i32.const 0
   i32.const -3
   call $~lib/array/Array<f32>#fill
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 2400
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 111
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   f32.const 2
   i32.const -2
   i32.const 2147483647
   call $~lib/array/Array<f32>#fill
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 2448
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 114
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   f32.const 0
   i32.const 1
   i32.const 0
   call $~lib/array/Array<f32>#fill
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 2496
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 117
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   f32.const -1
   i32.const 0
   i32.const 2147483647
   call $~lib/array/Array<f32>#fill
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 2544
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 120
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   f32.const -0
   i32.const 0
   i32.const 2147483647
   call $~lib/array/Array<f32>#fill
   i32.const 5
   i32.const 2
   i32.const 8
   i32.const 2592
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 123
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   if
    i32.const 0
    i32.const 1552
    i32.const 129
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 130
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 42
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 134
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 135
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 136
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 140
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   if
    i32.const 0
    i32.const 1552
    i32.const 141
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 142
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 43
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 146
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 147
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 148
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 44
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 152
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 153
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 154
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 155
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 45
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 159
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 160
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 161
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 162
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 45
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 163
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 2
   i32.const 2
   i32.const 9
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $8
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.load offset=4
   i32.store offset=16
   local.get $8
   i32.const 0
   i32.const 0
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $8
   i32.const 1
   i32.const 0
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $0
   local.get $8
   i32.store offset=16
   local.get $8
   i32.const 0
   i32.const 0
   call $~lib/array/ensureCapacity
   local.get $8
   i32.const 0
   i32.store offset=12
   local.get $8
   i32.load offset=12
   if
    i32.const 0
    i32.const 1552
    i32.const 171
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 2688
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=4
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#at
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 179
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#at
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 180
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const -1
   call $~lib/array/Array<i32>#at
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 181
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const -4
   call $~lib/array/Array<i32>#at
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 182
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   call $~lib/array/Array<i32>#constructor
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $8
   i32.store
   global.get $~lib/memory/__stack_pointer
   local.get $8
   local.get $0
   call $~lib/array/Array<i32>#concat
   local.tee $8
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $9
   i32.store
   local.get $9
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 191
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $9
   i32.store
   local.get $9
   i32.load offset=12
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 192
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $8
   i32.load offset=12
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 193
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 2736
   call $~lib/rt/__newArray
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $8
   local.get $9
   call $~lib/array/Array<i32>#concat
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $9
   i32.store
   local.get $9
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 196
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $8
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 198
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $8
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 199
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $8
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 45
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 200
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 46
   call $~lib/array/Array<i32>#push
   local.get $0
   i32.const 47
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   global.get $std/array/arr
   local.tee $9
   i32.store
   local.get $8
   local.get $9
   local.get $0
   call $~lib/array/Array<i32>#concat
   local.tee $8
   i32.store offset=16
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $9
   i32.store
   local.get $9
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 207
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load offset=12
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 208
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $8
   i32.load offset=12
   i32.const 5
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 209
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $8
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 210
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $8
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 211
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $8
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 45
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 212
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $8
   i32.const 3
   call $~lib/array/Array<i32>#__get
   i32.const 46
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 213
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $8
   i32.const 4
   call $~lib/array/Array<i32>#__get
   i32.const 47
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 214
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $8
   call $~lib/array/Array<i32>#pop
   drop
   local.get $8
   i32.load offset=12
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 217
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 2768
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=12
   local.get $0
   i32.load offset=12
   if
    i32.const 0
    i32.const 1552
    i32.const 225
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   global.get $std/array/arr
   local.tee $9
   i32.store offset=8
   local.get $8
   local.get $0
   local.get $9
   call $~lib/array/Array<i32>#concat
   local.tee $8
   i32.store offset=16
   local.get $8
   i32.load offset=12
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 227
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load offset=12
   if
    i32.const 0
    i32.const 1552
    i32.const 228
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2800
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.const 3
   i32.const 2147483647
   call $~lib/array/Array<i32>#copyWithin
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2848
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 235
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2896
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.const 1
   i32.const 3
   i32.const 2147483647
   call $~lib/array/Array<i32>#copyWithin
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2944
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 237
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 2992
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.const 1
   i32.const 2
   i32.const 2147483647
   call $~lib/array/Array<i32>#copyWithin
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3040
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 239
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3088
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.const 2
   i32.const 2
   i32.const 2147483647
   call $~lib/array/Array<i32>#copyWithin
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3136
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 241
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3184
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.const 3
   i32.const 4
   call $~lib/array/Array<i32>#copyWithin
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3232
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 243
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3280
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.const 1
   i32.const 3
   i32.const 4
   call $~lib/array/Array<i32>#copyWithin
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3328
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 245
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3376
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.const 1
   i32.const 2
   i32.const 4
   call $~lib/array/Array<i32>#copyWithin
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3424
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 247
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3472
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.const -2
   i32.const 2147483647
   call $~lib/array/Array<i32>#copyWithin
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3520
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 249
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3568
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.const -2
   i32.const -1
   call $~lib/array/Array<i32>#copyWithin
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3616
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 251
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3664
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.const -4
   i32.const -3
   i32.const -2
   call $~lib/array/Array<i32>#copyWithin
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3712
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 253
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3760
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.const -4
   i32.const -3
   i32.const -1
   call $~lib/array/Array<i32>#copyWithin
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3808
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 255
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3856
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.const -4
   i32.const -3
   i32.const 2147483647
   call $~lib/array/Array<i32>#copyWithin
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3904
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store offset=8
   local.get $0
   local.get $8
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 257
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 42
   call $~lib/array/Array<i32>#unshift
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 265
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 266
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 267
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 268
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 269
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#__get
   i32.const 45
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 270
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 41
   call $~lib/array/Array<i32>#unshift
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 5
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 274
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 275
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 41
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 276
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 277
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 278
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 279
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 4
   call $~lib/array/Array<i32>#__get
   i32.const 45
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 280
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   local.tee $8
   i32.const 0
   i32.le_s
   if
    i32.const 2640
    i32.const 1104
    i32.const 334
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load offset=4
   local.tee $9
   i32.load
   local.get $9
   local.get $9
   i32.const 4
   i32.add
   local.get $8
   i32.const 1
   i32.sub
   local.tee $8
   i32.const 2
   i32.shl
   local.tee $11
   memory.copy
   local.get $9
   local.get $11
   i32.add
   i32.const 0
   i32.store
   local.get $0
   local.get $8
   i32.store offset=12
   global.set $std/array/i
   global.get $std/array/i
   i32.const 41
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 289
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 290
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 291
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 292
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 293
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 294
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#__get
   i32.const 45
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 295
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   global.set $std/array/i
   global.get $std/array/i
   i32.const 45
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 299
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 300
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 301
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 302
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 303
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 304
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 3952
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 2
   i32.const 2147483647
   call $~lib/array/Array<i32>#slice
   local.tee $8
   i32.store offset=16
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 4000
   call $~lib/rt/__newArray
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $8
   local.get $9
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 314
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 2
   i32.const 4
   call $~lib/array/Array<i32>#slice
   local.tee $8
   i32.store offset=16
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 4032
   call $~lib/rt/__newArray
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $8
   local.get $9
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 317
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 1
   i32.const 5
   call $~lib/array/Array<i32>#slice
   local.tee $8
   i32.store offset=16
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 4064
   call $~lib/rt/__newArray
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $8
   local.get $9
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 320
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 0
   i32.const 2147483647
   call $~lib/array/Array<i32>#slice
   local.tee $8
   i32.store offset=16
   local.get $8
   local.get $0
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 323
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const -2
   i32.const 2147483647
   call $~lib/array/Array<i32>#slice
   local.tee $8
   i32.store offset=16
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 4112
   call $~lib/rt/__newArray
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $8
   local.get $9
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 326
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 2
   i32.const -1
   call $~lib/array/Array<i32>#slice
   local.tee $8
   i32.store offset=16
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 4144
   call $~lib/rt/__newArray
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $8
   local.get $9
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 329
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const -3
   i32.const -1
   call $~lib/array/Array<i32>#slice
   local.tee $8
   i32.store offset=16
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 4176
   call $~lib/rt/__newArray
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $8
   local.get $9
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 332
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const -1
   i32.const -3
   call $~lib/array/Array<i32>#slice
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   i32.load offset=12
   if
    i32.const 0
    i32.const 1552
    i32.const 334
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 10
   i32.const 2147483647
   call $~lib/array/Array<i32>#slice
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=12
   if
    i32.const 0
    i32.const 1552
    i32.const 335
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=4
   local.set $8
   local.get $0
   i32.load offset=12
   local.tee $9
   i32.const 1
   i32.gt_u
   if
    i32.const 0
    local.set $0
    local.get $9
    i32.const 1
    i32.shr_u
    local.set $10
    local.get $9
    i32.const 1
    i32.sub
    local.set $9
    loop $while-continue|0
     local.get $0
     local.get $10
     i32.lt_u
     if
      local.get $8
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      local.tee $11
      i32.load
      local.set $12
      local.get $11
      local.get $8
      local.get $9
      local.get $0
      i32.sub
      i32.const 2
      i32.shl
      i32.add
      local.tee $11
      i32.load
      i32.store
      local.get $11
      local.get $12
      i32.store
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|0
     end
    end
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 343
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 344
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 345
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 43
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 346
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 347
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 43
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 44
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 0
   i32.const 6
   i32.const 4208
   call $~lib/rt/__newArray
   local.set $8
   global.get $~lib/memory/__stack_pointer
   local.get $8
   i32.store
   local.get $8
   call $~lib/array/Array<u8>#reverse
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.load offset=12
   local.set $8
   loop $for-loop|0
    local.get $1
    local.get $8
    i32.lt_s
    if
     local.get $0
     local.get $1
     call $~lib/array/Array<u8>#__get
     local.get $0
     i32.load offset=12
     local.get $1
     i32.sub
     i32.const 1
     i32.sub
     i32.ne
     if
      i32.const 0
      i32.const 1552
      i32.const 354
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 0
   i32.const 6
   i32.const 4240
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/array/Array<u8>#reverse
   local.tee $1
   i32.store offset=12
   i32.const 0
   local.set $0
   local.get $1
   i32.load offset=12
   local.set $8
   loop $for-loop|1
    local.get $0
    local.get $8
    i32.lt_s
    if
     local.get $1
     local.get $0
     call $~lib/array/Array<u8>#__get
     local.get $1
     i32.load offset=12
     local.get $0
     i32.sub
     i32.const 1
     i32.sub
     i32.ne
     if
      i32.const 0
      i32.const 1552
      i32.const 359
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|1
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 17
   i32.const 0
   i32.const 6
   i32.const 4272
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/array/Array<u8>#reverse
   local.tee $0
   i32.store offset=4
   local.get $0
   i32.load offset=12
   local.set $1
   loop $for-loop|2
    local.get $1
    local.get $3
    i32.gt_s
    if
     local.get $0
     local.get $3
     call $~lib/array/Array<u8>#__get
     local.get $0
     i32.load offset=12
     local.get $3
     i32.sub
     i32.const 1
     i32.sub
     i32.ne
     if
      i32.const 0
      i32.const 1552
      i32.const 364
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|2
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 7
   i32.const 1
   i32.const 10
   i32.const 4320
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/array/Array<u16>#reverse
   local.tee $1
   i32.store offset=20
   i32.const 0
   local.set $0
   local.get $1
   i32.load offset=12
   local.set $3
   loop $for-loop|3
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $1
     local.get $0
     call $~lib/array/Array<u16>#__get
     local.get $1
     i32.load offset=12
     local.get $0
     i32.sub
     i32.const 1
     i32.sub
     i32.ne
     if
      i32.const 0
      i32.const 1552
      i32.const 369
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|3
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 1
   i32.const 10
   i32.const 4368
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/array/Array<u16>#reverse
   local.tee $0
   i32.store offset=24
   i32.const 0
   local.set $1
   local.get $0
   i32.load offset=12
   local.set $3
   loop $for-loop|4
    local.get $1
    local.get $3
    i32.lt_s
    if
     local.get $0
     local.get $1
     call $~lib/array/Array<u16>#__get
     local.get $0
     i32.load offset=12
     local.get $1
     i32.sub
     i32.const 1
     i32.sub
     i32.ne
     if
      i32.const 0
      i32.const 1552
      i32.const 374
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|4
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 9
   i32.const 1
   i32.const 10
   i32.const 4416
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   local.get $1
   call $~lib/array/Array<u16>#reverse
   local.tee $0
   i32.store offset=28
   i32.const 0
   local.set $3
   local.get $0
   i32.load offset=12
   local.set $1
   loop $for-loop|5
    local.get $1
    local.get $3
    i32.gt_s
    if
     local.get $0
     local.get $3
     call $~lib/array/Array<u16>#__get
     local.get $0
     i32.load offset=12
     local.get $3
     i32.sub
     i32.const 1
     i32.sub
     i32.ne
     if
      i32.const 0
      i32.const 1552
      i32.const 379
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|5
    end
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   i32.const 0
   local.set $0
   i32.const -1
   local.set $1
   block $__inlined_func$~lib/array/Array<i32>#indexOf
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 0
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|014
     local.get $0
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $0
      local.tee $1
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 44
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf
      local.get $1
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|014
     end
    end
    i32.const -1
    local.set $1
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   if
    i32.const 0
    i32.const 1552
    i32.const 387
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   i32.const 0
   local.set $0
   i32.const -1
   local.set $1
   block $__inlined_func$~lib/array/Array<i32>#indexOf36
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 0
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf36
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|038
     local.get $0
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $0
      local.tee $1
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 42
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf36
      local.get $1
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|038
     end
    end
    i32.const -1
    local.set $1
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 390
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   i32.const 0
   local.set $0
   i32.const -1
   local.set $1
   block $__inlined_func$~lib/array/Array<i32>#indexOf39
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 0
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf39
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|041
     local.get $0
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $0
      local.tee $1
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 45
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf39
      local.get $1
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|041
     end
    end
    i32.const -1
    local.set $1
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 393
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   i32.const 100
   local.set $0
   i32.const -1
   local.set $1
   block $__inlined_func$~lib/array/Array<i32>#indexOf42
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 100
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf42
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|044
     local.get $0
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $0
      local.tee $1
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 43
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf42
      local.get $1
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|044
     end
    end
    i32.const -1
    local.set $1
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 396
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#indexOf45
    local.get $1
    i32.load offset=12
    local.tee $3
    i32.const -100
    i32.le_s
    i32.const 1
    local.get $3
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf45
    local.get $3
    i32.const 100
    i32.sub
    local.tee $0
    i32.const 0
    local.get $0
    i32.const 0
    i32.gt_s
    select
    local.set $0
    local.get $1
    i32.load offset=4
    local.set $1
    loop $while-continue|047
     local.get $0
     local.get $3
     i32.lt_s
     if
      local.get $1
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 43
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf45
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|047
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   global.set $std/array/i
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 399
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#indexOf48
    local.get $1
    i32.load offset=12
    local.tee $3
    i32.const -2
    i32.le_s
    i32.const 1
    local.get $3
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf48
    local.get $3
    i32.const 2
    i32.sub
    local.tee $0
    i32.const 0
    local.get $0
    i32.const 0
    i32.gt_s
    select
    local.set $0
    local.get $1
    i32.load offset=4
    local.set $1
    loop $while-continue|050
     local.get $0
     local.get $3
     i32.lt_s
     if
      local.get $1
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 43
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf48
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|050
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   global.set $std/array/i
   global.get $std/array/i
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 402
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#indexOf51
    local.get $1
    i32.load offset=12
    local.tee $3
    i32.const -4
    i32.le_s
    i32.const 1
    local.get $3
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf51
    local.get $3
    i32.const 4
    i32.sub
    local.tee $0
    i32.const 0
    local.get $0
    i32.const 0
    i32.gt_s
    select
    local.set $0
    local.get $1
    i32.load offset=4
    local.set $1
    loop $while-continue|053
     local.get $0
     local.get $3
     i32.lt_s
     if
      local.get $1
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 43
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf51
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|053
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   global.set $std/array/i
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 405
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   i32.const 0
   local.set $0
   i32.const -1
   local.set $1
   block $__inlined_func$~lib/array/Array<i32>#indexOf54
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 0
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf54
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|056
     local.get $0
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $0
      local.tee $1
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 43
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf54
      local.get $1
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|056
     end
    end
    i32.const -1
    local.set $1
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 408
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   i32.const 1
   local.set $0
   i32.const -1
   local.set $1
   block $__inlined_func$~lib/array/Array<i32>#indexOf57
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 1
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf57
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|059
     local.get $0
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $0
      local.tee $1
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 43
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf57
      local.get $1
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|059
     end
    end
    i32.const -1
    local.set $1
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 411
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   i32.const 2
   local.set $0
   i32.const -1
   local.set $1
   block $__inlined_func$~lib/array/Array<i32>#indexOf60
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 2
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf60
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|062
     local.get $0
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $0
      local.tee $1
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 43
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf60
      local.get $1
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|062
     end
    end
    i32.const -1
    local.set $1
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 414
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 1
   i32.const 2
   i32.const 8
   i32.const 4464
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   i32.const 0
   local.set $0
   i32.const -1
   local.set $1
   block $__inlined_func$~lib/array/Array<f32>#indexOf
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 0
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<f32>#indexOf
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|064
     local.get $0
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $0
      local.tee $1
      i32.const 2
      i32.shl
      i32.add
      f32.load
      f32.const nan:0x400000
      f32.eq
      br_if $__inlined_func$~lib/array/Array<f32>#indexOf
      local.get $1
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|064
     end
    end
    i32.const -1
    local.set $1
   end
   local.get $1
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 416
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 1
   i32.const 3
   i32.const 11
   i32.const 4496
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store
   i32.const 0
   local.set $0
   i32.const -1
   local.set $1
   block $__inlined_func$~lib/array/Array<f64>#indexOf
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 0
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<f64>#indexOf
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|066
     local.get $0
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $0
      local.tee $1
      i32.const 3
      i32.shl
      i32.add
      f64.load
      f64.const nan:0x8000000000000
      f64.eq
      br_if $__inlined_func$~lib/array/Array<f64>#indexOf
      local.get $1
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|066
     end
    end
    i32.const -1
    local.set $1
   end
   local.get $1
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 417
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 4528
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=24
   i32.const 1
   global.set $~argumentsLength
   i32.const -1
   local.set $3
   block $__inlined_func$~lib/array/Array<i32>#lastIndexOf
    local.get $1
    i32.load offset=12
    local.tee $0
    i32.eqz
    br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf
    local.get $0
    local.get $0
    i32.add
    local.get $0
    i32.const 1
    i32.sub
    local.get $0
    i32.const 0
    i32.lt_s
    select
    local.set $0
    local.get $1
    i32.load offset=4
    local.set $8
    loop $while-continue|06
     local.get $0
     i32.const 0
     i32.ge_s
     if
      local.get $8
      local.get $0
      local.tee $3
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 2
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf
      local.get $3
      i32.const 1
      i32.sub
      local.set $0
      br $while-continue|06
     end
    end
    i32.const -1
    local.set $3
   end
   local.get $3
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 424
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 1
   global.set $~argumentsLength
   i32.const -1
   local.set $3
   block $__inlined_func$~lib/array/Array<i32>#lastIndexOf11
    local.get $1
    i32.load offset=12
    local.tee $0
    i32.eqz
    br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf11
    local.get $0
    local.get $0
    i32.add
    local.get $0
    i32.const 1
    i32.sub
    local.get $0
    i32.const 0
    i32.lt_s
    select
    local.set $0
    local.get $1
    i32.load offset=4
    local.set $8
    loop $while-continue|012
     local.get $0
     i32.const 0
     i32.ge_s
     if
      local.get $8
      local.get $0
      local.tee $3
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 7
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf11
      local.get $3
      i32.const 1
      i32.sub
      local.set $0
      br $while-continue|012
     end
    end
    i32.const -1
    local.set $3
   end
   local.get $3
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 425
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#lastIndexOf13
    local.get $1
    i32.load offset=12
    local.tee $3
    i32.eqz
    br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf13
    local.get $3
    i32.const 1
    i32.sub
    i32.const 3
    local.get $3
    i32.const 3
    i32.le_s
    select
    local.set $0
    local.get $1
    i32.load offset=4
    local.set $3
    loop $while-continue|068
     local.get $0
     i32.const 0
     i32.ge_s
     if
      local.get $3
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 2
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf13
      local.get $0
      i32.const 1
      i32.sub
      local.set $0
      br $while-continue|068
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 426
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#lastIndexOf69
    local.get $1
    i32.load offset=12
    local.tee $3
    i32.eqz
    br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf69
    local.get $3
    i32.const 1
    i32.sub
    i32.const 2
    local.get $3
    i32.const 2
    i32.le_s
    select
    local.set $0
    local.get $1
    i32.load offset=4
    local.set $3
    loop $while-continue|071
     local.get $0
     i32.const 0
     i32.ge_s
     if
      local.get $3
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 2
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf69
      local.get $0
      i32.const 1
      i32.sub
      local.set $0
      br $while-continue|071
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   if
    i32.const 0
    i32.const 1552
    i32.const 427
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#lastIndexOf72
    local.get $1
    i32.load offset=12
    local.tee $3
    i32.eqz
    br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf72
    local.get $3
    i32.const 2
    i32.sub
    local.set $0
    local.get $1
    i32.load offset=4
    local.set $3
    loop $while-continue|074
     local.get $0
     i32.const 0
     i32.ge_s
     if
      local.get $3
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 2
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf72
      local.get $0
      i32.const 1
      i32.sub
      local.set $0
      br $while-continue|074
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   if
    i32.const 0
    i32.const 1552
    i32.const 428
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#lastIndexOf75
    local.get $1
    i32.load offset=12
    local.tee $3
    i32.eqz
    br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf75
    local.get $3
    i32.const 1
    i32.sub
    local.set $0
    local.get $1
    i32.load offset=4
    local.set $1
    loop $while-continue|077
     local.get $0
     i32.const 0
     i32.ge_s
     if
      local.get $1
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 2
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#lastIndexOf75
      local.get $0
      i32.const 1
      i32.sub
      local.set $0
      br $while-continue|077
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 429
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   i32.const 0
   local.set $1
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#indexOf14
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 0
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf14
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|015
     local.get $1
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $1
      local.tee $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 44
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf14
      local.get $0
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|015
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   i32.const 0
   i32.lt_s
   if
    i32.const 0
    i32.const 1552
    i32.const 437
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   i32.const 0
   local.set $1
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#indexOf17
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 0
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf17
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|018
     local.get $1
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $1
      local.tee $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 42
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf17
      local.get $0
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|018
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   i32.const 0
   i32.lt_s
   if
    i32.const 0
    i32.const 1552
    i32.const 440
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   i32.const 0
   local.set $1
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#indexOf20
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 0
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf20
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|021
     local.get $1
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $1
      local.tee $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 45
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf20
      local.get $0
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|021
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   i32.const 0
   i32.ge_s
   if
    i32.const 0
    i32.const 1552
    i32.const 443
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   i32.const 100
   local.set $1
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#indexOf23
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 100
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf23
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|024
     local.get $1
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $1
      local.tee $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 43
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf23
      local.get $0
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|024
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   i32.const 0
   i32.ge_s
   if
    i32.const 0
    i32.const 1552
    i32.const 446
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#indexOf26
    local.get $1
    i32.load offset=12
    local.tee $3
    i32.const -100
    i32.le_s
    i32.const 1
    local.get $3
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf26
    local.get $3
    i32.const 100
    i32.sub
    local.tee $0
    i32.const 0
    local.get $0
    i32.const 0
    i32.gt_s
    select
    local.set $0
    local.get $1
    i32.load offset=4
    local.set $1
    loop $while-continue|027
     local.get $0
     local.get $3
     i32.lt_s
     if
      local.get $1
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 43
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf26
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|027
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   i32.const 0
   i32.lt_s
   if
    i32.const 0
    i32.const 1552
    i32.const 449
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#indexOf29
    local.get $1
    i32.load offset=12
    local.tee $3
    i32.const -2
    i32.le_s
    i32.const 1
    local.get $3
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf29
    local.get $3
    i32.const 2
    i32.sub
    local.tee $0
    i32.const 0
    local.get $0
    i32.const 0
    i32.gt_s
    select
    local.set $0
    local.get $1
    i32.load offset=4
    local.set $1
    loop $while-continue|030
     local.get $0
     local.get $3
     i32.lt_s
     if
      local.get $1
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 43
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf29
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|030
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   i32.const 0
   i32.lt_s
   if
    i32.const 0
    i32.const 1552
    i32.const 452
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#indexOf32
    local.get $1
    i32.load offset=12
    local.tee $3
    i32.const -4
    i32.le_s
    i32.const 1
    local.get $3
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf32
    local.get $3
    i32.const 4
    i32.sub
    local.tee $0
    i32.const 0
    local.get $0
    i32.const 0
    i32.gt_s
    select
    local.set $0
    local.get $1
    i32.load offset=4
    local.set $1
    loop $while-continue|033
     local.get $0
     local.get $3
     i32.lt_s
     if
      local.get $1
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 43
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf32
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|033
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   i32.const 0
   i32.lt_s
   if
    i32.const 0
    i32.const 1552
    i32.const 455
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   i32.const 0
   local.set $1
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#indexOf35
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 0
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf35
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|036
     local.get $1
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $1
      local.tee $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 43
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf35
      local.get $0
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|036
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   i32.const 0
   i32.lt_s
   if
    i32.const 0
    i32.const 1552
    i32.const 458
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   i32.const 1
   local.set $1
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#indexOf38
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 1
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf38
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|039
     local.get $1
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $1
      local.tee $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 43
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf38
      local.get $0
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|039
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   i32.const 0
   i32.lt_s
   if
    i32.const 0
    i32.const 1552
    i32.const 461
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   i32.const 2
   local.set $1
   i32.const -1
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#indexOf41
    local.get $3
    i32.load offset=12
    local.tee $8
    i32.const 2
    i32.le_s
    i32.const 1
    local.get $8
    select
    br_if $__inlined_func$~lib/array/Array<i32>#indexOf41
    local.get $3
    i32.load offset=4
    local.set $3
    loop $while-continue|042
     local.get $1
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $1
      local.tee $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 43
      i32.eq
      br_if $__inlined_func$~lib/array/Array<i32>#indexOf41
      local.get $0
      i32.const 1
      i32.add
      local.set $1
      br $while-continue|042
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   i32.const 0
   i32.lt_s
   if
    i32.const 0
    i32.const 1552
    i32.const 464
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~lib/array/Array<f32>#includes (result i32)
    i32.const 1
    i32.const 2
    i32.const 8
    i32.const 4576
    call $~lib/rt/__newArray
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    i32.const 0
    local.set $0
    i32.const 0
    local.get $1
    i32.load offset=12
    local.tee $3
    i32.const 0
    i32.le_s
    i32.const 1
    local.get $3
    select
    br_if $__inlined_func$~lib/array/Array<f32>#includes
    drop
    local.get $1
    i32.load offset=4
    local.set $1
    loop $while-continue|079
     local.get $0
     local.get $3
     i32.lt_s
     if
      i32.const 1
      local.get $1
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      f32.load
      local.tee $7
      f32.const nan:0x400000
      f32.eq
      local.get $7
      local.get $7
      f32.ne
      i32.or
      br_if $__inlined_func$~lib/array/Array<f32>#includes
      drop
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|079
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 466
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~lib/array/Array<f64>#includes (result i32)
    i32.const 1
    i32.const 3
    i32.const 11
    i32.const 4608
    call $~lib/rt/__newArray
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store
    i32.const 0
    local.set $0
    i32.const 0
    local.get $1
    i32.load offset=12
    local.tee $3
    i32.const 0
    i32.le_s
    i32.const 1
    local.get $3
    select
    br_if $__inlined_func$~lib/array/Array<f64>#includes
    drop
    local.get $1
    i32.load offset=4
    local.set $1
    loop $while-continue|081
     local.get $0
     local.get $3
     i32.lt_s
     if
      i32.const 1
      local.get $1
      local.get $0
      i32.const 3
      i32.shl
      i32.add
      f64.load
      local.tee $6
      f64.const nan:0x8000000000000
      f64.eq
      local.get $6
      local.get $6
      f64.ne
      i32.or
      br_if $__inlined_func$~lib/array/Array<f64>#includes
      drop
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $while-continue|081
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 467
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 1
   i32.const 1
   call $~lib/array/Array<i32>#splice
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 471
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $std/array/internalCapacity<i32>
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 472
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 44
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 473
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 42
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 474
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4640
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=28
   local.get $0
   i32.const 0
   i32.const 2147483647
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4688
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 481
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 4736
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 482
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4768
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=28
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 4816
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 485
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4848
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 486
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 4896
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=28
   local.get $0
   i32.const 2
   i32.const 2147483647
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 4944
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 489
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 4976
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 490
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 5008
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=28
   local.get $0
   i32.const 2
   i32.const 2
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 5056
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 493
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 5088
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 494
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 5120
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=28
   local.get $0
   i32.const 0
   i32.const 1
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 5168
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 497
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 5200
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 498
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 5248
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=28
   local.get $0
   i32.const -1
   i32.const 2147483647
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 5296
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 501
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 5328
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 502
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 5376
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=28
   local.get $0
   i32.const -2
   i32.const 2147483647
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 5424
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 505
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 5456
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 506
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 5488
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=28
   local.get $0
   i32.const -2
   i32.const 1
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 5536
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 509
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 5568
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 510
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 5616
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=28
   local.get $0
   i32.const -7
   i32.const 1
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 5664
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 513
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 5696
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 514
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 5744
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=28
   local.get $0
   i32.const -2
   i32.const -1
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 5792
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 517
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 5824
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 518
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 5872
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=28
   local.get $0
   i32.const 1
   i32.const -2
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 5920
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 521
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 5952
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 522
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 6000
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=28
   local.get $0
   i32.const 4
   i32.const 0
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 6048
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 525
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 6080
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 526
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 6128
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=28
   local.get $0
   i32.const 7
   i32.const 0
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 6176
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 529
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 6208
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 530
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 6256
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=28
   local.get $0
   i32.const 7
   i32.const 5
   call $~lib/array/Array<i32>#splice
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 6304
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $1
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 533
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 6336
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 534
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 9
   i32.const 6384
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 1
   call $~lib/array/Array<std/array/Ref>#splice
   local.tee $1
   i32.store offset=20
   local.get $1
   i32.load offset=12
   if
    i32.const 0
    i32.const 1552
    i32.const 538
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load offset=12
   if
    i32.const 0
    i32.const 1552
    i32.const 539
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 5
   i32.const 2
   i32.const 9
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   i32.store offset=12
   local.get $1
   i32.const 0
   i32.const 1
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 1
   i32.const 2
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 2
   i32.const 3
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 3
   i32.const 4
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 4
   i32.const 5
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $0
   local.get $1
   i32.store offset=24
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 2
   call $~lib/array/Array<std/array/Ref>#splice
   local.tee $0
   i32.store offset=20
   local.get $0
   i32.load offset=12
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 544
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 0
   call $~lib/array/Array<std/array/Ref>#__get
   i32.load
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 545
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 1
   call $~lib/array/Array<std/array/Ref>#__get
   i32.load
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 546
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.load offset=12
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 548
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 0
   call $~lib/array/Array<std/array/Ref>#__get
   i32.load
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 549
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 1
   call $~lib/array/Array<std/array/Ref>#__get
   i32.load
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 550
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 2
   call $~lib/array/Array<std/array/Ref>#__get
   i32.load
   i32.const 5
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 551
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 3
   i32.const 2
   i32.const 12
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.const 1
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 1
   i32.const 0
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 2
   i32.const 2
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $0
   local.get $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i32.const 0
   i32.store
   i32.const 0
   local.get $1
   i32.load offset=12
   local.tee $8
   local.get $8
   i32.const 0
   i32.gt_s
   select
   local.set $9
   local.get $3
   i32.const 1
   local.get $8
   local.get $9
   i32.sub
   local.tee $3
   local.get $3
   i32.const 1
   i32.gt_s
   select
   local.tee $3
   i32.const 0
   local.get $3
   i32.const 0
   i32.gt_s
   select
   local.tee $3
   i32.const 2
   i32.const 12
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $10
   i32.store
   local.get $10
   i32.load offset=4
   local.get $1
   i32.load offset=4
   local.tee $11
   local.get $9
   i32.const 2
   i32.shl
   i32.add
   local.tee $12
   local.get $3
   i32.const 2
   i32.shl
   memory.copy
   local.get $3
   local.get $9
   i32.add
   local.tee $9
   local.get $8
   i32.ne
   if
    local.get $12
    local.get $11
    local.get $9
    i32.const 2
    i32.shl
    i32.add
    local.get $8
    local.get $9
    i32.sub
    i32.const 2
    i32.shl
    memory.copy
   end
   local.get $1
   local.get $8
   local.get $3
   i32.sub
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=12
   local.get $10
   i32.load offset=12
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 556
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $10
   i32.const 0
   call $~lib/array/Array<std/array/Ref|null>#__get
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.eqz
   if
    i32.const 6544
    i32.const 1552
    i32.const 557
    i32.const 10
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 557
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.load offset=12
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 559
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 0
   call $~lib/array/Array<std/array/Ref|null>#__get
   if
    i32.const 0
    i32.const 1552
    i32.const 560
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.const 1
   call $~lib/array/Array<std/array/Ref|null>#__get
   local.tee $0
   i32.store offset=16
   local.get $0
   i32.eqz
   if
    i32.const 6544
    i32.const 1552
    i32.const 561
    i32.const 10
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 561
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   i32.const 0
   call $~lib/array/Array<i32>#__set
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 1
   i32.const 1
   call $~lib/array/Array<i32>#__set
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   i32.const 2
   call $~lib/array/Array<i32>#__set
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 3
   i32.const 3
   call $~lib/array/Array<i32>#__set
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 6608
   i32.store offset=8
   i32.const 0
   local.set $0
   local.get $1
   i32.load offset=12
   local.set $3
   block $__inlined_func$~lib/array/Array<i32>#findIndex
    loop $for-loop|090
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 3
      global.set $~argumentsLength
      local.get $0
      local.get $1
      i32.const 6608
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#findIndex
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|090
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   global.set $std/array/i
   global.get $std/array/i
   if
    i32.const 0
    i32.const 1552
    i32.const 574
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store
   local.get $0
   i32.const 6640
   i32.store offset=8
   i32.const 0
   local.set $0
   local.get $1
   i32.load offset=12
   local.set $3
   block $__inlined_func$~lib/array/Array<i32>#findIndex92
    loop $for-loop|094
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 3
      global.set $~argumentsLength
      local.get $0
      local.get $1
      i32.const 6640
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#findIndex92
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|094
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   global.set $std/array/i
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 577
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store
   local.get $0
   i32.const 6672
   i32.store offset=8
   i32.const 0
   local.set $0
   local.get $1
   i32.load offset=12
   local.set $3
   block $__inlined_func$~lib/array/Array<i32>#findIndex96
    loop $for-loop|098
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 3
      global.set $~argumentsLength
      local.get $0
      local.get $1
      i32.const 6672
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#findIndex96
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|098
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 580
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store
   local.get $0
   i32.const 6704
   i32.store offset=8
   i32.const 0
   local.set $0
   local.get $1
   i32.load offset=12
   local.set $3
   block $__inlined_func$~lib/array/Array<i32>#findIndex100
    loop $for-loop|0102
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 3
      global.set $~argumentsLength
      local.get $0
      local.get $1
      i32.const 6704
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#findIndex100
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0102
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 588
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 589
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store
   local.get $0
   i32.const 6736
   i32.store offset=8
   i32.const 0
   local.set $0
   local.get $1
   i32.load offset=12
   local.set $3
   block $__inlined_func$~lib/array/Array<i32>#findIndex105
    loop $for-loop|0107
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 3
      global.set $~argumentsLength
      local.get $0
      local.get $1
      i32.const 6736
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#findIndex105
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0107
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.eq
   if
    i32.const 0
    i32.const 1552
    i32.const 591
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 6768
   i32.store offset=8
   i32.const 0
   local.set $0
   local.get $1
   i32.load offset=12
   local.set $3
   block $__inlined_func$~lib/array/Array<i32>#findIndex109
    loop $for-loop|0111
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 3
      global.set $~argumentsLength
      local.get $0
      local.get $1
      i32.const 6768
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#findIndex109
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0111
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 604
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 605
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 6800
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   i32.const 6848
   i32.store offset=8
   local.get $1
   i32.load offset=12
   i32.const 1
   i32.sub
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#findLastIndex
    loop $for-loop|0115
     local.get $0
     i32.const 0
     i32.ge_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 3
      global.set $~argumentsLength
      local.get $0
      local.get $1
      i32.const 6848
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#findLastIndex
      local.get $0
      i32.const 1
      i32.sub
      local.set $0
      br $for-loop|0115
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   global.set $std/array/i
   global.get $std/array/i
   if
    i32.const 0
    i32.const 1552
    i32.const 618
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 6880
   i32.store offset=8
   local.get $1
   i32.load offset=12
   i32.const 1
   i32.sub
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#findLastIndex117
    loop $for-loop|0119
     local.get $0
     i32.const 0
     i32.ge_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 3
      global.set $~argumentsLength
      local.get $0
      local.get $1
      i32.const 6880
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#findLastIndex117
      local.get $0
      i32.const 1
      i32.sub
      local.set $0
      br $for-loop|0119
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   global.set $std/array/i
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 621
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 6912
   i32.store offset=8
   local.get $1
   i32.load offset=12
   i32.const 1
   i32.sub
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#findLastIndex121
    loop $for-loop|0123
     local.get $0
     i32.const 0
     i32.ge_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 3
      global.set $~argumentsLength
      local.get $0
      local.get $1
      i32.const 6912
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#findLastIndex121
      local.get $0
      i32.const 1
      i32.sub
      local.set $0
      br $for-loop|0123
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 624
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 6944
   i32.store offset=8
   local.get $1
   i32.load offset=12
   i32.const 1
   i32.sub
   local.set $0
   block $__inlined_func$~lib/array/Array<i32>#findLastIndex125
    loop $for-loop|0127
     local.get $0
     i32.const 0
     i32.ge_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      i32.const 3
      global.set $~argumentsLength
      local.get $0
      local.get $1
      i32.const 6944
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#findLastIndex125
      local.get $0
      i32.const 1
      i32.sub
      local.set $0
      br $for-loop|0127
     end
    end
    i32.const -1
    local.set $0
   end
   local.get $0
   global.set $std/array/i
   global.get $std/array/i
   i32.const -1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 633
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~lib/array/Array<i32>#every (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    global.get $std/array/arr
    local.tee $1
    i32.store
    local.get $0
    i32.const 6976
    i32.store offset=8
    i32.const 0
    local.set $0
    local.get $1
    i32.load offset=12
    local.set $3
    loop $for-loop|0130
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $8
      i32.const 3
      global.set $~argumentsLength
      i32.const 0
      local.get $8
      local.get $0
      local.get $1
      i32.const 6976
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      i32.eqz
      br_if $__inlined_func$~lib/array/Array<i32>#every
      drop
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0130
     end
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 640
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~lib/array/Array<i32>#every132 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    global.get $std/array/arr
    local.tee $1
    i32.store
    local.get $0
    i32.const 7008
    i32.store offset=8
    i32.const 0
    local.set $0
    local.get $1
    i32.load offset=12
    local.set $3
    loop $for-loop|0134
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $8
      i32.const 3
      global.set $~argumentsLength
      i32.const 0
      local.get $8
      local.get $0
      local.get $1
      i32.const 7008
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      i32.eqz
      br_if $__inlined_func$~lib/array/Array<i32>#every132
      drop
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0134
     end
    end
    i32.const 1
   end
   if
    i32.const 0
    i32.const 1552
    i32.const 643
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~lib/array/Array<i32>#every136 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    global.get $std/array/arr
    local.tee $1
    i32.store
    local.get $0
    i32.const 7040
    i32.store offset=8
    i32.const 0
    local.set $0
    local.get $1
    i32.load offset=12
    local.set $3
    loop $for-loop|0138
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $8
      i32.const 3
      global.set $~argumentsLength
      i32.const 0
      local.get $8
      local.get $0
      local.get $1
      i32.const 7040
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      i32.eqz
      br_if $__inlined_func$~lib/array/Array<i32>#every136
      drop
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0138
     end
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 651
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 652
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~lib/array/Array<i32>#every141 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    global.get $std/array/arr
    local.tee $1
    i32.store
    local.get $0
    i32.const 7072
    i32.store offset=8
    i32.const 0
    local.set $0
    local.get $1
    i32.load offset=12
    local.set $3
    loop $for-loop|0143
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $8
      i32.const 3
      global.set $~argumentsLength
      i32.const 0
      local.get $8
      local.get $0
      local.get $1
      i32.const 7072
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      i32.eqz
      br_if $__inlined_func$~lib/array/Array<i32>#every141
      drop
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0143
     end
    end
    i32.const 1
   end
   if
    i32.const 0
    i32.const 1552
    i32.const 654
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   block $__inlined_func$~lib/array/Array<i32>#every145 (result i32)
    global.get $~lib/memory/__stack_pointer
    global.get $std/array/arr
    local.tee $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 7104
    i32.store offset=8
    i32.const 0
    local.set $0
    local.get $1
    i32.load offset=12
    local.set $3
    loop $for-loop|0147
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $8
      i32.const 3
      global.set $~argumentsLength
      i32.const 0
      local.get $8
      local.get $0
      local.get $1
      i32.const 7104
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      i32.eqz
      br_if $__inlined_func$~lib/array/Array<i32>#every145
      drop
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0147
     end
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 667
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 668
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   block $__inlined_func$~lib/array/Array<i32>#some (result i32)
    global.get $~lib/memory/__stack_pointer
    global.get $std/array/arr
    local.tee $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 7136
    i32.store offset=8
    i32.const 0
    local.set $0
    local.get $1
    i32.load offset=12
    local.set $3
    loop $for-loop|0151
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $8
      i32.const 3
      global.set $~argumentsLength
      i32.const 1
      local.get $8
      local.get $0
      local.get $1
      i32.const 7136
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#some
      drop
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0151
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 678
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~lib/array/Array<i32>#some153 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    global.get $std/array/arr
    local.tee $1
    i32.store
    local.get $0
    i32.const 7168
    i32.store offset=8
    i32.const 0
    local.set $0
    local.get $1
    i32.load offset=12
    local.set $3
    loop $for-loop|0155
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $8
      i32.const 3
      global.set $~argumentsLength
      i32.const 1
      local.get $8
      local.get $0
      local.get $1
      i32.const 7168
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#some153
      drop
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0155
     end
    end
    i32.const 0
   end
   if
    i32.const 0
    i32.const 1552
    i32.const 681
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~lib/array/Array<i32>#some157 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    global.get $std/array/arr
    local.tee $1
    i32.store
    local.get $0
    i32.const 7200
    i32.store offset=8
    i32.const 0
    local.set $0
    local.get $1
    i32.load offset=12
    local.set $3
    loop $for-loop|0159
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $8
      i32.const 3
      global.set $~argumentsLength
      i32.const 1
      local.get $8
      local.get $0
      local.get $1
      i32.const 7200
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#some157
      drop
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0159
     end
    end
    i32.const 0
   end
   if
    i32.const 0
    i32.const 1552
    i32.const 689
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 690
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   block $__inlined_func$~lib/array/Array<i32>#some162 (result i32)
    global.get $~lib/memory/__stack_pointer
    local.tee $0
    global.get $std/array/arr
    local.tee $1
    i32.store
    local.get $0
    i32.const 7232
    i32.store offset=8
    i32.const 0
    local.set $0
    local.get $1
    i32.load offset=12
    local.set $3
    loop $for-loop|0164
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $8
      i32.const 3
      global.set $~argumentsLength
      i32.const 1
      local.get $8
      local.get $0
      local.get $1
      i32.const 7232
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#some162
      drop
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0164
     end
    end
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 692
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   block $__inlined_func$~lib/array/Array<i32>#some166 (result i32)
    global.get $~lib/memory/__stack_pointer
    global.get $std/array/arr
    local.tee $1
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 7264
    i32.store offset=8
    i32.const 0
    local.set $0
    local.get $1
    i32.load offset=12
    local.set $3
    loop $for-loop|0168
     local.get $0
     local.get $3
     local.get $1
     i32.load offset=12
     local.tee $8
     local.get $3
     local.get $8
     i32.lt_s
     select
     i32.lt_s
     if
      local.get $1
      i32.load offset=4
      local.get $0
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $8
      i32.const 3
      global.set $~argumentsLength
      i32.const 1
      local.get $8
      local.get $0
      local.get $1
      i32.const 7264
      i32.load
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      br_if $__inlined_func$~lib/array/Array<i32>#some166
      drop
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|0168
     end
    end
    i32.const 0
   end
   if
    i32.const 0
    i32.const 1552
    i32.const 705
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 706
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 7296
   i32.store offset=8
   i32.const 0
   local.set $0
   local.get $1
   i32.load offset=12
   local.set $3
   loop $for-loop|0172
    local.get $0
    local.get $3
    local.get $1
    i32.load offset=12
    local.tee $8
    local.get $3
    local.get $8
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $1
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 3
     global.set $~argumentsLength
     local.get $0
     local.get $1
     i32.const 7296
     i32.load
     call_indirect $0 (type $i32_i32_i32_=>_none)
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0172
    end
   end
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 717
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store
   local.get $0
   i32.const 7328
   i32.store offset=8
   i32.const 0
   local.set $0
   local.get $1
   i32.load offset=12
   local.set $3
   loop $for-loop|0176
    local.get $0
    local.get $3
    local.get $1
    i32.load offset=12
    local.tee $8
    local.get $3
    local.get $8
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $1
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 3
     global.set $~argumentsLength
     local.get $0
     local.get $1
     i32.const 7328
     i32.load
     call_indirect $0 (type $i32_i32_i32_=>_none)
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0176
    end
   end
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 726
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 727
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store
   local.get $0
   i32.const 7360
   i32.store offset=8
   i32.const 0
   local.set $0
   local.get $1
   i32.load offset=12
   local.set $3
   loop $for-loop|0181
    local.get $0
    local.get $3
    local.get $1
    i32.load offset=12
    local.tee $8
    local.get $3
    local.get $8
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $1
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 3
     global.set $~argumentsLength
     local.get $0
     local.get $1
     i32.const 7360
     i32.load
     call_indirect $0 (type $i32_i32_i32_=>_none)
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0181
    end
   end
   global.get $std/array/i
   i32.const 406
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 730
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 7392
   i32.store offset=8
   i32.const 0
   local.set $0
   local.get $1
   i32.load offset=12
   local.set $3
   loop $for-loop|0185
    local.get $0
    local.get $3
    local.get $1
    i32.load offset=12
    local.tee $8
    local.get $3
    local.get $8
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $1
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 3
     global.set $~argumentsLength
     local.get $0
     local.get $1
     i32.const 7392
     i32.load
     call_indirect $0 (type $i32_i32_i32_=>_none)
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0185
    end
   end
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 744
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 745
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $1
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 7424
   i32.store offset=8
   i32.const 0
   local.set $0
   local.get $1
   i32.load offset=12
   local.set $3
   loop $for-loop|0190
    local.get $0
    local.get $3
    local.get $1
    i32.load offset=12
    local.tee $8
    local.get $3
    local.get $8
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $1
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 3
     global.set $~argumentsLength
     local.get $0
     local.get $1
     i32.const 7424
     i32.load
     call_indirect $0 (type $i32_i32_i32_=>_none)
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0190
    end
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 100
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 770
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   local.set $0
   loop $for-loop|6
    local.get $0
    i32.const 100
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     global.get $std/array/arr
     local.tee $1
     i32.store
     local.get $1
     call $~lib/array/Array<i32>#pop
     drop
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|6
    end
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 7456
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store
   local.get $0
   local.get $3
   i32.load offset=12
   local.tee $8
   i32.const 2
   i32.const 8
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $9
   i32.store
   local.get $9
   i32.load offset=4
   local.set $10
   i32.const 0
   local.set $0
   loop $for-loop|0194
    local.get $0
    local.get $8
    local.get $3
    i32.load offset=12
    local.tee $11
    local.get $8
    local.get $11
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $0
     i32.const 2
     i32.shl
     local.tee $11
     local.get $3
     i32.load offset=4
     i32.add
     i32.load
     local.set $12
     i32.const 3
     global.set $~argumentsLength
     local.get $10
     local.get $11
     i32.add
     local.get $12
     local.get $0
     local.get $3
     i32.const 7456
     i32.load
     call_indirect $0 (type $i32_i32_i32_=>_f32)
     f32.store
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0194
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=4
   local.get $9
   i32.load offset=12
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 784
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $9
   i32.const 0
   call $~lib/array/Array<f32>#__get
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   f32.convert_i32_s
   f32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 785
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store
   local.get $0
   i32.const 7488
   i32.store offset=8
   local.get $1
   i32.const 7488
   call $~lib/array/Array<i32>#map<i32>
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 794
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 795
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store
   local.get $0
   i32.const 7520
   i32.store offset=8
   local.get $1
   i32.const 7520
   call $~lib/array/Array<i32>#map<i32>
   global.get $std/array/i
   i32.const 406
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 802
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 7552
   i32.store offset=8
   local.get $0
   i32.const 7552
   call $~lib/array/Array<i32>#map<i32>
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 817
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 818
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 7584
   i32.store offset=8
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 7584
   call $~lib/array/Array<i32>#filter
   local.tee $0
   i32.store offset=4
   local.get $0
   i32.load offset=12
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 828
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store
   local.get $0
   i32.const 7616
   i32.store offset=8
   local.get $1
   i32.const 7616
   call $~lib/array/Array<i32>#filter
   drop
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 837
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 838
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $1
   i32.store
   local.get $0
   i32.const 7648
   i32.store offset=8
   local.get $1
   i32.const 7648
   call $~lib/array/Array<i32>#filter
   drop
   global.get $std/array/i
   i32.const 406
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 845
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   i32.const 0
   global.set $std/array/i
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 7680
   i32.store offset=8
   local.get $0
   i32.const 7680
   call $~lib/array/Array<i32>#filter
   drop
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 860
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 861
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 7712
   i32.store offset=8
   i32.const 0
   local.set $1
   i32.const 0
   local.set $0
   local.get $3
   i32.load offset=12
   local.set $8
   loop $for-loop|0203
    local.get $0
    local.get $8
    local.get $3
    i32.load offset=12
    local.tee $9
    local.get $8
    local.get $9
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $9
     i32.const 4
     global.set $~argumentsLength
     local.get $1
     local.get $9
     local.get $0
     local.get $3
     i32.const 7712
     i32.load
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     local.set $1
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0203
    end
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 871
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $3
   i32.store
   local.get $0
   i32.const 7744
   i32.store offset=8
   i32.const 4
   local.set $1
   i32.const 0
   local.set $0
   local.get $3
   i32.load offset=12
   local.set $8
   loop $for-loop|0207
    local.get $0
    local.get $8
    local.get $3
    i32.load offset=12
    local.tee $9
    local.get $8
    local.get $9
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $9
     i32.const 4
     global.set $~argumentsLength
     local.get $1
     local.get $9
     local.get $0
     local.get $3
     i32.const 7744
     i32.load
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     local.set $1
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0207
    end
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const 10
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 875
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $3
   i32.store
   local.get $0
   i32.const 7776
   i32.store offset=8
   i32.const 0
   local.set $1
   i32.const 0
   local.set $0
   local.get $3
   i32.load offset=12
   local.set $8
   loop $for-loop|0211
    local.get $0
    local.get $8
    local.get $3
    i32.load offset=12
    local.tee $9
    local.get $8
    local.get $9
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $9
     i32.const 4
     global.set $~argumentsLength
     local.get $1
     local.get $9
     local.get $0
     local.get $3
     i32.const 7776
     i32.load
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     local.set $1
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0211
    end
   end
   local.get $1
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 878
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $3
   i32.store
   local.get $0
   i32.const 7808
   i32.store offset=8
   i32.const 0
   local.set $1
   i32.const 0
   local.set $0
   local.get $3
   i32.load offset=12
   local.set $8
   loop $for-loop|0215
    local.get $0
    local.get $8
    local.get $3
    i32.load offset=12
    local.tee $9
    local.get $8
    local.get $9
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $9
     i32.const 4
     global.set $~argumentsLength
     local.get $1
     local.get $9
     local.get $0
     local.get $3
     i32.const 7808
     i32.load
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     local.set $1
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0215
    end
   end
   local.get $1
   if
    i32.const 0
    i32.const 1552
    i32.const 881
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $3
   i32.store
   local.get $0
   i32.const 7840
   i32.store offset=8
   i32.const 0
   local.set $1
   i32.const 0
   local.set $0
   local.get $3
   i32.load offset=12
   local.set $8
   loop $for-loop|0219
    local.get $0
    local.get $8
    local.get $3
    i32.load offset=12
    local.tee $9
    local.get $8
    local.get $9
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $9
     i32.const 4
     global.set $~argumentsLength
     local.get $1
     local.get $9
     local.get $0
     local.get $3
     i32.const 7840
     i32.load
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     local.set $1
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0219
    end
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 889
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 890
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $3
   i32.store
   local.get $0
   i32.const 7872
   i32.store offset=8
   i32.const 0
   local.set $1
   i32.const 0
   local.set $0
   local.get $3
   i32.load offset=12
   local.set $8
   loop $for-loop|0224
    local.get $0
    local.get $8
    local.get $3
    i32.load offset=12
    local.tee $9
    local.get $8
    local.get $9
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $9
     i32.const 4
     global.set $~argumentsLength
     local.get $1
     local.get $9
     local.get $0
     local.get $3
     i32.const 7872
     i32.load
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     local.set $1
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0224
    end
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const 10
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 892
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 7904
   i32.store offset=8
   i32.const 0
   local.set $1
   i32.const 0
   local.set $0
   local.get $3
   i32.load offset=12
   local.set $8
   loop $for-loop|0228
    local.get $0
    local.get $8
    local.get $3
    i32.load offset=12
    local.tee $9
    local.get $8
    local.get $9
    i32.lt_s
    select
    i32.lt_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $9
     i32.const 4
     global.set $~argumentsLength
     local.get $1
     local.get $9
     local.get $0
     local.get $3
     i32.const 7904
     i32.load
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     local.set $1
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0228
    end
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 905
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 906
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 7936
   i32.store offset=8
   i32.const 0
   local.set $1
   local.get $3
   i32.load offset=12
   i32.const 1
   i32.sub
   local.set $0
   loop $for-loop|0232
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     i32.const 4
     global.set $~argumentsLength
     local.get $1
     local.get $8
     local.get $0
     local.get $3
     i32.const 7936
     i32.load
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     local.set $1
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $for-loop|0232
    end
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 916
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $3
   i32.store
   local.get $0
   i32.const 7968
   i32.store offset=8
   i32.const 4
   local.set $1
   local.get $3
   i32.load offset=12
   i32.const 1
   i32.sub
   local.set $0
   loop $for-loop|0236
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     i32.const 4
     global.set $~argumentsLength
     local.get $1
     local.get $8
     local.get $0
     local.get $3
     i32.const 7968
     i32.load
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     local.set $1
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $for-loop|0236
    end
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const 10
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 920
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $3
   i32.store
   local.get $0
   i32.const 8000
   i32.store offset=8
   i32.const 0
   local.set $1
   local.get $3
   i32.load offset=12
   i32.const 1
   i32.sub
   local.set $0
   loop $for-loop|0240
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     i32.const 4
     global.set $~argumentsLength
     local.get $1
     local.get $8
     local.get $0
     local.get $3
     i32.const 8000
     i32.load
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     local.set $1
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $for-loop|0240
    end
   end
   local.get $1
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 923
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $3
   i32.store
   local.get $0
   i32.const 8032
   i32.store offset=8
   i32.const 0
   local.set $1
   local.get $3
   i32.load offset=12
   i32.const 1
   i32.sub
   local.set $0
   loop $for-loop|0244
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     i32.const 4
     global.set $~argumentsLength
     local.get $1
     local.get $8
     local.get $0
     local.get $3
     i32.const 8032
     i32.load
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     local.set $1
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $for-loop|0244
    end
   end
   local.get $1
   if
    i32.const 0
    i32.const 1552
    i32.const 926
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $3
   i32.store
   local.get $0
   i32.const 8064
   i32.store offset=8
   i32.const 0
   local.set $1
   local.get $3
   i32.load offset=12
   i32.const 1
   i32.sub
   local.set $0
   loop $for-loop|0248
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     i32.const 4
     global.set $~argumentsLength
     local.get $1
     local.get $8
     local.get $0
     local.get $3
     i32.const 8064
     i32.load
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     local.set $1
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $for-loop|0248
    end
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 934
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 935
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   global.get $std/array/arr
   local.tee $3
   i32.store
   local.get $0
   i32.const 8096
   i32.store offset=8
   i32.const 0
   local.set $1
   local.get $3
   i32.load offset=12
   i32.const 1
   i32.sub
   local.set $0
   loop $for-loop|0253
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     i32.const 4
     global.set $~argumentsLength
     local.get $1
     local.get $8
     local.get $0
     local.get $3
     i32.const 8096
     i32.load
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     local.set $1
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $for-loop|0253
    end
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const 10
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 937
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   call $~lib/array/Array<i32>#pop
   drop
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $3
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 8128
   i32.store offset=8
   i32.const 0
   local.set $1
   local.get $3
   i32.load offset=12
   i32.const 1
   i32.sub
   local.set $0
   loop $for-loop|0257
    local.get $0
    i32.const 0
    i32.ge_s
    if
     local.get $3
     i32.load offset=4
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     i32.const 4
     global.set $~argumentsLength
     local.get $1
     local.get $8
     local.get $0
     local.get $3
     i32.const 8128
     i32.load
     call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
     local.set $1
     local.get $0
     i32.const 1
     i32.sub
     local.set $0
     br $for-loop|0257
    end
   end
   local.get $1
   global.set $std/array/i
   global.get $std/array/i
   i32.const 6
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 950
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.load offset=12
   if
    i32.const 0
    i32.const 1552
    i32.const 951
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#push
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/arr
   local.tee $0
   i32.store
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#push
   i64.const -7046029254386353131
   call $~lib/bindings/dom/Math.random
   i64.reinterpret_f64
   local.tee $5
   local.get $5
   i64.eqz
   select
   local.tee $5
   local.get $5
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -49064778989728563
   i64.mul
   local.tee $5
   local.get $5
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -4265267296055464877
   i64.mul
   local.tee $5
   local.get $5
   i64.const 33
   i64.shr_u
   i64.xor
   global.set $~lib/math/random_state0_64
   global.get $~lib/math/random_state0_64
   i64.const -1
   i64.xor
   local.tee $5
   local.get $5
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -49064778989728563
   i64.mul
   local.tee $5
   local.get $5
   i64.const 33
   i64.shr_u
   i64.xor
   i64.const -4265267296055464877
   i64.mul
   local.tee $5
   local.get $5
   i64.const 33
   i64.shr_u
   i64.xor
   global.set $~lib/math/random_state1_64
   i32.const 1
   global.set $~lib/math/random_seeded
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 2
   i32.const 20
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=20
   local.get $1
   i32.const 100
   i32.store
   local.get $1
   i32.const 80
   i32.store offset=4
   local.get $0
   i32.const 0
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=24
   local.get $1
   i32.const 90
   i32.store
   local.get $1
   i32.const 90
   i32.store offset=4
   local.get $0
   i32.const 1
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=28
   local.get $1
   i32.const 70
   i32.store
   local.get $1
   i32.const 95
   i32.store offset=4
   local.get $0
   i32.const 2
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=16
   local.get $1
   i32.const 100
   i32.store
   local.get $1
   i32.const 100
   i32.store offset=4
   local.get $0
   i32.const 3
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=32
   local.get $1
   i32.const 80
   i32.store
   local.get $1
   i32.const 110
   i32.store offset=4
   local.get $0
   i32.const 4
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=36
   local.get $1
   i32.const 110
   i32.store
   local.get $1
   i32.const 115
   i32.store offset=4
   local.get $0
   i32.const 5
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=40
   local.get $1
   i32.const 100
   i32.store
   local.get $1
   i32.const 120
   i32.store offset=4
   local.get $0
   i32.const 6
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=44
   local.get $1
   i32.const 70
   i32.store
   local.get $1
   i32.const 125
   i32.store offset=4
   local.get $0
   i32.const 7
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=48
   local.get $1
   i32.const 70
   i32.store
   local.get $1
   i32.const 130
   i32.store offset=4
   local.get $0
   i32.const 8
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=52
   local.get $1
   i32.const 100
   i32.store
   local.get $1
   i32.const 135
   i32.store offset=4
   local.get $0
   i32.const 9
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=56
   local.get $1
   i32.const 75
   i32.store
   local.get $1
   i32.const 140
   i32.store offset=4
   local.get $0
   i32.const 10
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=60
   local.get $1
   i32.const 70
   i32.store
   local.get $1
   i32.const 140
   i32.store offset=4
   local.get $0
   i32.const 11
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $0
   global.set $std/array/inputStabArr
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 2
   i32.const 20
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load offset=4
   i32.store offset=4
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=64
   local.get $1
   i32.const 70
   i32.store
   local.get $1
   i32.const 95
   i32.store offset=4
   local.get $0
   i32.const 0
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=68
   local.get $1
   i32.const 70
   i32.store
   local.get $1
   i32.const 125
   i32.store offset=4
   local.get $0
   i32.const 1
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=72
   local.get $1
   i32.const 70
   i32.store
   local.get $1
   i32.const 130
   i32.store offset=4
   local.get $0
   i32.const 2
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=76
   local.get $1
   i32.const 70
   i32.store
   local.get $1
   i32.const 140
   i32.store offset=4
   local.get $0
   i32.const 3
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=80
   local.get $1
   i32.const 75
   i32.store
   local.get $1
   i32.const 140
   i32.store offset=4
   local.get $0
   i32.const 4
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=84
   local.get $1
   i32.const 80
   i32.store
   local.get $1
   i32.const 110
   i32.store offset=4
   local.get $0
   i32.const 5
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=88
   local.get $1
   i32.const 90
   i32.store
   local.get $1
   i32.const 90
   i32.store offset=4
   local.get $0
   i32.const 6
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=92
   local.get $1
   i32.const 100
   i32.store
   local.get $1
   i32.const 80
   i32.store offset=4
   local.get $0
   i32.const 7
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=96
   local.get $1
   i32.const 100
   i32.store
   local.get $1
   i32.const 100
   i32.store offset=4
   local.get $0
   i32.const 8
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=100
   local.get $1
   i32.const 100
   i32.store
   local.get $1
   i32.const 120
   i32.store offset=4
   local.get $0
   i32.const 9
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=104
   local.get $1
   i32.const 100
   i32.store
   local.get $1
   i32.const 135
   i32.store offset=4
   local.get $0
   i32.const 10
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   global.get $~lib/memory/__stack_pointer
   call $std/array/Dim#constructor
   local.tee $1
   i32.store offset=108
   local.get $1
   i32.const 110
   i32.store
   local.get $1
   i32.const 115
   i32.store offset=4
   local.get $0
   i32.const 11
   local.get $1
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $0
   global.set $std/array/outputStabArr
   global.get $~lib/memory/__stack_pointer
   i32.const 3
   i32.const 2
   i32.const 8
   i32.const 8352
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=12
   i32.const 0
   global.set $~argumentsLength
   local.get $0
   call $~lib/array/Array<f32>#sort@varargs
   i32.const 3
   i32.const 2
   i32.const 8
   i32.const 8416
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1089
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 2
   i32.const 8
   i32.const 8448
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=4
   i32.const 0
   global.set $~argumentsLength
   local.get $0
   call $~lib/array/Array<f32>#sort@varargs
   i32.const 8
   i32.const 2
   i32.const 8
   i32.const 8512
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $std/array/isArraysEqual<f32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1093
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 3
   i32.const 11
   i32.const 8576
   call $~lib/rt/__newArray
   local.tee $3
   i32.store offset=112
   i32.const 0
   global.set $~argumentsLength
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $1of143
    block $0of144
     block $outOfRange45
      global.get $~argumentsLength
      br_table $0of144 $1of143 $outOfRange45
     end
     unreachable
    end
    i32.const 8672
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 8672
    i32.store
   end
   local.get $3
   i32.load offset=4
   local.get $3
   i32.load offset=12
   local.get $1
   call $~lib/util/sort/SORT<f64>
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   block $__inlined_func$std/array/isArraysEqual<f64> (result i32)
    i32.const 8
    i32.const 3
    i32.const 11
    i32.const 8704
    call $~lib/rt/__newArray
    local.set $1
    global.get $~lib/memory/__stack_pointer
    local.get $1
    i32.store offset=8
    i32.const 0
    local.get $3
    i32.load offset=12
    local.tee $8
    local.get $1
    i32.load offset=12
    i32.ne
    br_if $__inlined_func$std/array/isArraysEqual<f64>
    drop
    i32.const 1
    local.get $1
    local.get $3
    i32.eq
    br_if $__inlined_func$std/array/isArraysEqual<f64>
    drop
    i32.const 0
    local.set $0
    loop $for-loop|038
     local.get $0
     local.get $8
     i32.lt_s
     if
      local.get $3
      local.get $0
      call $~lib/array/Array<f64>#__get
      local.tee $6
      local.get $6
      f64.ne
      if (result i32)
       local.get $1
       local.get $0
       call $~lib/array/Array<f64>#__get
       local.tee $6
       local.get $6
       f64.ne
      else
       i32.const 0
      end
      i32.eqz
      if
       i32.const 0
       local.get $3
       local.get $0
       call $~lib/array/Array<f64>#__get
       i64.reinterpret_f64
       i64.const 63
       i64.shr_u
       i32.wrap_i64
       local.get $1
       local.get $0
       call $~lib/array/Array<f64>#__get
       i64.reinterpret_f64
       i64.const 63
       i64.shr_u
       i32.wrap_i64
       i32.ne
       br_if $__inlined_func$std/array/isArraysEqual<f64>
       drop
       i32.const 0
       local.get $3
       local.get $0
       call $~lib/array/Array<f64>#__get
       local.get $1
       local.get $0
       call $~lib/array/Array<f64>#__get
       f64.ne
       br_if $__inlined_func$std/array/isArraysEqual<f64>
       drop
      end
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|038
     end
    end
    i32.const 1
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1097
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 8800
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=116
   i32.const 0
   global.set $~argumentsLength
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $1of1306
    block $0of1307
     block $outOfRange308
      global.get $~argumentsLength
      br_table $0of1307 $1of1306 $outOfRange308
     end
     unreachable
    end
    i32.const 8848
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 8848
    i32.store
   end
   local.get $0
   i32.load offset=4
   local.get $0
   i32.load offset=12
   local.get $1
   call $~lib/util/sort/SORT<i32>
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 3
   i32.const 8880
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1101
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 8928
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=120
   i32.const 0
   global.set $~argumentsLength
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $1of1309
    block $0of1310
     block $outOfRange311
      global.get $~argumentsLength
      br_table $0of1310 $1of1309 $outOfRange311
     end
     unreachable
    end
    i32.const 8976
    local.set $1
    global.get $~lib/memory/__stack_pointer
    i32.const 8976
    i32.store
   end
   local.get $0
   i32.load offset=4
   local.get $0
   i32.load offset=12
   local.get $1
   call $~lib/util/sort/SORT<u32>
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 5
   i32.const 2
   i32.const 7
   i32.const 9008
   call $~lib/rt/__newArray
   local.set $1
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.store offset=8
   local.get $0
   local.get $1
   call $std/array/isArraysEqual<u32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1105
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 9056
   call $~lib/rt/__newArray
   local.tee $3
   i32.store offset=124
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 9088
   call $~lib/rt/__newArray
   local.tee $8
   i32.store offset=128
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 9120
   call $~lib/rt/__newArray
   local.tee $9
   i32.store offset=132
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 9152
   call $~lib/rt/__newArray
   local.tee $10
   i32.store offset=136
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 9200
   call $~lib/rt/__newArray
   local.tee $11
   i32.store offset=140
   global.get $~lib/memory/__stack_pointer
   i32.const 64
   call $std/array/createReverseOrderedArray
   local.tee $12
   i32.store offset=144
   global.get $~lib/memory/__stack_pointer
   i32.const 128
   call $std/array/createReverseOrderedArray
   local.tee $13
   i32.store offset=148
   global.get $~lib/memory/__stack_pointer
   i32.const 1024
   call $std/array/createReverseOrderedArray
   local.tee $14
   i32.store offset=152
   global.get $~lib/memory/__stack_pointer
   i32.const 10000
   call $std/array/createReverseOrderedArray
   local.tee $0
   i32.store offset=156
   global.get $~lib/memory/__stack_pointer
   i32.const 512
   call $std/array/createRandomOrderedArray
   local.tee $1
   i32.store offset=160
   local.get $3
   call $std/array/assertSortedDefault<i32>
   local.get $8
   call $std/array/assertSortedDefault<i32>
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 9280
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $8
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1125
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $9
   call $std/array/assertSortedDefault<i32>
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 9312
   call $~lib/rt/__newArray
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=8
   local.get $9
   local.get $3
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1128
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $10
   call $std/array/assertSortedDefault<i32>
   local.get $10
   local.get $11
   i32.const 0
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1131
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $12
   call $std/array/assertSortedDefault<i32>
   local.get $12
   local.get $11
   i32.const 4
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1134
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $13
   call $std/array/assertSortedDefault<i32>
   local.get $13
   local.get $11
   i32.const 4
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1137
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $14
   call $std/array/assertSortedDefault<i32>
   local.get $14
   local.get $11
   i32.const 4
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1140
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   call $std/array/assertSortedDefault<i32>
   local.get $0
   local.get $11
   i32.const 4
   call $std/array/isArraysEqual<i32>
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1143
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   call $std/array/assertSortedDefault<i32>
   i32.const 0
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.const 24
   memory.fill
   local.get $0
   global.get $std/array/inputStabArr
   local.tee $3
   i32.store offset=8
   local.get $0
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $8
   i32.const 0
   i32.store
   i32.const 0
   local.get $3
   i32.load offset=12
   local.tee $9
   local.get $9
   i32.const 0
   i32.gt_s
   select
   local.set $10
   local.get $8
   local.get $9
   local.get $10
   i32.sub
   local.tee $8
   i32.const 0
   local.get $8
   i32.const 0
   i32.gt_s
   select
   local.tee $8
   i32.const 2
   i32.const 20
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $9
   i32.store
   local.get $9
   i32.load offset=4
   local.set $11
   local.get $3
   i32.load offset=4
   local.get $10
   i32.const 2
   i32.shl
   i32.add
   local.set $3
   local.get $8
   i32.const 2
   i32.shl
   local.set $8
   loop $while-continue|01
    local.get $1
    local.get $8
    i32.lt_u
    if
     local.get $1
     local.get $11
     i32.add
     local.get $1
     local.get $3
     i32.add
     i32.load
     local.tee $10
     i32.store
     local.get $10
     if
      local.get $9
      local.get $10
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $1
     i32.const 4
     i32.add
     local.set $1
     br $while-continue|01
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 9344
   i32.store offset=4
   local.get $9
   i32.load offset=4
   local.get $9
   i32.load offset=12
   i32.const 9344
   call $~lib/util/sort/SORT<std/array/Dim>
   local.get $0
   local.get $9
   i32.store offset=12
   i32.const 1
   local.set $0
   global.get $~lib/memory/__stack_pointer
   global.get $std/array/inputStabArr
   local.tee $1
   i32.store
   local.get $1
   i32.load offset=12
   local.set $1
   loop $for-loop|02
    local.get $1
    local.get $4
    i32.gt_s
    if
     block $for-break0
      global.get $~lib/memory/__stack_pointer
      local.get $9
      local.get $4
      call $~lib/array/Array<std/array/Ref>#__get
      local.tee $3
      i32.store offset=16
      global.get $~lib/memory/__stack_pointer
      global.get $std/array/outputStabArr
      local.tee $8
      i32.store
      global.get $~lib/memory/__stack_pointer
      local.get $8
      local.get $4
      call $~lib/array/Array<std/array/Ref>#__get
      local.tee $8
      i32.store offset=20
      local.get $3
      i32.load
      local.get $8
      i32.load
      i32.ne
      if (result i32)
       i32.const 1
      else
       local.get $3
       i32.load offset=4
       local.get $8
       i32.load offset=4
       i32.ne
      end
      if
       i32.const 0
       local.set $0
       br $for-break0
      end
      local.get $4
      i32.const 1
      i32.add
      local.set $4
      br $for-loop|02
     end
    end
   end
   local.get $0
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1074
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 24
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 64
   call $std/array/createRandomOrderedArray
   local.tee $0
   i32.store offset=160
   global.get $~lib/memory/__stack_pointer
   i32.const 257
   call $std/array/createRandomOrderedArray
   local.tee $1
   i32.store offset=156
   global.get $~lib/memory/__stack_pointer
   i32.const 9376
   i32.store offset=8
   local.get $0
   i32.const 9376
   call $std/array/assertSorted<i32>
   global.get $~lib/memory/__stack_pointer
   i32.const 9408
   i32.store offset=8
   local.get $0
   i32.const 9408
   call $std/array/assertSorted<i32>
   global.get $~lib/memory/__stack_pointer
   i32.const 9440
   i32.store offset=8
   local.get $1
   i32.const 9440
   call $std/array/assertSorted<i32>
   global.get $~lib/memory/__stack_pointer
   i32.const 9472
   i32.store offset=8
   local.get $1
   i32.const 9472
   call $std/array/assertSorted<i32>
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $3
   i64.const 0
   i64.store
   local.get $3
   i32.const 16
   i32.const 26
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store
   local.get $3
   i32.const 0
   i32.store
   local.get $3
   i32.const 0
   i32.store offset=4
   local.get $3
   i32.const 0
   i32.store offset=8
   local.get $3
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 32
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store offset=4
   local.get $3
   local.get $4
   i32.store
   local.get $4
   if
    local.get $3
    local.get $4
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $3
   local.get $4
   i32.store offset=4
   local.get $3
   i32.const 32
   i32.store offset=8
   local.get $3
   i32.const 2
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   local.get $3
   i32.store
   i32.const 0
   local.set $0
   loop $for-loop|0313
    local.get $0
    i32.const 2
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 1
     call $~lib/array/Array<i32>#constructor
     local.tee $4
     i32.store offset=4
     local.get $4
     i32.const 0
     i32.const 1
     local.get $0
     i32.sub
     call $~lib/array/Array<i32>#__set
     local.get $3
     local.get $0
     local.get $4
     call $~lib/array/Array<~lib/array/Array<i32>>#__set
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0313
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   i32.store offset=156
   global.get $~lib/memory/__stack_pointer
   i32.const 9504
   i32.store offset=8
   local.get $3
   i32.const 9504
   call $std/array/assertSorted<~lib/array/Array<i32>>
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i64.const 0
   i64.store
   local.get $1
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $4
   i64.const 0
   i64.store
   local.get $4
   i32.const 16
   i32.const 29
   call $~lib/rt/itcms/__new
   local.tee $4
   i32.store
   local.get $4
   i32.const 0
   i32.store
   local.get $4
   i32.const 0
   i32.store offset=4
   local.get $4
   i32.const 0
   i32.store offset=8
   local.get $4
   i32.const 0
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 2048
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $8
   i32.store offset=4
   local.get $4
   local.get $8
   i32.store
   local.get $8
   if
    local.get $4
    local.get $8
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   local.get $4
   local.get $8
   i32.store offset=4
   local.get $4
   i32.const 2048
   i32.store offset=8
   local.get $4
   i32.const 512
   i32.store offset=12
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $1
   local.get $4
   i32.store
   loop $for-loop|03
    local.get $3
    i32.const 512
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.sub
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     i32.const 16268
     i32.lt_s
     br_if $folding-inner1
     global.get $~lib/memory/__stack_pointer
     local.tee $1
     i32.const 0
     i32.store
     local.get $1
     i32.const 4
     i32.const 28
     call $~lib/rt/itcms/__new
     local.tee $1
     i32.store
     local.get $1
     i32.const 511
     local.get $3
     i32.sub
     i32.store
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=4
     local.get $4
     local.get $3
     local.get $1
     call $~lib/array/Array<~lib/array/Array<i32>>#__set
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|03
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $4
   i32.store offset=156
   global.get $~lib/memory/__stack_pointer
   i32.const 9536
   i32.store offset=8
   local.get $4
   i32.const 9536
   call $std/array/assertSorted<~lib/array/Array<i32>>
   global.get $~lib/memory/__stack_pointer
   i32.const 7
   i32.const 2
   i32.const 31
   i32.const 9728
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=160
   global.get $~lib/memory/__stack_pointer
   i32.const 7
   i32.const 2
   i32.const 31
   i32.const 9776
   call $~lib/rt/__newArray
   local.tee $4
   i32.store offset=152
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $1of149
    block $0of150
     block $outOfRange51
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of150 $1of149 $outOfRange51
     end
     unreachable
    end
    i32.const 9824
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 9824
    i32.store
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$std/array/isSorted<~lib/string/String|null> (result i32)
    local.get $0
    i32.load offset=4
    local.get $0
    i32.load offset=12
    local.get $3
    call $~lib/util/sort/SORT<std/array/Dim>
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.store
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16268
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    i32.const 1
    local.set $1
    local.get $0
    i32.load offset=12
    local.set $8
    loop $for-loop|052
     local.get $1
     local.get $8
     i32.lt_s
     if
      local.get $0
      local.get $1
      i32.const 1
      i32.sub
      call $~lib/array/Array<std/array/Ref|null>#__get
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store
      local.get $0
      local.get $1
      call $~lib/array/Array<std/array/Ref|null>#__get
      local.set $10
      global.get $~lib/memory/__stack_pointer
      local.get $10
      i32.store offset=4
      i32.const 2
      global.set $~argumentsLength
      local.get $9
      local.get $10
      local.get $3
      i32.load
      call_indirect $0 (type $i32_i32_=>_i32)
      i32.const 0
      i32.gt_s
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 0
       br $__inlined_func$std/array/isSorted<~lib/string/String|null>
      end
      local.get $1
      i32.const 1
      i32.add
      local.set $1
      br $for-loop|052
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1078
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   block $__inlined_func$std/array/isArraysEqual<~lib/string/String|null> (result i32)
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.sub
    global.set $~lib/memory/__stack_pointer
    global.get $~lib/memory/__stack_pointer
    i32.const 16268
    i32.lt_s
    br_if $folding-inner1
    global.get $~lib/memory/__stack_pointer
    i64.const 0
    i64.store
    local.get $0
    i32.load offset=12
    local.tee $1
    local.get $4
    i32.load offset=12
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 0
     br $__inlined_func$std/array/isArraysEqual<~lib/string/String|null>
    end
    local.get $0
    local.get $4
    i32.eq
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 1
     br $__inlined_func$std/array/isArraysEqual<~lib/string/String|null>
    end
    i32.const 0
    local.set $3
    loop $for-loop|055
     local.get $1
     local.get $3
     i32.gt_s
     if
      local.get $0
      local.get $3
      call $~lib/array/Array<std/array/Ref|null>#__get
      local.set $8
      global.get $~lib/memory/__stack_pointer
      local.get $8
      i32.store
      local.get $4
      local.get $3
      call $~lib/array/Array<std/array/Ref|null>#__get
      local.set $9
      global.get $~lib/memory/__stack_pointer
      local.get $9
      i32.store offset=4
      local.get $8
      local.get $9
      call $~lib/string/String.__eq
      i32.eqz
      if
       global.get $~lib/memory/__stack_pointer
       i32.const 8
       i32.add
       global.set $~lib/memory/__stack_pointer
       i32.const 0
       br $__inlined_func$std/array/isArraysEqual<~lib/string/String|null>
      end
      local.get $3
      i32.const 1
      i32.add
      local.set $3
      br $for-loop|055
     end
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1
   end
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1182
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   call $std/array/createRandomStringArray
   local.tee $1
   i32.store offset=156
   i32.const 1
   global.set $~argumentsLength
   i32.const 0
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $1of158
    block $0of159
     block $outOfRange60
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of159 $1of158 $outOfRange60
     end
     unreachable
    end
    i32.const 9856
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 9856
    i32.store
   end
   local.get $1
   local.get $0
   call $std/array/assertSorted<~lib/array/Array<i32>>
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 0
   i32.const 35
   i32.const 9888
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=164
   global.get $~lib/memory/__stack_pointer
   i32.const 9984
   i32.store offset=168
   local.get $0
   i32.load offset=4
   local.set $3
   local.get $0
   i32.load offset=12
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$~lib/util/string/joinBooleanArray
    local.get $0
    i32.const 1
    i32.sub
    local.tee $4
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 9696
     local.set $0
     br $__inlined_func$~lib/util/string/joinBooleanArray
    end
    local.get $4
    i32.eqz
    if
     i32.const 9920
     i32.const 9952
     local.get $3
     i32.load8_u
     select
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinBooleanArray
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 9980
    i32.load
    i32.const 1
    i32.shr_u
    local.tee $8
    i32.const 5
    i32.add
    local.get $4
    i32.mul
    i32.const 5
    i32.add
    local.tee $9
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
    i32.const 0
    local.set $0
    loop $for-loop|153
     local.get $2
     local.get $4
     i32.lt_s
     if
      local.get $2
      local.get $3
      i32.add
      i32.load8_u
      local.tee $10
      i32.eqz
      i32.const 4
      i32.add
      local.set $11
      local.get $1
      local.get $0
      i32.const 1
      i32.shl
      i32.add
      i32.const 9920
      i32.const 9952
      local.get $10
      select
      local.get $11
      i32.const 1
      i32.shl
      memory.copy
      local.get $0
      local.get $11
      i32.add
      local.set $0
      local.get $8
      if
       local.get $1
       local.get $0
       i32.const 1
       i32.shl
       i32.add
       i32.const 9984
       local.get $8
       i32.const 1
       i32.shl
       memory.copy
       local.get $0
       local.get $8
       i32.add
       local.set $0
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|153
     end
    end
    local.get $3
    local.get $4
    i32.add
    i32.load8_u
    local.tee $2
    i32.eqz
    i32.const 4
    i32.add
    local.set $3
    local.get $1
    local.get $0
    i32.const 1
    i32.shl
    i32.add
    i32.const 9920
    i32.const 9952
    local.get $2
    select
    local.get $3
    i32.const 1
    i32.shl
    memory.copy
    local.get $0
    local.get $3
    i32.add
    local.tee $0
    local.get $9
    i32.lt_s
    if
     local.get $1
     local.get $0
     call $~lib/string/String#substring
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinBooleanArray
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store
   local.get $1
   i32.const 10016
   i32.store offset=8
   local.get $0
   i32.const 10016
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1191
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 10064
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store offset=164
   local.get $1
   i32.const 9696
   i32.store offset=168
   local.get $0
   i32.const 9696
   call $~lib/array/Array<i32>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11872
   i32.store offset=8
   local.get $0
   i32.const 11872
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1192
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 2
   i32.const 7
   i32.const 11904
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store offset=164
   local.get $1
   i32.const 11936
   i32.store offset=168
   local.get $0
   i32.const 11936
   call $~lib/array/Array<u32>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 11872
   i32.store offset=8
   local.get $0
   i32.const 11872
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1193
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 11968
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store offset=164
   local.get $1
   i32.const 12000
   i32.store offset=168
   local.get $0
   i32.const 12000
   call $~lib/array/Array<i32>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 12032
   i32.store offset=8
   local.get $0
   i32.const 12032
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1194
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 6
   i32.const 3
   i32.const 11
   i32.const 12112
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store offset=164
   local.get $1
   i32.const 12192
   i32.store offset=168
   local.get $0
   call $~lib/array/Array<f64>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13360
   i32.store offset=8
   local.get $0
   i32.const 13360
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1195
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 2
   i32.const 31
   i32.const 13504
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store offset=164
   local.get $1
   i32.const 9696
   i32.store offset=168
   local.get $0
   i32.load offset=4
   local.get $0
   i32.load offset=12
   i32.const 9696
   call $~lib/util/string/joinStringArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13472
   i32.store offset=8
   local.get $0
   i32.const 13472
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1196
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 3
   i32.const 2
   i32.const 12
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=156
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   i32.store offset=152
   local.get $1
   i32.const 0
   i32.const 0
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 1
   i32.const 0
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 2
   i32.const 0
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $0
   local.get $1
   i32.store offset=152
   global.get $~lib/memory/__stack_pointer
   i32.const 9984
   i32.store offset=168
   local.get $1
   call $~lib/array/Array<std/array/Ref|null>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13600
   i32.store offset=8
   local.get $0
   i32.const 13600
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1198
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 2
   i32.const 2
   i32.const 9
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=156
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   i32.store offset=160
   local.get $1
   i32.const 0
   i32.const 0
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 1
   i32.const 0
   call $std/array/Ref#constructor
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $0
   local.get $1
   i32.store offset=160
   global.get $~lib/memory/__stack_pointer
   i32.const 9984
   i32.store offset=168
   local.get $1
   call $~lib/array/Array<std/array/Ref|null>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13696
   i32.store offset=8
   local.get $0
   i32.const 13696
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1201
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 13792
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=152
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 13824
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=156
   global.get $~lib/memory/__stack_pointer
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 13856
   call $~lib/rt/__newArray
   local.tee $2
   i32.store offset=148
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 2
   i32.const 3
   i32.const 13888
   call $~lib/rt/__newArray
   local.tee $3
   i32.store offset=144
   local.get $0
   call $~lib/array/Array<i32>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 9696
   i32.store offset=8
   local.get $0
   i32.const 9696
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1211
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   call $~lib/array/Array<i32>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store
   local.get $1
   i32.const 13472
   i32.store offset=8
   local.get $0
   i32.const 13472
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1212
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   call $~lib/array/Array<i32>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store
   local.get $1
   i32.const 13936
   i32.store offset=8
   local.get $0
   i32.const 13936
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1213
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $3
   call $~lib/array/Array<i32>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store
   local.get $1
   i32.const 13968
   i32.store offset=8
   local.get $0
   i32.const 13968
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1214
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 0
   i32.const 36
   i32.const 14016
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=164
   local.get $0
   call $~lib/array/Array<i8>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 14048
   i32.store offset=8
   local.get $0
   i32.const 14048
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1216
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 0
   i32.const 36
   i32.const 14080
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=164
   local.get $0
   call $~lib/array/Array<i8>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 14112
   i32.store offset=8
   local.get $0
   i32.const 14112
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1217
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 1
   i32.const 10
   i32.const 14160
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store offset=164
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 9984
   i32.store
   i32.const 0
   local.set $2
   local.get $0
   i32.load offset=4
   local.set $3
   local.get $0
   i32.load offset=12
   local.set $0
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$~lib/util/string/joinIntegerArray<u16>
    local.get $0
    i32.const 1
    i32.sub
    local.tee $4
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 9696
     local.set $0
     br $__inlined_func$~lib/util/string/joinIntegerArray<u16>
    end
    local.get $4
    i32.eqz
    if
     local.get $3
     i32.load16_u
     call $~lib/util/number/utoa32
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<u16>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 9980
    i32.load
    i32.const 1
    i32.shr_u
    local.tee $8
    i32.const 10
    i32.add
    local.get $4
    i32.mul
    i32.const 10
    i32.add
    local.tee $9
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
    i32.const 0
    local.set $0
    loop $for-loop|054
     local.get $2
     local.get $4
     i32.lt_s
     if
      local.get $1
      local.get $0
      i32.const 1
      i32.shl
      i32.add
      local.get $3
      local.get $2
      i32.const 1
      i32.shl
      i32.add
      i32.load16_u
      call $~lib/util/number/itoa_buffered<u16>
      local.get $0
      i32.add
      local.set $0
      local.get $8
      if
       local.get $1
       local.get $0
       i32.const 1
       i32.shl
       i32.add
       i32.const 9984
       local.get $8
       i32.const 1
       i32.shl
       memory.copy
       local.get $0
       local.get $8
       i32.add
       local.set $0
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|054
     end
    end
    local.get $1
    local.get $0
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    local.get $4
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    call $~lib/util/number/itoa_buffered<u16>
    local.get $0
    i32.add
    local.tee $0
    local.get $9
    i32.lt_s
    if
     local.get $1
     local.get $0
     call $~lib/string/String#substring
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<u16>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 14192
   i32.store offset=8
   local.get $0
   i32.const 14192
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1218
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 2
   i32.const 1
   i32.const 37
   i32.const 14240
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store offset=164
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 9984
   i32.store
   i32.const 0
   local.set $2
   local.get $0
   i32.load offset=4
   local.set $3
   local.get $0
   i32.load offset=12
   local.set $0
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i32.const 0
   i32.store
   block $__inlined_func$~lib/util/string/joinIntegerArray<i16>
    local.get $0
    i32.const 1
    i32.sub
    local.tee $4
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 9696
     local.set $0
     br $__inlined_func$~lib/util/string/joinIntegerArray<i16>
    end
    local.get $4
    i32.eqz
    if
     local.get $3
     i32.load16_s
     call $~lib/util/number/itoa32
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<i16>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 9980
    i32.load
    i32.const 1
    i32.shr_u
    local.tee $8
    i32.const 11
    i32.add
    local.get $4
    i32.mul
    i32.const 11
    i32.add
    local.tee $9
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $1
    i32.store
    i32.const 0
    local.set $0
    loop $for-loop|056
     local.get $2
     local.get $4
     i32.lt_s
     if
      local.get $1
      local.get $0
      i32.const 1
      i32.shl
      i32.add
      local.get $3
      local.get $2
      i32.const 1
      i32.shl
      i32.add
      i32.load16_s
      call $~lib/util/number/itoa_buffered<i16>
      local.get $0
      i32.add
      local.set $0
      local.get $8
      if
       local.get $1
       local.get $0
       i32.const 1
       i32.shl
       i32.add
       i32.const 9984
       local.get $8
       i32.const 1
       i32.shl
       memory.copy
       local.get $0
       local.get $8
       i32.add
       local.set $0
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|056
     end
    end
    local.get $1
    local.get $0
    i32.const 1
    i32.shl
    i32.add
    local.get $3
    local.get $4
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s
    call $~lib/util/number/itoa_buffered<i16>
    local.get $0
    i32.add
    local.tee $0
    local.get $9
    i32.lt_s
    if
     local.get $1
     local.get $0
     call $~lib/string/String#substring
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 4
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinIntegerArray<i16>
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $1
    local.set $0
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 14272
   i32.store offset=8
   local.get $0
   i32.const 14272
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1219
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 14320
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=164
   local.get $0
   call $~lib/array/Array<i32>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 14352
   i32.store offset=8
   local.get $0
   i32.const 14352
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1220
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 3
   i32.const 3
   i32.const 38
   i32.const 14416
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store offset=164
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 9984
   i32.store
   local.get $0
   call $~lib/array/Array<u64>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 14464
   i32.store offset=8
   local.get $0
   i32.const 14464
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1221
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 5
   i32.const 3
   i32.const 39
   i32.const 14544
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.store offset=164
   local.get $1
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 9984
   i32.store
   local.get $0
   call $~lib/array/Array<i64>#join
   local.set $0
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 14608
   i32.store offset=8
   local.get $0
   i32.const 14608
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1222
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 7
   i32.const 2
   i32.const 31
   i32.const 14768
   call $~lib/rt/__newArray
   local.tee $0
   i32.store offset=160
   local.get $0
   call $~lib/array/Array<~lib/string/String|null>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 14816
   i32.store offset=8
   local.get $0
   i32.const 14816
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1229
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 4
   i32.const 2
   i32.const 31
   i32.const 14928
   call $~lib/rt/__newArray
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store offset=164
   local.get $0
   call $~lib/array/Array<~lib/string/String|null>#toString
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 14976
   i32.store offset=8
   local.get $0
   i32.const 14976
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1230
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 2
   i32.const 2
   i32.const 26
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=136
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   i32.store offset=140
   local.get $1
   i32.const 0
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 15008
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 1
   i32.const 2
   i32.const 2
   i32.const 3
   i32.const 15040
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $0
   local.get $1
   i32.store offset=140
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 9984
   i32.store
   i32.const 0
   local.set $2
   local.get $1
   i32.load offset=4
   local.set $3
   local.get $1
   i32.load offset=12
   local.set $1
   local.get $0
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 0
   i32.store offset=8
   block $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<i32>>
    local.get $1
    i32.const 1
    i32.sub
    local.tee $1
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 9696
     local.set $0
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<i32>>
    end
    local.get $1
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load
     local.tee $0
     i32.store
     local.get $0
     if (result i32)
      local.get $0
      call $~lib/array/Array<i32>#toString
     else
      i32.const 9696
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<i32>>
    end
    i32.const 9696
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 9696
    i32.store offset=4
    i32.const 9980
    i32.load
    i32.const 1
    i32.shr_u
    local.set $4
    loop $for-loop|057
     local.get $1
     local.get $2
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      local.get $2
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.tee $8
      i32.store
      local.get $8
      if
       global.get $~lib/memory/__stack_pointer
       local.get $8
       call $~lib/array/Array<i32>#toString
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=8
       local.get $0
       local.get $8
       call $~lib/string/String.__concat
       local.tee $0
       i32.store offset=4
      end
      local.get $4
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.const 9984
       call $~lib/string/String.__concat
       local.tee $0
       i32.store offset=4
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|057
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $1
    i32.store
    local.get $1
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     call $~lib/array/Array<i32>#toString
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     local.get $0
     local.get $1
     call $~lib/string/String.__concat
     local.tee $0
     i32.store offset=4
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 15072
   i32.store offset=8
   local.get $0
   i32.const 15072
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1233
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 2
   i32.const 2
   i32.const 40
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=136
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   i32.store offset=132
   local.get $1
   i32.const 0
   i32.const 2
   i32.const 0
   i32.const 6
   i32.const 15120
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 1
   i32.const 2
   i32.const 0
   i32.const 6
   i32.const 15152
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $0
   local.get $1
   i32.store offset=132
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 9984
   i32.store
   i32.const 0
   local.set $2
   local.get $1
   i32.load offset=4
   local.set $3
   local.get $1
   i32.load offset=12
   local.set $1
   local.get $0
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 0
   i32.store offset=8
   block $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<u8>>
    local.get $1
    i32.const 1
    i32.sub
    local.tee $1
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 9696
     local.set $0
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<u8>>
    end
    local.get $1
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load
     local.tee $0
     i32.store
     local.get $0
     if (result i32)
      local.get $0
      call $~lib/array/Array<u8>#toString
     else
      i32.const 9696
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<u8>>
    end
    i32.const 9696
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 9696
    i32.store offset=4
    i32.const 9980
    i32.load
    i32.const 1
    i32.shr_u
    local.set $4
    loop $for-loop|058
     local.get $1
     local.get $2
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      local.get $2
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.tee $8
      i32.store
      local.get $8
      if
       global.get $~lib/memory/__stack_pointer
       local.get $8
       call $~lib/array/Array<u8>#toString
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=8
       local.get $0
       local.get $8
       call $~lib/string/String.__concat
       local.tee $0
       i32.store offset=4
      end
      local.get $4
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.const 9984
       call $~lib/string/String.__concat
       local.tee $0
       i32.store offset=4
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|058
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $1
    i32.store
    local.get $1
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     call $~lib/array/Array<u8>#toString
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     local.get $0
     local.get $1
     call $~lib/string/String.__concat
     local.tee $0
     i32.store offset=4
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 15072
   i32.store offset=8
   local.get $0
   i32.const 15072
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1236
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 1
   i32.const 2
   i32.const 42
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=136
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   i32.store offset=128
   global.get $~lib/memory/__stack_pointer
   i32.const 1
   i32.const 2
   i32.const 41
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $2
   i32.store offset=124
   global.get $~lib/memory/__stack_pointer
   local.get $2
   i32.load offset=4
   i32.store offset=120
   local.get $2
   i32.const 0
   i32.const 1
   i32.const 2
   i32.const 7
   i32.const 15184
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 0
   local.get $2
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $0
   local.get $1
   i32.store offset=128
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 0
   i32.store
   local.get $0
   i32.const 9984
   i32.store
   i32.const 0
   local.set $2
   local.get $1
   i32.load offset=4
   local.set $3
   local.get $1
   i32.load offset=12
   local.set $1
   local.get $0
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 0
   i32.store offset=8
   block $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<~lib/array/Array<u32>>>
    local.get $1
    i32.const 1
    i32.sub
    local.tee $1
    i32.const 0
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     i32.const 9696
     local.set $0
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<~lib/array/Array<u32>>>
    end
    local.get $1
    i32.eqz
    if
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.load
     local.tee $0
     i32.store
     local.get $0
     if (result i32)
      local.get $0
      call $~lib/array/Array<~lib/array/Array<u32>>#toString
     else
      i32.const 9696
     end
     local.set $0
     global.get $~lib/memory/__stack_pointer
     i32.const 12
     i32.add
     global.set $~lib/memory/__stack_pointer
     br $__inlined_func$~lib/util/string/joinReferenceArray<~lib/array/Array<~lib/array/Array<u32>>>
    end
    i32.const 9696
    local.set $0
    global.get $~lib/memory/__stack_pointer
    i32.const 9696
    i32.store offset=4
    i32.const 9980
    i32.load
    i32.const 1
    i32.shr_u
    local.set $4
    loop $for-loop|059
     local.get $1
     local.get $2
     i32.gt_s
     if
      global.get $~lib/memory/__stack_pointer
      local.get $3
      local.get $2
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.tee $8
      i32.store
      local.get $8
      if
       global.get $~lib/memory/__stack_pointer
       local.get $8
       call $~lib/array/Array<~lib/array/Array<u32>>#toString
       local.set $8
       global.get $~lib/memory/__stack_pointer
       local.get $8
       i32.store offset=8
       local.get $0
       local.get $8
       call $~lib/string/String.__concat
       local.tee $0
       i32.store offset=4
      end
      local.get $4
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       i32.const 9984
       call $~lib/string/String.__concat
       local.tee $0
       i32.store offset=4
      end
      local.get $2
      i32.const 1
      i32.add
      local.set $2
      br $for-loop|059
     end
    end
    global.get $~lib/memory/__stack_pointer
    local.get $3
    local.get $1
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $1
    i32.store
    local.get $1
    if
     global.get $~lib/memory/__stack_pointer
     local.get $1
     call $~lib/array/Array<~lib/array/Array<u32>>#toString
     local.set $1
     global.get $~lib/memory/__stack_pointer
     local.get $1
     i32.store offset=8
     local.get $0
     local.get $1
     call $~lib/string/String.__concat
     local.tee $0
     i32.store offset=4
    end
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 13472
   i32.store offset=8
   local.get $0
   i32.const 13472
   call $~lib/string/String.__eq
   i32.eqz
   if
    i32.const 0
    i32.const 1552
    i32.const 1239
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 4
   i32.const 2
   i32.const 26
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=128
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   i32.store offset=132
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 15216
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 1
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 15248
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 2
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 15280
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 3
   i32.const 3
   i32.const 2
   i32.const 3
   i32.const 15312
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $0
   local.get $1
   i32.store offset=132
   global.get $~lib/memory/__stack_pointer
   local.get $1
   call $~lib/array/Array<~lib/array/Array<i32>>#flat
   local.tee $0
   i32.store offset=128
   local.get $0
   i32.load offset=12
   i32.const 10
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 1246
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   local.set $3
   loop $for-loop|7
    local.get $3
    i32.const 10
    i32.lt_s
    if
     local.get $0
     local.get $3
     call $~lib/array/Array<i32>#__get
     local.get $3
     i32.ne
     if
      i32.const 0
      i32.const 1552
      i32.const 1248
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|7
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 4
   i32.const 2
   i32.const 43
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=140
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   i32.store offset=160
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 2
   i32.const 31
   i32.const 15376
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 1
   i32.const 3
   i32.const 2
   i32.const 31
   i32.const 15472
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 2
   i32.const 3
   i32.const 2
   i32.const 31
   i32.const 15600
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 3
   i32.const 1
   i32.const 2
   i32.const 31
   i32.const 15664
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $0
   local.get $1
   i32.store offset=160
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   i64.const 0
   i64.store
   local.get $1
   i32.load offset=4
   local.set $8
   local.get $1
   i32.load offset=12
   local.set $1
   i32.const 0
   local.set $3
   i32.const 0
   local.set $0
   loop $for-loop|0317
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $8
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $2
     if (result i32)
      local.get $2
      i32.load offset=12
     else
      i32.const 0
     end
     local.get $3
     i32.add
     local.set $3
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|0317
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.const 2
   i32.shl
   local.tee $0
   i32.const 0
   call $~lib/rt/itcms/__new
   local.tee $9
   i32.store
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 31
   call $~lib/rt/itcms/__new
   local.tee $10
   i32.store offset=4
   local.get $10
   local.get $3
   i32.store offset=12
   local.get $10
   local.get $0
   i32.store offset=8
   local.get $10
   local.get $9
   i32.store offset=4
   local.get $10
   local.get $9
   i32.store
   local.get $9
   if
    local.get $10
    local.get $9
    i32.const 0
    call $byn-split-outlined-A$~lib/rt/itcms/__link
   end
   i32.const 0
   local.set $2
   i32.const 0
   local.set $0
   loop $for-loop|1320
    local.get $0
    local.get $1
    i32.lt_s
    if
     local.get $8
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $11
     if
      local.get $2
      local.get $9
      i32.add
      local.get $11
      i32.load offset=4
      local.get $11
      i32.load offset=12
      i32.const 2
      i32.shl
      local.tee $11
      memory.copy
      local.get $2
      local.get $11
      i32.add
      local.set $2
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|1320
    end
   end
   i32.const 0
   local.set $0
   loop $for-loop|2323
    local.get $0
    local.get $3
    i32.lt_s
    if
     local.get $9
     local.get $0
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $1
     if
      local.get $9
      local.get $1
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|2323
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   i32.store offset=140
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 2
   i32.const 31
   i32.const 15696
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=148
   local.get $10
   i32.load offset=12
   i32.const 8
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 1254
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   local.set $0
   loop $for-loop|8
    local.get $0
    local.get $1
    i32.load offset=12
    i32.lt_s
    if
     local.get $10
     local.get $0
     call $~lib/array/Array<std/array/Ref|null>#__get
     local.set $2
     global.get $~lib/memory/__stack_pointer
     local.get $2
     i32.store
     local.get $1
     local.get $0
     call $~lib/array/Array<std/array/Ref|null>#__get
     local.set $3
     global.get $~lib/memory/__stack_pointer
     local.get $3
     i32.store offset=8
     local.get $2
     local.get $3
     call $~lib/string/String.__eq
     i32.eqz
     if
      i32.const 0
      i32.const 1552
      i32.const 1256
      i32.const 5
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|8
    end
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 2
   i32.const 2
   i32.const 26
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=144
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   i32.store offset=156
   local.get $1
   i32.const 0
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 15760
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 1
   i32.const 0
   i32.const 2
   i32.const 3
   i32.const 15792
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $0
   local.get $1
   i32.store offset=156
   local.get $1
   call $~lib/array/Array<~lib/array/Array<i32>>#flat
   local.set $0
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.store
   local.get $0
   i32.load offset=12
   if
    i32.const 0
    i32.const 1552
    i32.const 1260
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i32.const 2
   i32.const 2
   i32.const 26
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $1
   i32.store offset=144
   global.get $~lib/memory/__stack_pointer
   local.get $1
   i32.load offset=4
   i32.store offset=152
   local.get $1
   i32.const 0
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 15824
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $1
   i32.const 1
   i32.const 1
   i32.const 2
   i32.const 3
   i32.const 15856
   call $~lib/rt/__newArray
   call $~lib/array/Array<std/array/Ref>#__uset
   local.get $0
   local.get $1
   i32.store offset=152
   global.get $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 15888
   i32.store offset=164
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.sub
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   i32.const 16268
   i32.lt_s
   br_if $folding-inner1
   global.get $~lib/memory/__stack_pointer
   local.tee $0
   i64.const 0
   i64.store
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $0
   local.get $1
   i32.load offset=12
   local.tee $3
   i32.const 2
   i32.const 26
   i32.const 0
   call $~lib/rt/__newArray
   local.tee $4
   i32.store
   local.get $4
   i32.load offset=4
   local.set $8
   i32.const 0
   local.set $0
   loop $for-loop|071
    local.get $0
    local.get $3
    local.get $1
    i32.load offset=12
    local.tee $9
    local.get $3
    local.get $9
    i32.lt_s
    select
    i32.lt_s
    if
     global.get $~lib/memory/__stack_pointer
     local.tee $9
     local.get $0
     i32.const 2
     i32.shl
     local.tee $10
     local.get $1
     i32.load offset=4
     i32.add
     i32.load
     local.tee $11
     i32.store offset=4
     i32.const 3
     global.set $~argumentsLength
     local.get $9
     local.get $11
     local.get $0
     local.get $1
     i32.const 15888
     i32.load
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     local.tee $9
     i32.store offset=8
     local.get $8
     local.get $10
     i32.add
     local.get $9
     i32.store
     local.get $9
     if
      local.get $4
      local.get $9
      i32.const 1
      call $byn-split-outlined-A$~lib/rt/itcms/__link
     end
     local.get $0
     i32.const 1
     i32.add
     local.set $0
     br $for-loop|071
    end
   end
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.store
   local.get $4
   call $~lib/array/Array<~lib/array/Array<i32>>#flat
   local.tee $0
   i32.store offset=144
   local.get $0
   i32.load offset=12
   i32.const 4
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 1270
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 0
   call $~lib/array/Array<i32>#__get
   i32.const 1
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 1271
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 1
   call $~lib/array/Array<i32>#__get
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 1272
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 2
   call $~lib/array/Array<i32>#__get
   i32.const 2
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 1273
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.const 3
   call $~lib/array/Array<i32>#__get
   i32.const 3
   i32.ne
   if
    i32.const 0
    i32.const 1552
    i32.const 1274
    i32.const 3
    call $~lib/builtins/abort
    unreachable
   end
   i32.const 0
   global.set $std/array/arr
   i32.const 0
   global.set $std/array/inputStabArr
   i32.const 0
   global.set $std/array/outputStabArr
   i32.const 32652
   global.set $~lib/memory/__stack_pointer
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.gt_s
   if
    loop $while-continue|0330
     global.get $~lib/rt/itcms/state
     if
      call $~lib/rt/itcms/step
      drop
      br $while-continue|0330
     end
    end
   end
   call $~lib/rt/itcms/step
   drop
   loop $while-continue|1
    global.get $~lib/rt/itcms/state
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|1
    end
   end
   global.get $~lib/rt/itcms/total
   i64.extend_i32_u
   i64.const 200
   i64.mul
   i64.const 100
   i64.div_u
   i32.wrap_i64
   i32.const 1024
   i32.add
   global.set $~lib/rt/itcms/threshold
   global.get $~lib/memory/__stack_pointer
   i32.const 172
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  i32.const 32672
  i32.const 32720
  i32.const 1
  i32.const 1
  call $~lib/builtins/abort
  unreachable
 )
 (func $~lib/array/Array<i32>#constructor (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i64.const 0
  i64.store
  local.get $1
  i32.const 16
  i32.const 3
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 0
  i32.store offset=4
  local.get $2
  i32.const 0
  i32.store offset=8
  local.get $2
  i32.const 0
  i32.store offset=12
  local.get $0
  i32.const 268435455
  i32.gt_u
  if
   i32.const 1056
   i32.const 1104
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 8
  local.get $0
  i32.const 8
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.tee $1
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store offset=4
  local.get $2
  local.get $3
  i32.store
  local.get $3
  if
   local.get $2
   local.get $3
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $2
  local.get $3
  i32.store offset=4
  local.get $2
  local.get $1
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $std/array/Ref#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  i32.const 4
  i32.const 4
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  local.get $0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $4
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  i32.shl
  local.tee $5
  i32.const 0
  call $~lib/rt/itcms/__new
  local.set $1
  local.get $3
  if
   local.get $1
   local.get $3
   local.get $5
   memory.copy
  end
  local.get $4
  local.get $1
  i32.store
  i32.const 16
  local.get $2
  call $~lib/rt/itcms/__new
  local.tee $2
  local.get $1
  i32.store
  local.get $1
  if
   local.get $2
   local.get $1
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  local.get $2
  local.get $1
  i32.store offset=4
  local.get $2
  local.get $5
  i32.store offset=8
  local.get $2
  local.get $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $std/array/internalCapacity<i32> (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $1
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  i32.load
  local.tee $0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 2
  i32.shr_s
  local.get $1
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=12
  local.tee $3
  local.get $1
  i32.load offset=12
  local.tee $2
  i32.add
  local.tee $4
  i32.const 268435455
  i32.gt_u
  if
   i32.const 1056
   i32.const 1104
   i32.const 228
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $4
  i32.store
  local.get $4
  i32.load offset=4
  local.tee $5
  local.get $0
  i32.load offset=4
  local.get $3
  i32.const 2
  i32.shl
  local.tee $0
  memory.copy
  local.get $0
  local.get $5
  i32.add
  local.get $1
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/array/Array<i32>#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.lt_s
   select
  end
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $2
   i32.const 0
   local.get $2
   i32.const 0
   i32.gt_s
   select
  else
   local.get $2
   local.get $3
   local.get $2
   local.get $3
   i32.lt_s
   select
  end
  local.get $1
  i32.sub
  local.tee $2
  i32.const 0
  local.get $2
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store
  local.get $3
  i32.load offset=4
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.const 2
  i32.shl
  memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<i32>#splice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store
  local.get $3
  local.get $2
  local.get $0
  i32.load offset=12
  local.tee $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.lt_s
   select
  end
  local.tee $4
  i32.sub
  local.tee $1
  local.get $1
  local.get $2
  i32.gt_s
  select
  local.tee $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.gt_s
  select
  local.tee $5
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store
  local.get $1
  i32.load offset=4
  local.get $0
  i32.load offset=4
  local.tee $2
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  local.tee $6
  local.get $5
  i32.const 2
  i32.shl
  memory.copy
  local.get $4
  local.get $5
  i32.add
  local.tee $4
  local.get $3
  i32.ne
  if
   local.get $6
   local.get $2
   local.get $4
   i32.const 2
   i32.shl
   i32.add
   local.get $3
   local.get $4
   i32.sub
   i32.const 2
   i32.shl
   memory.copy
  end
  local.get $0
  local.get $3
  local.get $5
  i32.sub
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<std/array/Ref>#splice (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  i32.const 2
  local.get $0
  i32.load offset=12
  local.tee $4
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $4
   i32.add
   local.tee $1
   i32.const 0
   local.get $1
   i32.const 0
   i32.gt_s
   select
  else
   local.get $1
   local.get $4
   local.get $1
   local.get $4
   i32.lt_s
   select
  end
  local.tee $5
  i32.sub
  local.tee $1
  local.get $1
  i32.const 2
  i32.gt_s
  select
  local.tee $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.gt_s
  select
  local.tee $3
  i32.const 2
  i32.const 9
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $6
  i32.store
  local.get $6
  i32.load offset=4
  local.get $0
  i32.load offset=4
  local.tee $1
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  local.tee $2
  local.get $3
  i32.const 2
  i32.shl
  memory.copy
  local.get $3
  local.get $5
  i32.add
  local.tee $5
  local.get $4
  i32.ne
  if
   local.get $2
   local.get $1
   local.get $5
   i32.const 2
   i32.shl
   i32.add
   local.get $4
   local.get $5
   i32.sub
   i32.const 2
   i32.shl
   memory.copy
  end
  local.get $0
  local.get $4
  local.get $3
  i32.sub
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<std/array/Ref>#__get (param $0 i32) (param $1 i32) (result i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $0
  i32.store
  local.get $0
  i32.eqz
  if
   i32.const 6416
   i32.const 1104
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<std/array/Ref|null>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 1344
   i32.const 1104
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $0
  i32.store
  local.get $2
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<i32>#map<i32> (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store
  local.get $3
  local.get $0
  i32.load offset=12
  local.tee $3
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $4
  i32.store
  local.get $4
  i32.load offset=4
  local.set $4
  loop $for-loop|0
   local.get $2
   local.get $3
   local.get $0
   i32.load offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $2
    i32.const 2
    i32.shl
    local.tee $5
    local.get $0
    i32.load offset=4
    i32.add
    i32.load
    local.set $6
    i32.const 3
    global.set $~argumentsLength
    local.get $4
    local.get $5
    i32.add
    local.get $6
    local.get $2
    local.get $0
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#filter (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $3
  i32.const 0
  i32.store
  local.get $3
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $4
  i32.store
  local.get $0
  i32.load offset=12
  local.set $3
  loop $for-loop|0
   local.get $2
   local.get $3
   local.get $0
   i32.load offset=12
   local.tee $5
   local.get $3
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   if
    local.get $0
    i32.load offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $5
    i32.const 3
    global.set $~argumentsLength
    local.get $5
    local.get $2
    local.get $0
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $4
     local.get $5
     call $~lib/array/Array<i32>#push
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $std/array/Dim#constructor (result i32)
  (local $0 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 8
  i32.const 19
  call $~lib/rt/itcms/__new
  local.tee $0
  i32.store
  local.get $0
  i32.const 0
  i32.store
  local.get $0
  i32.const 0
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $0
 )
 (func $~lib/array/Array<f32>#sort@varargs (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   i32.const 8384
   local.set $1
   global.get $~lib/memory/__stack_pointer
   i32.const 8384
   i32.store
  end
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/util/sort/SORT<f32>
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/array/createReverseOrderedArray (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  local.get $0
  call $~lib/array/Array<i32>#constructor
  local.tee $2
  i32.store
  loop $for-loop|0
   local.get $0
   local.get $1
   i32.gt_s
   if
    local.get $2
    local.get $1
    local.get $0
    i32.const 1
    i32.sub
    local.get $1
    i32.sub
    call $~lib/array/Array<i32>#__set
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $std/array/createRandomOrderedArray (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $2
  i32.const 0
  i32.store
  local.get $2
  local.get $0
  call $~lib/array/Array<i32>#constructor
  local.tee $2
  i32.store
  loop $for-loop|0
   local.get $0
   local.get $1
   i32.gt_s
   if
    local.get $2
    local.get $1
    call $~lib/math/NativeMath.random
    local.get $0
    f64.convert_i32_s
    f64.mul
    i32.trunc_sat_f64_s
    call $~lib/array/Array<i32>#__set
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/string/String#substring (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  i32.const 0
  local.get $1
  i32.const 0
  local.get $1
  i32.const 0
  i32.gt_s
  select
  local.tee $2
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $1
  local.get $1
  local.get $2
  i32.gt_s
  select
  local.tee $2
  local.get $2
  i32.const 0
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.set $3
  i32.const 0
  local.get $2
  local.get $2
  i32.const 0
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.tee $4
  local.get $3
  i32.sub
  local.tee $2
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 9696
   return
  end
  i32.const 0
  local.get $4
  local.get $1
  i32.const 1
  i32.shl
  i32.eq
  local.get $3
  select
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  local.get $0
  local.get $3
  i32.add
  local.get $2
  memory.copy
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/util/number/itoa32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 10288
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  i32.sub
  local.get $0
  local.get $0
  i32.const 31
  i32.shr_u
  i32.const 1
  i32.shl
  local.tee $0
  select
  local.tee $2
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $2
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $2
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $2
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $2
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $2
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $2
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $2
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.tee $1
  i32.const 1
  i32.shl
  local.get $0
  i32.add
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store
  local.get $0
  local.get $3
  i32.add
  local.get $2
  local.get $1
  call $~lib/util/number/utoa32_dec_lut
  local.get $0
  if
   local.get $3
   i32.const 45
   i32.store16
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/util/number/utoa32 (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 10288
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 100000
  i32.lt_u
  if (result i32)
   local.get $0
   i32.const 100
   i32.lt_u
   if (result i32)
    local.get $0
    i32.const 10
    i32.ge_u
    i32.const 1
    i32.add
   else
    local.get $0
    i32.const 10000
    i32.ge_u
    i32.const 3
    i32.add
    local.get $0
    i32.const 1000
    i32.ge_u
    i32.add
   end
  else
   local.get $0
   i32.const 10000000
   i32.lt_u
   if (result i32)
    local.get $0
    i32.const 1000000
    i32.ge_u
    i32.const 6
    i32.add
   else
    local.get $0
    i32.const 1000000000
    i32.ge_u
    i32.const 8
    i32.add
    local.get $0
    i32.const 100000000
    i32.ge_u
    i32.add
   end
  end
  local.tee $2
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $1
  local.get $0
  local.get $2
  call $~lib/util/number/utoa32_dec_lut
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/util/string/joinStringArray (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.tee $5
  i64.const 0
  i64.store
  local.get $5
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.tee $5
  i32.const 0
  i32.lt_s
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 9696
   return
  end
  local.get $5
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.tee $1
   local.get $0
   i32.load
   local.tee $0
   i32.store
   local.get $1
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   i32.const 9696
   local.get $0
   select
   return
  end
  loop $for-loop|0
   local.get $1
   local.get $4
   i32.gt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $6
    i32.store offset=4
    local.get $6
    if
     local.get $3
     local.get $6
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     i32.add
     local.set $3
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $3
  local.get $2
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $3
  local.get $5
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store offset=8
  i32.const 0
  local.set $4
  loop $for-loop|1
   local.get $4
   local.get $5
   i32.lt_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $7
    i32.store offset=4
    local.get $7
    if
     local.get $6
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     local.get $7
     local.get $7
     i32.const 20
     i32.sub
     i32.load offset=16
     i32.const 1
     i32.shr_u
     local.tee $7
     i32.const 1
     i32.shl
     memory.copy
     local.get $1
     local.get $7
     i32.add
     local.set $1
    end
    local.get $3
    if
     local.get $6
     local.get $1
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $3
     i32.const 1
     i32.shl
     memory.copy
     local.get $1
     local.get $3
     i32.add
     local.set $1
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $5
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $0
  i32.store offset=4
  local.get $0
  if
   local.get $6
   local.get $1
   i32.const 1
   i32.shl
   i32.add
   local.get $0
   local.get $0
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 1
   i32.shl
   memory.copy
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#flat (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 16268
  i32.lt_s
  if
   i32.const 32672
   i32.const 32720
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  local.set $0
  loop $for-loop|0
   local.get $0
   local.get $3
   i32.lt_s
   if
    local.get $2
    local.get $0
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $4
    if (result i32)
     local.get $4
     i32.load offset=12
    else
     i32.const 0
    end
    local.get $1
    i32.add
    local.set $1
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 2
  i32.shl
  local.tee $0
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 3
  call $~lib/rt/itcms/__new
  local.tee $4
  i32.store offset=4
  local.get $4
  local.get $1
  i32.store offset=12
  local.get $4
  local.get $0
  i32.store offset=8
  local.get $4
  local.get $5
  i32.store offset=4
  local.get $4
  local.get $5
  i32.store
  local.get $5
  if
   local.get $4
   local.get $5
   i32.const 0
   call $byn-split-outlined-A$~lib/rt/itcms/__link
  end
  i32.const 0
  local.set $1
  i32.const 0
  local.set $0
  loop $for-loop|1
   local.get $0
   local.get $3
   i32.lt_s
   if
    local.get $2
    local.get $0
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $6
    if
     local.get $1
     local.get $5
     i32.add
     local.get $6
     i32.load offset=4
     local.get $6
     i32.load offset=12
     i32.const 2
     i32.shl
     local.tee $6
     memory.copy
     local.get $1
     local.get $6
     i32.add
     local.set $1
    end
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $byn-split-outlined-A$~lib/rt/itcms/__visit (param $0 i32)
  global.get $~lib/rt/itcms/white
  local.get $0
  i32.const 20
  i32.sub
  local.tee $0
  i32.load offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $byn-split-outlined-A$~lib/rt/itcms/__link (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 1216
   i32.const 294
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/white
  local.get $1
  i32.const 20
  i32.sub
  local.tee $1
  i32.load offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   i32.const 20
   i32.sub
   local.tee $0
   i32.load offset=4
   i32.const 3
   i32.and
   local.tee $3
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $0
    local.get $1
    local.get $2
    select
    call $~lib/rt/itcms/Object#makeGray
   else
    global.get $~lib/rt/itcms/state
    i32.const 1
    i32.eq
    local.get $3
    i32.const 3
    i32.eq
    i32.and
    if
     local.get $1
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
)

(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $i64_i32_i32_=>_i32 (func (param i64 i32 i32) (result i32)))
 (type $i64_i64_=>_i32 (func (param i64 i64) (result i32)))
 (type $f32_i32_i32_=>_i32 (func (param f32 i32 i32) (result i32)))
 (type $f64_i32_i32_=>_i32 (func (param f64 i32 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32)))
 (type $f64_f64_=>_i32 (func (param f64 f64) (result i32)))
 (type $f32_f32_=>_i32 (func (param f32 f32) (result i32)))
 (type $i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i64_i64_i32_i32_=>_i64 (func (param i64 i64 i32 i32) (result i64)))
 (type $i32_i32_=>_i64 (func (param i32 i32) (result i64)))
 (type $i32_i64_i32_=>_i32 (func (param i32 i64 i32) (result i32)))
 (type $i32_i32_=>_f64 (func (param i32 i32) (result f64)))
 (type $i32_i32_i64_=>_i64 (func (param i32 i32 i64) (result i64)))
 (type $f32_f32_i32_i32_=>_f32 (func (param f32 f32 i32 i32) (result f32)))
 (type $f64_f64_i32_i32_=>_f64 (func (param f64 f64 i32 i32) (result f64)))
 (type $i32_i32_=>_f32 (func (param i32 i32) (result f32)))
 (type $i64_i32_i32_=>_i64 (func (param i64 i32 i32) (result i64)))
 (type $i64_i32_i32_=>_none (func (param i64 i32 i32)))
 (type $i32_f32_i32_=>_i32 (func (param i32 f32 i32) (result i32)))
 (type $i32_f64_i32_=>_i32 (func (param i32 f64 i32) (result i32)))
 (type $i64_i32_=>_i32 (func (param i64 i32) (result i32)))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i32_i64_=>_none (func (param i32 i32 i64)))
 (type $i32_i32_f32_=>_f32 (func (param i32 i32 f32) (result f32)))
 (type $i32_i32_f64_=>_f64 (func (param i32 i32 f64) (result f64)))
 (type $f32_i32_i32_=>_f32 (func (param f32 i32 i32) (result f32)))
 (type $f64_i32_i32_=>_f64 (func (param f64 i32 i32) (result f64)))
 (type $f32_i32_i32_=>_none (func (param f32 i32 i32)))
 (type $f64_i32_i32_=>_none (func (param f64 i32 i32)))
 (type $i32_i64_i32_=>_none (func (param i32 i64 i32)))
 (type $i32_i64_=>_i32 (func (param i32 i64) (result i32)))
 (type $i32_f64_=>_i32 (func (param i32 f64) (result i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_i32_f64_=>_none (func (param i32 i32 f64)))
 (type $i32_i32_f32_=>_none (func (param i32 i32 f32)))
 (type $f32_f32_=>_f32 (func (param f32 f32) (result f32)))
 (type $f64_f64_=>_f64 (func (param f64 f64) (result f64)))
 (type $i32_i64_i32_i32_=>_none (func (param i32 i64 i32 i32)))
 (type $i64_=>_i32 (func (param i64) (result i32)))
 (type $i32_i64_i32_i64_i32_i64_i32_=>_i32 (func (param i32 i64 i32 i64 i32 i64 i32) (result i32)))
 (type $i32_i32_f64_f64_f64_f64_f64_=>_none (func (param i32 i32 f64 f64 f64 f64 f64)))
 (type $f64_=>_i32 (func (param f64) (result i32)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "trace" (func $~lib/builtins/trace (param i32 i32 f64 f64 f64 f64 f64)))
 (global $~lib/typedarray/Int8Array.BYTES_PER_ELEMENT i32 (i32.const 1))
 (global $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT i32 (i32.const 1))
 (global $~lib/typedarray/Uint8ClampedArray.BYTES_PER_ELEMENT i32 (i32.const 1))
 (global $~lib/typedarray/Int16Array.BYTES_PER_ELEMENT i32 (i32.const 2))
 (global $~lib/typedarray/Uint16Array.BYTES_PER_ELEMENT i32 (i32.const 2))
 (global $~lib/typedarray/Int32Array.BYTES_PER_ELEMENT i32 (i32.const 4))
 (global $~lib/typedarray/Uint32Array.BYTES_PER_ELEMENT i32 (i32.const 4))
 (global $~lib/typedarray/Int64Array.BYTES_PER_ELEMENT i32 (i32.const 8))
 (global $~lib/typedarray/Uint64Array.BYTES_PER_ELEMENT i32 (i32.const 8))
 (global $~lib/typedarray/Float32Array.BYTES_PER_ELEMENT i32 (i32.const 4))
 (global $~lib/typedarray/Float64Array.BYTES_PER_ELEMENT i32 (i32.const 8))
 (global $~lib/shared/runtime/Runtime.Stub i32 (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Minimal i32 (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Incremental i32 (i32.const 2))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/native/ASC_LOW_MEMORY_LIMIT i32 (i32.const 0))
 (global $~lib/native/ASC_RUNTIME i32 (i32.const 2))
 (global $~lib/native/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/builtins/u32.MAX_VALUE i32 (i32.const -1))
 (global $~lib/builtins/i32.MAX_VALUE i32 (i32.const 2147483647))
 (global $std/typedarray/forEachCallCount (mut i32) (i32.const 0))
 (global $std/typedarray/forEachSelf (mut i32) (i32.const 0))
 (global $std/typedarray/forEachValues i32 (i32.const 6128))
 (global $std/typedarray/testArrayReverseValues i32 (i32.const 6592))
 (global $std/typedarray/testArrayIndexOfAndLastIndexOfValues i32 (i32.const 6704))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $std/typedarray/testArrayWrapValues i32 (i32.const 9904))
 (global $std/typedarray/setSource1 (mut i32) (i32.const 9984))
 (global $std/typedarray/setSource2 (mut i32) (i32.const 10064))
 (global $std/typedarray/setSource3 (mut i32) (i32.const 10160))
 (global $std/typedarray/setSource7 (mut i32) (i32.const 10240))
 (global $~lib/rt/__rtti_base i32 (i32.const 14976))
 (global $~lib/memory/__data_end i32 (i32.const 15604))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 31988))
 (global $~lib/memory/__heap_base i32 (i32.const 31988))
 (memory $0 1)
 (data (i32.const 12) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 60) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 124) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00")
 (data (i32.const 188) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 256) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 288) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 316) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 380) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 432) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 460) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 524) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\"\00\00\00s\00t\00d\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 588) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00~\00l\00i\00b\00/\00t\00y\00p\00e\00d\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 652) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 684) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\01\04\05\00\00\00\00\00\00\00")
 (data (i32.const 716) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00")
 (data (i32.const 764) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 796) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 828) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\02\02\00\00\00\00\00\00\00")
 (data (i32.const 860) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\02\02\00\00\00\00\00\00\00")
 (data (i32.const 892) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 924) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 956) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1004) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1052) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1100) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1148) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1196) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1228) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1276) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1324) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\04\00\00\00\05\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1372) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1420) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1468) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1516) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\04\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1564) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1612) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1660) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1708) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1756) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1804) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1852) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1884) "\1c\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1916) "\1c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\08\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1948) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1980) "\1c\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\08\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2012) "\1c\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\08\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2044) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2076) "\1c\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2108) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2140) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2172) "\1c\00\00\00\00\00\00\00\00\00\00\00\1b\00\00\00\08\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2204) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00\r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2236) "\1c\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\08\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2268) "\1c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\08\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2300) "\1c\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\08\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2332) "\1c\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\08\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2364) "\1c\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\08\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2396) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\00\13\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2428) "\1c\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\08\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2460) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\00\15\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2492) "\1c\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\08\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2524) "\1c\00\00\00\00\00\00\00\00\00\00\00\1b\00\00\00\08\00\00\00\17\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2556) "\1c\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\08\00\00\00\18\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2588) "\1c\00\00\00\00\00\00\00\00\00\00\00\1d\00\00\00\08\00\00\00\19\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2620) "\1c\00\00\00\00\00\00\00\00\00\00\00\1e\00\00\00\08\00\00\00\1a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2652) "\1c\00\00\00\00\00\00\00\00\00\00\00\1f\00\00\00\08\00\00\00\1b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2684) "\1c\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\08\00\00\00\1c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2716) "\1c\00\00\00\00\00\00\00\00\00\00\00!\00\00\00\08\00\00\00\1d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2748) "\1c\00\00\00\00\00\00\00\00\00\00\00\"\00\00\00\08\00\00\00\1e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2780) "\1c\00\00\00\00\00\00\00\00\00\00\00#\00\00\00\08\00\00\00\1f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2812) "\1c\00\00\00\00\00\00\00\00\00\00\00$\00\00\00\08\00\00\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2844) "\1c\00\00\00\00\00\00\00\00\00\00\00%\00\00\00\08\00\00\00!\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2876) "\1c\00\00\00\00\00\00\00\00\00\00\00&\00\00\00\08\00\00\00\"\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2908) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00#\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2940) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00$\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2972) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00%\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3004) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00&\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3036) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00\'\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3068) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00(\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3100) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00)\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3132) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00*\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3164) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00+\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3196) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3228) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00-\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3260) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3292) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00/\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3324) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3356) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\001\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3388) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\002\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3420) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\003\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3452) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\004\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3484) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\005\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3516) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\006\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3548) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\007\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3580) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\008\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3612) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\009\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3644) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00:\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3676) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00;\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3708) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00<\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3740) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00=\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3772) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00>\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3804) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00?\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3836) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00@\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3868) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00A\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3900) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00B\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3932) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00C\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3964) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00D\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3996) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00E\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4028) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00F\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4060) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00G\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4092) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00H\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4124) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00I\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4156) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00J\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4188) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00K\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4220) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00L\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4252) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00M\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4284) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00N\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4316) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00O\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4348) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00P\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4380) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00Q\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4412) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00R\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4444) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00S\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4476) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00T\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4508) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00U\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4540) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00V\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4572) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00W\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4604) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00X\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4636) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00Y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4668) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00Z\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4700) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00[\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4732) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00\\\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4764) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00]\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4796) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00^\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4828) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00_\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4860) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00`\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4892) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4924) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4956) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4988) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5020) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5052) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5084) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00g\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5116) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00h\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5148) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00i\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5180) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00j\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5212) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00k\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5244) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00l\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5276) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00m\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5308) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5340) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00o\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5372) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00p\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5404) "\1c\00\00\00\00\00\00\00\00\00\00\00\'\00\00\00\08\00\00\00q\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5436) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00r\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5468) "\1c\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\08\00\00\00s\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5500) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5532) "\1c\00\00\00\00\00\00\00\00\00\00\00)\00\00\00\08\00\00\00u\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5564) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00v\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5596) "\1c\00\00\00\00\00\00\00\00\00\00\00*\00\00\00\08\00\00\00w\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5628) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00x\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5660) "\1c\00\00\00\00\00\00\00\00\00\00\00+\00\00\00\08\00\00\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5692) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00z\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5724) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00{\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5756) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00|\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5788) "\1c\00\00\00\00\00\00\00\00\00\00\00-\00\00\00\08\00\00\00}\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5820) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00~\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5852) "\1c\00\00\00\00\00\00\00\00\00\00\00.\00\00\00\08\00\00\00\7f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5884) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\80\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5916) "\1c\00\00\00\00\00\00\00\00\00\00\00/\00\00\00\08\00\00\00\81\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5948) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00\82\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5980) "\1c\00\00\00\00\00\00\00\00\00\00\000\00\00\00\08\00\00\00\83\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6012) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00\84\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6044) "\1c\00\00\00\00\00\00\00\00\00\00\001\00\00\00\08\00\00\00\85\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6076) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\n\00\00\00\0c\00\00\00\0e\00\00\00")
 (data (i32.const 6108) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00\d0\17\00\00\d0\17\00\00\0c\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6156) "\1c\00\00\00\00\00\00\00\00\00\00\002\00\00\00\08\00\00\00\86\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6188) "\1c\00\00\00\00\00\00\00\00\00\00\003\00\00\00\08\00\00\00\87\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6220) "\1c\00\00\00\00\00\00\00\00\00\00\004\00\00\00\08\00\00\00\88\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6252) "\1c\00\00\00\00\00\00\00\00\00\00\005\00\00\00\08\00\00\00\89\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6284) "\1c\00\00\00\00\00\00\00\00\00\00\006\00\00\00\08\00\00\00\8a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6316) "\1c\00\00\00\00\00\00\00\00\00\00\007\00\00\00\08\00\00\00\8b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6348) "\1c\00\00\00\00\00\00\00\00\00\00\008\00\00\00\08\00\00\00\8c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6380) "\1c\00\00\00\00\00\00\00\00\00\00\009\00\00\00\08\00\00\00\8d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6412) "\1c\00\00\00\00\00\00\00\00\00\00\00:\00\00\00\08\00\00\00\8e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6444) "\1c\00\00\00\00\00\00\00\00\00\00\00;\00\00\00\08\00\00\00\8f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6476) "\1c\00\00\00\00\00\00\00\00\00\00\00<\00\00\00\08\00\00\00\90\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6508) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00$\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6572) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00\80\19\00\00\80\19\00\00$\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6620) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\n\00\00\00")
 (data (i32.const 6684) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00\f0\19\00\00\f0\19\00\00,\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6732) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6764) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6892) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 6956) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const
 (data (i32.const 7388) "\1c\04\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8444) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00\00\00\00\00")
 (data (i32.const 8540) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8572) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\001\00,\002\00,\003\00,\004\00,\005\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8620) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\000\00.\000\00\00\00\00\00\00\00")
 (data (i32.const 8652) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00N\00a\00N\00\00\00\00\00\00\00")
 (data (i32.const 8684) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8732) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8784) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8840) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\rXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data (i32.const 9536) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\r\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data (i32.const 9712) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data (i32.const 9756) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\001\00.\000\00,\002\00.\000\00,\003\00.\000\00,\004\00.\000\00,\005\00.\000\00\00\00\00\00\00\00")
 (data (i32.const 9820) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\n\00\00\00")
 (data (i32.const 9884) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00p&\00\00p&\00\00,\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9932) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00")
 (data (i32.const 9964) ",\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\10\00\00\00\e0&\00\00\e0&\00\00\0c\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10012) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\80@\00\00\a0@\00\00\c0@")
 (data (i32.const 10044) ",\00\00\00\00\00\00\00\00\00\00\00=\00\00\00\10\00\00\000\'\00\000\'\00\00\0c\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10092) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00\00\00\f0\7f\00\00\00\00\00\00\f8\7f\00\00\00\00\00\00\f0\ff\00\00\00\00")
 (data (i32.const 10140) ",\00\00\00\00\00\00\00\00\00\00\00>\00\00\00\10\00\00\00\80\'\00\00\80\'\00\00\18\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10188) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\92\91\90\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10220) ",\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\10\00\00\00\e0\'\00\00\e0\'\00\00\03\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10268) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10300) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00I\00n\00t\008\00A\00r\00r\00a\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10348) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\00\00\00\00\00\00")
 (data (i32.const 10380) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\07\08\t\00\00\00")
 (data (i32.const 10412) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\00\00\00\06\07\08\t\00\00\00")
 (data (i32.const 10444) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00defg\e8\e9\ea\92\91\90\00\00")
 (data (i32.const 10476) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10508) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00U\00i\00n\00t\008\00A\00r\00r\00a\00y\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10556) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\00\00\00\00\00\00")
 (data (i32.const 10588) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\07\08\t\00\00\00")
 (data (i32.const 10620) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\00\00\00\06\07\08\t\00\00\00")
 (data (i32.const 10652) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00defg\e8\e9\ea\92\91\90\00\00")
 (data (i32.const 10684) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10716) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\"\00\00\00U\00i\00n\00t\008\00C\00l\00a\00m\00p\00e\00d\00A\00r\00r\00a\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10780) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\00\00\00\00\00\00")
 (data (i32.const 10812) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\03\04\05\06\07\08\t\00\00\00")
 (data (i32.const 10844) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\02\00\00\00\06\07\08\t\00\00\00")
 (data (i32.const 10876) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00defg\ff\ff\ff\00\00\00\00\00")
 (data (i32.const 10908) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10956) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00I\00n\00t\001\006\00A\00r\00r\00a\00y\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11004) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11052) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\08\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11100) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\00\00\00\00\00\00\06\00\07\00\08\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11148) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00d\00e\00f\00g\00\e8\03\e9\03\ea\03\92\ff\91\ff\90\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 11196) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11244) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00U\00i\00n\00t\001\006\00A\00r\00r\00a\00y\00\00\00\00\00\00\00")
 (data (i32.const 11292) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11340) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\08\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11388) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\02\00\00\00\00\00\00\00\06\00\07\00\08\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11436) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00d\00e\00f\00g\00\e8\03\e9\03\ea\03\92\ff\91\ff\90\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 11484) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11548) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00I\00n\00t\003\002\00A\00r\00r\00a\00y\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11596) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11660) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11724) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11788) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00d\00\00\00e\00\00\00f\00\00\00g\00\00\00\e8\03\00\00\e9\03\00\00\ea\03\00\00\92\ff\ff\ff\91\ff\ff\ff\90\ff\ff\ff\00\00\00\00")
 (data (i32.const 11852) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11916) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00U\00i\00n\00t\003\002\00A\00r\00r\00a\00y\00\00\00\00\00\00\00")
 (data (i32.const 11964) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12028) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12092) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12156) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00d\00\00\00e\00\00\00f\00\00\00g\00\00\00\e8\03\00\00\e9\03\00\00\ea\03\00\00\92\ff\ff\ff\91\ff\ff\ff\90\ff\ff\ff\00\00\00\00")
 (data (i32.const 12220) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12332) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00I\00n\00t\006\004\00A\00r\00r\00a\00y\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12380) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12492) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12604) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12716) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00d\00\00\00\00\00\00\00e\00\00\00\00\00\00\00f\00\00\00\00\00\00\00g\00\00\00\00\00\00\00\e8\03\00\00\00\00\00\00\e9\03\00\00\00\00\00\00\ea\03\00\00\00\00\00\00\92\ff\ff\ff\ff\ff\ff\ff\91\ff\ff\ff\ff\ff\ff\ff\90\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12828) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12940) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00U\00i\00n\00t\006\004\00A\00r\00r\00a\00y\00\00\00\00\00\00\00")
 (data (i32.const 12988) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13100) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13212) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\07\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13324) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00d\00\00\00\00\00\00\00e\00\00\00\00\00\00\00f\00\00\00\00\00\00\00g\00\00\00\00\00\00\00\e8\03\00\00\00\00\00\00\e9\03\00\00\00\00\00\00\ea\03\00\00\00\00\00\00\92\ff\ff\ff\ff\ff\ff\ff\91\ff\ff\ff\ff\ff\ff\ff\90\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13436) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\00\00\80?\00\00\00@\00\00@@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13500) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00F\00l\00o\00a\00t\003\002\00A\00r\00r\00a\00y\00\00\00\00\00")
 (data (i32.const 13548) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\00\00\80?\00\00\00@\00\00@@\00\00\80@\00\00\a0@\00\00\c0@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13612) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\00\00\80?\00\00\00@\00\00@@\00\00\80@\00\00\a0@\00\00\c0@\00\00\e0@\00\00\00A\00\00\10A\00\00\00\00\00\00\00\00")
 (data (i32.const 13676) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\00\00\c8B\00\00\caB\00\00\ccB\00\00\ceB\00\00zD\00@zD\00\80zD\00\00\dc\c2\00\00\de\c2\00\00\e0\c2\00\00\00\00")
 (data (i32.const 13740) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\08@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13852) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00F\00l\00o\00a\00t\006\004\00A\00r\00r\00a\00y\00\00\00\00\00")
 (data (i32.const 13900) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\08@\00\00\00\00\00\00\10@\00\00\00\00\00\00\14@\00\00\00\00\00\00\18@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14012) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00@\00\00\00\00\00\00\08@\00\00\00\00\00\00\10@\00\00\00\00\00\00\14@\00\00\00\00\00\00\18@\00\00\00\00\00\00\1c@\00\00\00\00\00\00 @\00\00\00\00\00\00\"@\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14124) "l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00P\00\00\00\00\00\00\00\00\00Y@\00\00\00\00\00@Y@\00\00\00\00\00\80Y@\00\00\00\00\00\c0Y@\00\00\00\00\00@\8f@\00\00\00\00\00H\8f@\00\00\00\00\00P\8f@\00\00\00\00\00\80[\c0\00\00\00\00\00\c0[\c0\00\00\00\00\00\00\\\c0\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14236) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\00\ff\00\00\00d\n\ff\ff\00\00\00")
 (data (i32.const 14268) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\00\00\00\01\ffd\ff\00\00d\n\ff\00\00\00")
 (data (i32.const 14300) "\1c\00\00\00\00\00\00\00\00\00\00\00E\00\00\00\08\00\00\00\91\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14332) "\1c\00\00\00\00\00\00\00\00\00\00\00E\00\00\00\08\00\00\00\92\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14364) "\1c\00\00\00\00\00\00\00\00\00\00\00F\00\00\00\08\00\00\00\93\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14396) "\1c\00\00\00\00\00\00\00\00\00\00\00F\00\00\00\08\00\00\00\94\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14428) "\1c\00\00\00\00\00\00\00\00\00\00\00F\00\00\00\08\00\00\00\95\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14460) "\1c\00\00\00\00\00\00\00\00\00\00\00F\00\00\00\08\00\00\00\96\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14492) "\1c\00\00\00\00\00\00\00\00\00\00\00G\00\00\00\08\00\00\00\97\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14524) "\1c\00\00\00\00\00\00\00\00\00\00\00G\00\00\00\08\00\00\00\98\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14556) "\1c\00\00\00\00\00\00\00\00\00\00\00H\00\00\00\08\00\00\00\99\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14588) "\1c\00\00\00\00\00\00\00\00\00\00\00H\00\00\00\08\00\00\00\9a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14620) "\1c\00\00\00\00\00\00\00\00\00\00\00I\00\00\00\08\00\00\00\9b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14652) "\1c\00\00\00\00\00\00\00\00\00\00\00I\00\00\00\08\00\00\00\9c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14684) "\1c\00\00\00\00\00\00\00\00\00\00\00J\00\00\00\08\00\00\00\9d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14716) "\1c\00\00\00\00\00\00\00\00\00\00\00J\00\00\00\08\00\00\00\9e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14748) "\1c\00\00\00\00\00\00\00\00\00\00\00K\00\00\00\08\00\00\00\9f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14780) "\1c\00\00\00\00\00\00\00\00\00\00\00K\00\00\00\08\00\00\00\a0\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14812) "\1c\00\00\00\00\00\00\00\00\00\00\00L\00\00\00\08\00\00\00\a1\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14844) "\1c\00\00\00\00\00\00\00\00\00\00\00L\00\00\00\08\00\00\00\a2\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14876) "\1c\00\00\00\00\00\00\00\00\00\00\00M\00\00\00\08\00\00\00\a3\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14908) "\1c\00\00\00\00\00\00\00\00\00\00\00M\00\00\00\08\00\00\00\a4\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14940) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\a5\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14976) "N\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00A\08\00\00\02\00\00\00A\00\00\00\02\00\00\00A\00\00\00\02\00\00\00\81\08\00\00\02\00\00\00\81\00\00\00\02\00\00\00\01\t\00\00\02\00\00\00\01\01\00\00\02\00\00\00\01\n\00\00\02\00\00\00\01\02\00\00\02\00\00\00\01\19\00\00\02\00\00\00\01\1a\00\00\02\00\00\00\00\00\00\00\00\00\00\00B\08\00\00\00\00\00\00\02\ta\00\00\00\00\00\00B\00\00\00\00\00\00\00\82\08\00\00\00\00\00\00\82\00\00\00\00\00\00\00\02\01\00\00\00\00\00\00\02\n\00\00\00\00\00\00\02\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (table $0 166 166 funcref)
 (elem $0 (i32.const 1) $~lib/util/sort/COMPARATOR<f64>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testReduce<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testReduceRight<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayMap<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayFilter<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int8Array,i8>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint8Array,u8>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int16Array,i16>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint16Array,u16>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int32Array,i32>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint32Array,u32>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Int64Array,i64>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Uint64Array,u64>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Float32Array,f32>~anonymous|1 $std/typedarray/testArraySome<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArraySome<~lib/typedarray/Float64Array,f64>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int8Array,i8>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8Array,u8>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int16Array,i16>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint16Array,u16>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int32Array,i32>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint32Array,u32>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Int64Array,i64>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint64Array,u64>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Float32Array,f32>~anonymous|1 $std/typedarray/testArrayFindIndex<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayFindIndex<~lib/typedarray/Float64Array,f64>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int8Array,i8>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8Array,u8>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int16Array,i16>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint16Array,u16>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int32Array,i32>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint32Array,u32>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int64Array,i64>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint64Array,u64>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float32Array,f32>~anonymous|1 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float64Array,f64>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Int8Array,i8>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint8Array,u8>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Int16Array,i16>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint16Array,u16>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Int32Array,i32>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint32Array,u32>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Int64Array,i64>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Uint64Array,u64>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Float32Array,f32>~anonymous|1 $std/typedarray/testArrayEvery<~lib/typedarray/Float64Array,f64>~anonymous|0 $std/typedarray/testArrayEvery<~lib/typedarray/Float64Array,f64>~anonymous|1 $std/typedarray/testArrayForEach<~lib/typedarray/Int8Array,i8>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint8Array,u8>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Int16Array,i16>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint16Array,u16>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Int32Array,i32>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint32Array,u32>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Int64Array,i64>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Uint64Array,u64>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArrayForEach<~lib/typedarray/Float64Array,f64>~anonymous|0 $~lib/util/sort/COMPARATOR<i8>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Int8Array,i8>~anonymous|0 $~lib/util/sort/COMPARATOR<u8>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Uint8Array,u8>~anonymous|0 $~lib/util/sort/COMPARATOR<u8>~anonymous|1 $std/typedarray/testArraySort<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 $~lib/util/sort/COMPARATOR<i16>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Int16Array,i16>~anonymous|0 $~lib/util/sort/COMPARATOR<u16>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Uint16Array,u16>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Int32Array,i32>~anonymous|0 $~lib/util/sort/COMPARATOR<u32>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Uint32Array,u32>~anonymous|0 $~lib/util/sort/COMPARATOR<i64>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Int64Array,i64>~anonymous|0 $~lib/util/sort/COMPARATOR<u64>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Uint64Array,u64>~anonymous|0 $~lib/util/sort/COMPARATOR<f32>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Float32Array,f32>~anonymous|0 $std/typedarray/testArraySort<~lib/typedarray/Float64Array,f64>~anonymous|0)
 (export "memory" (memory $0))
 (start $~start)
 (func $~lib/rt/itcms/Object#set:nextWithColor (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/itcms/Object#set:prev (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/rt/itcms/initLazy (param $space i32) (result i32)
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $space
  local.get $space
  call $~lib/rt/itcms/Object#set:prev
  local.get $space
 )
 (func $~lib/rt/itcms/Object#get:next (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
 )
 (func $~lib/rt/itcms/Object#get:color (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.and
 )
 (func $~lib/rt/itcms/visitRoots (param $cookie i32)
  (local $pn i32)
  (local $iter i32)
  (local $var$3 i32)
  local.get $cookie
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.set $pn
  local.get $pn
  call $~lib/rt/itcms/Object#get:next
  local.set $iter
  loop $while-continue|0
   local.get $iter
   local.get $pn
   i32.ne
   local.set $var$3
   local.get $var$3
   if
    i32.const 1
    drop
    local.get $iter
    call $~lib/rt/itcms/Object#get:color
    i32.const 3
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 208
     i32.const 159
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $iter
    i32.const 20
    i32.add
    local.get $cookie
    call $~lib/rt/__visit_members
    local.get $iter
    call $~lib/rt/itcms/Object#get:next
    local.set $iter
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (param $this i32) (param $color i32)
  local.get $this
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $color
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#set:next (param $this i32) (param $obj i32)
  local.get $this
  local.get $obj
  local.get $this
  i32.load $0 offset=4
  i32.const 3
  i32.and
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#unlink (param $this i32)
  (local $next i32)
  (local $prev i32)
  local.get $this
  call $~lib/rt/itcms/Object#get:next
  local.set $next
  local.get $next
  i32.const 0
  i32.eq
  if
   i32.const 1
   drop
   local.get $this
   i32.load $0 offset=8
   i32.const 0
   i32.eq
   if (result i32)
    local.get $this
    global.get $~lib/memory/__heap_base
    i32.lt_u
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 208
    i32.const 127
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $this
  i32.load $0 offset=8
  local.set $prev
  i32.const 1
  drop
  local.get $prev
  i32.eqz
  if
   i32.const 0
   i32.const 208
   i32.const 131
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $next
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $next
  call $~lib/rt/itcms/Object#set:next
 )
 (func $~lib/rt/__typeinfo (param $id i32) (result i32)
  (local $ptr i32)
  global.get $~lib/rt/__rtti_base
  local.set $ptr
  local.get $id
  local.get $ptr
  i32.load $0
  i32.gt_u
  if
   i32.const 336
   i32.const 400
   i32.const 22
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.get $ptr
  i32.const 4
  i32.add
  local.get $id
  i32.const 8
  i32.mul
  i32.add
  i32.load $0
 )
 (func $~lib/rt/itcms/Object#get:isPointerfree (param $this i32) (result i32)
  (local $rtId i32)
  local.get $this
  i32.load $0 offset=12
  local.set $rtId
  local.get $rtId
  i32.const 1
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $rtId
   call $~lib/rt/__typeinfo
   i32.const 32
   i32.and
   i32.const 0
   i32.ne
  end
 )
 (func $~lib/rt/itcms/Object#linkTo (param $this i32) (param $list i32) (param $withColor i32)
  (local $prev i32)
  local.get $list
  i32.load $0 offset=8
  local.set $prev
  local.get $this
  local.get $list
  local.get $withColor
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $this
  local.get $prev
  call $~lib/rt/itcms/Object#set:prev
  local.get $prev
  local.get $this
  call $~lib/rt/itcms/Object#set:next
  local.get $list
  local.get $this
  call $~lib/rt/itcms/Object#set:prev
 )
 (func $~lib/rt/itcms/Object#makeGray (param $this i32)
  (local $var$1 i32)
  local.get $this
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $this
   i32.load $0 offset=8
   local.tee $var$1
   i32.eqz
   if (result i32)
    i32.const 0
    i32.const 208
    i32.const 147
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   else
    local.get $var$1
   end
   global.set $~lib/rt/itcms/iter
  end
  local.get $this
  call $~lib/rt/itcms/Object#unlink
  local.get $this
  global.get $~lib/rt/itcms/toSpace
  local.get $this
  call $~lib/rt/itcms/Object#get:isPointerfree
  if (result i32)
   global.get $~lib/rt/itcms/white
   i32.eqz
  else
   i32.const 2
  end
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/itcms/__visit (param $ptr i32) (param $cookie i32)
  (local $obj i32)
  local.get $ptr
  i32.eqz
  if
   return
  end
  local.get $ptr
  i32.const 20
  i32.sub
  local.set $obj
  i32.const 0
  drop
  local.get $obj
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $obj
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/itcms/visitStack (param $cookie i32)
  (local $ptr i32)
  (local $var$2 i32)
  global.get $~lib/memory/__stack_pointer
  local.set $ptr
  loop $while-continue|0
   local.get $ptr
   global.get $~lib/memory/__heap_base
   i32.lt_u
   local.set $var$2
   local.get $var$2
   if
    local.get $ptr
    i32.load $0
    local.get $cookie
    call $~lib/rt/itcms/__visit
    local.get $ptr
    i32.const 4
    i32.add
    local.set $ptr
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#get:size (param $this i32) (result i32)
  i32.const 4
  local.get $this
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
 )
 (func $~lib/rt/tlsf/Root#set:flMap (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
 )
 (func $~lib/rt/tlsf/Block#set:prev (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/Block#set:next (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/rt/tlsf/removeBlock (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $prev i32)
  (local $next i32)
  (local $var$10 i32)
  (local $var$11 i32)
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 480
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 480
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $var$6
   i32.const 1073741820
   local.tee $var$7
   local.get $var$6
   local.get $var$7
   i32.lt_u
   select
   local.set $var$6
   i32.const 31
   local.get $var$6
   i32.clz
   i32.sub
   local.set $fl
   local.get $var$6
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 480
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  i32.load $0 offset=4
  local.set $prev
  local.get $block
  i32.load $0 offset=8
  local.set $next
  local.get $prev
  if
   local.get $prev
   local.get $next
   call $~lib/rt/tlsf/Block#set:next
  end
  local.get $next
  if
   local.get $next
   local.get $prev
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $block
  local.get $root
  local.set $var$10
  local.get $fl
  local.set $var$6
  local.get $sl
  local.set $var$7
  local.get $var$10
  local.get $var$6
  i32.const 4
  i32.shl
  local.get $var$7
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  i32.eq
  if
   local.get $root
   local.set $var$11
   local.get $fl
   local.set $var$10
   local.get $sl
   local.set $var$6
   local.get $next
   local.set $var$7
   local.get $var$11
   local.get $var$10
   i32.const 4
   i32.shl
   local.get $var$6
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $var$7
   i32.store $0 offset=96
   local.get $next
   i32.eqz
   if
    local.get $root
    local.set $var$6
    local.get $fl
    local.set $var$7
    local.get $var$6
    local.get $var$7
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $var$6
    local.get $root
    local.set $var$7
    local.get $fl
    local.set $var$11
    local.get $var$6
    i32.const 1
    local.get $sl
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.tee $var$6
    local.set $var$10
    local.get $var$7
    local.get $var$11
    i32.const 2
    i32.shl
    i32.add
    local.get $var$10
    i32.store $0 offset=4
    local.get $var$6
    i32.eqz
    if
     local.get $root
     local.get $root
     i32.load $0
     i32.const 1
     local.get $fl
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     call $~lib/rt/tlsf/Root#set:flMap
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $root i32) (param $block i32)
  (local $blockInfo i32)
  (local $var$3 i32)
  (local $right i32)
  (local $rightInfo i32)
  (local $var$6 i32)
  (local $size i32)
  (local $fl i32)
  (local $sl i32)
  (local $var$10 i32)
  (local $head i32)
  (local $var$12 i32)
  (local $var$13 i32)
  i32.const 1
  drop
  local.get $block
  i32.eqz
  if
   i32.const 0
   i32.const 480
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $blockInfo
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 480
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
  local.set $var$3
  local.get $var$3
  i32.const 4
  i32.add
  local.get $var$3
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
  local.set $right
  local.get $right
  i32.load $0
  local.set $rightInfo
  local.get $rightInfo
  i32.const 1
  i32.and
  if
   local.get $root
   local.get $right
   call $~lib/rt/tlsf/removeBlock
   local.get $block
   local.get $blockInfo
   i32.const 4
   i32.add
   local.get $rightInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   local.set $var$3
   local.get $var$3
   i32.const 4
   i32.add
   local.get $var$3
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.set $right
   local.get $right
   i32.load $0
   local.set $rightInfo
  end
  local.get $blockInfo
  i32.const 2
  i32.and
  if
   local.get $block
   local.set $var$3
   local.get $var$3
   i32.const 4
   i32.sub
   i32.load $0
   local.set $var$3
   local.get $var$3
   i32.load $0
   local.set $var$6
   i32.const 1
   drop
   local.get $var$6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 480
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $root
   local.get $var$3
   call $~lib/rt/tlsf/removeBlock
   local.get $var$3
   local.set $block
   local.get $block
   local.get $var$6
   i32.const 4
   i32.add
   local.get $blockInfo
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $blockInfo
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
  local.get $right
  local.get $rightInfo
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $size
  i32.const 1
  drop
  local.get $size
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 480
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  drop
  local.get $block
  i32.const 4
  i32.add
  local.get $size
  i32.add
  local.get $right
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 480
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $right
  i32.const 4
  i32.sub
  local.get $block
  i32.store $0
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   local.tee $var$3
   i32.const 1073741820
   local.tee $var$6
   local.get $var$3
   local.get $var$6
   i32.lt_u
   select
   local.set $var$3
   i32.const 31
   local.get $var$3
   i32.clz
   i32.sub
   local.set $fl
   local.get $var$3
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 480
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $root
  local.set $var$10
  local.get $fl
  local.set $var$3
  local.get $sl
  local.set $var$6
  local.get $var$10
  local.get $var$3
  i32.const 4
  i32.shl
  local.get $var$6
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=96
  local.set $head
  local.get $block
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $block
  local.get $head
  call $~lib/rt/tlsf/Block#set:next
  local.get $head
  if
   local.get $head
   local.get $block
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $root
  local.set $var$12
  local.get $fl
  local.set $var$10
  local.get $sl
  local.set $var$3
  local.get $block
  local.set $var$6
  local.get $var$12
  local.get $var$10
  i32.const 4
  i32.shl
  local.get $var$3
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $var$6
  i32.store $0 offset=96
  local.get $root
  local.get $root
  i32.load $0
  i32.const 1
  local.get $fl
  i32.shl
  i32.or
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $var$13
  local.get $fl
  local.set $var$12
  local.get $root
  local.set $var$3
  local.get $fl
  local.set $var$6
  local.get $var$3
  local.get $var$6
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=4
  i32.const 1
  local.get $sl
  i32.shl
  i32.or
  local.set $var$10
  local.get $var$13
  local.get $var$12
  i32.const 2
  i32.shl
  i32.add
  local.get $var$10
  i32.store $0 offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $root i32) (param $start i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $tail i32)
  (local $tailInfo i32)
  (local $size i32)
  (local $leftSize i32)
  (local $left i32)
  (local $var$9 i32)
  i32.const 1
  drop
  local.get $start
  local.get $end
  i32.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 480
   i32.const 377
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $start
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $start
  local.get $end
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $end
  local.get $root
  local.set $var$3
  local.get $var$3
  i32.load $0 offset=1568
  local.set $tail
  i32.const 0
  local.set $tailInfo
  local.get $tail
  if
   i32.const 1
   drop
   local.get $start
   local.get $tail
   i32.const 4
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 480
    i32.const 384
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $start
   i32.const 16
   i32.sub
   local.get $tail
   i32.eq
   if
    local.get $start
    i32.const 16
    i32.sub
    local.set $start
    local.get $tail
    i32.load $0
    local.set $tailInfo
   else
    nop
   end
  else
   i32.const 1
   drop
   local.get $start
   local.get $root
   i32.const 1572
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 480
    i32.const 397
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $end
  local.get $start
  i32.sub
  local.set $size
  local.get $size
  i32.const 4
  i32.const 12
  i32.add
  i32.const 4
  i32.add
  i32.lt_u
  if
   i32.const 0
   return
  end
  local.get $size
  i32.const 2
  i32.const 4
  i32.mul
  i32.sub
  local.set $leftSize
  local.get $start
  local.set $left
  local.get $left
  local.get $leftSize
  i32.const 1
  i32.or
  local.get $tailInfo
  i32.const 2
  i32.and
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $left
  i32.const 0
  call $~lib/rt/tlsf/Block#set:next
  local.get $start
  i32.const 4
  i32.add
  local.get $leftSize
  i32.add
  local.set $tail
  local.get $tail
  i32.const 0
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.set $var$9
  local.get $tail
  local.set $var$3
  local.get $var$9
  local.get $var$3
  i32.store $0 offset=1568
  local.get $root
  local.get $left
  call $~lib/rt/tlsf/insertBlock
  i32.const 1
 )
 (func $~lib/rt/tlsf/initialize
  (local $rootOffset i32)
  (local $pagesBefore i32)
  (local $pagesNeeded i32)
  (local $root i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $memStart i32)
  i32.const 0
  drop
  global.get $~lib/memory/__heap_base
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $rootOffset
  memory.size $0
  local.set $pagesBefore
  local.get $rootOffset
  i32.const 1572
  i32.add
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesNeeded
  local.get $pagesBefore
  i32.gt_s
  if (result i32)
   local.get $pagesNeeded
   local.get $pagesBefore
   i32.sub
   memory.grow $0
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  local.get $rootOffset
  local.set $root
  local.get $root
  i32.const 0
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $root
  local.set $var$5
  i32.const 0
  local.set $var$4
  local.get $var$5
  local.get $var$4
  i32.store $0 offset=1568
  i32.const 0
  local.set $var$5
  loop $for-loop|0
   local.get $var$5
   i32.const 23
   i32.lt_u
   local.set $var$4
   local.get $var$4
   if
    local.get $root
    local.set $var$8
    local.get $var$5
    local.set $var$7
    i32.const 0
    local.set $var$6
    local.get $var$8
    local.get $var$7
    i32.const 2
    i32.shl
    i32.add
    local.get $var$6
    i32.store $0 offset=4
    i32.const 0
    local.set $var$8
    loop $for-loop|1
     local.get $var$8
     i32.const 16
     i32.lt_u
     local.set $var$7
     local.get $var$7
     if
      local.get $root
      local.set $var$11
      local.get $var$5
      local.set $var$10
      local.get $var$8
      local.set $var$9
      i32.const 0
      local.set $var$6
      local.get $var$11
      local.get $var$10
      i32.const 4
      i32.shl
      local.get $var$9
      i32.add
      i32.const 2
      i32.shl
      i32.add
      local.get $var$6
      i32.store $0 offset=96
      local.get $var$8
      i32.const 1
      i32.add
      local.set $var$8
      br $for-loop|1
     end
    end
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
  local.get $rootOffset
  i32.const 1572
  i32.add
  local.set $memStart
  i32.const 0
  drop
  local.get $root
  local.get $memStart
  memory.size $0
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
  local.get $root
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/checkUsedBlock (param $ptr i32) (result i32)
  (local $block i32)
  local.get $ptr
  i32.const 4
  i32.sub
  local.set $block
  local.get $ptr
  i32.const 0
  i32.ne
  if (result i32)
   local.get $ptr
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $block
   i32.load $0
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 480
   i32.const 559
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $block
 )
 (func $~lib/rt/tlsf/freeBlock (param $root i32) (param $block i32)
  i32.const 0
  drop
  local.get $block
  local.get $block
  i32.load $0
  i32.const 1
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/__free (param $ptr i32)
  local.get $ptr
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $ptr
  call $~lib/rt/tlsf/checkUsedBlock
  call $~lib/rt/tlsf/freeBlock
 )
 (func $~lib/rt/itcms/free (param $obj i32)
  local.get $obj
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:nextWithColor
   local.get $obj
   i32.const 0
   call $~lib/rt/itcms/Object#set:prev
  else
   global.get $~lib/rt/itcms/total
   local.get $obj
   call $~lib/rt/itcms/Object#get:size
   i32.sub
   global.set $~lib/rt/itcms/total
   i32.const 0
   drop
   local.get $obj
   i32.const 4
   i32.add
   call $~lib/rt/tlsf/__free
  end
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $obj i32)
  (local $var$1 i32)
  (local $var$2 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      local.set $var$1
      local.get $var$1
      i32.const 0
      i32.eq
      br_if $case0|0
      local.get $var$1
      i32.const 1
      i32.eq
      br_if $case1|0
      local.get $var$1
      i32.const 2
      i32.eq
      br_if $case2|0
      br $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     i32.const 0
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     i32.const 1
     i32.mul
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $var$1
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    loop $while-continue|1
     local.get $obj
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     local.set $var$2
     local.get $var$2
     if
      local.get $obj
      global.set $~lib/rt/itcms/iter
      local.get $obj
      call $~lib/rt/itcms/Object#get:color
      local.get $var$1
      i32.ne
      if
       local.get $obj
       local.get $var$1
       call $~lib/rt/itcms/Object#set:color
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $obj
       i32.const 20
       i32.add
       i32.const 0
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       i32.const 1
       i32.mul
       return
      end
      local.get $obj
      call $~lib/rt/itcms/Object#get:next
      local.set $obj
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    i32.const 0
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $obj
    local.get $obj
    global.get $~lib/rt/itcms/toSpace
    i32.eq
    if
     i32.const 0
     call $~lib/rt/itcms/visitStack
     global.get $~lib/rt/itcms/iter
     call $~lib/rt/itcms/Object#get:next
     local.set $obj
     loop $while-continue|2
      local.get $obj
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      local.set $var$2
      local.get $var$2
      if
       local.get $obj
       call $~lib/rt/itcms/Object#get:color
       local.get $var$1
       i32.ne
       if
        local.get $obj
        local.get $var$1
        call $~lib/rt/itcms/Object#set:color
        local.get $obj
        i32.const 20
        i32.add
        i32.const 0
        call $~lib/rt/__visit_members
       end
       local.get $obj
       call $~lib/rt/itcms/Object#get:next
       local.set $obj
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $var$2
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $var$2
     global.set $~lib/rt/itcms/toSpace
     local.get $var$1
     global.set $~lib/rt/itcms/white
     local.get $var$2
     call $~lib/rt/itcms/Object#get:next
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    i32.const 1
    i32.mul
    return
   end
   global.get $~lib/rt/itcms/iter
   local.set $obj
   local.get $obj
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $obj
    call $~lib/rt/itcms/Object#get:next
    global.set $~lib/rt/itcms/iter
    i32.const 1
    drop
    local.get $obj
    call $~lib/rt/itcms/Object#get:color
    global.get $~lib/rt/itcms/white
    i32.eqz
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 208
     i32.const 228
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $obj
    call $~lib/rt/itcms/free
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:nextWithColor
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:prev
   i32.const 0
   global.set $~lib/rt/itcms/state
   br $break|0
  end
  i32.const 0
 )
 (func $~lib/rt/itcms/interrupt
  (local $budget i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1024
  i32.const 200
  i32.mul
  i32.const 100
  i32.div_u
  local.set $budget
  loop $do-loop|0
   local.get $budget
   call $~lib/rt/itcms/step
   i32.sub
   local.set $budget
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.eq
   if
    i32.const 0
    drop
    global.get $~lib/rt/itcms/total
    i64.extend_i32_u
    i32.const 200
    i64.extend_i32_u
    i64.mul
    i64.const 100
    i64.div_u
    i32.wrap_i64
    i32.const 1024
    i32.add
    global.set $~lib/rt/itcms/threshold
    i32.const 0
    drop
    return
   end
   local.get $budget
   i32.const 0
   i32.gt_s
   br_if $do-loop|0
  end
  i32.const 0
  drop
  global.get $~lib/rt/itcms/total
  i32.const 1024
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.sub
  i32.const 1024
  i32.lt_u
  i32.mul
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
 )
 (func $~lib/rt/tlsf/computeSize (param $size i32) (result i32)
  local.get $size
  i32.const 12
  i32.le_u
  if (result i32)
   i32.const 12
  else
   local.get $size
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
  end
 )
 (func $~lib/rt/tlsf/prepareSize (param $size i32) (result i32)
  local.get $size
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 144
   i32.const 480
   i32.const 458
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $size
  call $~lib/rt/tlsf/computeSize
 )
 (func $~lib/rt/tlsf/searchBlock (param $root i32) (param $size i32) (result i32)
  (local $fl i32)
  (local $sl i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $slMap i32)
  (local $head i32)
  (local $var$8 i32)
  (local $var$9 i32)
  local.get $size
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $fl
   local.get $size
   i32.const 4
   i32.shr_u
   local.set $sl
  else
   local.get $size
   i32.const 536870910
   i32.lt_u
   if (result i32)
    local.get $size
    i32.const 1
    i32.const 27
    local.get $size
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
   else
    local.get $size
   end
   local.set $var$4
   i32.const 31
   local.get $var$4
   i32.clz
   i32.sub
   local.set $fl
   local.get $var$4
   local.get $fl
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $sl
   local.get $fl
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $fl
  end
  i32.const 1
  drop
  local.get $fl
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $sl
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 480
   i32.const 330
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $root
  local.set $var$5
  local.get $fl
  local.set $var$4
  local.get $var$5
  local.get $var$4
  i32.const 2
  i32.shl
  i32.add
  i32.load $0 offset=4
  i32.const 0
  i32.const -1
  i32.xor
  local.get $sl
  i32.shl
  i32.and
  local.set $slMap
  i32.const 0
  local.set $head
  local.get $slMap
  i32.eqz
  if
   local.get $root
   i32.load $0
   i32.const 0
   i32.const -1
   i32.xor
   local.get $fl
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.set $var$5
   local.get $var$5
   i32.eqz
   if
    i32.const 0
    local.set $head
   else
    local.get $var$5
    i32.ctz
    local.set $fl
    local.get $root
    local.set $var$8
    local.get $fl
    local.set $var$4
    local.get $var$8
    local.get $var$4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $slMap
    i32.const 1
    drop
    local.get $slMap
    i32.eqz
    if
     i32.const 0
     i32.const 480
     i32.const 343
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $root
    local.set $var$9
    local.get $fl
    local.set $var$8
    local.get $slMap
    i32.ctz
    local.set $var$4
    local.get $var$9
    local.get $var$8
    i32.const 4
    i32.shl
    local.get $var$4
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=96
    local.set $head
   end
  else
   local.get $root
   local.set $var$9
   local.get $fl
   local.set $var$8
   local.get $slMap
   i32.ctz
   local.set $var$4
   local.get $var$9
   local.get $var$8
   i32.const 4
   i32.shl
   local.get $var$4
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load $0 offset=96
   local.set $head
  end
  local.get $head
 )
 (func $~lib/rt/tlsf/growMemory (param $root i32) (param $size i32)
  (local $pagesBefore i32)
  (local $var$3 i32)
  (local $pagesNeeded i32)
  (local $var$5 i32)
  (local $pagesWanted i32)
  (local $pagesAfter i32)
  i32.const 0
  drop
  local.get $size
  i32.const 536870910
  i32.lt_u
  if
   local.get $size
   i32.const 1
   i32.const 27
   local.get $size
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.set $size
  end
  memory.size $0
  local.set $pagesBefore
  local.get $size
  i32.const 4
  local.get $pagesBefore
  i32.const 16
  i32.shl
  i32.const 4
  i32.sub
  local.get $root
  local.set $var$3
  local.get $var$3
  i32.load $0 offset=1568
  i32.ne
  i32.shl
  i32.add
  local.set $size
  local.get $size
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $pagesNeeded
  local.get $pagesBefore
  local.tee $var$3
  local.get $pagesNeeded
  local.tee $var$5
  local.get $var$3
  local.get $var$5
  i32.gt_s
  select
  local.set $pagesWanted
  local.get $pagesWanted
  memory.grow $0
  i32.const 0
  i32.lt_s
  if
   local.get $pagesNeeded
   memory.grow $0
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
  end
  memory.size $0
  local.set $pagesAfter
  local.get $root
  local.get $pagesBefore
  i32.const 16
  i32.shl
  local.get $pagesAfter
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
 )
 (func $~lib/rt/tlsf/prepareBlock (param $root i32) (param $block i32) (param $size i32)
  (local $blockInfo i32)
  (local $remaining i32)
  (local $var$5 i32)
  local.get $block
  i32.load $0
  local.set $blockInfo
  i32.const 1
  drop
  local.get $size
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 480
   i32.const 357
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $blockInfo
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $size
  i32.sub
  local.set $remaining
  local.get $remaining
  i32.const 4
  i32.const 12
  i32.add
  i32.ge_u
  if
   local.get $block
   local.get $size
   local.get $blockInfo
   i32.const 2
   i32.and
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   i32.const 4
   i32.add
   local.get $size
   i32.add
   local.set $var$5
   local.get $var$5
   local.get $remaining
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $root
   local.get $var$5
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $block
   local.get $blockInfo
   i32.const 1
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $block
   local.set $var$5
   local.get $var$5
   i32.const 4
   i32.add
   local.get $var$5
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.get $block
   local.set $var$5
   local.get $var$5
   i32.const 4
   i32.add
   local.get $var$5
   i32.load $0
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   i32.load $0
   i32.const 2
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $root i32) (param $size i32) (result i32)
  (local $payloadSize i32)
  (local $block i32)
  local.get $size
  call $~lib/rt/tlsf/prepareSize
  local.set $payloadSize
  local.get $root
  local.get $payloadSize
  call $~lib/rt/tlsf/searchBlock
  local.set $block
  local.get $block
  i32.eqz
  if
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/growMemory
   local.get $root
   local.get $payloadSize
   call $~lib/rt/tlsf/searchBlock
   local.set $block
   i32.const 1
   drop
   local.get $block
   i32.eqz
   if
    i32.const 0
    i32.const 480
    i32.const 496
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 1
  drop
  local.get $block
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $payloadSize
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 480
   i32.const 498
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $root
  local.get $block
  call $~lib/rt/tlsf/removeBlock
  local.get $root
  local.get $block
  local.get $payloadSize
  call $~lib/rt/tlsf/prepareBlock
  i32.const 0
  drop
  local.get $block
 )
 (func $~lib/rt/tlsf/__alloc (param $size i32) (result i32)
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $size
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
 )
 (func $~lib/rt/itcms/Object#set:rtId (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=12
 )
 (func $~lib/rt/itcms/Object#set:rtSize (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=16
 )
 (func $~lib/rt/itcms/__new (param $size i32) (param $id i32) (result i32)
  (local $obj i32)
  (local $ptr i32)
  local.get $size
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 144
   i32.const 208
   i32.const 260
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   call $~lib/rt/itcms/interrupt
  end
  i32.const 16
  local.get $size
  i32.add
  call $~lib/rt/tlsf/__alloc
  i32.const 4
  i32.sub
  local.set $obj
  local.get $obj
  local.get $id
  call $~lib/rt/itcms/Object#set:rtId
  local.get $obj
  local.get $size
  call $~lib/rt/itcms/Object#set:rtSize
  local.get $obj
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $obj
  call $~lib/rt/itcms/Object#get:size
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $obj
  i32.const 20
  i32.add
  local.set $ptr
  local.get $ptr
  i32.const 0
  local.get $size
  memory.fill $0
  local.get $ptr
 )
 (func $~lib/rt/itcms/__link (param $parentPtr i32) (param $childPtr i32) (param $expectMultiple i32)
  (local $child i32)
  (local $var$4 i32)
  (local $var$5 i32)
  local.get $childPtr
  i32.eqz
  if
   return
  end
  i32.const 1
  drop
  local.get $parentPtr
  i32.eqz
  if
   i32.const 0
   i32.const 208
   i32.const 294
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $childPtr
  i32.const 20
  i32.sub
  local.set $child
  local.get $child
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $parentPtr
   i32.const 20
   i32.sub
   local.set $var$4
   local.get $var$4
   call $~lib/rt/itcms/Object#get:color
   local.set $var$5
   local.get $var$5
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $expectMultiple
    if
     local.get $var$4
     call $~lib/rt/itcms/Object#makeGray
    else
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   else
    local.get $var$5
    i32.const 3
    i32.eq
    if (result i32)
     global.get $~lib/rt/itcms/state
     i32.const 1
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $child
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=4
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store $0 offset=8
 )
 (func $~lib/arraybuffer/ArrayBufferView#get:byteOffset (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  i32.load $0
  i32.sub
 )
 (func $~lib/typedarray/Int8Array#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/typedarray/Uint8Array#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/typedarray/Uint8ClampedArray#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
 )
 (func $~lib/typedarray/Int16Array#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
 )
 (func $~lib/typedarray/Uint16Array#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
 )
 (func $~lib/typedarray/Int32Array#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
 )
 (func $~lib/typedarray/Uint32Array#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
 )
 (func $~lib/typedarray/Int64Array#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
 )
 (func $~lib/typedarray/Uint64Array#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
 )
 (func $~lib/typedarray/Float32Array#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
 )
 (func $~lib/typedarray/Float64Array#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
 )
 (func $std/typedarray/testInstantiate (param $len i32)
  (local $i8a i32)
  (local $u8a i32)
  (local $c8a i32)
  (local $i16a i32)
  (local $u16a i32)
  (local $i32a i32)
  (local $u32a i32)
  (local $i64a i32)
  (local $u64a i32)
  (local $f32a i32)
  (local $f64a i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 44
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $len
  call $~lib/typedarray/Int8Array#constructor
  local.tee $i8a
  i32.store $0
  local.get $i8a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 32
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $i8a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Int8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 33
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $i8a
  call $~lib/typedarray/Int8Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 34
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $len
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $u8a
  i32.store $0 offset=4
  local.get $u8a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 37
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $u8a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 38
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $u8a
  call $~lib/typedarray/Uint8Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 39
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $len
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $c8a
  i32.store $0 offset=8
  local.get $c8a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 42
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $c8a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 43
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $c8a
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 44
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $len
  call $~lib/typedarray/Int16Array#constructor
  local.tee $i16a
  i32.store $0 offset=12
  local.get $i16a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 47
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $i16a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Int16Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 48
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $i16a
  call $~lib/typedarray/Int16Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 49
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $len
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $u16a
  i32.store $0 offset=16
  local.get $u16a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 52
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $u16a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Uint16Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 53
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $u16a
  call $~lib/typedarray/Uint16Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 54
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $len
  call $~lib/typedarray/Int32Array#constructor
  local.tee $i32a
  i32.store $0 offset=20
  local.get $i32a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 57
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $i32a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Int32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 58
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $i32a
  call $~lib/typedarray/Int32Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 59
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $len
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $u32a
  i32.store $0 offset=24
  local.get $u32a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 62
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $u32a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Uint32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 63
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $u32a
  call $~lib/typedarray/Uint32Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 64
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $len
  call $~lib/typedarray/Int64Array#constructor
  local.tee $i64a
  i32.store $0 offset=28
  local.get $i64a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 67
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $i64a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Int64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 68
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $i64a
  call $~lib/typedarray/Int64Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 69
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $len
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $u64a
  i32.store $0 offset=32
  local.get $u64a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 72
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $u64a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Uint64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 73
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $u64a
  call $~lib/typedarray/Uint64Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 74
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $len
  call $~lib/typedarray/Float32Array#constructor
  local.tee $f32a
  i32.store $0 offset=36
  local.get $f32a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 77
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $f32a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Float32Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 78
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $f32a
  call $~lib/typedarray/Float32Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 79
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $len
  call $~lib/typedarray/Float64Array#constructor
  local.tee $f64a
  i32.store $0 offset=40
  local.get $f64a
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 82
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $f64a
  i32.load $0 offset=8
  local.get $len
  global.get $~lib/typedarray/Float64Array.BYTES_PER_ELEMENT
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 83
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $f64a
  call $~lib/typedarray/Float64Array#get:length
  local.get $len
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 84
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 44
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Int32Array#__set (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 747
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
 )
 (func $~lib/typedarray/Int32Array#__get (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 736
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/typedarray/Float64Array#__set (param $this i32) (param $index i32) (param $value f64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 1457
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  local.get $value
  f64.store $0
 )
 (func $~lib/util/sort/insertionSort<f64> (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 f64)
  (local $var$9 f64)
  (local $var$10 f64)
  (local $var$11 f64)
  (local $var$12 i32)
  (local $var$13 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $var$5
  local.get $left
  local.get $var$5
  i32.const 1
  i32.and
  local.get $presorted
  local.get $var$5
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $var$6
  loop $for-loop|0
   local.get $var$6
   local.get $right
   i32.le_s
   local.set $var$7
   local.get $var$7
   if
    local.get $ptr
    local.get $var$6
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $var$8
    local.get $ptr
    local.get $var$6
    i32.const 3
    i32.shl
    i32.add
    f64.load $0 offset=8
    local.set $var$9
    local.get $var$9
    local.set $var$10
    local.get $var$8
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $var$8
     local.set $var$10
     local.get $var$9
     local.set $var$11
    end
    local.get $var$6
    i32.const 1
    i32.sub
    local.set $var$12
    block $while-break|1
     loop $while-continue|1
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.set $var$8
       local.get $var$8
       local.get $var$11
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 3
        i32.shl
        i32.add
        local.get $var$8
        f64.store $0 offset=16
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 3
    i32.shl
    i32.add
    local.get $var$11
    f64.store $0 offset=16
    block $while-break|2
     loop $while-continue|2
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 3
       i32.shl
       i32.add
       f64.load $0
       local.set $var$8
       local.get $var$8
       local.get $var$10
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 3
        i32.shl
        i32.add
        local.get $var$8
        f64.store $0 offset=8
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 3
    i32.shl
    i32.add
    local.get $var$10
    f64.store $0 offset=8
    local.get $var$6
    i32.const 2
    i32.add
    local.set $var$6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f64> (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $tmp f64)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $f64_f64_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $var$5
   loop $while-continue|1
    local.get $i
    local.get $var$5
    i32.lt_s
    local.set $var$6
    local.get $var$6
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.get $ptr
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     f64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     local.get $tmp
     f64.store $0
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/nodePower (param $left i32) (param $right i32) (param $startA i32) (param $startB i32) (param $endB i32) (result i32)
  (local $n i64)
  (local $s i32)
  (local $l i32)
  (local $r i32)
  (local $a i64)
  (local $b i64)
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  i64.extend_i32_u
  local.set $n
  local.get $startB
  local.get $left
  i32.const 1
  i32.shl
  i32.sub
  local.set $s
  local.get $startA
  local.get $s
  i32.add
  local.set $l
  local.get $endB
  local.get $s
  i32.add
  i32.const 1
  i32.add
  local.set $r
  local.get $l
  i64.extend_i32_u
  i64.const 30
  i64.shl
  local.get $n
  i64.div_u
  local.set $a
  local.get $r
  i64.extend_i32_u
  i64.const 30
  i64.shl
  local.get $n
  i64.div_u
  local.set $b
  local.get $a
  local.get $b
  i64.xor
  i32.wrap_i64
  i32.clz
 )
 (func $~lib/util/sort/mergeRuns<f64> (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 f64)
  (local $var$12 f64)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    f64.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    f64.load $0 offset=8
    f64.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $var$9
  loop $for-loop|2
   local.get $var$9
   local.get $r
   i32.le_s
   local.set $var$10
   local.get $var$10
   if
    local.get $buffer
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $var$11
    local.get $buffer
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $var$12
    local.get $var$11
    local.get $var$12
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $var$9
     i32.const 3
     i32.shl
     i32.add
     local.get $var$11
     f64.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $var$9
     i32.const 3
     i32.shl
     i32.add
     local.get $var$12
     f64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<f64> (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $startB i32)
  (local $var$4 f64)
  (local $var$5 f64)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $var$10 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $top i32)
  (local $startA i32)
  (local $endB i32)
  (local $lenB i32)
  (local $k i32)
  (local $var$20 i32)
  (local $var$21 i32)
  (local $var$22 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $startB
      local.get $startB
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $startB
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     f64.load $0
     local.set $var$4
     local.get $ptr
     f64.load $0 offset=8
     local.set $var$5
     local.get $var$4
     local.get $var$5
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$5
     local.get $var$4
     local.get $startB
     select
     f64.store $0
     local.get $var$4
     local.get $var$5
     local.get $startB
     select
     local.set $var$4
     local.get $ptr
     f64.load $0 offset=16
     local.set $var$5
     local.get $var$4
     local.get $var$5
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$5
     local.get $var$4
     local.get $startB
     select
     f64.store $0 offset=8
     local.get $ptr
     local.get $var$4
     local.get $var$5
     local.get $startB
     select
     f64.store $0 offset=16
    end
    local.get $ptr
    f64.load $0
    local.set $var$5
    local.get $ptr
    f64.load $0 offset=8
    local.set $var$4
    local.get $var$5
    local.get $var$4
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $startB
    local.get $ptr
    local.get $var$4
    local.get $var$5
    local.get $startB
    select
    f64.store $0
    local.get $ptr
    local.get $var$5
    local.get $var$4
    local.get $startB
    select
    f64.store $0 offset=8
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<f64>
   return
  end
  local.get $len
  local.set $startB
  i32.const 31
  local.get $startB
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $startB
  loop $for-loop|1
   local.get $startB
   local.get $lgPlus2
   i32.lt_u
   local.set $var$10
   local.get $var$10
   if
    local.get $leftRunStartBuf
    local.get $startB
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $startB
    i32.const 1
    i32.add
    local.set $startB
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 3
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<f64>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $var$10
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $startB
   local.get $var$10
   local.get $startB
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<f64>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<f64>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $k
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $var$20
     local.get $k
     local.get $var$20
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<f64>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $var$20
    loop $for-loop|3
     local.get $var$20
     local.get $k
     i32.gt_u
     local.set $var$21
     local.get $var$21
     if
      local.get $leftRunStartBuf
      local.get $var$20
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $var$22
      local.get $var$22
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $var$22
       local.get $leftRunEndBuf
       local.get $var$20
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<f64>
       local.get $var$22
       local.set $startA
       local.get $leftRunStartBuf
       local.get $var$20
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $var$20
      i32.const 1
      i32.sub
      local.set $var$20
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $var$10
  loop $for-loop|4
   local.get $var$10
   i32.const 0
   i32.ne
   local.set $var$20
   local.get $var$20
   if
    local.get $leftRunStartBuf
    local.get $var$10
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$21
    local.get $var$21
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $var$21
     local.get $leftRunEndBuf
     local.get $var$10
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<f64>
    end
    local.get $var$10
    i32.const 1
    i32.sub
    local.set $var$10
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Float64Array#sort (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Float64Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<f64>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<f64>~anonymous|0 (param $a f64) (param $b f64) (result i32)
  (local $ia i64)
  (local $ib i64)
  local.get $a
  i64.reinterpret_f64
  local.set $ia
  local.get $b
  i64.reinterpret_f64
  local.set $ib
  local.get $ia
  local.get $ia
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  i64.xor
  local.set $ia
  local.get $ib
  local.get $ib
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  i64.xor
  local.set $ib
  local.get $ia
  local.get $ib
  i64.gt_s
  local.get $ia
  local.get $ib
  i64.lt_s
  i32.sub
 )
 (func $~lib/typedarray/Float64Array#__get (param $this i32) (param $index i32) (result f64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 1446
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#__set (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 320
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  local.get $value
  i32.const 31
  i32.shr_s
  i32.const -1
  i32.xor
  i32.const 255
  local.get $value
  i32.sub
  i32.const 31
  i32.shr_s
  local.get $value
  i32.or
  i32.and
  i32.store8 $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#__get (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 309
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $~lib/typedarray/Int8Array#__set (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 36
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  local.get $value
  i32.store8 $0
 )
 (func $~lib/util/bytes/FILL<u8> (param $ptr i32) (param $len i32) (param $value i32) (param $start i32) (param $end i32)
  (local $var$5 i32)
  (local $var$6 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $var$5
   i32.const 0
   local.tee $var$6
   local.get $var$5
   local.get $var$6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $var$6
   local.get $len
   local.tee $var$5
   local.get $var$6
   local.get $var$5
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $var$5
   i32.const 0
   local.tee $var$6
   local.get $var$5
   local.get $var$6
   i32.gt_u
   select
  else
   local.get $end
   local.tee $var$6
   local.get $len
   local.tee $var$5
   local.get $var$6
   local.get $var$5
   i32.lt_s
   select
  end
  local.set $end
  i32.const 1
  i32.const 1
  i32.eq
  drop
  local.get $start
  local.get $end
  i32.lt_s
  if
   local.get $ptr
   local.get $start
   i32.add
   local.get $value
   local.get $end
   local.get $start
   i32.sub
   memory.fill $0
  end
 )
 (func $~lib/typedarray/Int8Array#fill (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int8Array#get:length
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<u8>
  local.get $this
 )
 (func $~lib/rt/__newBuffer (param $size i32) (param $id i32) (param $data i32) (result i32)
  (local $buffer i32)
  local.get $size
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $buffer
  local.get $data
  if
   local.get $buffer
   local.get $data
   local.get $size
   memory.copy $0 $0
  end
  local.get $buffer
 )
 (func $~lib/array/Array<i8>#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Int8Array#__get (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 25
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_s $0
 )
 (func $~lib/array/Array<i8>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 336
   i32.const 736
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_s $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $std/typedarray/isInt8ArrayEqual (param $a i32) (param $b i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  local.get $a
  call $~lib/typedarray/Int8Array#get:length
  local.get $b
  call $~lib/array/Array<i8>#get:length
  i32.ne
  if
   i32.const 0
   return
  end
  i32.const 0
  local.set $var$2
  local.get $a
  call $~lib/typedarray/Int8Array#get:length
  local.set $var$3
  loop $for-loop|0
   local.get $var$2
   local.get $var$3
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $a
    local.get $var$2
    call $~lib/typedarray/Int8Array#__get
    local.get $b
    local.get $var$2
    call $~lib/array/Array<i8>#__get
    i32.ne
    if
     i32.const 0
     return
    end
    local.get $var$2
    i32.const 1
    i32.add
    local.set $var$2
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $~lib/util/bytes/FILL<u32> (param $ptr i32) (param $len i32) (param $value i32) (param $start i32) (param $end i32)
  (local $var$5 i32)
  (local $var$6 i32)
  local.get $start
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $start
   i32.add
   local.tee $var$5
   i32.const 0
   local.tee $var$6
   local.get $var$5
   local.get $var$6
   i32.gt_u
   select
  else
   local.get $start
   local.tee $var$6
   local.get $len
   local.tee $var$5
   local.get $var$6
   local.get $var$5
   i32.lt_s
   select
  end
  local.set $start
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $len
   local.get $end
   i32.add
   local.tee $var$5
   i32.const 0
   local.tee $var$6
   local.get $var$5
   local.get $var$6
   i32.gt_u
   select
  else
   local.get $end
   local.tee $var$6
   local.get $len
   local.tee $var$5
   local.get $var$6
   local.get $var$5
   i32.lt_s
   select
  end
  local.set $end
  i32.const 4
  i32.const 1
  i32.eq
  drop
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  local.get $value
  i32.const 0
  i32.eq
  local.get $value
  i32.const -1
  i32.eq
  i32.or
  if
   local.get $start
   local.get $end
   i32.lt_s
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    local.get $end
    local.get $start
    i32.sub
    i32.const 2
    i32.shl
    memory.fill $0
   end
   return
  end
  loop $for-loop|0
   local.get $start
   local.get $end
   i32.lt_s
   local.set $var$6
   local.get $var$6
   if
    local.get $ptr
    local.get $start
    i32.const 2
    i32.shl
    i32.add
    local.get $value
    i32.store $0
    local.get $start
    i32.const 1
    i32.add
    local.set $start
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#fill (param $this i32) (param $value i32) (param $start i32) (param $end i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int32Array#get:length
  local.get $value
  local.get $start
  local.get $end
  call $~lib/util/bytes/FILL<u32>
  local.get $this
 )
 (func $~lib/array/Array<i32>#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/array/Array<i32>#__get (param $this i32) (param $index i32) (result i32)
  (local $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=12
  i32.ge_u
  if
   i32.const 336
   i32.const 736
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  i32.const 0
  drop
  local.get $value
 )
 (func $std/typedarray/isInt32ArrayEqual (param $a i32) (param $b i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  local.get $a
  call $~lib/typedarray/Int32Array#get:length
  local.get $b
  call $~lib/array/Array<i32>#get:length
  i32.ne
  if
   i32.const 0
   return
  end
  i32.const 0
  local.set $var$2
  local.get $a
  call $~lib/typedarray/Int32Array#get:length
  local.set $var$3
  loop $for-loop|0
   local.get $var$2
   local.get $var$3
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $a
    local.get $var$2
    call $~lib/typedarray/Int32Array#__get
    local.get $b
    local.get $var$2
    call $~lib/array/Array<i32>#__get
    i32.ne
    if
     i32.const 0
     return
    end
    local.get $var$2
    i32.const 1
    i32.add
    local.set $var$2
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $~lib/typedarray/Int32Array#copyWithin (param $this i32) (param $target i32) (param $start i32) (param $end i32) (result i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $var$13 i32)
  (local $var$14 i32)
  local.get $this
  local.set $var$7
  local.get $target
  local.set $var$6
  local.get $start
  local.set $var$5
  local.get $end
  local.set $var$4
  local.get $var$7
  call $~lib/typedarray/Int32Array#get:length
  local.set $var$8
  local.get $var$7
  i32.load $0 offset=4
  local.set $var$9
  local.get $var$4
  local.tee $var$10
  local.get $var$8
  local.tee $var$11
  local.get $var$10
  local.get $var$11
  i32.lt_s
  select
  local.set $var$4
  local.get $var$6
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$8
   local.get $var$6
   i32.add
   local.tee $var$11
   i32.const 0
   local.tee $var$10
   local.get $var$11
   local.get $var$10
   i32.gt_s
   select
  else
   local.get $var$6
   local.tee $var$10
   local.get $var$8
   local.tee $var$11
   local.get $var$10
   local.get $var$11
   i32.lt_s
   select
  end
  local.set $var$10
  local.get $var$5
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$8
   local.get $var$5
   i32.add
   local.tee $var$11
   i32.const 0
   local.tee $var$12
   local.get $var$11
   local.get $var$12
   i32.gt_s
   select
  else
   local.get $var$5
   local.tee $var$12
   local.get $var$8
   local.tee $var$11
   local.get $var$12
   local.get $var$11
   i32.lt_s
   select
  end
  local.set $var$12
  local.get $var$4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$8
   local.get $var$4
   i32.add
   local.tee $var$11
   i32.const 0
   local.tee $var$13
   local.get $var$11
   local.get $var$13
   i32.gt_s
   select
  else
   local.get $var$4
   local.tee $var$13
   local.get $var$8
   local.tee $var$11
   local.get $var$13
   local.get $var$11
   i32.lt_s
   select
  end
  local.set $var$13
  local.get $var$13
  local.get $var$12
  i32.sub
  local.tee $var$11
  local.get $var$8
  local.get $var$10
  i32.sub
  local.tee $var$14
  local.get $var$11
  local.get $var$14
  i32.lt_s
  select
  local.set $var$11
  local.get $var$9
  local.get $var$10
  i32.const 2
  i32.shl
  i32.add
  local.get $var$9
  local.get $var$12
  i32.const 2
  i32.shl
  i32.add
  local.get $var$11
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $var$7
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int8Array,i8>~anonymous|0 (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int8Array#reduce<i8> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  i32.const 0
  local.set $var$7
  local.get $var$5
  call $~lib/typedarray/Int8Array#get:length
  local.set $var$8
  loop $for-loop|0
   local.get $var$7
   local.get $var$8
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.add
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $~lib/typedarray/Uint8Array#__set (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 178
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  local.get $value
  i32.store8 $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint8Array,u8>~anonymous|0 (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint8Array#reduce<u8> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  i32.const 0
  local.set $var$7
  local.get $var$5
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$8
  loop $for-loop|0
   local.get $var$7
   local.get $var$8
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.add
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint8ClampedArray#reduce<u8> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  i32.const 0
  local.set $var$7
  local.get $var$5
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $var$8
  loop $for-loop|0
   local.get $var$7
   local.get $var$8
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.add
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $~lib/typedarray/Int16Array#__set (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 463
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  i32.store16 $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int16Array,i16>~anonymous|0 (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int16Array#reduce<i16> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  i32.const 0
  local.set $var$7
  local.get $var$5
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$8
  loop $for-loop|0
   local.get $var$7
   local.get $var$8
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.add
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $~lib/typedarray/Uint16Array#__set (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 605
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  i32.store16 $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint16Array,u16>~anonymous|0 (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint16Array#reduce<u16> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  i32.const 0
  local.set $var$7
  local.get $var$5
  call $~lib/typedarray/Uint16Array#get:length
  local.set $var$8
  loop $for-loop|0
   local.get $var$7
   local.get $var$8
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.add
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int32Array,i32>~anonymous|0 (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int32Array#reduce<i32> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  i32.const 0
  local.set $var$7
  local.get $var$5
  call $~lib/typedarray/Int32Array#get:length
  local.set $var$8
  loop $for-loop|0
   local.get $var$7
   local.get $var$8
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.add
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $~lib/typedarray/Uint32Array#__set (param $this i32) (param $index i32) (param $value i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 889
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  i32.store $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint32Array,u32>~anonymous|0 (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint32Array#reduce<u32> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  i32.const 0
  local.set $var$7
  local.get $var$5
  call $~lib/typedarray/Uint32Array#get:length
  local.set $var$8
  loop $for-loop|0
   local.get $var$7
   local.get $var$8
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.add
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $~lib/typedarray/Int64Array#__set (param $this i32) (param $index i32) (param $value i64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 1031
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  local.get $value
  i64.store $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int64Array,i64>~anonymous|0 (param $acc i64) (param $val i64) (param $$2 i32) (param $$3 i32) (result i64)
  local.get $acc
  local.get $val
  i64.add
 )
 (func $~lib/typedarray/Int64Array#reduce<i64> (param $this i32) (param $fn i32) (param $initialValue i64) (result i64)
  (local $var$3 i64)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  i32.const 0
  local.set $var$7
  local.get $var$5
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$8
  loop $for-loop|0
   local.get $var$7
   local.get $var$8
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i64_i64_i32_i32_=>_i64)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.add
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $~lib/typedarray/Uint64Array#__set (param $this i32) (param $index i32) (param $value i64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 1173
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  local.get $value
  i64.store $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint64Array,u64>~anonymous|0 (param $acc i64) (param $val i64) (param $$2 i32) (param $$3 i32) (result i64)
  local.get $acc
  local.get $val
  i64.add
 )
 (func $~lib/typedarray/Uint64Array#reduce<u64> (param $this i32) (param $fn i32) (param $initialValue i64) (result i64)
  (local $var$3 i64)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  i32.const 0
  local.set $var$7
  local.get $var$5
  call $~lib/typedarray/Uint64Array#get:length
  local.set $var$8
  loop $for-loop|0
   local.get $var$7
   local.get $var$8
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i64_i64_i32_i32_=>_i64)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.add
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $~lib/typedarray/Float32Array#__set (param $this i32) (param $index i32) (param $value f32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 1315
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  local.get $value
  f32.store $0
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Float32Array,f32>~anonymous|0 (param $acc f32) (param $val f32) (param $$2 i32) (param $$3 i32) (result f32)
  local.get $acc
  local.get $val
  f32.add
 )
 (func $~lib/typedarray/Float32Array#reduce<f32> (param $this i32) (param $fn i32) (param $initialValue f32) (result f32)
  (local $var$3 f32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  i32.const 0
  local.set $var$7
  local.get $var$5
  call $~lib/typedarray/Float32Array#get:length
  local.set $var$8
  loop $for-loop|0
   local.get $var$7
   local.get $var$8
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $f32_f32_i32_i32_=>_f32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.add
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Float64Array,f64>~anonymous|0 (param $acc f64) (param $val f64) (param $$2 i32) (param $$3 i32) (result f64)
  local.get $acc
  local.get $val
  f64.add
 )
 (func $~lib/typedarray/Float64Array#reduce<f64> (param $this i32) (param $fn i32) (param $initialValue f64) (result f64)
  (local $var$3 f64)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  i32.const 0
  local.set $var$7
  local.get $var$5
  call $~lib/typedarray/Float64Array#get:length
  local.set $var$8
  loop $for-loop|0
   local.get $var$7
   local.get $var$8
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $f64_f64_i32_i32_=>_f64)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.add
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $~lib/typedarray/Int8Array#at (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 48
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_s $0
 )
 (func $std/typedarray/testAt<~lib/typedarray/Int8Array,i8>
  (local $array i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 0
  call $~lib/typedarray/Int8Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 344
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  call $~lib/typedarray/Int8Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 345
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -3
  call $~lib/typedarray/Int8Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 346
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint8Array#at (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 190
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $std/typedarray/testAt<~lib/typedarray/Uint8Array,u8>
  (local $array i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 0
  call $~lib/typedarray/Uint8Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 344
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  call $~lib/typedarray/Uint8Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 345
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -3
  call $~lib/typedarray/Uint8Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 346
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint8ClampedArray#at (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 332
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $std/typedarray/testAt<~lib/typedarray/Uint8ClampedArray,u8>
  (local $array i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 344
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  call $~lib/typedarray/Uint8ClampedArray#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 345
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -3
  call $~lib/typedarray/Uint8ClampedArray#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 346
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Int16Array#at (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 475
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
 )
 (func $std/typedarray/testAt<~lib/typedarray/Int16Array,i16>
  (local $array i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 0
  call $~lib/typedarray/Int16Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 344
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  call $~lib/typedarray/Int16Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 345
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -3
  call $~lib/typedarray/Int16Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 346
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint16Array#at (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 617
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
 )
 (func $std/typedarray/testAt<~lib/typedarray/Uint16Array,u16>
  (local $array i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 0
  call $~lib/typedarray/Uint16Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 344
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  call $~lib/typedarray/Uint16Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 345
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -3
  call $~lib/typedarray/Uint16Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 346
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Int32Array#at (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 759
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $std/typedarray/testAt<~lib/typedarray/Int32Array,i32>
  (local $array i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 0
  call $~lib/typedarray/Int32Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 344
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  call $~lib/typedarray/Int32Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 345
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -3
  call $~lib/typedarray/Int32Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 346
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint32Array#at (param $this i32) (param $index i32) (result i32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 901
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $std/typedarray/testAt<~lib/typedarray/Uint32Array,u32>
  (local $array i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 0
  call $~lib/typedarray/Uint32Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 344
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  call $~lib/typedarray/Uint32Array#at
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 345
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -3
  call $~lib/typedarray/Uint32Array#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 346
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Int64Array#at (param $this i32) (param $index i32) (result i64)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 1043
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $std/typedarray/testAt<~lib/typedarray/Int64Array,i64>
  (local $array i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 0
  call $~lib/typedarray/Int64Array#at
  i64.const 1
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 344
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  call $~lib/typedarray/Int64Array#at
  i64.const 3
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 345
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -3
  call $~lib/typedarray/Int64Array#at
  i64.const 1
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 346
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint64Array#at (param $this i32) (param $index i32) (result i64)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 1185
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $std/typedarray/testAt<~lib/typedarray/Uint64Array,u64>
  (local $array i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 0
  call $~lib/typedarray/Uint64Array#at
  i64.const 1
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 344
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  call $~lib/typedarray/Uint64Array#at
  i64.const 3
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 345
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -3
  call $~lib/typedarray/Uint64Array#at
  i64.const 1
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 346
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Float32Array#at (param $this i32) (param $index i32) (result f32)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 1327
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
 )
 (func $std/typedarray/testAt<~lib/typedarray/Float32Array,f32>
  (local $array i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 0
  call $~lib/typedarray/Float32Array#at
  f32.const 1
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 344
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  call $~lib/typedarray/Float32Array#at
  f32.const 3
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 345
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -3
  call $~lib/typedarray/Float32Array#at
  f32.const 1
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 346
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Float64Array#at (param $this i32) (param $index i32) (result f64)
  (local $len i32)
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  local.set $len
  local.get $index
  i32.const 0
  local.get $len
  local.get $index
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $index
  local.get $index
  local.get $len
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 1469
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
 )
 (func $std/typedarray/testAt<~lib/typedarray/Float64Array,f64>
  (local $array i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 0
  call $~lib/typedarray/Float64Array#at
  f64.const 1
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 344
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  call $~lib/typedarray/Float64Array#at
  f64.const 3
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 345
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -3
  call $~lib/typedarray/Float64Array#at
  f64.const 1
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 346
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int8Array,i8>~anonymous|0 (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int8Array#reduceRight<i8> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  local.get $var$5
  call $~lib/typedarray/Int8Array#get:length
  i32.const 1
  i32.sub
  local.set $var$7
  loop $for-loop|0
   local.get $var$7
   i32.const 0
   i32.ge_s
   local.set $var$8
   local.get $var$8
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.sub
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint8Array,u8>~anonymous|0 (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint8Array#reduceRight<u8> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  local.get $var$5
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 1
  i32.sub
  local.set $var$7
  loop $for-loop|0
   local.get $var$7
   i32.const 0
   i32.ge_s
   local.set $var$8
   local.get $var$8
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.sub
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint8ClampedArray#reduceRight<u8> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  local.get $var$5
  call $~lib/typedarray/Uint8ClampedArray#get:length
  i32.const 1
  i32.sub
  local.set $var$7
  loop $for-loop|0
   local.get $var$7
   i32.const 0
   i32.ge_s
   local.set $var$8
   local.get $var$8
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.sub
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int16Array,i16>~anonymous|0 (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int16Array#reduceRight<i16> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  local.get $var$5
  call $~lib/typedarray/Int16Array#get:length
  i32.const 1
  i32.sub
  local.set $var$7
  loop $for-loop|0
   local.get $var$7
   i32.const 0
   i32.ge_s
   local.set $var$8
   local.get $var$8
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.sub
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint16Array,u16>~anonymous|0 (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint16Array#reduceRight<u16> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  local.get $var$5
  call $~lib/typedarray/Uint16Array#get:length
  i32.const 1
  i32.sub
  local.set $var$7
  loop $for-loop|0
   local.get $var$7
   i32.const 0
   i32.ge_s
   local.set $var$8
   local.get $var$8
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.sub
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int32Array,i32>~anonymous|0 (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Int32Array#reduceRight<i32> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  local.get $var$5
  call $~lib/typedarray/Int32Array#get:length
  i32.const 1
  i32.sub
  local.set $var$7
  loop $for-loop|0
   local.get $var$7
   i32.const 0
   i32.ge_s
   local.set $var$8
   local.get $var$8
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.sub
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint32Array,u32>~anonymous|0 (param $acc i32) (param $val i32) (param $$2 i32) (param $$3 i32) (result i32)
  local.get $acc
  local.get $val
  i32.add
 )
 (func $~lib/typedarray/Uint32Array#reduceRight<u32> (param $this i32) (param $fn i32) (param $initialValue i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  local.get $var$5
  call $~lib/typedarray/Uint32Array#get:length
  i32.const 1
  i32.sub
  local.set $var$7
  loop $for-loop|0
   local.get $var$7
   i32.const 0
   i32.ge_s
   local.set $var$8
   local.get $var$8
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.sub
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int64Array,i64>~anonymous|0 (param $acc i64) (param $val i64) (param $$2 i32) (param $$3 i32) (result i64)
  local.get $acc
  local.get $val
  i64.add
 )
 (func $~lib/typedarray/Int64Array#reduceRight<i64> (param $this i32) (param $fn i32) (param $initialValue i64) (result i64)
  (local $var$3 i64)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  local.get $var$5
  call $~lib/typedarray/Int64Array#get:length
  i32.const 1
  i32.sub
  local.set $var$7
  loop $for-loop|0
   local.get $var$7
   i32.const 0
   i32.ge_s
   local.set $var$8
   local.get $var$8
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i64_i64_i32_i32_=>_i64)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.sub
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint64Array,u64>~anonymous|0 (param $acc i64) (param $val i64) (param $$2 i32) (param $$3 i32) (result i64)
  local.get $acc
  local.get $val
  i64.add
 )
 (func $~lib/typedarray/Uint64Array#reduceRight<u64> (param $this i32) (param $fn i32) (param $initialValue i64) (result i64)
  (local $var$3 i64)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  local.get $var$5
  call $~lib/typedarray/Uint64Array#get:length
  i32.const 1
  i32.sub
  local.set $var$7
  loop $for-loop|0
   local.get $var$7
   i32.const 0
   i32.ge_s
   local.set $var$8
   local.get $var$8
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $i64_i64_i32_i32_=>_i64)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.sub
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Float32Array,f32>~anonymous|0 (param $acc f32) (param $val f32) (param $$2 i32) (param $$3 i32) (result f32)
  local.get $acc
  local.get $val
  f32.add
 )
 (func $~lib/typedarray/Float32Array#reduceRight<f32> (param $this i32) (param $fn i32) (param $initialValue f32) (result f32)
  (local $var$3 f32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  local.get $var$5
  call $~lib/typedarray/Float32Array#get:length
  i32.const 1
  i32.sub
  local.set $var$7
  loop $for-loop|0
   local.get $var$7
   i32.const 0
   i32.ge_s
   local.set $var$8
   local.get $var$8
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $f32_f32_i32_i32_=>_f32)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.sub
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Float64Array,f64>~anonymous|0 (param $acc f64) (param $val f64) (param $$2 i32) (param $$3 i32) (result f64)
  local.get $acc
  local.get $val
  f64.add
 )
 (func $~lib/typedarray/Float64Array#reduceRight<f64> (param $this i32) (param $fn i32) (param $initialValue f64) (result f64)
  (local $var$3 f64)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $fn
  local.set $var$4
  local.get $initialValue
  local.set $var$3
  local.get $var$5
  i32.load $0 offset=4
  local.set $var$6
  local.get $var$5
  call $~lib/typedarray/Float64Array#get:length
  i32.const 1
  i32.sub
  local.set $var$7
  loop $for-loop|0
   local.get $var$7
   i32.const 0
   i32.ge_s
   local.set $var$8
   local.get $var$8
   if
    local.get $var$3
    local.get $var$6
    local.get $var$7
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.get $var$7
    local.get $var$5
    i32.const 4
    global.set $~argumentsLength
    local.get $var$4
    i32.load $0
    call_indirect $0 (type $f64_f64_i32_i32_=>_f64)
    local.set $var$3
    local.get $var$7
    i32.const 1
    i32.sub
    local.set $var$7
    br $for-loop|0
   end
  end
  local.get $var$3
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int8Array,i8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint8Array,u8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Uint8Array#__get (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 167
   i32.const 45
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int16Array,i16>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Int16Array#__get (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 452
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint16Array,u16>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Uint16Array#__get (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 1
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 594
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int32Array,i32>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint32Array,u32>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  local.get $value
  i32.mul
 )
 (func $~lib/typedarray/Uint32Array#__get (param $this i32) (param $index i32) (result i32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 878
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int64Array,i64>~anonymous|0 (param $value i64) (param $$1 i32) (param $$2 i32) (result i64)
  local.get $value
  local.get $value
  i64.mul
 )
 (func $~lib/typedarray/Int64Array#__get (param $this i32) (param $index i32) (result i64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 1020
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint64Array,u64>~anonymous|0 (param $value i64) (param $$1 i32) (param $$2 i32) (result i64)
  local.get $value
  local.get $value
  i64.mul
 )
 (func $~lib/typedarray/Uint64Array#__get (param $this i32) (param $index i32) (result i64)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 3
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 1162
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Float32Array,f32>~anonymous|0 (param $value f32) (param $$1 i32) (param $$2 i32) (result f32)
  local.get $value
  local.get $value
  f32.mul
 )
 (func $~lib/typedarray/Float32Array#__get (param $this i32) (param $index i32) (result f32)
  local.get $index
  local.get $this
  i32.load $0 offset=8
  i32.const 2
  i32.shr_u
  i32.ge_u
  if
   i32.const 336
   i32.const 608
   i32.const 1304
   i32.const 64
   call $~lib/builtins/abort
   unreachable
  end
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Float64Array,f64>~anonymous|0 (param $value f64) (param $$1 i32) (param $$2 i32) (result f64)
  local.get $value
  local.get $value
  f64.mul
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int8Array,i8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.gt_s
 )
 (func $~lib/rt/itcms/__renew (param $oldPtr i32) (param $size i32) (result i32)
  (local $oldObj i32)
  (local $newPtr i32)
  (local $var$4 i32)
  (local $var$5 i32)
  local.get $oldPtr
  i32.const 20
  i32.sub
  local.set $oldObj
  local.get $size
  local.get $oldObj
  i32.load $0
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $oldObj
   local.get $size
   call $~lib/rt/itcms/Object#set:rtSize
   local.get $oldPtr
   return
  end
  local.get $size
  local.get $oldObj
  i32.load $0 offset=12
  call $~lib/rt/itcms/__new
  local.set $newPtr
  local.get $newPtr
  local.get $oldPtr
  local.get $size
  local.tee $var$4
  local.get $oldObj
  i32.load $0 offset=16
  local.tee $var$5
  local.get $var$4
  local.get $var$5
  i32.lt_u
  select
  memory.copy $0 $0
  local.get $newPtr
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint8Array,u8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.gt_u
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.gt_u
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int16Array,i16>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.gt_s
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint16Array,u16>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.gt_u
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int32Array,i32>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.gt_s
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint32Array,u32>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.gt_u
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int64Array,i64>~anonymous|0 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.gt_s
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint64Array,u64>~anonymous|0 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.gt_u
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Float32Array,f32>~anonymous|0 (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.gt
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Float64Array,f64>~anonymous|0 (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.gt
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int8Array,i8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int8Array#some (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Int8Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int8Array,i8>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint8Array,u8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8Array#some (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint8Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint8Array,u8>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8ClampedArray#some (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int16Array,i16>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int16Array#some (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Int16Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int16Array,i16>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint16Array,u16>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint16Array#some (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint16Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint16Array,u16>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int32Array,i32>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int32Array#some (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Int32Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int32Array,i32>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint32Array,u32>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint32Array#some (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint32Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint32Array,u32>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 0
  i32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int64Array,i64>~anonymous|0 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Int64Array#some (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Int64Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int64Array,i64>~anonymous|1 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 0
  i64.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint64Array,u64>~anonymous|0 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Uint64Array#some (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint64Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint64Array,u64>~anonymous|1 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 0
  i64.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Float32Array,f32>~anonymous|0 (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.eq
 )
 (func $~lib/typedarray/Float32Array#some (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Float32Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $f32_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Float32Array,f32>~anonymous|1 (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 0
  f32.eq
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Float64Array,f64>~anonymous|0 (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.eq
 )
 (func $~lib/typedarray/Float64Array#some (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/SOME<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Float64Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $f64_i32_i32_=>_i32)
     if
      i32.const 1
      br $~lib/typedarray/SOME<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 0
  end
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Float64Array,f64>~anonymous|1 (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 0
  f64.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int8Array,i8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int8Array#findIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Int8Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int8Array,i8>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8Array,u8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8Array#findIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint8Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8Array,u8>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8ClampedArray#findIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int16Array,i16>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int16Array#findIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Int16Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int16Array,i16>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint16Array,u16>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint16Array#findIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint16Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint16Array,u16>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int32Array,i32>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int32Array#findIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Int32Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int32Array,i32>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint32Array,u32>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint32Array#findIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint32Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint32Array,u32>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int64Array,i64>~anonymous|0 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Int64Array#findIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Int64Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int64Array,i64>~anonymous|1 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 4
  i64.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint64Array,u64>~anonymous|0 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Uint64Array#findIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint64Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint64Array,u64>~anonymous|1 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 4
  i64.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Float32Array,f32>~anonymous|0 (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.eq
 )
 (func $~lib/typedarray/Float32Array#findIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Float32Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $f32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Float32Array,f32>~anonymous|1 (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 4
  f32.eq
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Float64Array,f64>~anonymous|0 (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.eq
 )
 (func $~lib/typedarray/Float64Array#findIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/FIND_INDEX<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Float64Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     local.get $var$4
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $f64_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_INDEX<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Float64Array,f64>~anonymous|1 (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 4
  f64.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int8Array,i8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int8Array#findLastIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   local.get $var$3
   call $~lib/typedarray/Int8Array#get:length
   i32.const 1
   i32.sub
   local.set $var$5
   loop $for-loop|0
    local.get $var$5
    i32.const 0
    i32.ge_s
    local.set $var$6
    local.get $var$6
    if
     local.get $var$4
     local.get $var$5
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int8Array,i8>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8Array,u8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8Array#findLastIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   local.get $var$3
   call $~lib/typedarray/Uint8Array#get:length
   i32.const 1
   i32.sub
   local.set $var$5
   loop $for-loop|0
    local.get $var$5
    i32.const 0
    i32.ge_s
    local.set $var$6
    local.get $var$6
    if
     local.get $var$4
     local.get $var$5
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8Array,u8>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint8ClampedArray#findLastIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   local.get $var$3
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.const 1
   i32.sub
   local.set $var$5
   loop $for-loop|0
    local.get $var$5
    i32.const 0
    i32.ge_s
    local.set $var$6
    local.get $var$6
    if
     local.get $var$4
     local.get $var$5
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int16Array,i16>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int16Array#findLastIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   local.get $var$3
   call $~lib/typedarray/Int16Array#get:length
   i32.const 1
   i32.sub
   local.set $var$5
   loop $for-loop|0
    local.get $var$5
    i32.const 0
    i32.ge_s
    local.set $var$6
    local.get $var$6
    if
     local.get $var$4
     local.get $var$5
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int16Array,i16>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint16Array,u16>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint16Array#findLastIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   local.get $var$3
   call $~lib/typedarray/Uint16Array#get:length
   i32.const 1
   i32.sub
   local.set $var$5
   loop $for-loop|0
    local.get $var$5
    i32.const 0
    i32.ge_s
    local.set $var$6
    local.get $var$6
    if
     local.get $var$4
     local.get $var$5
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint16Array,u16>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int32Array,i32>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Int32Array#findLastIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   local.get $var$3
   call $~lib/typedarray/Int32Array#get:length
   i32.const 1
   i32.sub
   local.set $var$5
   loop $for-loop|0
    local.get $var$5
    i32.const 0
    i32.ge_s
    local.set $var$6
    local.get $var$6
    if
     local.get $var$4
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int32Array,i32>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint32Array,u32>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $~lib/typedarray/Uint32Array#findLastIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   local.get $var$3
   call $~lib/typedarray/Uint32Array#get:length
   i32.const 1
   i32.sub
   local.set $var$5
   loop $for-loop|0
    local.get $var$5
    i32.const 0
    i32.ge_s
    local.set $var$6
    local.get $var$6
    if
     local.get $var$4
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint32Array,u32>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 4
  i32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int64Array,i64>~anonymous|0 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Int64Array#findLastIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   local.get $var$3
   call $~lib/typedarray/Int64Array#get:length
   i32.const 1
   i32.sub
   local.set $var$5
   loop $for-loop|0
    local.get $var$5
    i32.const 0
    i32.ge_s
    local.set $var$6
    local.get $var$6
    if
     local.get $var$4
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int64Array,i64>~anonymous|1 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 4
  i64.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint64Array,u64>~anonymous|0 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/typedarray/Uint64Array#findLastIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   local.get $var$3
   call $~lib/typedarray/Uint64Array#get:length
   i32.const 1
   i32.sub
   local.set $var$5
   loop $for-loop|0
    local.get $var$5
    i32.const 0
    i32.ge_s
    local.set $var$6
    local.get $var$6
    if
     local.get $var$4
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $i64_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint64Array,u64>~anonymous|1 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 4
  i64.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float32Array,f32>~anonymous|0 (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.eq
 )
 (func $~lib/typedarray/Float32Array#findLastIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   local.get $var$3
   call $~lib/typedarray/Float32Array#get:length
   i32.const 1
   i32.sub
   local.set $var$5
   loop $for-loop|0
    local.get $var$5
    i32.const 0
    i32.ge_s
    local.set $var$6
    local.get $var$6
    if
     local.get $var$4
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $f32_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float32Array,f32>~anonymous|1 (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 4
  f32.eq
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float64Array,f64>~anonymous|0 (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.eq
 )
 (func $~lib/typedarray/Float64Array#findLastIndex (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  block $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   local.get $var$3
   call $~lib/typedarray/Float64Array#get:length
   i32.const 1
   i32.sub
   local.set $var$5
   loop $for-loop|0
    local.get $var$5
    i32.const 0
    i32.ge_s
    local.set $var$6
    local.get $var$6
    if
     local.get $var$4
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $var$5
     local.get $var$3
     i32.const 3
     global.set $~argumentsLength
     local.get $var$2
     i32.load $0
     call_indirect $0 (type $f64_i32_i32_=>_i32)
     if
      local.get $var$5
      br $~lib/typedarray/FIND_LAST_INDEX<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const -1
  end
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float64Array,f64>~anonymous|1 (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 4
  f64.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int8Array,i8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.rem_s
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Int8Array#every (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Int8Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     block $for-continue|0
      local.get $var$4
      local.get $var$5
      i32.const 0
      i32.shl
      i32.add
      i32.load8_s $0
      local.get $var$5
      local.get $var$3
      i32.const 3
      global.set $~argumentsLength
      local.get $var$2
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int8Array,i8>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend8_s
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint8Array,u8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.rem_u
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Uint8Array#every (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint8Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     block $for-continue|0
      local.get $var$4
      local.get $var$5
      i32.const 0
      i32.shl
      i32.add
      i32.load8_u $0
      local.get $var$5
      local.get $var$3
      i32.const 3
      global.set $~argumentsLength
      local.get $var$2
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint8Array,u8>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.rem_u
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Uint8ClampedArray#every (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     block $for-continue|0
      local.get $var$4
      local.get $var$5
      i32.const 0
      i32.shl
      i32.add
      i32.load8_u $0
      local.get $var$5
      local.get $var$3
      i32.const 3
      global.set $~argumentsLength
      local.get $var$2
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 255
  i32.and
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int16Array,i16>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.rem_s
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Int16Array#every (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Int16Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     block $for-continue|0
      local.get $var$4
      local.get $var$5
      i32.const 1
      i32.shl
      i32.add
      i32.load16_s $0
      local.get $var$5
      local.get $var$3
      i32.const 3
      global.set $~argumentsLength
      local.get $var$2
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int16Array,i16>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.extend16_s
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint16Array,u16>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.rem_u
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Uint16Array#every (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint16Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     block $for-continue|0
      local.get $var$4
      local.get $var$5
      i32.const 1
      i32.shl
      i32.add
      i32.load16_u $0
      local.get $var$5
      local.get $var$3
      i32.const 3
      global.set $~argumentsLength
      local.get $var$2
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint16Array,u16>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 65535
  i32.and
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int32Array,i32>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.rem_s
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Int32Array#every (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Int32Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     block $for-continue|0
      local.get $var$4
      local.get $var$5
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.get $var$5
      local.get $var$3
      i32.const 3
      global.set $~argumentsLength
      local.get $var$2
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int32Array,i32>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint32Array,u32>~anonymous|0 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.rem_u
  i32.const 0
  i32.eq
 )
 (func $~lib/typedarray/Uint32Array#every (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint32Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     block $for-continue|0
      local.get $var$4
      local.get $var$5
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.get $var$5
      local.get $var$3
      i32.const 3
      global.set $~argumentsLength
      local.get $var$2
      i32.load $0
      call_indirect $0 (type $i32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint32Array,u32>~anonymous|1 (param $value i32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i32.const 2
  i32.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int64Array,i64>~anonymous|0 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.rem_s
  i64.const 0
  i64.eq
 )
 (func $~lib/typedarray/Int64Array#every (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Int64Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     block $for-continue|0
      local.get $var$4
      local.get $var$5
      i32.const 3
      i32.shl
      i32.add
      i64.load $0
      local.get $var$5
      local.get $var$3
      i32.const 3
      global.set $~argumentsLength
      local.get $var$2
      i32.load $0
      call_indirect $0 (type $i64_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int64Array,i64>~anonymous|1 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint64Array,u64>~anonymous|0 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.rem_u
  i64.const 0
  i64.eq
 )
 (func $~lib/typedarray/Uint64Array#every (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Uint64Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     block $for-continue|0
      local.get $var$4
      local.get $var$5
      i32.const 3
      i32.shl
      i32.add
      i64.load $0
      local.get $var$5
      local.get $var$3
      i32.const 3
      global.set $~argumentsLength
      local.get $var$2
      i32.load $0
      call_indirect $0 (type $i64_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint64Array,u64>~anonymous|1 (param $value i64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  i64.const 2
  i64.eq
 )
 (func $~lib/math/NativeMathf.mod (param $x f32) (param $y f32) (result f32)
  (local $ux i32)
  (local $uy i32)
  (local $ex i32)
  (local $ey i32)
  (local $sm i32)
  (local $uy1 i32)
  (local $var$8 f32)
  (local $ux1 i32)
  (local $var$10 i32)
  (local $shift i32)
  local.get $y
  f32.abs
  f32.const 1
  f32.eq
  if
   local.get $x
   local.get $x
   f32.trunc
   f32.sub
   local.get $x
   f32.copysign
   return
  end
  local.get $x
  i32.reinterpret_f32
  local.set $ux
  local.get $y
  i32.reinterpret_f32
  local.set $uy
  local.get $ux
  i32.const 23
  i32.shr_u
  i32.const 255
  i32.and
  local.set $ex
  local.get $uy
  i32.const 23
  i32.shr_u
  i32.const 255
  i32.and
  local.set $ey
  local.get $ux
  i32.const -2147483648
  i32.and
  local.set $sm
  local.get $uy
  i32.const 1
  i32.shl
  local.set $uy1
  local.get $uy1
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $ex
   i32.const 255
   i32.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $y
   local.get $y
   f32.ne
  end
  if
   local.get $x
   local.get $y
   f32.mul
   local.set $var$8
   local.get $var$8
   local.get $var$8
   f32.div
   return
  end
  local.get $ux
  i32.const 1
  i32.shl
  local.set $ux1
  local.get $ux1
  local.get $uy1
  i32.le_u
  if
   local.get $x
   local.get $ux1
   local.get $uy1
   i32.ne
   f32.convert_i32_u
   f32.mul
   return
  end
  local.get $ex
  i32.eqz
  if
   local.get $ex
   local.get $ux
   i32.const 9
   i32.shl
   i32.clz
   i32.sub
   local.set $ex
   local.get $ux
   i32.const 1
   local.get $ex
   i32.sub
   i32.shl
   local.set $ux
  else
   local.get $ux
   i32.const -1
   i32.const 9
   i32.shr_u
   i32.and
   local.set $ux
   local.get $ux
   i32.const 1
   i32.const 23
   i32.shl
   i32.or
   local.set $ux
  end
  local.get $ey
  i32.eqz
  if
   local.get $ey
   local.get $uy
   i32.const 9
   i32.shl
   i32.clz
   i32.sub
   local.set $ey
   local.get $uy
   i32.const 1
   local.get $ey
   i32.sub
   i32.shl
   local.set $uy
  else
   local.get $uy
   i32.const -1
   i32.const 9
   i32.shr_u
   i32.and
   local.set $uy
   local.get $uy
   i32.const 1
   i32.const 23
   i32.shl
   i32.or
   local.set $uy
  end
  loop $while-continue|0
   local.get $ex
   local.get $ey
   i32.gt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $ux
    local.get $uy
    i32.ge_u
    if
     local.get $ux
     local.get $uy
     i32.eq
     if
      f32.const 0
      local.get $x
      f32.mul
      return
     end
     local.get $ux
     local.get $uy
     i32.sub
     local.set $ux
    end
    local.get $ux
    i32.const 1
    i32.shl
    local.set $ux
    local.get $ex
    i32.const 1
    i32.sub
    local.set $ex
    br $while-continue|0
   end
  end
  local.get $ux
  local.get $uy
  i32.ge_u
  if
   local.get $ux
   local.get $uy
   i32.eq
   if
    f32.const 0
    local.get $x
    f32.mul
    return
   end
   local.get $ux
   local.get $uy
   i32.sub
   local.set $ux
  end
  local.get $ux
  i32.const 8
  i32.shl
  i32.clz
  local.set $shift
  local.get $ex
  local.get $shift
  i32.sub
  local.set $ex
  local.get $ux
  local.get $shift
  i32.shl
  local.set $ux
  local.get $ex
  i32.const 0
  i32.gt_s
  if
   local.get $ux
   i32.const 1
   i32.const 23
   i32.shl
   i32.sub
   local.set $ux
   local.get $ux
   local.get $ex
   i32.const 23
   i32.shl
   i32.or
   local.set $ux
  else
   local.get $ux
   i32.const 0
   local.get $ex
   i32.sub
   i32.const 1
   i32.add
   i32.shr_u
   local.set $ux
  end
  local.get $ux
  local.get $sm
  i32.or
  f32.reinterpret_i32
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Float32Array,f32>~anonymous|0 (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  call $~lib/math/NativeMathf.mod
  f32.const 0
  f32.eq
 )
 (func $~lib/typedarray/Float32Array#every (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Float32Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     block $for-continue|0
      local.get $var$4
      local.get $var$5
      i32.const 2
      i32.shl
      i32.add
      f32.load $0
      local.get $var$5
      local.get $var$3
      i32.const 3
      global.set $~argumentsLength
      local.get $var$2
      i32.load $0
      call_indirect $0 (type $f32_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Float32Array,f32>~anonymous|1 (param $value f32) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f32.const 2
  f32.eq
 )
 (func $~lib/math/NativeMath.mod (param $x f64) (param $y f64) (result f64)
  (local $ux i64)
  (local $uy i64)
  (local $ex i64)
  (local $ey i64)
  (local $sx i64)
  (local $uy1 i64)
  (local $var$8 f64)
  (local $ux1 i64)
  (local $var$10 i32)
  (local $shift i64)
  local.get $y
  f64.abs
  f64.const 1
  f64.eq
  if
   local.get $x
   local.get $x
   f64.trunc
   f64.sub
   local.get $x
   f64.copysign
   return
  end
  local.get $x
  i64.reinterpret_f64
  local.set $ux
  local.get $y
  i64.reinterpret_f64
  local.set $uy
  local.get $ux
  i64.const 52
  i64.shr_u
  i64.const 2047
  i64.and
  local.set $ex
  local.get $uy
  i64.const 52
  i64.shr_u
  i64.const 2047
  i64.and
  local.set $ey
  local.get $ux
  i64.const 63
  i64.shr_u
  local.set $sx
  local.get $uy
  i64.const 1
  i64.shl
  local.set $uy1
  local.get $uy1
  i64.const 0
  i64.eq
  if (result i32)
   i32.const 1
  else
   local.get $ex
   i64.const 2047
   i64.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $y
   local.get $y
   f64.ne
  end
  if
   local.get $x
   local.get $y
   f64.mul
   local.set $var$8
   local.get $var$8
   local.get $var$8
   f64.div
   return
  end
  local.get $ux
  i64.const 1
  i64.shl
  local.set $ux1
  local.get $ux1
  local.get $uy1
  i64.le_u
  if
   local.get $x
   local.get $ux1
   local.get $uy1
   i64.ne
   f64.convert_i32_u
   f64.mul
   return
  end
  local.get $ex
  i64.const 0
  i64.ne
  i32.eqz
  if
   local.get $ex
   local.get $ux
   i64.const 12
   i64.shl
   i64.clz
   i64.sub
   local.set $ex
   local.get $ux
   i64.const 1
   local.get $ex
   i64.sub
   i64.shl
   local.set $ux
  else
   local.get $ux
   i64.const -1
   i64.const 12
   i64.shr_u
   i64.and
   local.set $ux
   local.get $ux
   i64.const 1
   i64.const 52
   i64.shl
   i64.or
   local.set $ux
  end
  local.get $ey
  i64.const 0
  i64.ne
  i32.eqz
  if
   local.get $ey
   local.get $uy
   i64.const 12
   i64.shl
   i64.clz
   i64.sub
   local.set $ey
   local.get $uy
   i64.const 1
   local.get $ey
   i64.sub
   i64.shl
   local.set $uy
  else
   local.get $uy
   i64.const -1
   i64.const 12
   i64.shr_u
   i64.and
   local.set $uy
   local.get $uy
   i64.const 1
   i64.const 52
   i64.shl
   i64.or
   local.set $uy
  end
  loop $while-continue|0
   local.get $ex
   local.get $ey
   i64.gt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $ux
    local.get $uy
    i64.ge_u
    if
     local.get $ux
     local.get $uy
     i64.eq
     if
      f64.const 0
      local.get $x
      f64.mul
      return
     end
     local.get $ux
     local.get $uy
     i64.sub
     local.set $ux
    end
    local.get $ux
    i64.const 1
    i64.shl
    local.set $ux
    local.get $ex
    i64.const 1
    i64.sub
    local.set $ex
    br $while-continue|0
   end
  end
  local.get $ux
  local.get $uy
  i64.ge_u
  if
   local.get $ux
   local.get $uy
   i64.eq
   if
    f64.const 0
    local.get $x
    f64.mul
    return
   end
   local.get $ux
   local.get $uy
   i64.sub
   local.set $ux
  end
  local.get $ux
  i64.const 11
  i64.shl
  i64.clz
  local.set $shift
  local.get $ex
  local.get $shift
  i64.sub
  local.set $ex
  local.get $ux
  local.get $shift
  i64.shl
  local.set $ux
  local.get $ex
  i64.const 0
  i64.gt_s
  if
   local.get $ux
   i64.const 1
   i64.const 52
   i64.shl
   i64.sub
   local.set $ux
   local.get $ux
   local.get $ex
   i64.const 52
   i64.shl
   i64.or
   local.set $ux
  else
   local.get $ux
   i64.const 0
   local.get $ex
   i64.sub
   i64.const 1
   i64.add
   i64.shr_u
   local.set $ux
  end
  local.get $ux
  local.get $sx
  i64.const 63
  i64.shl
  i64.or
  f64.reinterpret_i64
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Float64Array,f64>~anonymous|0 (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  call $~lib/math/NativeMath.mod
  f64.const 0
  f64.eq
 )
 (func $~lib/typedarray/Float64Array#every (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  block $~lib/typedarray/EVERY<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $var$3
   local.get $fn
   local.set $var$2
   local.get $var$3
   i32.load $0 offset=4
   local.set $var$4
   i32.const 0
   local.set $var$5
   local.get $var$3
   call $~lib/typedarray/Float64Array#get:length
   local.set $var$6
   loop $for-loop|0
    local.get $var$5
    local.get $var$6
    i32.lt_s
    local.set $var$7
    local.get $var$7
    if
     block $for-continue|0
      local.get $var$4
      local.get $var$5
      i32.const 3
      i32.shl
      i32.add
      f64.load $0
      local.get $var$5
      local.get $var$3
      i32.const 3
      global.set $~argumentsLength
      local.get $var$2
      i32.load $0
      call_indirect $0 (type $f64_i32_i32_=>_i32)
      if
       br $for-continue|0
      end
      i32.const 0
      br $~lib/typedarray/EVERY<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $var$5
     i32.const 1
     i32.add
     local.set $var$5
     br $for-loop|0
    end
   end
   i32.const 1
  end
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Float64Array,f64>~anonymous|1 (param $value f64) (param $$1 i32) (param $$2 i32) (result i32)
  local.get $value
  f64.const 2
  f64.eq
 )
 (func $~lib/typedarray/Int8Array#forEach (param $this i32) (param $fn i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$4
  i32.const 0
  local.set $var$5
  local.get $var$3
  call $~lib/typedarray/Int8Array#get:length
  local.set $var$6
  loop $for-loop|0
   local.get $var$5
   local.get $var$6
   i32.lt_s
   local.set $var$7
   local.get $var$7
   if
    local.get $var$4
    local.get $var$5
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.get $var$5
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8Array#forEach (param $this i32) (param $fn i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$4
  i32.const 0
  local.set $var$5
  local.get $var$3
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$6
  loop $for-loop|0
   local.get $var$5
   local.get $var$6
   i32.lt_s
   local.set $var$7
   local.get $var$7
   if
    local.get $var$4
    local.get $var$5
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $var$5
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#forEach (param $this i32) (param $fn i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$4
  i32.const 0
  local.set $var$5
  local.get $var$3
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $var$6
  loop $for-loop|0
   local.get $var$5
   local.get $var$6
   i32.lt_s
   local.set $var$7
   local.get $var$7
   if
    local.get $var$4
    local.get $var$5
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $var$5
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#forEach (param $this i32) (param $fn i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$4
  i32.const 0
  local.set $var$5
  local.get $var$3
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$6
  loop $for-loop|0
   local.get $var$5
   local.get $var$6
   i32.lt_s
   local.set $var$7
   local.get $var$7
   if
    local.get $var$4
    local.get $var$5
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.get $var$5
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#forEach (param $this i32) (param $fn i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$4
  i32.const 0
  local.set $var$5
  local.get $var$3
  call $~lib/typedarray/Uint16Array#get:length
  local.set $var$6
  loop $for-loop|0
   local.get $var$5
   local.get $var$6
   i32.lt_s
   local.set $var$7
   local.get $var$7
   if
    local.get $var$4
    local.get $var$5
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $var$5
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#forEach (param $this i32) (param $fn i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$4
  i32.const 0
  local.set $var$5
  local.get $var$3
  call $~lib/typedarray/Int32Array#get:length
  local.set $var$6
  loop $for-loop|0
   local.get $var$5
   local.get $var$6
   i32.lt_s
   local.set $var$7
   local.get $var$7
   if
    local.get $var$4
    local.get $var$5
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $var$5
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#forEach (param $this i32) (param $fn i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$4
  i32.const 0
  local.set $var$5
  local.get $var$3
  call $~lib/typedarray/Uint32Array#get:length
  local.set $var$6
  loop $for-loop|0
   local.get $var$5
   local.get $var$6
   i32.lt_s
   local.set $var$7
   local.get $var$7
   if
    local.get $var$4
    local.get $var$5
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $var$5
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int64Array#forEach (param $this i32) (param $fn i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$4
  i32.const 0
  local.set $var$5
  local.get $var$3
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$6
  loop $for-loop|0
   local.get $var$5
   local.get $var$6
   i32.lt_s
   local.set $var$7
   local.get $var$7
   if
    local.get $var$4
    local.get $var$5
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $var$5
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_none)
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint64Array#forEach (param $this i32) (param $fn i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$4
  i32.const 0
  local.set $var$5
  local.get $var$3
  call $~lib/typedarray/Uint64Array#get:length
  local.set $var$6
  loop $for-loop|0
   local.get $var$5
   local.get $var$6
   i32.lt_s
   local.set $var$7
   local.get $var$7
   if
    local.get $var$4
    local.get $var$5
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $var$5
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_none)
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#forEach (param $this i32) (param $fn i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$4
  i32.const 0
  local.set $var$5
  local.get $var$3
  call $~lib/typedarray/Float32Array#get:length
  local.set $var$6
  loop $for-loop|0
   local.get $var$5
   local.get $var$6
   i32.lt_s
   local.set $var$7
   local.get $var$7
   if
    local.get $var$4
    local.get $var$5
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.get $var$5
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $f32_i32_i32_=>_none)
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float64Array#forEach (param $this i32) (param $fn i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$4
  i32.const 0
  local.set $var$5
  local.get $var$3
  call $~lib/typedarray/Float64Array#get:length
  local.set $var$6
  loop $for-loop|0
   local.get $var$5
   local.get $var$6
   i32.lt_s
   local.set $var$7
   local.get $var$7
   if
    local.get $var$4
    local.get $var$5
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.get $var$5
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $f64_i32_i32_=>_none)
    local.get $var$5
    i32.const 1
    i32.add
    local.set $var$5
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/bytes/REVERSE<u8> (param $ptr i32) (param $len i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i64)
  (local $var$9 i64)
  (local $var$10 i64)
  (local $front_0 i32)
  (local $back_0 i32)
  (local $temp_0 i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $var$2
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $var$4
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 1
   i32.const 1
   i32.eq
   drop
   local.get $len
   i32.const 8
   i32.sub
   local.set $var$3
   loop $while-continue|0
    local.get $var$2
    i32.const 7
    i32.add
    local.get $var$4
    i32.lt_u
    local.set $var$5
    local.get $var$5
    if
     local.get $ptr
     local.get $var$2
     i32.add
     local.set $front
     local.get $ptr
     local.get $var$3
     i32.add
     local.get $var$2
     i32.sub
     local.set $back
     local.get $front
     i64.load $0
     local.tee $temp
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $temp
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $var$9
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $var$9
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     local.set $temp
     local.get $front
     local.get $back
     i64.load $0
     local.tee $var$9
     i64.const 8
     i64.shr_u
     i64.const 71777214294589695
     i64.and
     local.get $var$9
     i64.const 71777214294589695
     i64.and
     i64.const 8
     i64.shl
     i64.or
     local.tee $var$10
     i64.const 16
     i64.shr_u
     i64.const 281470681808895
     i64.and
     local.get $var$10
     i64.const 281470681808895
     i64.and
     i64.const 16
     i64.shl
     i64.or
     i64.const 32
     i64.rotr
     i64.store $0
     local.get $back
     local.get $temp
     i64.store $0
     local.get $var$2
     i32.const 8
     i32.add
     local.set $var$2
     br $while-continue|0
    end
   end
   i32.const 1
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $var$3
   loop $while-continue|1
    local.get $var$2
    local.get $var$4
    i32.lt_u
    local.set $var$5
    local.get $var$5
    if
     local.get $ptr
     local.get $var$2
     i32.const 0
     i32.shl
     i32.add
     local.set $front_0
     local.get $ptr
     local.get $var$3
     local.get $var$2
     i32.sub
     i32.const 0
     i32.shl
     i32.add
     local.set $back_0
     local.get $front_0
     i32.load8_u $0
     local.set $temp_0
     local.get $front_0
     local.get $back_0
     i32.load8_u $0
     i32.store8 $0
     local.get $back_0
     local.get $temp_0
     i32.store8 $0
     local.get $var$2
     i32.const 1
     i32.add
     local.set $var$2
     br $while-continue|1
    end
   end
  end
 )
 (func $~lib/typedarray/Int8Array#reverse (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int8Array#get:length
  call $~lib/util/bytes/REVERSE<u8>
  local.get $this
 )
 (func $~lib/typedarray/Uint8Array#reverse (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint8Array#get:length
  call $~lib/util/bytes/REVERSE<u8>
  local.get $this
 )
 (func $~lib/typedarray/Uint8ClampedArray#reverse (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint8ClampedArray#get:length
  call $~lib/util/bytes/REVERSE<u8>
  local.get $this
 )
 (func $~lib/util/bytes/REVERSE<u16> (param $ptr i32) (param $len i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i32)
  (local $front_0 i32)
  (local $back_0 i32)
  (local $temp_0 i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $var$2
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $var$4
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 2
   i32.const 1
   i32.eq
   drop
   i32.const 2
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 2
   i32.sub
   local.set $var$3
   loop $while-continue|0
    local.get $var$2
    i32.const 1
    i32.add
    local.get $var$4
    i32.lt_u
    local.set $var$5
    local.get $var$5
    if
     local.get $ptr
     local.get $var$2
     i32.const 1
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $var$3
     local.get $var$2
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $back
     local.get $back
     i32.load $0
     i32.const 16
     i32.rotr
     local.set $temp
     local.get $back
     local.get $front
     i32.load $0
     i32.const 16
     i32.rotr
     i32.store $0
     local.get $front
     local.get $temp
     i32.store $0
     local.get $var$2
     i32.const 2
     i32.add
     local.set $var$2
     br $while-continue|0
    end
   end
   local.get $len
   i32.const 1
   i32.sub
   local.set $var$3
   loop $while-continue|1
    local.get $var$2
    local.get $var$4
    i32.lt_u
    local.set $var$5
    local.get $var$5
    if
     local.get $ptr
     local.get $var$2
     i32.const 1
     i32.shl
     i32.add
     local.set $front_0
     local.get $ptr
     local.get $var$3
     local.get $var$2
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $back_0
     local.get $front_0
     i32.load16_u $0
     local.set $temp_0
     local.get $front_0
     local.get $back_0
     i32.load16_u $0
     i32.store16 $0
     local.get $back_0
     local.get $temp_0
     i32.store16 $0
     local.get $var$2
     i32.const 1
     i32.add
     local.set $var$2
     br $while-continue|1
    end
   end
  end
 )
 (func $~lib/typedarray/Int16Array#reverse (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int16Array#get:length
  call $~lib/util/bytes/REVERSE<u16>
  local.get $this
 )
 (func $~lib/typedarray/Uint16Array#reverse (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint16Array#get:length
  call $~lib/util/bytes/REVERSE<u16>
  local.get $this
 )
 (func $~lib/util/bytes/REVERSE<u32> (param $ptr i32) (param $len i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $var$2
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $var$4
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 4
   i32.const 1
   i32.eq
   drop
   i32.const 4
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $var$3
   loop $while-continue|0
    local.get $var$2
    local.get $var$4
    i32.lt_u
    local.set $var$5
    local.get $var$5
    if
     local.get $ptr
     local.get $var$2
     i32.const 2
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $var$3
     local.get $var$2
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     local.set $back
     local.get $front
     i32.load $0
     local.set $temp
     local.get $front
     local.get $back
     i32.load $0
     i32.store $0
     local.get $back
     local.get $temp
     i32.store $0
     local.get $var$2
     i32.const 1
     i32.add
     local.set $var$2
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/typedarray/Int32Array#reverse (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int32Array#get:length
  call $~lib/util/bytes/REVERSE<u32>
  local.get $this
 )
 (func $~lib/typedarray/Uint32Array#reverse (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint32Array#get:length
  call $~lib/util/bytes/REVERSE<u32>
  local.get $this
 )
 (func $~lib/util/bytes/REVERSE<u64> (param $ptr i32) (param $len i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp i64)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $var$2
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $var$4
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 8
   i32.const 1
   i32.eq
   drop
   i32.const 8
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $var$3
   loop $while-continue|0
    local.get $var$2
    local.get $var$4
    i32.lt_u
    local.set $var$5
    local.get $var$5
    if
     local.get $ptr
     local.get $var$2
     i32.const 3
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $var$3
     local.get $var$2
     i32.sub
     i32.const 3
     i32.shl
     i32.add
     local.set $back
     local.get $front
     i64.load $0
     local.set $temp
     local.get $front
     local.get $back
     i64.load $0
     i64.store $0
     local.get $back
     local.get $temp
     i64.store $0
     local.get $var$2
     i32.const 1
     i32.add
     local.set $var$2
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/typedarray/Int64Array#reverse (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int64Array#get:length
  call $~lib/util/bytes/REVERSE<u64>
  local.get $this
 )
 (func $~lib/typedarray/Uint64Array#reverse (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint64Array#get:length
  call $~lib/util/bytes/REVERSE<u64>
  local.get $this
 )
 (func $~lib/util/bytes/REVERSE<f32> (param $ptr i32) (param $len i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp f32)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $var$2
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $var$4
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 4
   i32.const 1
   i32.eq
   drop
   i32.const 4
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $var$3
   loop $while-continue|0
    local.get $var$2
    local.get $var$4
    i32.lt_u
    local.set $var$5
    local.get $var$5
    if
     local.get $ptr
     local.get $var$2
     i32.const 2
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $var$3
     local.get $var$2
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     local.set $back
     local.get $front
     f32.load $0
     local.set $temp
     local.get $front
     local.get $back
     f32.load $0
     f32.store $0
     local.get $back
     local.get $temp
     f32.store $0
     local.get $var$2
     i32.const 1
     i32.add
     local.set $var$2
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/typedarray/Float32Array#reverse (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Float32Array#get:length
  call $~lib/util/bytes/REVERSE<f32>
  local.get $this
 )
 (func $~lib/util/bytes/REVERSE<f64> (param $ptr i32) (param $len i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $front i32)
  (local $back i32)
  (local $temp f64)
  local.get $len
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $var$2
   local.get $len
   i32.const 1
   i32.shr_u
   local.set $var$4
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 8
   i32.const 1
   i32.eq
   drop
   i32.const 8
   i32.const 2
   i32.eq
   drop
   local.get $len
   i32.const 1
   i32.sub
   local.set $var$3
   loop $while-continue|0
    local.get $var$2
    local.get $var$4
    i32.lt_u
    local.set $var$5
    local.get $var$5
    if
     local.get $ptr
     local.get $var$2
     i32.const 3
     i32.shl
     i32.add
     local.set $front
     local.get $ptr
     local.get $var$3
     local.get $var$2
     i32.sub
     i32.const 3
     i32.shl
     i32.add
     local.set $back
     local.get $front
     f64.load $0
     local.set $temp
     local.get $front
     local.get $back
     f64.load $0
     f64.store $0
     local.get $back
     local.get $temp
     f64.store $0
     local.get $var$2
     i32.const 1
     i32.add
     local.set $var$2
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/typedarray/Float64Array#reverse (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Float64Array#get:length
  call $~lib/util/bytes/REVERSE<f64>
  local.get $this
 )
 (func $~lib/typedarray/Int8Array#indexOf (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Int8Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.tee $var$8
    i32.const 0
    local.tee $var$9
    local.get $var$8
    local.get $var$9
    i32.gt_s
    select
    local.set $var$6
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    local.get $var$7
    i32.lt_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $var$4
     i32.extend8_s
     i32.eq
     if
      local.get $var$6
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int8Array#lastIndexOf (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Int8Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.set $var$6
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
    if
     local.get $var$7
     i32.const 1
     i32.sub
     local.set $var$6
    end
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    i32.const 0
    i32.ge_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.get $var$4
     i32.extend8_s
     i32.eq
     if
      local.get $var$6
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int8Array,i8>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.sub
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int8Array#lastIndexOf@varargs (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Int8Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Int8Array#lastIndexOf
 )
 (func $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Int8Array,i8>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $sliced i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int8Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    call $~lib/typedarray/Int8Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  local.get $array
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 603
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 604
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 605
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 606
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 607
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 608
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 609
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 610
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 611
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 613
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 614
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 615
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 616
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 617
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 618
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 619
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 620
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 621
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Int8Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 622
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Int8Array#subarray
  local.tee $sliced
  i32.store $0 offset=8
  local.get $sliced
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 626
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 627
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 628
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 629
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 630
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 631
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Int8Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 632
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Int8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 633
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint8Array#indexOf (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Uint8Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.tee $var$8
    i32.const 0
    local.tee $var$9
    local.get $var$8
    local.get $var$9
    i32.gt_s
    select
    local.set $var$6
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    local.get $var$7
    i32.lt_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $var$4
     i32.const 255
     i32.and
     i32.eq
     if
      local.get $var$6
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint8Array#lastIndexOf (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Uint8Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.set $var$6
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
    if
     local.get $var$7
     i32.const 1
     i32.sub
     local.set $var$6
    end
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    i32.const 0
    i32.ge_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $var$4
     i32.const 255
     i32.and
     i32.eq
     if
      local.get $var$6
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8Array,u8>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.sub
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint8Array#lastIndexOf@varargs (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint8Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint8Array#lastIndexOf
 )
 (func $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Uint8Array,u8>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $sliced i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  local.get $array
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 603
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 604
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 605
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 606
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 607
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 608
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 609
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 610
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 611
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 613
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 614
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 615
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 616
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 617
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 618
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 619
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 620
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 621
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Uint8Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 622
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint8Array#subarray
  local.tee $sliced
  i32.store $0 offset=8
  local.get $sliced
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 626
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 627
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 628
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 629
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 630
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 631
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 632
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Uint8Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 633
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint8ClampedArray#indexOf (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.tee $var$8
    i32.const 0
    local.tee $var$9
    local.get $var$8
    local.get $var$9
    i32.gt_s
    select
    local.set $var$6
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    local.get $var$7
    i32.lt_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $var$4
     i32.const 255
     i32.and
     i32.eq
     if
      local.get $var$6
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#lastIndexOf (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.set $var$6
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
    if
     local.get $var$7
     i32.const 1
     i32.sub
     local.set $var$6
    end
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    i32.const 0
    i32.ge_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.get $var$4
     i32.const 255
     i32.and
     i32.eq
     if
      local.get $var$6
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint8ClampedArray,u8>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.sub
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint8ClampedArray#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
 )
 (func $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Uint8ClampedArray,u8>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $sliced i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8ClampedArray#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  local.get $array
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 603
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 604
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 605
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 606
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 607
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 608
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 609
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 610
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 611
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 613
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 614
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 615
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 616
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 617
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 618
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 619
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 620
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 621
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Uint8ClampedArray#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 622
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint8ClampedArray#subarray
  local.tee $sliced
  i32.store $0 offset=8
  local.get $sliced
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 626
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 627
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 628
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 629
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 630
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 631
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 632
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 633
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Int16Array#indexOf (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Int16Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.tee $var$8
    i32.const 0
    local.tee $var$9
    local.get $var$8
    local.get $var$9
    i32.gt_s
    select
    local.set $var$6
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    local.get $var$7
    i32.lt_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $var$4
     i32.extend16_s
     i32.eq
     if
      local.get $var$6
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int16Array#lastIndexOf (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Int16Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.set $var$6
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
    if
     local.get $var$7
     i32.const 1
     i32.sub
     local.set $var$6
    end
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    i32.const 0
    i32.ge_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.get $var$4
     i32.extend16_s
     i32.eq
     if
      local.get $var$6
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int16Array,i16>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.sub
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int16Array#lastIndexOf@varargs (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Int16Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Int16Array#lastIndexOf
 )
 (func $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Int16Array,i16>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $sliced i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int16Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    call $~lib/typedarray/Int16Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  local.get $array
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 603
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 604
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 605
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 606
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 607
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 608
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 609
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 610
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 611
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 613
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 614
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 615
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 616
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 617
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 618
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 619
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 620
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 621
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Int16Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 622
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Int16Array#subarray
  local.tee $sliced
  i32.store $0 offset=8
  local.get $sliced
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 626
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 627
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 628
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 629
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 630
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 631
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Int16Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 632
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Int16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 633
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint16Array#indexOf (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Uint16Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.tee $var$8
    i32.const 0
    local.tee $var$9
    local.get $var$8
    local.get $var$9
    i32.gt_s
    select
    local.set $var$6
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    local.get $var$7
    i32.lt_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $var$4
     i32.const 65535
     i32.and
     i32.eq
     if
      local.get $var$6
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint16Array#lastIndexOf (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Uint16Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.set $var$6
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
    if
     local.get $var$7
     i32.const 1
     i32.sub
     local.set $var$6
    end
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    i32.const 0
    i32.ge_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.get $var$4
     i32.const 65535
     i32.and
     i32.eq
     if
      local.get $var$6
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint16Array,u16>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.sub
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint16Array#lastIndexOf@varargs (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint16Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint16Array#lastIndexOf
 )
 (func $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Uint16Array,u16>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $sliced i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    call $~lib/typedarray/Uint16Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  local.get $array
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 603
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 604
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 605
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 606
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 607
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 608
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 609
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 610
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 611
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 613
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 614
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 615
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 616
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 617
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 618
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 619
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 620
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 621
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Uint16Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 622
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint16Array#subarray
  local.tee $sliced
  i32.store $0 offset=8
  local.get $sliced
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 626
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 627
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 628
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 629
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 630
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 631
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 632
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Uint16Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 633
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Int32Array#indexOf (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Int32Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.tee $var$8
    i32.const 0
    local.tee $var$9
    local.get $var$8
    local.get $var$9
    i32.gt_s
    select
    local.set $var$6
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    local.get $var$7
    i32.lt_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $var$4
     i32.eq
     if
      local.get $var$6
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int32Array#lastIndexOf (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Int32Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.set $var$6
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
    if
     local.get $var$7
     i32.const 1
     i32.sub
     local.set $var$6
    end
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    i32.const 0
    i32.ge_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $var$4
     i32.eq
     if
      local.get $var$6
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int32Array,i32>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.sub
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int32Array#lastIndexOf@varargs (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Int32Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Int32Array#lastIndexOf
 )
 (func $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Int32Array,i32>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $sliced i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int32Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Int32Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  local.get $array
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 603
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 604
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 605
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 606
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 607
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 608
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 609
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 610
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 611
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 613
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 614
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 615
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 616
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 617
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 618
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 619
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 620
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 621
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Int32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 622
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Int32Array#subarray
  local.tee $sliced
  i32.store $0 offset=8
  local.get $sliced
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 626
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 627
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 628
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 629
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 630
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 631
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Int32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 632
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Int32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 633
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint32Array#indexOf (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Uint32Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.tee $var$8
    i32.const 0
    local.tee $var$9
    local.get $var$8
    local.get $var$9
    i32.gt_s
    select
    local.set $var$6
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    local.get $var$7
    i32.lt_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $var$4
     i32.eq
     if
      local.get $var$6
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint32Array#lastIndexOf (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Uint32Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.set $var$6
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
    if
     local.get $var$7
     i32.const 1
     i32.sub
     local.set $var$6
    end
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    i32.const 0
    i32.ge_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.get $var$4
     i32.eq
     if
      local.get $var$6
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint32Array,u32>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.sub
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint32Array#lastIndexOf@varargs (param $this i32) (param $searchElement i32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint32Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint32Array#lastIndexOf
 )
 (func $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Uint32Array,u32>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $sliced i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Uint32Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  local.get $array
  i32.const 0
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 603
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 604
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 605
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 606
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 607
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 608
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 609
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const 10
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 610
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -100
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 611
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 613
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 614
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 615
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 616
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 617
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 3
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 618
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 3
  i32.const 2
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 619
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 620
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -10
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 621
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i32.const 1
  i32.const -11
  call $~lib/typedarray/Uint32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 622
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint32Array#subarray
  local.tee $sliced
  i32.store $0 offset=8
  local.get $sliced
  i32.const 3
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 626
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 4
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 627
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 628
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 9
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 629
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 10
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 630
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 11
  i32.const 0
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 631
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 1
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 632
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i32.const 5
  i32.const 2
  call $~lib/typedarray/Uint32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 633
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Int64Array#indexOf (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i64)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Int64Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.tee $var$8
    i32.const 0
    local.tee $var$9
    local.get $var$8
    local.get $var$9
    i32.gt_s
    select
    local.set $var$6
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    local.get $var$7
    i32.lt_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $var$4
     i64.eq
     if
      local.get $var$6
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int64Array#lastIndexOf (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i64)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Int64Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.set $var$6
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
    if
     local.get $var$7
     i32.const 1
     i32.sub
     local.set $var$6
    end
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    i32.const 0
    i32.ge_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $var$4
     i64.eq
     if
      local.get $var$6
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Int64Array,i64>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.sub
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Int64Array#lastIndexOf@varargs (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Int64Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Int64Array#lastIndexOf
 )
 (func $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Int64Array,i64>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $sliced i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int64Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Int64Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  local.get $array
  i64.const 0
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 603
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 11
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 604
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const -1
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 605
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 606
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 2
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 607
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 3
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 608
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 4
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 609
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 1
  i32.const 10
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 610
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 1
  i32.const -100
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 611
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 613
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 614
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 615
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 616
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 4
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 617
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 3
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 618
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 2
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 619
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 1
  i32.const 100
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 620
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 1
  i32.const -10
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 621
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 1
  i32.const -11
  call $~lib/typedarray/Int64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 622
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Int64Array#subarray
  local.tee $sliced
  i32.store $0 offset=8
  local.get $sliced
  i64.const 3
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 626
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i64.const 4
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 627
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i64.const 5
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 628
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i64.const 9
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 629
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i64.const 10
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 630
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i64.const 11
  i32.const 0
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 631
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i64.const 5
  i32.const 1
  call $~lib/typedarray/Int64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 632
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i64.const 5
  i32.const 2
  call $~lib/typedarray/Int64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 633
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint64Array#indexOf (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i64)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Uint64Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.tee $var$8
    i32.const 0
    local.tee $var$9
    local.get $var$8
    local.get $var$9
    i32.gt_s
    select
    local.set $var$6
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    local.get $var$7
    i32.lt_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $var$4
     i64.eq
     if
      local.get $var$6
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint64Array#lastIndexOf (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i64)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Uint64Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.set $var$6
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
    if
     local.get $var$7
     i32.const 1
     i32.sub
     local.set $var$6
    end
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    i32.const 0
    i32.ge_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.get $var$4
     i64.eq
     if
      local.get $var$6
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Uint64Array,u64>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.sub
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Uint64Array#lastIndexOf@varargs (param $this i32) (param $searchElement i64) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Uint64Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Uint64Array#lastIndexOf
 )
 (func $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Uint64Array,u64>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $sliced i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Uint64Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  local.get $array
  i64.const 0
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 603
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 11
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 604
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const -1
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 605
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 606
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 2
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 607
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 3
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 608
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 4
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 609
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 1
  i32.const 10
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 610
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 1
  i32.const -100
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 611
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 613
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 614
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 615
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 616
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 4
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 617
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 3
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 618
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 3
  i32.const 2
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 619
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 1
  i32.const 100
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 620
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 1
  i32.const -10
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 621
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  i64.const 1
  i32.const -11
  call $~lib/typedarray/Uint64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 622
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Uint64Array#subarray
  local.tee $sliced
  i32.store $0 offset=8
  local.get $sliced
  i64.const 3
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 626
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i64.const 4
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 627
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i64.const 5
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 628
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i64.const 9
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 629
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i64.const 10
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 630
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i64.const 11
  i32.const 0
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 631
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i64.const 5
  i32.const 1
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 632
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  i64.const 5
  i32.const 2
  call $~lib/typedarray/Uint64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 633
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Float32Array#indexOf (param $this i32) (param $searchElement f32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 f32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Float32Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.tee $var$8
    i32.const 0
    local.tee $var$9
    local.get $var$8
    local.get $var$9
    i32.gt_s
    select
    local.set $var$6
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    local.get $var$7
    i32.lt_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $var$4
     f32.eq
     if
      local.get $var$6
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Float32Array#lastIndexOf (param $this i32) (param $searchElement f32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 f32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Float32Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.set $var$6
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
    if
     local.get $var$7
     i32.const 1
     i32.sub
     local.set $var$6
    end
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    i32.const 0
    i32.ge_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.get $var$4
     f32.eq
     if
      local.get $var$6
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.sub
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Float32Array#lastIndexOf@varargs (param $this i32) (param $searchElement f32) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Float32Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Float32Array#lastIndexOf
 )
 (func $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Float32Array,f32>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $sliced i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Float32Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    call $~lib/typedarray/Float32Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  local.get $array
  f32.const 0
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 603
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 11
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 604
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const -1
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 605
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 3
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 606
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 3
  i32.const 2
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 607
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 3
  i32.const 3
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 608
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 3
  i32.const 4
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 609
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 1
  i32.const 10
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 610
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 1
  i32.const -100
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 611
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 613
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 614
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 615
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 616
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 3
  i32.const 4
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 617
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 3
  i32.const 3
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 618
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 3
  i32.const 2
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 619
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 1
  i32.const 100
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 620
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 1
  i32.const -10
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 621
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f32.const 1
  i32.const -11
  call $~lib/typedarray/Float32Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 622
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Float32Array#subarray
  local.tee $sliced
  i32.store $0 offset=8
  local.get $sliced
  f32.const 3
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 626
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  f32.const 4
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 627
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  f32.const 5
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 628
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  f32.const 9
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 629
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  f32.const 10
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 630
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  f32.const 11
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 631
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  f32.const 5
  i32.const 1
  call $~lib/typedarray/Float32Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 632
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  f32.const 5
  i32.const 2
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 633
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Float64Array#indexOf (param $this i32) (param $searchElement f64) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 f64)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Float64Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
   end
   if
    i32.const -1
    br $~lib/typedarray/INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.tee $var$8
    i32.const 0
    local.tee $var$9
    local.get $var$8
    local.get $var$9
    i32.gt_s
    select
    local.set $var$6
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    local.get $var$7
    i32.lt_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $var$4
     f64.eq
     if
      local.get $var$6
      br $~lib/typedarray/INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Float64Array#lastIndexOf (param $this i32) (param $searchElement f64) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 f64)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  block $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Float64Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if
    i32.const -1
    br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.set $var$6
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
    if
     local.get $var$7
     i32.const 1
     i32.sub
     local.set $var$6
    end
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    i32.const 0
    i32.ge_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.get $var$4
     f64.eq
     if
      local.get $var$6
      br $~lib/typedarray/LAST_INDEX_OF<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.sub
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const -1
  end
 )
 (func $~lib/typedarray/Float64Array#lastIndexOf@varargs (param $this i32) (param $searchElement f64) (param $fromIndex i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $this
   call $~lib/typedarray/Float64Array#get:length
   local.set $fromIndex
  end
  local.get $this
  local.get $searchElement
  local.get $fromIndex
  call $~lib/typedarray/Float64Array#lastIndexOf
 )
 (func $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Float64Array,f64>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $sliced i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Float64Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    call $~lib/typedarray/Float64Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  local.get $array
  f64.const 0
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 603
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 11
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 604
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const -1
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 605
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 3
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 606
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 3
  i32.const 2
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 607
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 3
  i32.const 3
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 608
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 3
  i32.const 4
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 609
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 1
  i32.const 10
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 610
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 1
  i32.const -100
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 611
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#lastIndexOf@varargs
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 613
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 11
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 614
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const -1
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 615
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 3
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 616
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 3
  i32.const 4
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 617
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 3
  i32.const 3
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 618
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 3
  i32.const 2
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 619
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 1
  i32.const 100
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 620
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 1
  i32.const -10
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 621
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  f64.const 1
  i32.const -11
  call $~lib/typedarray/Float64Array#lastIndexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 622
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.const 4
  i32.const 9
  call $~lib/typedarray/Float64Array#subarray
  local.tee $sliced
  i32.store $0 offset=8
  local.get $sliced
  f64.const 3
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 626
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  f64.const 4
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 4
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 627
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  f64.const 5
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 628
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  f64.const 9
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 629
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  f64.const 10
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 630
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  f64.const 11
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 631
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  f64.const 5
  i32.const 1
  call $~lib/typedarray/Float64Array#indexOf
  i32.const 5
  i32.const 4
  i32.sub
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 632
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $sliced
  f64.const 5
  i32.const 2
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 633
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Float64Array#includes (param $this i32) (param $searchElement f64) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 f64)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $elem f64)
  block $~lib/typedarray/INCLUDES<~lib/typedarray/Float64Array,f64>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   i32.const 1
   drop
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Float64Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
   end
   if
    i32.const 0
    br $~lib/typedarray/INCLUDES<~lib/typedarray/Float64Array,f64>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.tee $var$8
    i32.const 0
    local.tee $var$9
    local.get $var$8
    local.get $var$9
    i32.gt_s
    select
    local.set $var$6
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    local.get $var$7
    i32.lt_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 3
     i32.shl
     i32.add
     f64.load $0
     local.set $elem
     local.get $elem
     local.get $var$4
     f64.eq
     if (result i32)
      i32.const 1
     else
      local.get $elem
      local.get $elem
      f64.ne
      local.get $var$4
      local.get $var$4
      f64.ne
      i32.and
     end
     if
      i32.const 1
      br $~lib/typedarray/INCLUDES<~lib/typedarray/Float64Array,f64>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const 0
   br $~lib/typedarray/INCLUDES<~lib/typedarray/Float64Array,f64>|inlined.0
  end
 )
 (func $~lib/typedarray/Float32Array#includes (param $this i32) (param $searchElement f32) (param $fromIndex i32) (result i32)
  (local $var$3 i32)
  (local $var$4 f32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $elem f32)
  block $~lib/typedarray/INCLUDES<~lib/typedarray/Float32Array,f32>|inlined.0 (result i32)
   local.get $this
   local.set $var$5
   local.get $searchElement
   local.set $var$4
   local.get $fromIndex
   local.set $var$3
   i32.const 1
   drop
   local.get $var$3
   local.set $var$6
   local.get $var$5
   call $~lib/typedarray/Float32Array#get:length
   local.set $var$7
   local.get $var$7
   i32.const 0
   i32.eq
   if (result i32)
    i32.const 1
   else
    local.get $var$6
    local.get $var$7
    i32.ge_s
   end
   if
    i32.const 0
    br $~lib/typedarray/INCLUDES<~lib/typedarray/Float32Array,f32>|inlined.0
   end
   local.get $var$6
   i32.const 0
   i32.lt_s
   if
    local.get $var$7
    local.get $var$6
    i32.add
    local.tee $var$8
    i32.const 0
    local.tee $var$9
    local.get $var$8
    local.get $var$9
    i32.gt_s
    select
    local.set $var$6
   end
   local.get $var$5
   i32.load $0 offset=4
   local.set $var$8
   loop $while-continue|0
    local.get $var$6
    local.get $var$7
    i32.lt_s
    local.set $var$9
    local.get $var$9
    if
     local.get $var$8
     local.get $var$6
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.set $elem
     local.get $elem
     local.get $var$4
     f32.eq
     if (result i32)
      i32.const 1
     else
      local.get $elem
      local.get $elem
      f32.ne
      local.get $var$4
      local.get $var$4
      f32.ne
      i32.and
     end
     if
      i32.const 1
      br $~lib/typedarray/INCLUDES<~lib/typedarray/Float32Array,f32>|inlined.0
     end
     local.get $var$6
     i32.const 1
     i32.add
     local.set $var$6
     br $while-continue|0
    end
   end
   i32.const 0
   br $~lib/typedarray/INCLUDES<~lib/typedarray/Float32Array,f32>|inlined.0
  end
 )
 (func $~lib/util/number/decimalCount32 (param $value i32) (result i32)
  local.get $value
  i32.const 100000
  i32.lt_u
  if
   local.get $value
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    local.get $value
    i32.const 10
    i32.ge_u
    i32.add
    return
   else
    i32.const 3
    local.get $value
    i32.const 10000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 1000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $value
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    local.get $value
    i32.const 1000000
    i32.ge_u
    i32.add
    return
   else
    i32.const 8
    local.get $value
    i32.const 1000000000
    i32.ge_u
    i32.add
    local.get $value
    i32.const 100000000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa32_dec_lut (param $buffer i32) (param $num i32) (param $offset i32)
  (local $var$3 i32)
  (local $t i32)
  (local $r i32)
  (local $d1 i32)
  (local $d2 i32)
  (local $digits1 i64)
  (local $digits2 i64)
  (local $var$10 i32)
  (local $var$11 i32)
  loop $while-continue|0
   local.get $num
   i32.const 10000
   i32.ge_u
   local.set $var$3
   local.get $var$3
   if
    local.get $num
    i32.const 10000
    i32.div_u
    local.set $t
    local.get $num
    i32.const 10000
    i32.rem_u
    local.set $r
    local.get $t
    local.set $num
    local.get $r
    i32.const 100
    i32.div_u
    local.set $d1
    local.get $r
    i32.const 100
    i32.rem_u
    local.set $d2
    i32.const 6988
    local.get $d1
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits1
    i32.const 6988
    local.get $d2
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits2
    local.get $offset
    i32.const 4
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $digits1
    local.get $digits2
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    br $while-continue|0
   end
  end
  local.get $num
  i32.const 100
  i32.ge_u
  if
   local.get $num
   i32.const 100
   i32.div_u
   local.set $var$3
   local.get $num
   i32.const 100
   i32.rem_u
   local.set $var$10
   local.get $var$3
   local.set $num
   local.get $offset
   i32.const 2
   i32.sub
   local.set $offset
   i32.const 6988
   local.get $var$10
   i32.const 2
   i32.shl
   i32.add
   i32.load $0
   local.set $var$11
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $var$11
   i32.store $0
  end
  local.get $num
  i32.const 10
  i32.ge_u
  if
   local.get $offset
   i32.const 2
   i32.sub
   local.set $offset
   i32.const 6988
   local.get $num
   i32.const 2
   i32.shl
   i32.add
   i32.load $0
   local.set $var$11
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $var$11
   i32.store $0
  else
   local.get $offset
   i32.const 1
   i32.sub
   local.set $offset
   i32.const 48
   local.get $num
   i32.add
   local.set $var$11
   local.get $buffer
   local.get $offset
   i32.const 1
   i32.shl
   i32.add
   local.get $var$11
   i32.store16 $0
  end
 )
 (func $~lib/util/number/utoa_hex_lut (param $buffer i32) (param $num i64) (param $offset i32)
  (local $var$3 i32)
  loop $while-continue|0
   local.get $offset
   i32.const 2
   i32.ge_u
   local.set $var$3
   local.get $var$3
   if
    local.get $offset
    i32.const 2
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 7408
    local.get $num
    i32.wrap_i64
    i32.const 255
    i32.and
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $num
    i64.const 8
    i64.shr_u
    local.set $num
    br $while-continue|0
   end
  end
  local.get $offset
  i32.const 1
  i32.and
  if
   local.get $buffer
   i32.const 7408
   local.get $num
   i32.wrap_i64
   i32.const 6
   i32.shl
   i32.add
   i32.load16_u $0
   i32.store16 $0
  end
 )
 (func $~lib/util/number/ulog_base (param $num i64) (param $base i32) (result i32)
  (local $var$2 i32)
  (local $b64 i64)
  (local $b i64)
  (local $e i32)
  local.get $base
  local.set $var$2
  local.get $var$2
  i32.popcnt
  i32.const 1
  i32.eq
  if
   i32.const 63
   local.get $num
   i64.clz
   i32.wrap_i64
   i32.sub
   i32.const 31
   local.get $base
   i32.clz
   i32.sub
   i32.div_u
   i32.const 1
   i32.add
   return
  end
  local.get $base
  i64.extend_i32_s
  local.set $b64
  local.get $b64
  local.set $b
  i32.const 1
  local.set $e
  loop $while-continue|0
   local.get $num
   local.get $b
   i64.ge_u
   local.set $var$2
   local.get $var$2
   if
    local.get $num
    local.get $b
    i64.div_u
    local.set $num
    local.get $b
    local.get $b
    i64.mul
    local.set $b
    local.get $e
    i32.const 1
    i32.shl
    local.set $e
    br $while-continue|0
   end
  end
  loop $while-continue|1
   local.get $num
   i64.const 1
   i64.ge_u
   local.set $var$2
   local.get $var$2
   if
    local.get $num
    local.get $b64
    i64.div_u
    local.set $num
    local.get $e
    i32.const 1
    i32.add
    local.set $e
    br $while-continue|1
   end
  end
  local.get $e
  i32.const 1
  i32.sub
 )
 (func $~lib/util/number/utoa64_any_core (param $buffer i32) (param $num i64) (param $offset i32) (param $radix i32)
  (local $base i64)
  (local $var$5 i64)
  (local $q i64)
  local.get $radix
  i64.extend_i32_s
  local.set $base
  local.get $radix
  local.get $radix
  i32.const 1
  i32.sub
  i32.and
  i32.const 0
  i32.eq
  if
   local.get $radix
   i32.ctz
   i32.const 7
   i32.and
   i64.extend_i32_s
   local.set $var$5
   local.get $base
   i64.const 1
   i64.sub
   local.set $q
   loop $do-loop|0
    local.get $offset
    i32.const 1
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 8464
    local.get $num
    local.get $q
    i64.and
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    i32.store16 $0
    local.get $num
    local.get $var$5
    i64.shr_u
    local.set $num
    local.get $num
    i64.const 0
    i64.ne
    br_if $do-loop|0
   end
  else
   loop $do-loop|1
    local.get $offset
    i32.const 1
    i32.sub
    local.set $offset
    local.get $num
    local.get $base
    i64.div_u
    local.set $q
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    i32.const 8464
    local.get $num
    local.get $q
    local.get $base
    i64.mul
    i64.sub
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    i32.store16 $0
    local.get $q
    local.set $num
    local.get $num
    i64.const 0
    i64.ne
    br_if $do-loop|1
   end
  end
 )
 (func $~lib/string/String#get:length (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  i32.load $0 offset=16
  i32.const 1
  i32.shr_u
 )
 (func $~lib/util/number/itoa_buffered<i8> (param $buffer i32) (param $value i32) (result i32)
  (local $sign i32)
  (local $dest i32)
  (local $decimals i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  i32.const 0
  local.set $sign
  i32.const 1
  drop
  local.get $value
  i32.extend8_s
  i32.const 0
  i32.lt_s
  local.set $sign
  local.get $sign
  if
   i32.const 1
   i32.const 1
   i32.eq
   drop
   local.get $value
   i32.extend8_s
   i32.const -128
   i32.eq
   if
    local.get $buffer
    i32.const 45
    i64.extend_i32_s
    i32.const 48
    i32.const 1
    i32.add
    i64.extend_i32_s
    i64.const 16
    i64.shl
    i64.or
    i32.const 48
    i32.const 2
    i32.add
    i64.extend_i32_s
    i64.const 32
    i64.shl
    i64.or
    i32.const 48
    i32.const 8
    i32.add
    i64.extend_i32_s
    i64.const 48
    i64.shl
    i64.or
    i64.store $0
    i32.const 4
    return
   end
   i32.const 1
   i32.const 2
   i32.eq
   drop
   local.get $buffer
   i32.const 45
   i32.store16 $0
   i32.const 0
   local.get $value
   i32.sub
   local.set $value
  end
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.set $dest
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  i32.const 1
  i32.const 4
  i32.le_u
  drop
  local.get $value
  i32.extend8_s
  i32.const 10
  i32.lt_u
  if
   local.get $dest
   local.get $value
   i32.extend8_s
   i32.const 48
   i32.or
   i32.store16 $0
   i32.const 1
   local.get $sign
   i32.add
   return
  end
  i32.const 0
  local.set $decimals
  i32.const 1
  i32.const 4
  i32.le_u
  drop
  local.get $value
  i32.extend8_s
  local.set $var$5
  local.get $var$5
  call $~lib/util/number/decimalCount32
  local.set $decimals
  local.get $dest
  local.set $var$8
  local.get $var$5
  local.set $var$7
  local.get $decimals
  local.set $var$6
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $var$8
  local.get $var$7
  local.get $var$6
  call $~lib/util/number/utoa32_dec_lut
  local.get $sign
  local.get $decimals
  i32.add
 )
 (func $~lib/typedarray/Int8Array#join (param $this i32) (param $separator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int8Array#get:length
  local.get $separator
  call $~lib/util/string/joinIntegerArray<i8>
 )
 (func $~lib/util/string/compareImpl (param $str1 i32) (param $index1 i32) (param $str2 i32) (param $index2 i32) (param $len i32) (result i32)
  (local $ptr1 i32)
  (local $ptr2 i32)
  (local $var$7 i32)
  (local $a i32)
  (local $b i32)
  local.get $str1
  local.get $index1
  i32.const 1
  i32.shl
  i32.add
  local.set $ptr1
  local.get $str2
  local.get $index2
  i32.const 1
  i32.shl
  i32.add
  local.set $ptr2
  i32.const 0
  i32.const 2
  i32.lt_s
  drop
  local.get $len
  i32.const 4
  i32.ge_u
  if (result i32)
   local.get $ptr1
   i32.const 7
   i32.and
   local.get $ptr2
   i32.const 7
   i32.and
   i32.or
   i32.eqz
  else
   i32.const 0
  end
  if
   block $do-break|0
    loop $do-loop|0
     local.get $ptr1
     i64.load $0
     local.get $ptr2
     i64.load $0
     i64.ne
     if
      br $do-break|0
     end
     local.get $ptr1
     i32.const 8
     i32.add
     local.set $ptr1
     local.get $ptr2
     i32.const 8
     i32.add
     local.set $ptr2
     local.get $len
     i32.const 4
     i32.sub
     local.set $len
     local.get $len
     i32.const 4
     i32.ge_u
     br_if $do-loop|0
    end
   end
  end
  loop $while-continue|1
   local.get $len
   local.tee $var$7
   i32.const 1
   i32.sub
   local.set $len
   local.get $var$7
   local.set $var$7
   local.get $var$7
   if
    local.get $ptr1
    i32.load16_u $0
    local.set $a
    local.get $ptr2
    i32.load16_u $0
    local.set $b
    local.get $a
    local.get $b
    i32.ne
    if
     local.get $a
     local.get $b
     i32.sub
     return
    end
    local.get $ptr1
    i32.const 2
    i32.add
    local.set $ptr1
    local.get $ptr2
    i32.const 2
    i32.add
    local.set $ptr2
    br $while-continue|1
   end
  end
  i32.const 0
 )
 (func $~lib/string/String.__eq (param $left i32) (param $right i32) (result i32)
  (local $leftLength i32)
  local.get $left
  local.get $right
  i32.eq
  if
   i32.const 1
   return
  end
  local.get $left
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $right
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   return
  end
  local.get $left
  call $~lib/string/String#get:length
  local.set $leftLength
  local.get $leftLength
  local.get $right
  call $~lib/string/String#get:length
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $left
  i32.const 0
  local.get $right
  i32.const 0
  local.get $leftLength
  call $~lib/util/string/compareImpl
  i32.eqz
 )
 (func $~lib/util/number/itoa_buffered<u8> (param $buffer i32) (param $value i32) (result i32)
  (local $sign i32)
  (local $dest i32)
  (local $decimals i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  i32.const 0
  local.set $sign
  i32.const 0
  drop
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.set $dest
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  local.get $value
  i32.const 255
  i32.and
  i32.const 10
  i32.lt_u
  if
   local.get $buffer
   local.get $value
   i32.const 255
   i32.and
   i32.const 48
   i32.or
   i32.store16 $0
   i32.const 1
   return
  end
  i32.const 0
  local.set $decimals
  i32.const 1
  i32.const 4
  i32.le_u
  drop
  local.get $value
  i32.const 255
  i32.and
  local.set $var$5
  local.get $var$5
  call $~lib/util/number/decimalCount32
  local.set $decimals
  local.get $dest
  local.set $var$8
  local.get $var$5
  local.set $var$7
  local.get $decimals
  local.set $var$6
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $var$8
  local.get $var$7
  local.get $var$6
  call $~lib/util/number/utoa32_dec_lut
  local.get $sign
  local.get $decimals
  i32.add
 )
 (func $~lib/typedarray/Uint8Array#join (param $this i32) (param $separator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint8Array#get:length
  local.get $separator
  call $~lib/util/string/joinIntegerArray<u8>
 )
 (func $~lib/typedarray/Uint8ClampedArray#join (param $this i32) (param $separator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.get $separator
  call $~lib/util/string/joinIntegerArray<u8>
 )
 (func $~lib/util/number/itoa_buffered<i16> (param $buffer i32) (param $value i32) (result i32)
  (local $sign i32)
  (local $dest i32)
  (local $decimals i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  i32.const 0
  local.set $sign
  i32.const 1
  drop
  local.get $value
  i32.extend16_s
  i32.const 0
  i32.lt_s
  local.set $sign
  local.get $sign
  if
   i32.const 2
   i32.const 1
   i32.eq
   drop
   i32.const 2
   i32.const 2
   i32.eq
   drop
   local.get $value
   i32.extend16_s
   i32.const -32768
   i32.eq
   if
    local.get $buffer
    i32.const 45
    i64.extend_i32_s
    i32.const 48
    i32.const 3
    i32.add
    i64.extend_i32_s
    i64.const 16
    i64.shl
    i64.or
    i32.const 48
    i32.const 2
    i32.add
    i64.extend_i32_s
    i64.const 32
    i64.shl
    i64.or
    i32.const 48
    i32.const 7
    i32.add
    i64.extend_i32_s
    i64.const 48
    i64.shl
    i64.or
    i64.store $0
    local.get $buffer
    i32.const 8
    i32.add
    i32.const 48
    i32.const 6
    i32.add
    i32.const 0
    i32.shl
    i32.const 48
    i32.const 8
    i32.add
    i32.const 16
    i32.shl
    i32.or
    i32.store $0
    i32.const 6
    return
   end
   local.get $buffer
   i32.const 45
   i32.store16 $0
   i32.const 0
   local.get $value
   i32.sub
   local.set $value
  end
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.set $dest
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  i32.const 2
  i32.const 4
  i32.le_u
  drop
  local.get $value
  i32.extend16_s
  i32.const 10
  i32.lt_u
  if
   local.get $dest
   local.get $value
   i32.extend16_s
   i32.const 48
   i32.or
   i32.store16 $0
   i32.const 1
   local.get $sign
   i32.add
   return
  end
  i32.const 0
  local.set $decimals
  i32.const 2
  i32.const 4
  i32.le_u
  drop
  local.get $value
  i32.extend16_s
  local.set $var$5
  local.get $var$5
  call $~lib/util/number/decimalCount32
  local.set $decimals
  local.get $dest
  local.set $var$8
  local.get $var$5
  local.set $var$7
  local.get $decimals
  local.set $var$6
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $var$8
  local.get $var$7
  local.get $var$6
  call $~lib/util/number/utoa32_dec_lut
  local.get $sign
  local.get $decimals
  i32.add
 )
 (func $~lib/typedarray/Int16Array#join (param $this i32) (param $separator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int16Array#get:length
  local.get $separator
  call $~lib/util/string/joinIntegerArray<i16>
 )
 (func $~lib/util/number/itoa_buffered<u16> (param $buffer i32) (param $value i32) (result i32)
  (local $sign i32)
  (local $dest i32)
  (local $decimals i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  i32.const 0
  local.set $sign
  i32.const 0
  drop
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.set $dest
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  local.get $value
  i32.const 65535
  i32.and
  i32.const 10
  i32.lt_u
  if
   local.get $buffer
   local.get $value
   i32.const 65535
   i32.and
   i32.const 48
   i32.or
   i32.store16 $0
   i32.const 1
   return
  end
  i32.const 0
  local.set $decimals
  i32.const 2
  i32.const 4
  i32.le_u
  drop
  local.get $value
  i32.const 65535
  i32.and
  local.set $var$5
  local.get $var$5
  call $~lib/util/number/decimalCount32
  local.set $decimals
  local.get $dest
  local.set $var$8
  local.get $var$5
  local.set $var$7
  local.get $decimals
  local.set $var$6
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $var$8
  local.get $var$7
  local.get $var$6
  call $~lib/util/number/utoa32_dec_lut
  local.get $sign
  local.get $decimals
  i32.add
 )
 (func $~lib/typedarray/Uint16Array#join (param $this i32) (param $separator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint16Array#get:length
  local.get $separator
  call $~lib/util/string/joinIntegerArray<u16>
 )
 (func $~lib/util/number/itoa_buffered<i32> (param $buffer i32) (param $value i32) (result i32)
  (local $sign i32)
  (local $dest i32)
  (local $decimals i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  i32.const 0
  local.set $sign
  i32.const 1
  drop
  local.get $value
  i32.const 0
  i32.lt_s
  local.set $sign
  local.get $sign
  if
   i32.const 4
   i32.const 1
   i32.eq
   drop
   i32.const 4
   i32.const 2
   i32.eq
   drop
   local.get $buffer
   i32.const 45
   i32.store16 $0
   i32.const 0
   local.get $value
   i32.sub
   local.set $value
  end
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.set $dest
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  i32.const 4
  i32.const 4
  i32.le_u
  drop
  local.get $value
  i32.const 10
  i32.lt_u
  if
   local.get $dest
   local.get $value
   i32.const 48
   i32.or
   i32.store16 $0
   i32.const 1
   local.get $sign
   i32.add
   return
  end
  i32.const 0
  local.set $decimals
  i32.const 4
  i32.const 4
  i32.le_u
  drop
  local.get $value
  local.set $var$5
  local.get $var$5
  call $~lib/util/number/decimalCount32
  local.set $decimals
  local.get $dest
  local.set $var$8
  local.get $var$5
  local.set $var$7
  local.get $decimals
  local.set $var$6
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $var$8
  local.get $var$7
  local.get $var$6
  call $~lib/util/number/utoa32_dec_lut
  local.get $sign
  local.get $decimals
  i32.add
 )
 (func $~lib/typedarray/Int32Array#join (param $this i32) (param $separator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int32Array#get:length
  local.get $separator
  call $~lib/util/string/joinIntegerArray<i32>
 )
 (func $~lib/util/number/itoa_buffered<u32> (param $buffer i32) (param $value i32) (result i32)
  (local $sign i32)
  (local $dest i32)
  (local $decimals i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  i32.const 0
  local.set $sign
  i32.const 0
  drop
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.set $dest
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  local.get $value
  i32.const 10
  i32.lt_u
  if
   local.get $buffer
   local.get $value
   i32.const 48
   i32.or
   i32.store16 $0
   i32.const 1
   return
  end
  i32.const 0
  local.set $decimals
  i32.const 4
  i32.const 4
  i32.le_u
  drop
  local.get $value
  local.set $var$5
  local.get $var$5
  call $~lib/util/number/decimalCount32
  local.set $decimals
  local.get $dest
  local.set $var$8
  local.get $var$5
  local.set $var$7
  local.get $decimals
  local.set $var$6
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $var$8
  local.get $var$7
  local.get $var$6
  call $~lib/util/number/utoa32_dec_lut
  local.get $sign
  local.get $decimals
  i32.add
 )
 (func $~lib/typedarray/Uint32Array#join (param $this i32) (param $separator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint32Array#get:length
  local.get $separator
  call $~lib/util/string/joinIntegerArray<u32>
 )
 (func $~lib/util/number/decimalCount64High (param $value i64) (result i32)
  local.get $value
  i64.const 1000000000000000
  i64.lt_u
  if
   local.get $value
   i64.const 1000000000000
   i64.lt_u
   if
    i32.const 10
    local.get $value
    i64.const 100000000000
    i64.ge_u
    i32.add
    local.get $value
    i64.const 10000000000
    i64.ge_u
    i32.add
    return
   else
    i32.const 13
    local.get $value
    i64.const 100000000000000
    i64.ge_u
    i32.add
    local.get $value
    i64.const 10000000000000
    i64.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $value
   i64.const 100000000000000000
   i64.lt_u
   if
    i32.const 16
    local.get $value
    i64.const 10000000000000000
    i64.ge_u
    i32.add
    return
   else
    i32.const 18
    local.get $value
    i64.const -8446744073709551616
    i64.ge_u
    i32.add
    local.get $value
    i64.const 1000000000000000000
    i64.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa64_dec_lut (param $buffer i32) (param $num i64) (param $offset i32)
  (local $var$3 i32)
  (local $t i64)
  (local $r i32)
  (local $b i32)
  (local $c i32)
  (local $b1 i32)
  (local $b2 i32)
  (local $c1 i32)
  (local $c2 i32)
  (local $digits1 i64)
  (local $digits2 i64)
  loop $while-continue|0
   local.get $num
   i64.const 100000000
   i64.ge_u
   local.set $var$3
   local.get $var$3
   if
    local.get $num
    i64.const 100000000
    i64.div_u
    local.set $t
    local.get $num
    local.get $t
    i64.const 100000000
    i64.mul
    i64.sub
    i32.wrap_i64
    local.set $r
    local.get $t
    local.set $num
    local.get $r
    i32.const 10000
    i32.div_u
    local.set $b
    local.get $r
    i32.const 10000
    i32.rem_u
    local.set $c
    local.get $b
    i32.const 100
    i32.div_u
    local.set $b1
    local.get $b
    i32.const 100
    i32.rem_u
    local.set $b2
    local.get $c
    i32.const 100
    i32.div_u
    local.set $c1
    local.get $c
    i32.const 100
    i32.rem_u
    local.set $c2
    i32.const 6988
    local.get $c1
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits1
    i32.const 6988
    local.get $c2
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits2
    local.get $offset
    i32.const 4
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $digits1
    local.get $digits2
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    i32.const 6988
    local.get $b1
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits1
    i32.const 6988
    local.get $b2
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u $0
    local.set $digits2
    local.get $offset
    i32.const 4
    i32.sub
    local.set $offset
    local.get $buffer
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $digits1
    local.get $digits2
    i64.const 32
    i64.shl
    i64.or
    i64.store $0
    br $while-continue|0
   end
  end
  local.get $buffer
  local.get $num
  i32.wrap_i64
  local.get $offset
  call $~lib/util/number/utoa32_dec_lut
 )
 (func $~lib/util/number/itoa_buffered<i64> (param $buffer i32) (param $value i64) (result i32)
  (local $sign i32)
  (local $dest i32)
  (local $decimals i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i64)
  (local $var$10 i64)
  i32.const 0
  local.set $sign
  i32.const 1
  drop
  local.get $value
  i64.const 0
  i64.lt_s
  local.set $sign
  local.get $sign
  if
   i32.const 8
   i32.const 1
   i32.eq
   drop
   i32.const 8
   i32.const 2
   i32.eq
   drop
   local.get $buffer
   i32.const 45
   i32.store16 $0
   i64.const 0
   local.get $value
   i64.sub
   local.set $value
  end
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.set $dest
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  i32.const 8
  i32.const 4
  i32.le_u
  drop
  local.get $value
  i64.const 10
  i64.lt_u
  if
   local.get $dest
   local.get $value
   i32.const 48
   i64.extend_i32_s
   i64.or
   i64.store16 $0
   i32.const 1
   local.get $sign
   i32.add
   return
  end
  i32.const 0
  local.set $decimals
  i32.const 8
  i32.const 4
  i32.le_u
  drop
  local.get $value
  global.get $~lib/builtins/u32.MAX_VALUE
  i64.extend_i32_u
  i64.le_u
  if
   local.get $value
   i32.wrap_i64
   local.set $var$5
   local.get $var$5
   call $~lib/util/number/decimalCount32
   local.set $decimals
   local.get $dest
   local.set $var$8
   local.get $var$5
   local.set $var$7
   local.get $decimals
   local.set $var$6
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $var$8
   local.get $var$7
   local.get $var$6
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $value
   local.set $var$9
   local.get $var$9
   call $~lib/util/number/decimalCount64High
   local.set $decimals
   local.get $dest
   local.set $var$7
   local.get $var$9
   local.set $var$10
   local.get $decimals
   local.set $var$6
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $var$7
   local.get $var$10
   local.get $var$6
   call $~lib/util/number/utoa64_dec_lut
  end
  local.get $sign
  local.get $decimals
  i32.add
 )
 (func $~lib/typedarray/Int64Array#join (param $this i32) (param $separator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int64Array#get:length
  local.get $separator
  call $~lib/util/string/joinIntegerArray<i64>
 )
 (func $~lib/util/number/itoa_buffered<u64> (param $buffer i32) (param $value i64) (result i32)
  (local $sign i32)
  (local $dest i32)
  (local $decimals i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i64)
  (local $var$10 i64)
  i32.const 0
  local.set $sign
  i32.const 0
  drop
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.set $dest
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  local.get $value
  i64.const 10
  i64.lt_u
  if
   local.get $buffer
   local.get $value
   i32.const 48
   i64.extend_i32_s
   i64.or
   i64.store16 $0
   i32.const 1
   return
  end
  i32.const 0
  local.set $decimals
  i32.const 8
  i32.const 4
  i32.le_u
  drop
  local.get $value
  global.get $~lib/builtins/u32.MAX_VALUE
  i64.extend_i32_u
  i64.le_u
  if
   local.get $value
   i32.wrap_i64
   local.set $var$5
   local.get $var$5
   call $~lib/util/number/decimalCount32
   local.set $decimals
   local.get $dest
   local.set $var$8
   local.get $var$5
   local.set $var$7
   local.get $decimals
   local.set $var$6
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $var$8
   local.get $var$7
   local.get $var$6
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $value
   local.set $var$9
   local.get $var$9
   call $~lib/util/number/decimalCount64High
   local.set $decimals
   local.get $dest
   local.set $var$7
   local.get $var$9
   local.set $var$10
   local.get $decimals
   local.set $var$6
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $var$7
   local.get $var$10
   local.get $var$6
   call $~lib/util/number/utoa64_dec_lut
  end
  local.get $sign
  local.get $decimals
  i32.add
 )
 (func $~lib/typedarray/Uint64Array#join (param $this i32) (param $separator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint64Array#get:length
  local.get $separator
  call $~lib/util/string/joinIntegerArray<u64>
 )
 (func $~lib/util/number/genDigits (param $buffer i32) (param $w_frc i64) (param $w_exp i32) (param $mp_frc i64) (param $mp_exp i32) (param $delta i64) (param $sign i32) (result i32)
  (local $one_exp i32)
  (local $one_frc i64)
  (local $mask i64)
  (local $wp_w_frc i64)
  (local $p1 i32)
  (local $p2 i64)
  (local $kappa i32)
  (local $len i32)
  (local $var$15 i32)
  (local $d i32)
  (local $var$17 i32)
  (local $tmp i64)
  (local $var$19 i64)
  (local $var$20 i64)
  (local $var$21 i64)
  (local $d_0 i64)
  (local $var$23 i32)
  (local $var$24 i32)
  (local $var$25 i32)
  (local $var$26 i32)
  (local $var$27 i64)
  i32.const 0
  local.get $mp_exp
  i32.sub
  local.set $one_exp
  i64.const 1
  local.get $one_exp
  i64.extend_i32_s
  i64.shl
  local.set $one_frc
  local.get $one_frc
  i64.const 1
  i64.sub
  local.set $mask
  local.get $mp_frc
  local.get $w_frc
  i64.sub
  local.set $wp_w_frc
  local.get $mp_frc
  local.get $one_exp
  i64.extend_i32_s
  i64.shr_u
  i32.wrap_i64
  local.set $p1
  local.get $mp_frc
  local.get $mask
  i64.and
  local.set $p2
  local.get $p1
  call $~lib/util/number/decimalCount32
  local.set $kappa
  local.get $sign
  local.set $len
  loop $while-continue|0
   local.get $kappa
   i32.const 0
   i32.gt_s
   local.set $var$15
   local.get $var$15
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $kappa
                local.set $var$17
                local.get $var$17
                i32.const 10
                i32.eq
                br_if $case0|1
                local.get $var$17
                i32.const 9
                i32.eq
                br_if $case1|1
                local.get $var$17
                i32.const 8
                i32.eq
                br_if $case2|1
                local.get $var$17
                i32.const 7
                i32.eq
                br_if $case3|1
                local.get $var$17
                i32.const 6
                i32.eq
                br_if $case4|1
                local.get $var$17
                i32.const 5
                i32.eq
                br_if $case5|1
                local.get $var$17
                i32.const 4
                i32.eq
                br_if $case6|1
                local.get $var$17
                i32.const 3
                i32.eq
                br_if $case7|1
                local.get $var$17
                i32.const 2
                i32.eq
                br_if $case8|1
                local.get $var$17
                i32.const 1
                i32.eq
                br_if $case9|1
                br $case10|1
               end
               local.get $p1
               i32.const 1000000000
               i32.div_u
               local.set $d
               local.get $p1
               i32.const 1000000000
               i32.rem_u
               local.set $p1
               br $break|1
              end
              local.get $p1
              i32.const 100000000
              i32.div_u
              local.set $d
              local.get $p1
              i32.const 100000000
              i32.rem_u
              local.set $p1
              br $break|1
             end
             local.get $p1
             i32.const 10000000
             i32.div_u
             local.set $d
             local.get $p1
             i32.const 10000000
             i32.rem_u
             local.set $p1
             br $break|1
            end
            local.get $p1
            i32.const 1000000
            i32.div_u
            local.set $d
            local.get $p1
            i32.const 1000000
            i32.rem_u
            local.set $p1
            br $break|1
           end
           local.get $p1
           i32.const 100000
           i32.div_u
           local.set $d
           local.get $p1
           i32.const 100000
           i32.rem_u
           local.set $p1
           br $break|1
          end
          local.get $p1
          i32.const 10000
          i32.div_u
          local.set $d
          local.get $p1
          i32.const 10000
          i32.rem_u
          local.set $p1
          br $break|1
         end
         local.get $p1
         i32.const 1000
         i32.div_u
         local.set $d
         local.get $p1
         i32.const 1000
         i32.rem_u
         local.set $p1
         br $break|1
        end
        local.get $p1
        i32.const 100
        i32.div_u
        local.set $d
        local.get $p1
        i32.const 100
        i32.rem_u
        local.set $p1
        br $break|1
       end
       local.get $p1
       i32.const 10
       i32.div_u
       local.set $d
       local.get $p1
       i32.const 10
       i32.rem_u
       local.set $p1
       br $break|1
      end
      local.get $p1
      local.set $d
      i32.const 0
      local.set $p1
      br $break|1
     end
     i32.const 0
     local.set $d
     br $break|1
    end
    local.get $d
    local.get $len
    i32.or
    if
     local.get $buffer
     local.get $len
     local.tee $var$17
     i32.const 1
     i32.add
     local.set $len
     local.get $var$17
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $d
     i32.const 65535
     i32.and
     i32.add
     i32.store16 $0
    end
    local.get $kappa
    i32.const 1
    i32.sub
    local.set $kappa
    local.get $p1
    i64.extend_i32_u
    local.get $one_exp
    i64.extend_i32_s
    i64.shl
    local.get $p2
    i64.add
    local.set $tmp
    local.get $tmp
    local.get $delta
    i64.le_u
    if
     global.get $~lib/util/number/_K
     local.get $kappa
     i32.add
     global.set $~lib/util/number/_K
     local.get $buffer
     local.set $var$23
     local.get $len
     local.set $var$17
     local.get $delta
     local.set $d_0
     local.get $tmp
     local.set $var$21
     i32.const 9712
     local.get $kappa
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u $0
     local.get $one_exp
     i64.extend_i32_s
     i64.shl
     local.set $var$20
     local.get $wp_w_frc
     local.set $var$19
     local.get $var$23
     local.get $var$17
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $var$24
     local.get $var$24
     i32.load16_u $0
     local.set $var$25
     loop $while-continue|3
      local.get $var$21
      local.get $var$19
      i64.lt_u
      if (result i32)
       local.get $d_0
       local.get $var$21
       i64.sub
       local.get $var$20
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $var$21
       local.get $var$20
       i64.add
       local.get $var$19
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $var$19
        local.get $var$21
        i64.sub
        local.get $var$21
        local.get $var$20
        i64.add
        local.get $var$19
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      local.set $var$26
      local.get $var$26
      if
       local.get $var$25
       i32.const 1
       i32.sub
       local.set $var$25
       local.get $var$21
       local.get $var$20
       i64.add
       local.set $var$21
       br $while-continue|3
      end
     end
     local.get $var$24
     local.get $var$25
     i32.store16 $0
     local.get $len
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4
   i32.const 1
   local.set $var$15
   local.get $var$15
   if
    local.get $p2
    i64.const 10
    i64.mul
    local.set $p2
    local.get $delta
    i64.const 10
    i64.mul
    local.set $delta
    local.get $p2
    local.get $one_exp
    i64.extend_i32_s
    i64.shr_u
    local.set $d_0
    local.get $d_0
    local.get $len
    i64.extend_i32_s
    i64.or
    i64.const 0
    i64.ne
    if
     local.get $buffer
     local.get $len
     local.tee $var$25
     i32.const 1
     i32.add
     local.set $len
     local.get $var$25
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $d_0
     i32.wrap_i64
     i32.const 65535
     i32.and
     i32.add
     i32.store16 $0
    end
    local.get $p2
    local.get $mask
    i64.and
    local.set $p2
    local.get $kappa
    i32.const 1
    i32.sub
    local.set $kappa
    local.get $p2
    local.get $delta
    i64.lt_u
    if
     global.get $~lib/util/number/_K
     local.get $kappa
     i32.add
     global.set $~lib/util/number/_K
     local.get $wp_w_frc
     i32.const 9712
     i32.const 0
     local.get $kappa
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u $0
     i64.mul
     local.set $wp_w_frc
     local.get $buffer
     local.set $var$17
     local.get $len
     local.set $var$26
     local.get $delta
     local.set $var$27
     local.get $p2
     local.set $var$21
     local.get $one_frc
     local.set $var$20
     local.get $wp_w_frc
     local.set $var$19
     local.get $var$17
     local.get $var$26
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $var$25
     local.get $var$25
     i32.load16_u $0
     local.set $var$24
     loop $while-continue|6
      local.get $var$21
      local.get $var$19
      i64.lt_u
      if (result i32)
       local.get $var$27
       local.get $var$21
       i64.sub
       local.get $var$20
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $var$21
       local.get $var$20
       i64.add
       local.get $var$19
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $var$19
        local.get $var$21
        i64.sub
        local.get $var$21
        local.get $var$20
        i64.add
        local.get $var$19
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      local.set $var$23
      local.get $var$23
      if
       local.get $var$24
       i32.const 1
       i32.sub
       local.set $var$24
       local.get $var$21
       local.get $var$20
       i64.add
       local.set $var$21
       br $while-continue|6
      end
     end
     local.get $var$25
     local.get $var$24
     i32.store16 $0
     local.get $len
     return
    end
    br $while-continue|4
   end
  end
  unreachable
 )
 (func $~lib/util/number/prettify (param $buffer i32) (param $length i32) (param $k i32) (result i32)
  (local $kk i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  local.get $k
  i32.eqz
  if
   local.get $buffer
   local.get $length
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store $0
   local.get $length
   i32.const 2
   i32.add
   return
  end
  local.get $length
  local.get $k
  i32.add
  local.set $kk
  local.get $length
  local.get $kk
  i32.le_s
  if (result i32)
   local.get $kk
   i32.const 21
   i32.le_s
  else
   i32.const 0
  end
  if
   local.get $length
   local.set $var$4
   loop $for-loop|0
    local.get $var$4
    local.get $kk
    i32.lt_s
    local.set $var$5
    local.get $var$5
    if
     local.get $buffer
     local.get $var$4
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16 $0
     local.get $var$4
     i32.const 1
     i32.add
     local.set $var$4
     br $for-loop|0
    end
   end
   local.get $buffer
   local.get $kk
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store $0
   local.get $kk
   i32.const 2
   i32.add
   return
  else
   local.get $kk
   i32.const 0
   i32.gt_s
   if (result i32)
    local.get $kk
    i32.const 21
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $buffer
    local.get $kk
    i32.const 1
    i32.shl
    i32.add
    local.set $var$4
    local.get $var$4
    i32.const 2
    i32.add
    local.get $var$4
    i32.const 0
    local.get $k
    i32.sub
    i32.const 1
    i32.shl
    memory.copy $0 $0
    local.get $buffer
    local.get $kk
    i32.const 1
    i32.shl
    i32.add
    i32.const 46
    i32.store16 $0
    local.get $length
    i32.const 1
    i32.add
    return
   else
    i32.const -6
    local.get $kk
    i32.lt_s
    if (result i32)
     local.get $kk
     i32.const 0
     i32.le_s
    else
     i32.const 0
    end
    if
     i32.const 2
     local.get $kk
     i32.sub
     local.set $var$4
     local.get $buffer
     local.get $var$4
     i32.const 1
     i32.shl
     i32.add
     local.get $buffer
     local.get $length
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $buffer
     i32.const 48
     i32.const 46
     i32.const 16
     i32.shl
     i32.or
     i32.store $0
     i32.const 2
     local.set $var$5
     loop $for-loop|1
      local.get $var$5
      local.get $var$4
      i32.lt_s
      local.set $var$6
      local.get $var$6
      if
       local.get $buffer
       local.get $var$5
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16 $0
       local.get $var$5
       i32.const 1
       i32.add
       local.set $var$5
       br $for-loop|1
      end
     end
     local.get $length
     local.get $var$4
     i32.add
     return
    else
     local.get $length
     i32.const 1
     i32.eq
     if
      local.get $buffer
      i32.const 101
      i32.store16 $0 offset=2
      local.get $buffer
      i32.const 4
      i32.add
      local.set $var$5
      local.get $kk
      i32.const 1
      i32.sub
      local.set $var$6
      local.get $var$6
      i32.const 0
      i32.lt_s
      local.set $var$4
      local.get $var$4
      if
       i32.const 0
       local.get $var$6
       i32.sub
       local.set $var$6
      end
      local.get $var$6
      call $~lib/util/number/decimalCount32
      i32.const 1
      i32.add
      local.set $var$7
      local.get $var$5
      local.set $var$10
      local.get $var$6
      local.set $var$9
      local.get $var$7
      local.set $var$8
      i32.const 0
      i32.const 1
      i32.ge_s
      drop
      local.get $var$10
      local.get $var$9
      local.get $var$8
      call $~lib/util/number/utoa32_dec_lut
      local.get $var$5
      i32.const 45
      i32.const 43
      local.get $var$4
      select
      i32.store16 $0
      local.get $var$7
      local.set $length
      local.get $length
      i32.const 2
      i32.add
      return
     else
      local.get $length
      i32.const 1
      i32.shl
      local.set $var$7
      local.get $buffer
      i32.const 4
      i32.add
      local.get $buffer
      i32.const 2
      i32.add
      local.get $var$7
      i32.const 2
      i32.sub
      memory.copy $0 $0
      local.get $buffer
      i32.const 46
      i32.store16 $0 offset=2
      local.get $buffer
      local.get $var$7
      i32.add
      i32.const 101
      i32.store16 $0 offset=2
      local.get $length
      local.get $buffer
      local.get $var$7
      i32.add
      i32.const 4
      i32.add
      local.set $var$9
      local.get $kk
      i32.const 1
      i32.sub
      local.set $var$8
      local.get $var$8
      i32.const 0
      i32.lt_s
      local.set $var$4
      local.get $var$4
      if
       i32.const 0
       local.get $var$8
       i32.sub
       local.set $var$8
      end
      local.get $var$8
      call $~lib/util/number/decimalCount32
      i32.const 1
      i32.add
      local.set $var$5
      local.get $var$9
      local.set $var$11
      local.get $var$8
      local.set $var$6
      local.get $var$5
      local.set $var$10
      i32.const 0
      i32.const 1
      i32.ge_s
      drop
      local.get $var$11
      local.get $var$6
      local.get $var$10
      call $~lib/util/number/utoa32_dec_lut
      local.get $var$9
      i32.const 45
      i32.const 43
      local.get $var$4
      select
      i32.store16 $0
      local.get $var$5
      i32.add
      local.set $length
      local.get $length
      i32.const 2
      i32.add
      return
     end
     unreachable
    end
    unreachable
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/dtoa_core (param $buffer i32) (param $value f64) (result i32)
  (local $sign i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 f64)
  (local $var$6 i64)
  (local $var$7 i32)
  (local $var$8 i64)
  (local $var$9 i64)
  (local $var$10 i32)
  (local $var$11 i64)
  (local $var$12 i64)
  (local $var$13 i32)
  (local $var$14 i32)
  (local $var$15 i32)
  (local $var$16 f64)
  (local $var$17 i64)
  (local $var$18 i64)
  (local $var$19 i64)
  (local $var$20 i64)
  (local $var$21 i64)
  (local $var$22 i64)
  (local $var$23 i64)
  (local $var$24 i64)
  (local $var$25 i64)
  (local $var$26 i32)
  (local $var$27 i64)
  (local $len i32)
  local.get $value
  f64.const 0
  f64.lt
  local.set $sign
  local.get $sign
  if
   local.get $value
   f64.neg
   local.set $value
   local.get $buffer
   i32.const 45
   i32.store16 $0
  end
  local.get $value
  local.set $var$5
  local.get $buffer
  local.set $var$4
  local.get $sign
  local.set $var$3
  local.get $var$5
  i64.reinterpret_f64
  local.set $var$6
  local.get $var$6
  i64.const 9218868437227405312
  i64.and
  i64.const 52
  i64.shr_u
  i32.wrap_i64
  local.set $var$7
  local.get $var$6
  i64.const 4503599627370495
  i64.and
  local.set $var$8
  local.get $var$7
  i32.const 0
  i32.ne
  i64.extend_i32_u
  i64.const 52
  i64.shl
  local.get $var$8
  i64.add
  local.set $var$9
  local.get $var$7
  i32.const 1
  local.get $var$7
  select
  i32.const 1023
  i32.const 52
  i32.add
  i32.sub
  local.set $var$7
  local.get $var$9
  local.set $var$11
  local.get $var$7
  local.set $var$10
  local.get $var$11
  i64.const 1
  i64.shl
  i64.const 1
  i64.add
  local.set $var$12
  local.get $var$10
  i32.const 1
  i32.sub
  local.set $var$13
  local.get $var$12
  i64.clz
  i32.wrap_i64
  local.set $var$14
  local.get $var$12
  local.get $var$14
  i64.extend_i32_s
  i64.shl
  local.set $var$12
  local.get $var$13
  local.get $var$14
  i32.sub
  local.set $var$13
  i32.const 1
  local.get $var$11
  i64.const 4503599627370496
  i64.eq
  i32.add
  local.set $var$15
  local.get $var$12
  global.set $~lib/util/number/_frc_plus
  local.get $var$11
  local.get $var$15
  i64.extend_i32_s
  i64.shl
  i64.const 1
  i64.sub
  local.get $var$10
  local.get $var$15
  i32.sub
  local.get $var$13
  i32.sub
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_minus
  local.get $var$13
  global.set $~lib/util/number/_exp
  global.get $~lib/util/number/_exp
  local.set $var$10
  i32.const -61
  local.get $var$10
  i32.sub
  f64.convert_i32_s
  f64.const 0.30102999566398114
  f64.mul
  f64.const 347
  f64.add
  local.set $var$16
  local.get $var$16
  i32.trunc_sat_f64_s
  local.set $var$15
  local.get $var$15
  local.get $var$15
  f64.convert_i32_s
  local.get $var$16
  f64.ne
  i32.add
  local.set $var$15
  local.get $var$15
  i32.const 3
  i32.shr_s
  i32.const 1
  i32.add
  local.set $var$14
  i32.const 348
  local.get $var$14
  i32.const 3
  i32.shl
  i32.sub
  global.set $~lib/util/number/_K
  i32.const 8840
  local.get $var$14
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  global.set $~lib/util/number/_frc_pow
  i32.const 9536
  local.get $var$14
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
  global.set $~lib/util/number/_exp_pow
  local.get $var$9
  i64.clz
  i32.wrap_i64
  local.set $var$14
  local.get $var$9
  local.get $var$14
  i64.extend_i32_s
  i64.shl
  local.set $var$9
  local.get $var$7
  local.get $var$14
  i32.sub
  local.set $var$7
  global.get $~lib/util/number/_frc_pow
  local.set $var$12
  global.get $~lib/util/number/_exp_pow
  local.set $var$15
  local.get $var$9
  local.set $var$17
  local.get $var$12
  local.set $var$11
  local.get $var$17
  i64.const 4294967295
  i64.and
  local.set $var$18
  local.get $var$11
  i64.const 4294967295
  i64.and
  local.set $var$19
  local.get $var$17
  i64.const 32
  i64.shr_u
  local.set $var$20
  local.get $var$11
  i64.const 32
  i64.shr_u
  local.set $var$21
  local.get $var$18
  local.get $var$19
  i64.mul
  local.set $var$22
  local.get $var$20
  local.get $var$19
  i64.mul
  local.get $var$22
  i64.const 32
  i64.shr_u
  i64.add
  local.set $var$23
  local.get $var$18
  local.get $var$21
  i64.mul
  local.get $var$23
  i64.const 4294967295
  i64.and
  i64.add
  local.set $var$24
  local.get $var$24
  i64.const 2147483647
  i64.add
  local.set $var$24
  local.get $var$23
  i64.const 32
  i64.shr_u
  local.set $var$23
  local.get $var$24
  i64.const 32
  i64.shr_u
  local.set $var$24
  local.get $var$20
  local.get $var$21
  i64.mul
  local.get $var$23
  i64.add
  local.get $var$24
  i64.add
  local.set $var$24
  local.get $var$7
  local.set $var$10
  local.get $var$15
  local.set $var$13
  local.get $var$10
  local.get $var$13
  i32.add
  i32.const 64
  i32.add
  local.set $var$10
  global.get $~lib/util/number/_frc_plus
  local.set $var$17
  local.get $var$12
  local.set $var$11
  local.get $var$17
  i64.const 4294967295
  i64.and
  local.set $var$23
  local.get $var$11
  i64.const 4294967295
  i64.and
  local.set $var$22
  local.get $var$17
  i64.const 32
  i64.shr_u
  local.set $var$21
  local.get $var$11
  i64.const 32
  i64.shr_u
  local.set $var$20
  local.get $var$23
  local.get $var$22
  i64.mul
  local.set $var$19
  local.get $var$21
  local.get $var$22
  i64.mul
  local.get $var$19
  i64.const 32
  i64.shr_u
  i64.add
  local.set $var$18
  local.get $var$23
  local.get $var$20
  i64.mul
  local.get $var$18
  i64.const 4294967295
  i64.and
  i64.add
  local.set $var$25
  local.get $var$25
  i64.const 2147483647
  i64.add
  local.set $var$25
  local.get $var$18
  i64.const 32
  i64.shr_u
  local.set $var$18
  local.get $var$25
  i64.const 32
  i64.shr_u
  local.set $var$25
  local.get $var$21
  local.get $var$20
  i64.mul
  local.get $var$18
  i64.add
  local.get $var$25
  i64.add
  i64.const 1
  i64.sub
  local.set $var$25
  global.get $~lib/util/number/_exp
  local.set $var$26
  local.get $var$15
  local.set $var$13
  local.get $var$26
  local.get $var$13
  i32.add
  i32.const 64
  i32.add
  local.set $var$26
  global.get $~lib/util/number/_frc_minus
  local.set $var$17
  local.get $var$12
  local.set $var$11
  local.get $var$17
  i64.const 4294967295
  i64.and
  local.set $var$18
  local.get $var$11
  i64.const 4294967295
  i64.and
  local.set $var$19
  local.get $var$17
  i64.const 32
  i64.shr_u
  local.set $var$20
  local.get $var$11
  i64.const 32
  i64.shr_u
  local.set $var$21
  local.get $var$18
  local.get $var$19
  i64.mul
  local.set $var$22
  local.get $var$20
  local.get $var$19
  i64.mul
  local.get $var$22
  i64.const 32
  i64.shr_u
  i64.add
  local.set $var$23
  local.get $var$18
  local.get $var$21
  i64.mul
  local.get $var$23
  i64.const 4294967295
  i64.and
  i64.add
  local.set $var$27
  local.get $var$27
  i64.const 2147483647
  i64.add
  local.set $var$27
  local.get $var$23
  i64.const 32
  i64.shr_u
  local.set $var$23
  local.get $var$27
  i64.const 32
  i64.shr_u
  local.set $var$27
  local.get $var$20
  local.get $var$21
  i64.mul
  local.get $var$23
  i64.add
  local.get $var$27
  i64.add
  i64.const 1
  i64.add
  local.set $var$27
  local.get $var$25
  local.get $var$27
  i64.sub
  local.set $var$23
  local.get $var$4
  local.get $var$24
  local.get $var$10
  local.get $var$25
  local.get $var$26
  local.get $var$23
  local.get $var$3
  call $~lib/util/number/genDigits
  local.set $len
  local.get $buffer
  local.get $sign
  i32.const 1
  i32.shl
  i32.add
  local.get $len
  local.get $sign
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.set $len
  local.get $len
  local.get $sign
  i32.add
 )
 (func $~lib/util/number/dtoa_buffered (param $buffer i32) (param $value f64) (result i32)
  (local $var$2 i32)
  local.get $value
  f64.const 0
  f64.eq
  if
   local.get $buffer
   i32.const 48
   i32.store16 $0
   local.get $buffer
   i32.const 46
   i32.store16 $0 offset=2
   local.get $buffer
   i32.const 48
   i32.store16 $0 offset=4
   i32.const 3
   return
  end
  local.get $value
  local.get $value
  f64.sub
  f64.const 0
  f64.eq
  i32.eqz
  if
   local.get $value
   local.get $value
   f64.ne
   if
    local.get $buffer
    i32.const 78
    i32.store16 $0
    local.get $buffer
    i32.const 97
    i32.store16 $0 offset=2
    local.get $buffer
    i32.const 78
    i32.store16 $0 offset=4
    i32.const 3
    return
   else
    local.get $value
    f64.const 0
    f64.lt
    local.set $var$2
    local.get $var$2
    if
     local.get $buffer
     i32.const 45
     i32.store16 $0
     local.get $buffer
     i32.const 2
     i32.add
     local.set $buffer
    end
    local.get $buffer
    i64.const 29555310648492105
    i64.store $0
    local.get $buffer
    i64.const 34058970405077102
    i64.store $0 offset=8
    i32.const 8
    local.get $var$2
    i32.add
    return
   end
   unreachable
  end
  local.get $buffer
  local.get $value
  call $~lib/util/number/dtoa_core
 )
 (func $~lib/typedarray/Float32Array#join (param $this i32) (param $separator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Float32Array#get:length
  local.get $separator
  call $~lib/util/string/joinFloatArray<f32>
 )
 (func $~lib/typedarray/Float64Array#join (param $this i32) (param $separator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Float64Array#get:length
  local.get $separator
  call $~lib/util/string/joinFloatArray<f64>
 )
 (func $~lib/arraybuffer/ArrayBuffer#get:byteLength (param $this i32) (result i32)
  local.get $this
  i32.const 20
  i32.sub
  i32.load $0 offset=16
 )
 (func $~lib/typedarray/Uint8Array.wrap@varargs (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint8Array.wrap
 )
 (func $~lib/typedarray/Int8Array.wrap@varargs (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Int8Array.wrap
 )
 (func $~lib/typedarray/Uint8ClampedArray.wrap@varargs (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint8ClampedArray.wrap
 )
 (func $~lib/typedarray/Int16Array.wrap@varargs (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Int16Array.wrap
 )
 (func $~lib/typedarray/Uint16Array.wrap@varargs (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint16Array.wrap
 )
 (func $~lib/typedarray/Int32Array.wrap@varargs (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Int32Array.wrap
 )
 (func $~lib/typedarray/Uint32Array.wrap@varargs (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint32Array.wrap
 )
 (func $~lib/typedarray/Int64Array.wrap@varargs (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Int64Array.wrap
 )
 (func $~lib/typedarray/Uint64Array.wrap@varargs (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Uint64Array.wrap
 )
 (func $~lib/typedarray/Float32Array.wrap@varargs (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Float32Array.wrap
 )
 (func $~lib/typedarray/Float64Array.wrap@varargs (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  block $2of2
   block $1of2
    block $0of2
     block $outOfRange
      global.get $~argumentsLength
      i32.const 1
      i32.sub
      br_table $0of2 $1of2 $2of2 $outOfRange
     end
     unreachable
    end
    i32.const 0
    local.set $byteOffset
   end
   i32.const -1
   local.set $length
  end
  local.get $buffer
  local.get $byteOffset
  local.get $length
  call $~lib/typedarray/Float64Array.wrap
 )
 (func $~lib/typedarray/Int8Array#set<~lib/array/Array<i32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int8Array#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_s $0
 )
 (func $~lib/array/Array<i8>#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_s $0
 )
 (func $~lib/array/Array<f32>#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Int8Array#set<~lib/array/Array<f32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $var$12
     i32.trunc_sat_f32_s
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int8Array#set<~lib/typedarray/Int64Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.wrap_i64
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<f64>#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Int8Array#set<~lib/array/Array<f64>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f64>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $var$12
     i32.trunc_sat_f64_s
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int8Array#set<~lib/typedarray/Uint8Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.eqz
  drop
  local.get $var$7
  local.get $var$8
  local.get $var$6
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Int8Array#set<~lib/typedarray/Int16Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int8Array#set<~lib/array/Array<i8>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i8>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int8Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.eqz
  drop
  local.get $var$7
  local.get $var$8
  local.get $var$6
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/array/Array<i32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<u8>#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Uint8Array#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $~lib/array/Array<u8>#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/array/Array<f32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $var$12
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/typedarray/Int64Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.wrap_i64
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/array/Array<f64>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f64>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $var$12
     i32.trunc_sat_f64_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/typedarray/Uint8Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.eqz
  drop
  local.get $var$7
  local.get $var$8
  local.get $var$6
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/typedarray/Int16Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8Array#set<~lib/array/Array<i8>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i8>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.eqz
  drop
  local.get $var$7
  local.get $var$8
  local.get $var$6
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<i32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$12
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $var$11
    local.get $var$12
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i32.const 255
    local.get $var$12
    i32.sub
    i32.const 31
    i32.shr_s
    local.get $var$12
    i32.or
    i32.and
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.add
  i32.load8_u $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<f32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$12
    i32.const 1
    drop
    i32.const 1
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     f32.const 0
     f32.const 255
     local.get $var$12
     f32.min
     f32.max
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int64Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$12
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $var$11
    local.get $var$12
    i32.wrap_i64
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i64.extend_i32_s
    i32.const 255
    local.get $var$12
    i32.wrap_i64
    i32.sub
    i32.const 31
    i32.shr_s
    i64.extend_i32_s
    local.get $var$12
    i64.or
    i64.and
    i64.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<f64>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f64>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $var$12
    i32.const 1
    drop
    i32.const 1
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     f64.const 0
     f64.const 255
     local.get $var$12
     f64.min
     f64.max
     i32.trunc_sat_f64_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Uint8Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.eqz
  drop
  local.get $var$7
  local.get $var$8
  local.get $var$6
  i32.const 0
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int16Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $var$12
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $var$11
    local.get $var$12
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i32.const 255
    local.get $var$12
    i32.sub
    i32.const 31
    i32.shr_s
    local.get $var$12
    i32.or
    i32.and
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<i8>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i8>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.eqz
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $var$12
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $var$11
    local.get $var$12
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i32.const 255
    local.get $var$12
    i32.sub
    i32.const 31
    i32.shr_s
    local.get $var$12
    i32.or
    i32.and
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/array/Array<i32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 1
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store16 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<i16>#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Int16Array#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
 )
 (func $~lib/array/Array<i16>#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
 )
 (func $~lib/typedarray/Int16Array#set<~lib/array/Array<f32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 1
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $var$12
     i32.trunc_sat_f32_s
    else
     i32.const 0
    end
    i32.store16 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/typedarray/Int64Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 1
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.wrap_i64
    i32.store16 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/array/Array<f64>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f64>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 1
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $var$12
     i32.trunc_sat_f64_s
    else
     i32.const 0
    end
    i32.store16 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/typedarray/Uint8Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 1
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store16 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int16Array#set<~lib/typedarray/Int16Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 1
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.eqz
  drop
  local.get $var$7
  local.get $var$8
  local.get $var$6
  i32.const 1
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Int16Array#set<~lib/array/Array<i8>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i8>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int16Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 1
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store16 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/array/Array<i32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 1
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store16 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<u16>#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Uint16Array#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
 )
 (func $~lib/array/Array<u16>#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/array/Array<f32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 1
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $var$12
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store16 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/typedarray/Int64Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 1
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.wrap_i64
    i32.store16 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/array/Array<f64>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f64>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 1
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $var$12
     i32.trunc_sat_f64_u
    else
     i32.const 0
    end
    i32.store16 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/typedarray/Uint8Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 1
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store16 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/typedarray/Int16Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 1
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.eqz
  drop
  local.get $var$7
  local.get $var$8
  local.get $var$6
  i32.const 1
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint16Array#set<~lib/array/Array<i8>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i8>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint16Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 1
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store16 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/array/Array<i32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.eqz
  drop
  local.get $var$7
  local.get $var$8
  local.get $var$6
  i32.const 2
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Int32Array#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/array/Array<i32>#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/typedarray/Int32Array#set<~lib/array/Array<f32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $var$12
     i32.trunc_sat_f32_s
    else
     i32.const 0
    end
    i32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/typedarray/Int64Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 2
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.wrap_i64
    i32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/array/Array<f64>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f64>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $var$12
     i32.trunc_sat_f64_s
    else
     i32.const 0
    end
    i32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/typedarray/Uint8Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 2
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/typedarray/Int16Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 2
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int32Array#set<~lib/array/Array<i8>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i8>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 2
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/array/Array<i32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.eqz
  drop
  local.get $var$7
  local.get $var$8
  local.get $var$6
  i32.const 2
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/array/Array<u32>#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Uint32Array#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/array/Array<u32>#__uget (param $this i32) (param $index i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/array/Array<f32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     local.get $var$12
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/typedarray/Int64Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 2
  i32.const 3
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.wrap_i64
    i32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/array/Array<f64>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f64>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f64.sub
    f64.const 0
    f64.eq
    if (result i32)
     local.get $var$12
     i32.trunc_sat_f64_u
    else
     i32.const 0
    end
    i32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/typedarray/Uint8Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 2
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/typedarray/Int16Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 2
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint32Array#set<~lib/array/Array<i8>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i8>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 2
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int64Array#set<~lib/array/Array<i32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 3
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i64.extend_i32_s
    i64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<i64>#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Int64Array#__uget (param $this i32) (param $index i32) (result i64)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $~lib/array/Array<i64>#__uget (param $this i32) (param $index i32) (result i64)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $~lib/typedarray/Int64Array#set<~lib/array/Array<f32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f32.sub
    f32.const 0
    f32.eq
    if (result i64)
     local.get $var$12
     i64.trunc_sat_f32_s
    else
     i64.const 0
    end
    i64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int64Array#set<~lib/typedarray/Int64Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.eqz
  drop
  local.get $var$7
  local.get $var$8
  local.get $var$6
  i32.const 3
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Int64Array#set<~lib/array/Array<f64>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f64>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f64.sub
    f64.const 0
    f64.eq
    if (result i64)
     local.get $var$12
     i64.trunc_sat_f64_s
    else
     i64.const 0
    end
    i64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int64Array#set<~lib/typedarray/Uint8Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 3
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i64.extend_i32_u
    i64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int64Array#set<~lib/typedarray/Int16Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 3
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i64.extend_i32_s
    i64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Int64Array#set<~lib/array/Array<i8>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i8>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Int64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 3
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i64.extend_i32_s
    i64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint64Array#set<~lib/array/Array<i32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 3
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i64.extend_i32_s
    i64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/array/Array<u64>#get:length (param $this i32) (result i32)
  local.get $this
  i32.load $0 offset=12
 )
 (func $~lib/typedarray/Uint64Array#__uget (param $this i32) (param $index i32) (result i64)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $~lib/array/Array<u64>#__uget (param $this i32) (param $index i32) (result i64)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
 )
 (func $~lib/typedarray/Uint64Array#set<~lib/array/Array<f32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f32.sub
    f32.const 0
    f32.eq
    if (result i64)
     local.get $var$12
     i64.trunc_sat_f32_u
    else
     i64.const 0
    end
    i64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint64Array#set<~lib/typedarray/Int64Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.eqz
  drop
  local.get $var$7
  local.get $var$8
  local.get $var$6
  i32.const 3
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Uint64Array#set<~lib/array/Array<f64>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f64>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f64.sub
    f64.const 0
    f64.eq
    if (result i64)
     local.get $var$12
     i64.trunc_sat_f64_u
    else
     i64.const 0
    end
    i64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint64Array#set<~lib/typedarray/Uint8Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 3
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i64.extend_i32_u
    i64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint64Array#set<~lib/typedarray/Int16Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 3
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i64.extend_i32_s
    i64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint64Array#set<~lib/array/Array<i8>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i8>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 3
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    i64.extend_i32_s
    i64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#set<~lib/array/Array<i32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    f32.convert_i32_s
    f32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#__uget (param $this i32) (param $index i32) (result f32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
 )
 (func $~lib/array/Array<f32>#__uget (param $this i32) (param $index i32) (result f32)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
 )
 (func $~lib/typedarray/Float32Array#set<~lib/array/Array<f32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.eqz
  drop
  local.get $var$7
  local.get $var$8
  local.get $var$6
  i32.const 2
  i32.shl
  memory.copy $0 $0
 )
 (func $~lib/typedarray/Float32Array#set<~lib/typedarray/Int64Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    f32.convert_i64_s
    f32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#set<~lib/typedarray/Uint8Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    f32.convert_i32_u
    f32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#set<~lib/typedarray/Int16Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    f32.convert_i32_s
    f32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float32Array#set<~lib/array/Array<i8>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i8>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Float32Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 2
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    f32.convert_i32_s
    f32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float64Array#set<~lib/array/Array<i32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Float64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    f64.convert_i32_s
    f64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float64Array#__uget (param $this i32) (param $index i32) (result f64)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
 )
 (func $~lib/array/Array<f64>#__uget (param $this i32) (param $index i32) (result f64)
  local.get $this
  i32.load $0 offset=4
  local.get $index
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
 )
 (func $~lib/typedarray/Float64Array#set<~lib/array/Array<f32>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<f32>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Float64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 3
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    local.get $var$11
    local.get $var$12
    f64.promote_f32
    f64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float64Array#set<~lib/typedarray/Int64Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i64)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Float64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    f64.convert_i64_s
    f64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float64Array#set<~lib/typedarray/Uint8Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Float64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    f64.convert_i32_u
    f64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float64Array#set<~lib/typedarray/Int16Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Float64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    f64.convert_i32_s
    f64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Float64Array#set<~lib/array/Array<i8>> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/array/Array<i8>#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Float64Array#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 3
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 1
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $var$12
    i32.const 0
    drop
    i32.const 0
    drop
    local.get $var$11
    local.get $var$12
    f64.convert_i32_s
    f64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Float32Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 f32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Float32Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 1
  i32.const 0
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$12
    i32.const 1
    drop
    i32.const 1
    drop
    local.get $var$11
    local.get $var$12
    local.get $var$12
    f32.sub
    f32.const 0
    f32.eq
    if (result i32)
     f32.const 0
     f32.const 255
     local.get $var$12
     f32.min
     f32.max
     i32.trunc_sat_f32_u
    else
     i32.const 0
    end
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int32Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Int32Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$12
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 1
    i32.eqz
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    local.get $var$11
    local.get $var$12
    i32.const 31
    i32.shr_s
    i32.const -1
    i32.xor
    i32.const 255
    local.get $var$12
    i32.sub
    i32.const 31
    i32.shr_s
    local.get $var$12
    i32.or
    i32.and
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Uint32Array> (param $this i32) (param $source i32) (param $offset i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $var$13 i32)
  (local $var$14 i32)
  local.get $this
  local.set $var$5
  local.get $source
  local.set $var$4
  local.get $offset
  local.set $var$3
  i32.const 0
  drop
  local.get $var$4
  call $~lib/typedarray/Uint32Array#get:length
  local.set $var$6
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $var$6
   local.get $var$3
   i32.add
   local.get $var$5
   call $~lib/typedarray/Uint8ClampedArray#get:length
   i32.gt_s
  end
  if
   i32.const 336
   i32.const 608
   i32.const 1902
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$3
  i32.const 0
  i32.shl
  i32.add
  local.set $var$7
  local.get $var$4
  i32.load $0 offset=4
  local.set $var$8
  i32.const 0
  i32.const 2
  i32.eq
  drop
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$6
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$12
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 0
    i32.eqz
    drop
    local.get $var$11
    i32.const 255
    local.tee $var$13
    local.get $var$12
    local.tee $var$14
    local.get $var$13
    local.get $var$14
    i32.lt_u
    select
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/insertionSort<i8> (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $var$13 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $var$5
  local.get $left
  local.get $var$5
  i32.const 1
  i32.and
  local.get $presorted
  local.get $var$5
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $var$6
  loop $for-loop|0
   local.get $var$6
   local.get $right
   i32.le_s
   local.set $var$7
   local.get $var$7
   if
    local.get $ptr
    local.get $var$6
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $var$8
    local.get $ptr
    local.get $var$6
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0 offset=1
    local.set $var$9
    local.get $var$9
    local.set $var$10
    local.get $var$8
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $var$8
     local.set $var$10
     local.get $var$9
     local.set $var$11
    end
    local.get $var$6
    i32.const 1
    i32.sub
    local.set $var$12
    block $while-break|1
     loop $while-continue|1
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 0
       i32.shl
       i32.add
       i32.load8_s $0
       local.set $var$8
       local.get $var$8
       local.get $var$11
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 0
        i32.shl
        i32.add
        local.get $var$8
        i32.store8 $0 offset=2
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 0
    i32.shl
    i32.add
    local.get $var$11
    i32.store8 $0 offset=2
    block $while-break|2
     loop $while-continue|2
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 0
       i32.shl
       i32.add
       i32.load8_s $0
       local.set $var$8
       local.get $var$8
       local.get $var$10
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 0
        i32.shl
        i32.add
        local.get $var$8
        i32.store8 $0 offset=1
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 0
    i32.shl
    i32.add
    local.get $var$10
    i32.store8 $0 offset=1
    local.get $var$6
    i32.const 2
    i32.add
    local.set $var$6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i8> (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $tmp i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 0
  i32.shl
  i32.add
  i32.load8_s $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 0
  i32.shl
  i32.add
  i32.load8_s $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0 offset=1
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $var$5
   loop $while-continue|1
    local.get $i
    local.get $var$5
    i32.lt_s
    local.set $var$6
    local.get $var$6
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     local.get $ptr
     local.get $var$5
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $var$5
     i32.const 0
     i32.shl
     i32.add
     local.get $tmp
     i32.store8 $0
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0 offset=1
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_s $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<i8> (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0 offset=1
    i32.store8 $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $var$9
  loop $for-loop|2
   local.get $var$9
   local.get $r
   i32.le_s
   local.set $var$10
   local.get $var$10
   if
    local.get $buffer
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $var$11
    local.get $buffer
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $var$12
    local.get $var$11
    local.get $var$12
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $var$9
     i32.const 0
     i32.shl
     i32.add
     local.get $var$11
     i32.store8 $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $var$9
     i32.const 0
     i32.shl
     i32.add
     local.get $var$12
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i8> (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $endB i32)
  (local $var$4 i32)
  (local $startB i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $top i32)
  (local $startA i32)
  (local $lenB i32)
  (local $k i32)
  (local $var$18 i32)
  (local $var$19 i32)
  (local $var$20 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $endB
      local.get $endB
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $endB
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load8_s $0
     local.set $endB
     local.get $ptr
     i32.load8_s $0 offset=1
     local.set $var$4
     local.get $endB
     local.get $var$4
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$4
     local.get $endB
     local.get $startB
     select
     i32.store8 $0
     local.get $endB
     local.get $var$4
     local.get $startB
     select
     local.set $endB
     local.get $ptr
     i32.load8_s $0 offset=2
     local.set $var$4
     local.get $endB
     local.get $var$4
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$4
     local.get $endB
     local.get $startB
     select
     i32.store8 $0 offset=1
     local.get $ptr
     local.get $endB
     local.get $var$4
     local.get $startB
     select
     i32.store8 $0 offset=2
    end
    local.get $ptr
    i32.load8_s $0
    local.set $startB
    local.get $ptr
    i32.load8_s $0 offset=1
    local.set $var$4
    local.get $startB
    local.get $var$4
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $endB
    local.get $ptr
    local.get $var$4
    local.get $startB
    local.get $endB
    select
    i32.store8 $0
    local.get $ptr
    local.get $startB
    local.get $var$4
    local.get $endB
    select
    i32.store8 $0 offset=1
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<i8>
   return
  end
  local.get $len
  local.set $startB
  i32.const 31
  local.get $startB
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $startB
  loop $for-loop|1
   local.get $startB
   local.get $lgPlus2
   i32.lt_u
   local.set $endB
   local.get $endB
   if
    local.get $leftRunStartBuf
    local.get $startB
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $startB
    i32.const 1
    i32.add
    local.set $startB
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 0
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<i8>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $var$4
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $startB
   local.get $var$4
   local.get $startB
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<i8>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<i8>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $k
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $var$18
     local.get $k
     local.get $var$18
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<i8>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $var$18
    loop $for-loop|3
     local.get $var$18
     local.get $k
     i32.gt_u
     local.set $var$19
     local.get $var$19
     if
      local.get $leftRunStartBuf
      local.get $var$18
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $var$20
      local.get $var$20
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $var$20
       local.get $leftRunEndBuf
       local.get $var$18
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<i8>
       local.get $var$20
       local.set $startA
       local.get $leftRunStartBuf
       local.get $var$18
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $var$18
      i32.const 1
      i32.sub
      local.set $var$18
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $var$4
  loop $for-loop|4
   local.get $var$4
   i32.const 0
   i32.ne
   local.set $var$18
   local.get $var$18
   if
    local.get $leftRunStartBuf
    local.get $var$4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$19
    local.get $var$19
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $var$19
     local.get $leftRunEndBuf
     local.get $var$4
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<i8>
    end
    local.get $var$4
    i32.const 1
    i32.sub
    local.set $var$4
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Int8Array#sort (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int8Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<i8>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<i8>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.extend8_s
  local.get $b
  i32.extend8_s
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int8Array,i8>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.extend8_s
  local.get $a
  i32.extend8_s
  i32.gt_s
  local.get $b
  i32.extend8_s
  local.get $a
  i32.extend8_s
  i32.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u8> (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $var$13 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $var$5
  local.get $left
  local.get $var$5
  i32.const 1
  i32.and
  local.get $presorted
  local.get $var$5
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $var$6
  loop $for-loop|0
   local.get $var$6
   local.get $right
   i32.le_s
   local.set $var$7
   local.get $var$7
   if
    local.get $ptr
    local.get $var$6
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $var$8
    local.get $ptr
    local.get $var$6
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0 offset=1
    local.set $var$9
    local.get $var$9
    local.set $var$10
    local.get $var$8
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $var$8
     local.set $var$10
     local.get $var$9
     local.set $var$11
    end
    local.get $var$6
    i32.const 1
    i32.sub
    local.set $var$12
    block $while-break|1
     loop $while-continue|1
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 0
       i32.shl
       i32.add
       i32.load8_u $0
       local.set $var$8
       local.get $var$8
       local.get $var$11
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 0
        i32.shl
        i32.add
        local.get $var$8
        i32.store8 $0 offset=2
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 0
    i32.shl
    i32.add
    local.get $var$11
    i32.store8 $0 offset=2
    block $while-break|2
     loop $while-continue|2
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 0
       i32.shl
       i32.add
       i32.load8_u $0
       local.set $var$8
       local.get $var$8
       local.get $var$10
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 0
        i32.shl
        i32.add
        local.get $var$8
        i32.store8 $0 offset=1
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 0
    i32.shl
    i32.add
    local.get $var$10
    i32.store8 $0 offset=1
    local.get $var$6
    i32.const 2
    i32.add
    local.set $var$6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u8> (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $tmp i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0 offset=1
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $var$5
   loop $while-continue|1
    local.get $i
    local.get $var$5
    i32.lt_s
    local.set $var$6
    local.get $var$6
    if
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 0
     i32.shl
     i32.add
     local.get $ptr
     local.get $var$5
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $var$5
     i32.const 0
     i32.shl
     i32.add
     local.get $tmp
     i32.store8 $0
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0 offset=1
     local.get $ptr
     local.get $j
     i32.const 0
     i32.shl
     i32.add
     i32.load8_u $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<u8> (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    i32.store8 $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 0
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0 offset=1
    i32.store8 $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $var$9
  loop $for-loop|2
   local.get $var$9
   local.get $r
   i32.le_s
   local.set $var$10
   local.get $var$10
   if
    local.get $buffer
    local.get $j
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $var$11
    local.get $buffer
    local.get $i
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $var$12
    local.get $var$11
    local.get $var$12
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $var$9
     i32.const 0
     i32.shl
     i32.add
     local.get $var$11
     i32.store8 $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $var$9
     i32.const 0
     i32.shl
     i32.add
     local.get $var$12
     i32.store8 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u8> (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $endB i32)
  (local $var$4 i32)
  (local $startB i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $top i32)
  (local $startA i32)
  (local $lenB i32)
  (local $k i32)
  (local $var$18 i32)
  (local $var$19 i32)
  (local $var$20 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $endB
      local.get $endB
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $endB
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load8_u $0
     local.set $endB
     local.get $ptr
     i32.load8_u $0 offset=1
     local.set $var$4
     local.get $endB
     local.get $var$4
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$4
     local.get $endB
     local.get $startB
     select
     i32.store8 $0
     local.get $endB
     local.get $var$4
     local.get $startB
     select
     local.set $endB
     local.get $ptr
     i32.load8_u $0 offset=2
     local.set $var$4
     local.get $endB
     local.get $var$4
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$4
     local.get $endB
     local.get $startB
     select
     i32.store8 $0 offset=1
     local.get $ptr
     local.get $endB
     local.get $var$4
     local.get $startB
     select
     i32.store8 $0 offset=2
    end
    local.get $ptr
    i32.load8_u $0
    local.set $startB
    local.get $ptr
    i32.load8_u $0 offset=1
    local.set $var$4
    local.get $startB
    local.get $var$4
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $endB
    local.get $ptr
    local.get $var$4
    local.get $startB
    local.get $endB
    select
    i32.store8 $0
    local.get $ptr
    local.get $startB
    local.get $var$4
    local.get $endB
    select
    i32.store8 $0 offset=1
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<u8>
   return
  end
  local.get $len
  local.set $startB
  i32.const 31
  local.get $startB
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $startB
  loop $for-loop|1
   local.get $startB
   local.get $lgPlus2
   i32.lt_u
   local.set $endB
   local.get $endB
   if
    local.get $leftRunStartBuf
    local.get $startB
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $startB
    i32.const 1
    i32.add
    local.set $startB
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 0
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<u8>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $var$4
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $startB
   local.get $var$4
   local.get $startB
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<u8>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<u8>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $k
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $var$18
     local.get $k
     local.get $var$18
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<u8>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $var$18
    loop $for-loop|3
     local.get $var$18
     local.get $k
     i32.gt_u
     local.set $var$19
     local.get $var$19
     if
      local.get $leftRunStartBuf
      local.get $var$18
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $var$20
      local.get $var$20
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $var$20
       local.get $leftRunEndBuf
       local.get $var$18
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<u8>
       local.get $var$20
       local.set $startA
       local.get $leftRunStartBuf
       local.get $var$18
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $var$18
      i32.const 1
      i32.sub
      local.set $var$18
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $var$4
  loop $for-loop|4
   local.get $var$4
   i32.const 0
   i32.ne
   local.set $var$18
   local.get $var$18
   if
    local.get $leftRunStartBuf
    local.get $var$4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$19
    local.get $var$19
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $var$19
     local.get $leftRunEndBuf
     local.get $var$4
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<u8>
    end
    local.get $var$4
    i32.const 1
    i32.sub
    local.set $var$4
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Uint8Array#sort (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint8Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u8>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u8>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.const 255
  i32.and
  local.get $b
  i32.const 255
  i32.and
  i32.gt_u
  local.get $a
  i32.const 255
  i32.and
  local.get $b
  i32.const 255
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint8Array,u8>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.const 255
  i32.and
  local.get $a
  i32.const 255
  i32.and
  i32.gt_u
  local.get $b
  i32.const 255
  i32.and
  local.get $a
  i32.const 255
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $~lib/typedarray/Uint8ClampedArray#sort (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u8>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u8>~anonymous|1 (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.const 255
  i32.and
  local.get $b
  i32.const 255
  i32.and
  i32.gt_u
  local.get $a
  i32.const 255
  i32.and
  local.get $b
  i32.const 255
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.const 255
  i32.and
  local.get $a
  i32.const 255
  i32.and
  i32.gt_u
  local.get $b
  i32.const 255
  i32.and
  local.get $a
  i32.const 255
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<i16> (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $var$13 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $var$5
  local.get $left
  local.get $var$5
  i32.const 1
  i32.and
  local.get $presorted
  local.get $var$5
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $var$6
  loop $for-loop|0
   local.get $var$6
   local.get $right
   i32.le_s
   local.set $var$7
   local.get $var$7
   if
    local.get $ptr
    local.get $var$6
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $var$8
    local.get $ptr
    local.get $var$6
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0 offset=2
    local.set $var$9
    local.get $var$9
    local.set $var$10
    local.get $var$8
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $var$8
     local.set $var$10
     local.get $var$9
     local.set $var$11
    end
    local.get $var$6
    i32.const 1
    i32.sub
    local.set $var$12
    block $while-break|1
     loop $while-continue|1
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 1
       i32.shl
       i32.add
       i32.load16_s $0
       local.set $var$8
       local.get $var$8
       local.get $var$11
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 1
        i32.shl
        i32.add
        local.get $var$8
        i32.store16 $0 offset=4
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 1
    i32.shl
    i32.add
    local.get $var$11
    i32.store16 $0 offset=4
    block $while-break|2
     loop $while-continue|2
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 1
       i32.shl
       i32.add
       i32.load16_s $0
       local.set $var$8
       local.get $var$8
       local.get $var$10
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 1
        i32.shl
        i32.add
        local.get $var$8
        i32.store16 $0 offset=2
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 1
    i32.shl
    i32.add
    local.get $var$10
    i32.store16 $0 offset=2
    local.get $var$6
    i32.const 2
    i32.add
    local.set $var$6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i16> (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $tmp i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0 offset=2
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $var$5
   loop $while-continue|1
    local.get $i
    local.get $var$5
    i32.lt_s
    local.set $var$6
    local.get $var$6
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     local.get $ptr
     local.get $var$5
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $var$5
     i32.const 1
     i32.shl
     i32.add
     local.get $tmp
     i32.store16 $0
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0 offset=2
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_s $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<i16> (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0 offset=2
    i32.store16 $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $var$9
  loop $for-loop|2
   local.get $var$9
   local.get $r
   i32.le_s
   local.set $var$10
   local.get $var$10
   if
    local.get $buffer
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $var$11
    local.get $buffer
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $var$12
    local.get $var$11
    local.get $var$12
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $var$9
     i32.const 1
     i32.shl
     i32.add
     local.get $var$11
     i32.store16 $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $var$9
     i32.const 1
     i32.shl
     i32.add
     local.get $var$12
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i16> (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $endB i32)
  (local $var$4 i32)
  (local $startB i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $top i32)
  (local $startA i32)
  (local $lenB i32)
  (local $k i32)
  (local $var$18 i32)
  (local $var$19 i32)
  (local $var$20 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $endB
      local.get $endB
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $endB
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load16_s $0
     local.set $endB
     local.get $ptr
     i32.load16_s $0 offset=2
     local.set $var$4
     local.get $endB
     local.get $var$4
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$4
     local.get $endB
     local.get $startB
     select
     i32.store16 $0
     local.get $endB
     local.get $var$4
     local.get $startB
     select
     local.set $endB
     local.get $ptr
     i32.load16_s $0 offset=4
     local.set $var$4
     local.get $endB
     local.get $var$4
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$4
     local.get $endB
     local.get $startB
     select
     i32.store16 $0 offset=2
     local.get $ptr
     local.get $endB
     local.get $var$4
     local.get $startB
     select
     i32.store16 $0 offset=4
    end
    local.get $ptr
    i32.load16_s $0
    local.set $startB
    local.get $ptr
    i32.load16_s $0 offset=2
    local.set $var$4
    local.get $startB
    local.get $var$4
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $endB
    local.get $ptr
    local.get $var$4
    local.get $startB
    local.get $endB
    select
    i32.store16 $0
    local.get $ptr
    local.get $startB
    local.get $var$4
    local.get $endB
    select
    i32.store16 $0 offset=2
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<i16>
   return
  end
  local.get $len
  local.set $startB
  i32.const 31
  local.get $startB
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $startB
  loop $for-loop|1
   local.get $startB
   local.get $lgPlus2
   i32.lt_u
   local.set $endB
   local.get $endB
   if
    local.get $leftRunStartBuf
    local.get $startB
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $startB
    i32.const 1
    i32.add
    local.set $startB
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<i16>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $var$4
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $startB
   local.get $var$4
   local.get $startB
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<i16>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<i16>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $k
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $var$18
     local.get $k
     local.get $var$18
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<i16>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $var$18
    loop $for-loop|3
     local.get $var$18
     local.get $k
     i32.gt_u
     local.set $var$19
     local.get $var$19
     if
      local.get $leftRunStartBuf
      local.get $var$18
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $var$20
      local.get $var$20
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $var$20
       local.get $leftRunEndBuf
       local.get $var$18
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<i16>
       local.get $var$20
       local.set $startA
       local.get $leftRunStartBuf
       local.get $var$18
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $var$18
      i32.const 1
      i32.sub
      local.set $var$18
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $var$4
  loop $for-loop|4
   local.get $var$4
   i32.const 0
   i32.ne
   local.set $var$18
   local.get $var$18
   if
    local.get $leftRunStartBuf
    local.get $var$4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$19
    local.get $var$19
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $var$19
     local.get $leftRunEndBuf
     local.get $var$4
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<i16>
    end
    local.get $var$4
    i32.const 1
    i32.sub
    local.set $var$4
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Int16Array#sort (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int16Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<i16>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<i16>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.extend16_s
  local.get $b
  i32.extend16_s
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int16Array,i16>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.extend16_s
  local.get $a
  i32.extend16_s
  i32.gt_s
  local.get $b
  i32.extend16_s
  local.get $a
  i32.extend16_s
  i32.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u16> (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $var$13 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $var$5
  local.get $left
  local.get $var$5
  i32.const 1
  i32.and
  local.get $presorted
  local.get $var$5
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $var$6
  loop $for-loop|0
   local.get $var$6
   local.get $right
   i32.le_s
   local.set $var$7
   local.get $var$7
   if
    local.get $ptr
    local.get $var$6
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.set $var$8
    local.get $ptr
    local.get $var$6
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0 offset=2
    local.set $var$9
    local.get $var$9
    local.set $var$10
    local.get $var$8
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $var$8
     local.set $var$10
     local.get $var$9
     local.set $var$11
    end
    local.get $var$6
    i32.const 1
    i32.sub
    local.set $var$12
    block $while-break|1
     loop $while-continue|1
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u $0
       local.set $var$8
       local.get $var$8
       local.get $var$11
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 1
        i32.shl
        i32.add
        local.get $var$8
        i32.store16 $0 offset=4
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 1
    i32.shl
    i32.add
    local.get $var$11
    i32.store16 $0 offset=4
    block $while-break|2
     loop $while-continue|2
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u $0
       local.set $var$8
       local.get $var$8
       local.get $var$10
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 1
        i32.shl
        i32.add
        local.get $var$8
        i32.store16 $0 offset=2
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 1
    i32.shl
    i32.add
    local.get $var$10
    i32.store16 $0 offset=2
    local.get $var$6
    i32.const 2
    i32.add
    local.set $var$6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u16> (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $tmp i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0 offset=2
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $var$5
   loop $while-continue|1
    local.get $i
    local.get $var$5
    i32.lt_s
    local.set $var$6
    local.get $var$6
    if
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 1
     i32.shl
     i32.add
     local.get $ptr
     local.get $var$5
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $var$5
     i32.const 1
     i32.shl
     i32.add
     local.get $tmp
     i32.store16 $0
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0 offset=2
     local.get $ptr
     local.get $j
     i32.const 1
     i32.shl
     i32.add
     i32.load16_u $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<u16> (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    i32.store16 $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 1
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0 offset=2
    i32.store16 $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $var$9
  loop $for-loop|2
   local.get $var$9
   local.get $r
   i32.le_s
   local.set $var$10
   local.get $var$10
   if
    local.get $buffer
    local.get $j
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.set $var$11
    local.get $buffer
    local.get $i
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.set $var$12
    local.get $var$11
    local.get $var$12
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $var$9
     i32.const 1
     i32.shl
     i32.add
     local.get $var$11
     i32.store16 $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $var$9
     i32.const 1
     i32.shl
     i32.add
     local.get $var$12
     i32.store16 $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u16> (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $endB i32)
  (local $var$4 i32)
  (local $startB i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $top i32)
  (local $startA i32)
  (local $lenB i32)
  (local $k i32)
  (local $var$18 i32)
  (local $var$19 i32)
  (local $var$20 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $endB
      local.get $endB
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $endB
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load16_u $0
     local.set $endB
     local.get $ptr
     i32.load16_u $0 offset=2
     local.set $var$4
     local.get $endB
     local.get $var$4
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$4
     local.get $endB
     local.get $startB
     select
     i32.store16 $0
     local.get $endB
     local.get $var$4
     local.get $startB
     select
     local.set $endB
     local.get $ptr
     i32.load16_u $0 offset=4
     local.set $var$4
     local.get $endB
     local.get $var$4
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$4
     local.get $endB
     local.get $startB
     select
     i32.store16 $0 offset=2
     local.get $ptr
     local.get $endB
     local.get $var$4
     local.get $startB
     select
     i32.store16 $0 offset=4
    end
    local.get $ptr
    i32.load16_u $0
    local.set $startB
    local.get $ptr
    i32.load16_u $0 offset=2
    local.set $var$4
    local.get $startB
    local.get $var$4
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $endB
    local.get $ptr
    local.get $var$4
    local.get $startB
    local.get $endB
    select
    i32.store16 $0
    local.get $ptr
    local.get $startB
    local.get $var$4
    local.get $endB
    select
    i32.store16 $0 offset=2
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<u16>
   return
  end
  local.get $len
  local.set $startB
  i32.const 31
  local.get $startB
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $startB
  loop $for-loop|1
   local.get $startB
   local.get $lgPlus2
   i32.lt_u
   local.set $endB
   local.get $endB
   if
    local.get $leftRunStartBuf
    local.get $startB
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $startB
    i32.const 1
    i32.add
    local.set $startB
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<u16>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $var$4
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $startB
   local.get $var$4
   local.get $startB
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<u16>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<u16>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $k
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $var$18
     local.get $k
     local.get $var$18
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<u16>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $var$18
    loop $for-loop|3
     local.get $var$18
     local.get $k
     i32.gt_u
     local.set $var$19
     local.get $var$19
     if
      local.get $leftRunStartBuf
      local.get $var$18
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $var$20
      local.get $var$20
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $var$20
       local.get $leftRunEndBuf
       local.get $var$18
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<u16>
       local.get $var$20
       local.set $startA
       local.get $leftRunStartBuf
       local.get $var$18
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $var$18
      i32.const 1
      i32.sub
      local.set $var$18
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $var$4
  loop $for-loop|4
   local.get $var$4
   i32.const 0
   i32.ne
   local.set $var$18
   local.get $var$18
   if
    local.get $leftRunStartBuf
    local.get $var$4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$19
    local.get $var$19
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $var$19
     local.get $leftRunEndBuf
     local.get $var$4
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<u16>
    end
    local.get $var$4
    i32.const 1
    i32.sub
    local.set $var$4
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Uint16Array#sort (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint16Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u16>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u16>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  local.get $a
  i32.const 65535
  i32.and
  local.get $b
  i32.const 65535
  i32.and
  i32.gt_u
  local.get $a
  i32.const 65535
  i32.and
  local.get $b
  i32.const 65535
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint16Array,u16>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  local.get $b
  i32.const 65535
  i32.and
  local.get $a
  i32.const 65535
  i32.and
  i32.gt_u
  local.get $b
  i32.const 65535
  i32.and
  local.get $a
  i32.const 65535
  i32.and
  i32.lt_u
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<i32> (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $var$13 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $var$5
  local.get $left
  local.get $var$5
  i32.const 1
  i32.and
  local.get $presorted
  local.get $var$5
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $var$6
  loop $for-loop|0
   local.get $var$6
   local.get $right
   i32.le_s
   local.set $var$7
   local.get $var$7
   if
    local.get $ptr
    local.get $var$6
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$8
    local.get $ptr
    local.get $var$6
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $var$9
    local.get $var$9
    local.set $var$10
    local.get $var$8
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $var$8
     local.set $var$10
     local.get $var$9
     local.set $var$11
    end
    local.get $var$6
    i32.const 1
    i32.sub
    local.set $var$12
    block $while-break|1
     loop $while-continue|1
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $var$8
       local.get $var$8
       local.get $var$11
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 2
        i32.shl
        i32.add
        local.get $var$8
        i32.store $0 offset=8
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 2
    i32.shl
    i32.add
    local.get $var$11
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $var$8
       local.get $var$8
       local.get $var$10
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 2
        i32.shl
        i32.add
        local.get $var$8
        i32.store $0 offset=4
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 2
    i32.shl
    i32.add
    local.get $var$10
    i32.store $0 offset=4
    local.get $var$6
    i32.const 2
    i32.add
    local.set $var$6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i32> (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $tmp i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $var$5
   loop $while-continue|1
    local.get $i
    local.get $var$5
    i32.lt_s
    local.set $var$6
    local.get $var$6
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<i32> (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $var$9
  loop $for-loop|2
   local.get $var$9
   local.get $r
   i32.le_s
   local.set $var$10
   local.get $var$10
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$11
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$12
    local.get $var$11
    local.get $var$12
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $var$9
     i32.const 2
     i32.shl
     i32.add
     local.get $var$11
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $var$9
     i32.const 2
     i32.shl
     i32.add
     local.get $var$12
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i32> (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $endB i32)
  (local $var$4 i32)
  (local $startB i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $top i32)
  (local $startA i32)
  (local $lenB i32)
  (local $k i32)
  (local $var$18 i32)
  (local $var$19 i32)
  (local $var$20 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $endB
      local.get $endB
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $endB
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load $0
     local.set $endB
     local.get $ptr
     i32.load $0 offset=4
     local.set $var$4
     local.get $endB
     local.get $var$4
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$4
     local.get $endB
     local.get $startB
     select
     i32.store $0
     local.get $endB
     local.get $var$4
     local.get $startB
     select
     local.set $endB
     local.get $ptr
     i32.load $0 offset=8
     local.set $var$4
     local.get $endB
     local.get $var$4
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$4
     local.get $endB
     local.get $startB
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $endB
     local.get $var$4
     local.get $startB
     select
     i32.store $0 offset=8
    end
    local.get $ptr
    i32.load $0
    local.set $startB
    local.get $ptr
    i32.load $0 offset=4
    local.set $var$4
    local.get $startB
    local.get $var$4
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $endB
    local.get $ptr
    local.get $var$4
    local.get $startB
    local.get $endB
    select
    i32.store $0
    local.get $ptr
    local.get $startB
    local.get $var$4
    local.get $endB
    select
    i32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<i32>
   return
  end
  local.get $len
  local.set $startB
  i32.const 31
  local.get $startB
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $startB
  loop $for-loop|1
   local.get $startB
   local.get $lgPlus2
   i32.lt_u
   local.set $endB
   local.get $endB
   if
    local.get $leftRunStartBuf
    local.get $startB
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $startB
    i32.const 1
    i32.add
    local.set $startB
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<i32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $var$4
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $startB
   local.get $var$4
   local.get $startB
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<i32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<i32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $k
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $var$18
     local.get $k
     local.get $var$18
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<i32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $var$18
    loop $for-loop|3
     local.get $var$18
     local.get $k
     i32.gt_u
     local.set $var$19
     local.get $var$19
     if
      local.get $leftRunStartBuf
      local.get $var$18
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $var$20
      local.get $var$20
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $var$20
       local.get $leftRunEndBuf
       local.get $var$18
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<i32>
       local.get $var$20
       local.set $startA
       local.get $leftRunStartBuf
       local.get $var$18
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $var$18
      i32.const 1
      i32.sub
      local.set $var$18
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $var$4
  loop $for-loop|4
   local.get $var$4
   i32.const 0
   i32.ne
   local.set $var$18
   local.get $var$18
   if
    local.get $leftRunStartBuf
    local.get $var$4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$19
    local.get $var$19
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $var$19
     local.get $leftRunEndBuf
     local.get $var$4
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<i32>
    end
    local.get $var$4
    i32.const 1
    i32.sub
    local.set $var$4
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Int32Array#sort (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int32Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<i32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int32Array,i32>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  local.get $b
  local.get $a
  i32.gt_s
  local.get $b
  local.get $a
  i32.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u32> (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $var$13 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $var$5
  local.get $left
  local.get $var$5
  i32.const 1
  i32.and
  local.get $presorted
  local.get $var$5
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $var$6
  loop $for-loop|0
   local.get $var$6
   local.get $right
   i32.le_s
   local.set $var$7
   local.get $var$7
   if
    local.get $ptr
    local.get $var$6
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$8
    local.get $ptr
    local.get $var$6
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    local.set $var$9
    local.get $var$9
    local.set $var$10
    local.get $var$8
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $var$8
     local.set $var$10
     local.get $var$9
     local.set $var$11
    end
    local.get $var$6
    i32.const 1
    i32.sub
    local.set $var$12
    block $while-break|1
     loop $while-continue|1
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $var$8
       local.get $var$8
       local.get $var$11
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 2
        i32.shl
        i32.add
        local.get $var$8
        i32.store $0 offset=8
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 2
    i32.shl
    i32.add
    local.get $var$11
    i32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       local.set $var$8
       local.get $var$8
       local.get $var$10
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 2
        i32.shl
        i32.add
        local.get $var$8
        i32.store $0 offset=4
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 2
    i32.shl
    i32.add
    local.get $var$10
    i32.store $0 offset=4
    local.get $var$6
    i32.const 2
    i32.add
    local.set $var$6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u32> (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $tmp i32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $var$5
   loop $while-continue|1
    local.get $i
    local.get $var$5
    i32.lt_s
    local.set $var$6
    local.get $var$6
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     i32.store $0
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<u32> (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    i32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0 offset=4
    i32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $var$9
  loop $for-loop|2
   local.get $var$9
   local.get $r
   i32.le_s
   local.set $var$10
   local.get $var$10
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$11
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$12
    local.get $var$11
    local.get $var$12
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $var$9
     i32.const 2
     i32.shl
     i32.add
     local.get $var$11
     i32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $var$9
     i32.const 2
     i32.shl
     i32.add
     local.get $var$12
     i32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u32> (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $endB i32)
  (local $var$4 i32)
  (local $startB i32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $top i32)
  (local $startA i32)
  (local $lenB i32)
  (local $k i32)
  (local $var$18 i32)
  (local $var$19 i32)
  (local $var$20 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $endB
      local.get $endB
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $endB
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i32.load $0
     local.set $endB
     local.get $ptr
     i32.load $0 offset=4
     local.set $var$4
     local.get $endB
     local.get $var$4
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$4
     local.get $endB
     local.get $startB
     select
     i32.store $0
     local.get $endB
     local.get $var$4
     local.get $startB
     select
     local.set $endB
     local.get $ptr
     i32.load $0 offset=8
     local.set $var$4
     local.get $endB
     local.get $var$4
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$4
     local.get $endB
     local.get $startB
     select
     i32.store $0 offset=4
     local.get $ptr
     local.get $endB
     local.get $var$4
     local.get $startB
     select
     i32.store $0 offset=8
    end
    local.get $ptr
    i32.load $0
    local.set $startB
    local.get $ptr
    i32.load $0 offset=4
    local.set $var$4
    local.get $startB
    local.get $var$4
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $endB
    local.get $ptr
    local.get $var$4
    local.get $startB
    local.get $endB
    select
    i32.store $0
    local.get $ptr
    local.get $startB
    local.get $var$4
    local.get $endB
    select
    i32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<u32>
   return
  end
  local.get $len
  local.set $startB
  i32.const 31
  local.get $startB
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $startB
  loop $for-loop|1
   local.get $startB
   local.get $lgPlus2
   i32.lt_u
   local.set $endB
   local.get $endB
   if
    local.get $leftRunStartBuf
    local.get $startB
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $startB
    i32.const 1
    i32.add
    local.set $startB
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<u32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $var$4
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $startB
   local.get $var$4
   local.get $startB
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<u32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<u32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $k
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $var$18
     local.get $k
     local.get $var$18
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<u32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $var$18
    loop $for-loop|3
     local.get $var$18
     local.get $k
     i32.gt_u
     local.set $var$19
     local.get $var$19
     if
      local.get $leftRunStartBuf
      local.get $var$18
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $var$20
      local.get $var$20
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $var$20
       local.get $leftRunEndBuf
       local.get $var$18
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<u32>
       local.get $var$20
       local.set $startA
       local.get $leftRunStartBuf
       local.get $var$18
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $var$18
      i32.const 1
      i32.sub
      local.set $var$18
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $var$4
  loop $for-loop|4
   local.get $var$4
   i32.const 0
   i32.ne
   local.set $var$18
   local.get $var$18
   if
    local.get $leftRunStartBuf
    local.get $var$4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$19
    local.get $var$19
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $var$19
     local.get $leftRunEndBuf
     local.get $var$4
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<u32>
    end
    local.get $var$4
    i32.const 1
    i32.sub
    local.set $var$4
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Uint32Array#sort (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint32Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u32>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  local.get $a
  local.get $b
  i32.gt_u
  local.get $a
  local.get $b
  i32.lt_u
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint32Array,u32>~anonymous|0 (param $a i32) (param $b i32) (result i32)
  local.get $b
  local.get $a
  i32.gt_u
  local.get $b
  local.get $a
  i32.lt_u
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<i64> (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i64)
  (local $var$9 i64)
  (local $var$10 i64)
  (local $var$11 i64)
  (local $var$12 i32)
  (local $var$13 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $var$5
  local.get $left
  local.get $var$5
  i32.const 1
  i32.and
  local.get $presorted
  local.get $var$5
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $var$6
  loop $for-loop|0
   local.get $var$6
   local.get $right
   i32.le_s
   local.set $var$7
   local.get $var$7
   if
    local.get $ptr
    local.get $var$6
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$8
    local.get $ptr
    local.get $var$6
    i32.const 3
    i32.shl
    i32.add
    i64.load $0 offset=8
    local.set $var$9
    local.get $var$9
    local.set $var$10
    local.get $var$8
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $var$8
     local.set $var$10
     local.get $var$9
     local.set $var$11
    end
    local.get $var$6
    i32.const 1
    i32.sub
    local.set $var$12
    block $while-break|1
     loop $while-continue|1
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 3
       i32.shl
       i32.add
       i64.load $0
       local.set $var$8
       local.get $var$8
       local.get $var$11
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i64_i64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 3
        i32.shl
        i32.add
        local.get $var$8
        i64.store $0 offset=16
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 3
    i32.shl
    i32.add
    local.get $var$11
    i64.store $0 offset=16
    block $while-break|2
     loop $while-continue|2
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 3
       i32.shl
       i32.add
       i64.load $0
       local.set $var$8
       local.get $var$8
       local.get $var$10
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i64_i64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 3
        i32.shl
        i32.add
        local.get $var$8
        i64.store $0 offset=8
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 3
    i32.shl
    i32.add
    local.get $var$10
    i64.store $0 offset=8
    local.get $var$6
    i32.const 2
    i32.add
    local.set $var$6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i64> (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $tmp i64)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i64_i64_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $var$5
   loop $while-continue|1
    local.get $i
    local.get $var$5
    i32.lt_s
    local.set $var$6
    local.get $var$6
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.get $ptr
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     local.get $tmp
     i64.store $0
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<i64> (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i64)
  (local $var$12 i64)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    i64.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    i64.load $0 offset=8
    i64.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $var$9
  loop $for-loop|2
   local.get $var$9
   local.get $r
   i32.le_s
   local.set $var$10
   local.get $var$10
   if
    local.get $buffer
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$11
    local.get $buffer
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$12
    local.get $var$11
    local.get $var$12
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $var$9
     i32.const 3
     i32.shl
     i32.add
     local.get $var$11
     i64.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $var$9
     i32.const 3
     i32.shl
     i32.add
     local.get $var$12
     i64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i64> (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $startB i32)
  (local $var$4 i64)
  (local $var$5 i64)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $var$10 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $top i32)
  (local $startA i32)
  (local $endB i32)
  (local $lenB i32)
  (local $k i32)
  (local $var$20 i32)
  (local $var$21 i32)
  (local $var$22 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $startB
      local.get $startB
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $startB
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i64.load $0
     local.set $var$4
     local.get $ptr
     i64.load $0 offset=8
     local.set $var$5
     local.get $var$4
     local.get $var$5
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$5
     local.get $var$4
     local.get $startB
     select
     i64.store $0
     local.get $var$4
     local.get $var$5
     local.get $startB
     select
     local.set $var$4
     local.get $ptr
     i64.load $0 offset=16
     local.set $var$5
     local.get $var$4
     local.get $var$5
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$5
     local.get $var$4
     local.get $startB
     select
     i64.store $0 offset=8
     local.get $ptr
     local.get $var$4
     local.get $var$5
     local.get $startB
     select
     i64.store $0 offset=16
    end
    local.get $ptr
    i64.load $0
    local.set $var$5
    local.get $ptr
    i64.load $0 offset=8
    local.set $var$4
    local.get $var$5
    local.get $var$4
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $startB
    local.get $ptr
    local.get $var$4
    local.get $var$5
    local.get $startB
    select
    i64.store $0
    local.get $ptr
    local.get $var$5
    local.get $var$4
    local.get $startB
    select
    i64.store $0 offset=8
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<i64>
   return
  end
  local.get $len
  local.set $startB
  i32.const 31
  local.get $startB
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $startB
  loop $for-loop|1
   local.get $startB
   local.get $lgPlus2
   i32.lt_u
   local.set $var$10
   local.get $var$10
   if
    local.get $leftRunStartBuf
    local.get $startB
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $startB
    i32.const 1
    i32.add
    local.set $startB
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 3
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<i64>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $var$10
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $startB
   local.get $var$10
   local.get $startB
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<i64>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<i64>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $k
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $var$20
     local.get $k
     local.get $var$20
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<i64>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $var$20
    loop $for-loop|3
     local.get $var$20
     local.get $k
     i32.gt_u
     local.set $var$21
     local.get $var$21
     if
      local.get $leftRunStartBuf
      local.get $var$20
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $var$22
      local.get $var$22
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $var$22
       local.get $leftRunEndBuf
       local.get $var$20
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<i64>
       local.get $var$22
       local.set $startA
       local.get $leftRunStartBuf
       local.get $var$20
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $var$20
      i32.const 1
      i32.sub
      local.set $var$20
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $var$10
  loop $for-loop|4
   local.get $var$10
   i32.const 0
   i32.ne
   local.set $var$20
   local.get $var$20
   if
    local.get $leftRunStartBuf
    local.get $var$10
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$21
    local.get $var$21
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $var$21
     local.get $leftRunEndBuf
     local.get $var$10
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<i64>
    end
    local.get $var$10
    i32.const 1
    i32.sub
    local.set $var$10
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Int64Array#sort (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Int64Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<i64>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<i64>~anonymous|0 (param $a i64) (param $b i64) (result i32)
  local.get $a
  local.get $b
  i64.gt_s
  local.get $a
  local.get $b
  i64.lt_s
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int64Array,i64>~anonymous|0 (param $a i64) (param $b i64) (result i32)
  local.get $b
  local.get $a
  i64.gt_s
  local.get $b
  local.get $a
  i64.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u64> (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i64)
  (local $var$9 i64)
  (local $var$10 i64)
  (local $var$11 i64)
  (local $var$12 i32)
  (local $var$13 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $var$5
  local.get $left
  local.get $var$5
  i32.const 1
  i32.and
  local.get $presorted
  local.get $var$5
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $var$6
  loop $for-loop|0
   local.get $var$6
   local.get $right
   i32.le_s
   local.set $var$7
   local.get $var$7
   if
    local.get $ptr
    local.get $var$6
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$8
    local.get $ptr
    local.get $var$6
    i32.const 3
    i32.shl
    i32.add
    i64.load $0 offset=8
    local.set $var$9
    local.get $var$9
    local.set $var$10
    local.get $var$8
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $var$8
     local.set $var$10
     local.get $var$9
     local.set $var$11
    end
    local.get $var$6
    i32.const 1
    i32.sub
    local.set $var$12
    block $while-break|1
     loop $while-continue|1
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 3
       i32.shl
       i32.add
       i64.load $0
       local.set $var$8
       local.get $var$8
       local.get $var$11
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i64_i64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 3
        i32.shl
        i32.add
        local.get $var$8
        i64.store $0 offset=16
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 3
    i32.shl
    i32.add
    local.get $var$11
    i64.store $0 offset=16
    block $while-break|2
     loop $while-continue|2
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 3
       i32.shl
       i32.add
       i64.load $0
       local.set $var$8
       local.get $var$8
       local.get $var$10
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $i64_i64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 3
        i32.shl
        i32.add
        local.get $var$8
        i64.store $0 offset=8
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 3
    i32.shl
    i32.add
    local.get $var$10
    i64.store $0 offset=8
    local.get $var$6
    i32.const 2
    i32.add
    local.set $var$6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u64> (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $tmp i64)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $i64_i64_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $var$5
   loop $while-continue|1
    local.get $i
    local.get $var$5
    i32.lt_s
    local.set $var$6
    local.get $var$6
    if
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 3
     i32.shl
     i32.add
     local.get $ptr
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $var$5
     i32.const 3
     i32.shl
     i32.add
     local.get $tmp
     i64.store $0
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0 offset=8
     local.get $ptr
     local.get $j
     i32.const 3
     i32.shl
     i32.add
     i64.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<u64> (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i64)
  (local $var$12 i64)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    i64.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    i64.load $0 offset=8
    i64.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $var$9
  loop $for-loop|2
   local.get $var$9
   local.get $r
   i32.le_s
   local.set $var$10
   local.get $var$10
   if
    local.get $buffer
    local.get $j
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$11
    local.get $buffer
    local.get $i
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$12
    local.get $var$11
    local.get $var$12
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $var$9
     i32.const 3
     i32.shl
     i32.add
     local.get $var$11
     i64.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $var$9
     i32.const 3
     i32.shl
     i32.add
     local.get $var$12
     i64.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u64> (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $startB i32)
  (local $var$4 i64)
  (local $var$5 i64)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $var$10 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $top i32)
  (local $startA i32)
  (local $endB i32)
  (local $lenB i32)
  (local $k i32)
  (local $var$20 i32)
  (local $var$21 i32)
  (local $var$22 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $startB
      local.get $startB
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $startB
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     i64.load $0
     local.set $var$4
     local.get $ptr
     i64.load $0 offset=8
     local.set $var$5
     local.get $var$4
     local.get $var$5
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$5
     local.get $var$4
     local.get $startB
     select
     i64.store $0
     local.get $var$4
     local.get $var$5
     local.get $startB
     select
     local.set $var$4
     local.get $ptr
     i64.load $0 offset=16
     local.set $var$5
     local.get $var$4
     local.get $var$5
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $i64_i64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$5
     local.get $var$4
     local.get $startB
     select
     i64.store $0 offset=8
     local.get $ptr
     local.get $var$4
     local.get $var$5
     local.get $startB
     select
     i64.store $0 offset=16
    end
    local.get $ptr
    i64.load $0
    local.set $var$5
    local.get $ptr
    i64.load $0 offset=8
    local.set $var$4
    local.get $var$5
    local.get $var$4
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $i64_i64_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $startB
    local.get $ptr
    local.get $var$4
    local.get $var$5
    local.get $startB
    select
    i64.store $0
    local.get $ptr
    local.get $var$5
    local.get $var$4
    local.get $startB
    select
    i64.store $0 offset=8
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<u64>
   return
  end
  local.get $len
  local.set $startB
  i32.const 31
  local.get $startB
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $startB
  loop $for-loop|1
   local.get $startB
   local.get $lgPlus2
   i32.lt_u
   local.set $var$10
   local.get $var$10
   if
    local.get $leftRunStartBuf
    local.get $startB
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $startB
    i32.const 1
    i32.add
    local.set $startB
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 3
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<u64>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $var$10
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $startB
   local.get $var$10
   local.get $startB
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<u64>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<u64>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $k
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $var$20
     local.get $k
     local.get $var$20
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<u64>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $var$20
    loop $for-loop|3
     local.get $var$20
     local.get $k
     i32.gt_u
     local.set $var$21
     local.get $var$21
     if
      local.get $leftRunStartBuf
      local.get $var$20
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $var$22
      local.get $var$22
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $var$22
       local.get $leftRunEndBuf
       local.get $var$20
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<u64>
       local.get $var$22
       local.set $startA
       local.get $leftRunStartBuf
       local.get $var$20
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $var$20
      i32.const 1
      i32.sub
      local.set $var$20
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $var$10
  loop $for-loop|4
   local.get $var$10
   i32.const 0
   i32.ne
   local.set $var$20
   local.get $var$20
   if
    local.get $leftRunStartBuf
    local.get $var$10
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$21
    local.get $var$21
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $var$21
     local.get $leftRunEndBuf
     local.get $var$10
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<u64>
    end
    local.get $var$10
    i32.const 1
    i32.sub
    local.set $var$10
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Uint64Array#sort (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Uint64Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<u64>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<u64>~anonymous|0 (param $a i64) (param $b i64) (result i32)
  local.get $a
  local.get $b
  i64.gt_u
  local.get $a
  local.get $b
  i64.lt_u
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint64Array,u64>~anonymous|0 (param $a i64) (param $b i64) (result i32)
  local.get $b
  local.get $a
  i64.gt_u
  local.get $b
  local.get $a
  i64.lt_u
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<f32> (param $ptr i32) (param $left i32) (param $right i32) (param $presorted i32) (param $comparator i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 f32)
  (local $var$9 f32)
  (local $var$10 f32)
  (local $var$11 f32)
  (local $var$12 i32)
  (local $var$13 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $right
  local.get $left
  i32.sub
  i32.const 1
  i32.add
  local.set $var$5
  local.get $left
  local.get $var$5
  i32.const 1
  i32.and
  local.get $presorted
  local.get $var$5
  local.get $presorted
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $presorted
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $var$6
  loop $for-loop|0
   local.get $var$6
   local.get $right
   i32.le_s
   local.set $var$7
   local.get $var$7
   if
    local.get $ptr
    local.get $var$6
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$8
    local.get $ptr
    local.get $var$6
    i32.const 2
    i32.shl
    i32.add
    f32.load $0 offset=4
    local.set $var$9
    local.get $var$9
    local.set $var$10
    local.get $var$8
    local.set $var$11
    local.get $var$8
    local.get $var$9
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $var$8
     local.set $var$10
     local.get $var$9
     local.set $var$11
    end
    local.get $var$6
    i32.const 1
    i32.sub
    local.set $var$12
    block $while-break|1
     loop $while-continue|1
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.set $var$8
       local.get $var$8
       local.get $var$11
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 2
        i32.shl
        i32.add
        local.get $var$8
        f32.store $0 offset=8
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 2
    i32.shl
    i32.add
    local.get $var$11
    f32.store $0 offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $var$12
      local.get $left
      i32.ge_s
      local.set $var$13
      local.get $var$13
      if
       local.get $ptr
       local.get $var$12
       i32.const 2
       i32.shl
       i32.add
       f32.load $0
       local.set $var$8
       local.get $var$8
       local.get $var$10
       i32.const 2
       global.set $~argumentsLength
       local.get $comparator
       i32.load $0
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $ptr
        local.get $var$12
        i32.const 2
        i32.shl
        i32.add
        local.get $var$8
        f32.store $0 offset=4
        local.get $var$12
        i32.const 1
        i32.sub
        local.set $var$12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $ptr
    local.get $var$12
    i32.const 2
    i32.shl
    i32.add
    local.get $var$10
    f32.store $0 offset=4
    local.get $var$6
    i32.const 2
    i32.add
    local.set $var$6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f32> (param $ptr i32) (param $i i32) (param $right i32) (param $comparator i32) (result i32)
  (local $j i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $tmp f32)
  local.get $i
  local.get $right
  i32.eq
  if
   local.get $i
   return
  end
  local.get $i
  local.set $j
  local.get $ptr
  local.get $j
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  local.get $ptr
  local.get $j
  i32.const 1
  i32.add
  local.tee $j
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  i32.const 2
  global.set $~argumentsLength
  local.get $comparator
  i32.load $0
  call_indirect $0 (type $f32_f32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|0
    end
   end
   local.get $j
   local.set $var$5
   loop $while-continue|1
    local.get $i
    local.get $var$5
    i32.lt_s
    local.set $var$6
    local.get $var$6
    if
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     local.set $tmp
     local.get $ptr
     local.get $i
     i32.const 2
     i32.shl
     i32.add
     local.get $ptr
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     f32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
     local.get $ptr
     local.get $var$5
     i32.const 2
     i32.shl
     i32.add
     local.get $tmp
     f32.store $0
     local.get $var$5
     i32.const 1
     i32.sub
     local.set $var$5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $j
    local.get $right
    i32.lt_s
    if (result i32)
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0 offset=4
     local.get $ptr
     local.get $j
     i32.const 2
     i32.shl
     i32.add
     f32.load $0
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $var$5
    local.get $var$5
    if
     local.get $j
     i32.const 1
     i32.add
     local.set $j
     br $while-continue|2
    end
   end
  end
  local.get $j
 )
 (func $~lib/util/sort/mergeRuns<f32> (param $ptr i32) (param $l i32) (param $m i32) (param $r i32) (param $buffer i32) (param $comparator i32)
  (local $i i32)
  (local $j i32)
  (local $t i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 f32)
  (local $var$12 f32)
  local.get $m
  i32.const 1
  i32.sub
  local.set $m
  local.get $r
  local.get $m
  i32.add
  local.set $t
  local.get $m
  i32.const 1
  i32.add
  local.set $i
  loop $for-loop|0
   local.get $i
   local.get $l
   i32.gt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $i
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    f32.store $0
    local.get $i
    i32.const 1
    i32.sub
    local.set $i
    br $for-loop|0
   end
  end
  local.get $m
  local.set $j
  loop $for-loop|1
   local.get $j
   local.get $r
   i32.lt_s
   local.set $var$9
   local.get $var$9
   if
    local.get $buffer
    local.get $t
    local.get $j
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $ptr
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    f32.load $0 offset=4
    f32.store $0
    local.get $j
    i32.const 1
    i32.add
    local.set $j
    br $for-loop|1
   end
  end
  local.get $l
  local.set $var$9
  loop $for-loop|2
   local.get $var$9
   local.get $r
   i32.le_s
   local.set $var$10
   local.get $var$10
   if
    local.get $buffer
    local.get $j
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$11
    local.get $buffer
    local.get $i
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$12
    local.get $var$11
    local.get $var$12
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $ptr
     local.get $var$9
     i32.const 2
     i32.shl
     i32.add
     local.get $var$11
     f32.store $0
     local.get $j
     i32.const 1
     i32.sub
     local.set $j
    else
     local.get $ptr
     local.get $var$9
     i32.const 2
     i32.shl
     i32.add
     local.get $var$12
     f32.store $0
     local.get $i
     i32.const 1
     i32.add
     local.set $i
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<f32> (param $ptr i32) (param $len i32) (param $comparator i32)
  (local $startB i32)
  (local $var$4 f32)
  (local $var$5 f32)
  (local $lgPlus2 i32)
  (local $lgPlus2Size i32)
  (local $leftRunStartBuf i32)
  (local $leftRunEndBuf i32)
  (local $var$10 i32)
  (local $buffer i32)
  (local $hi i32)
  (local $endA i32)
  (local $lenA i32)
  (local $top i32)
  (local $startA i32)
  (local $endB i32)
  (local $lenB i32)
  (local $k i32)
  (local $var$20 i32)
  (local $var$21 i32)
  (local $var$22 i32)
  local.get $len
  i32.const 48
  i32.le_s
  if
   local.get $len
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $len
      local.set $startB
      local.get $startB
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $startB
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $ptr
     f32.load $0
     local.set $var$4
     local.get $ptr
     f32.load $0 offset=4
     local.set $var$5
     local.get $var$4
     local.get $var$5
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$5
     local.get $var$4
     local.get $startB
     select
     f32.store $0
     local.get $var$4
     local.get $var$5
     local.get $startB
     select
     local.set $var$4
     local.get $ptr
     f32.load $0 offset=8
     local.set $var$5
     local.get $var$4
     local.get $var$5
     i32.const 2
     global.set $~argumentsLength
     local.get $comparator
     i32.load $0
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $startB
     local.get $ptr
     local.get $var$5
     local.get $var$4
     local.get $startB
     select
     f32.store $0 offset=4
     local.get $ptr
     local.get $var$4
     local.get $var$5
     local.get $startB
     select
     f32.store $0 offset=8
    end
    local.get $ptr
    f32.load $0
    local.set $var$5
    local.get $ptr
    f32.load $0 offset=4
    local.set $var$4
    local.get $var$5
    local.get $var$4
    i32.const 2
    global.set $~argumentsLength
    local.get $comparator
    i32.load $0
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $startB
    local.get $ptr
    local.get $var$4
    local.get $var$5
    local.get $startB
    select
    f32.store $0
    local.get $ptr
    local.get $var$5
    local.get $var$4
    local.get $startB
    select
    f32.store $0 offset=4
    return
   end
   local.get $ptr
   i32.const 0
   local.get $len
   i32.const 1
   i32.sub
   i32.const 0
   local.get $comparator
   call $~lib/util/sort/insertionSort<f32>
   return
  end
  local.get $len
  local.set $startB
  i32.const 31
  local.get $startB
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $lgPlus2
  local.get $lgPlus2
  i32.const 2
  i32.shl
  local.set $lgPlus2Size
  local.get $lgPlus2Size
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $leftRunStartBuf
  local.get $leftRunStartBuf
  local.get $lgPlus2Size
  i32.add
  local.set $leftRunEndBuf
  i32.const 0
  local.set $startB
  loop $for-loop|1
   local.get $startB
   local.get $lgPlus2
   i32.lt_u
   local.set $var$10
   local.get $var$10
   if
    local.get $leftRunStartBuf
    local.get $startB
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store $0
    local.get $startB
    i32.const 1
    i32.add
    local.set $startB
    br $for-loop|1
   end
  end
  local.get $len
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $buffer
  local.get $len
  i32.const 1
  i32.sub
  local.set $hi
  local.get $ptr
  i32.const 0
  local.get $hi
  local.get $comparator
  call $~lib/util/sort/extendRunRight<f32>
  local.set $endA
  local.get $endA
  i32.const 1
  i32.add
  local.set $lenA
  local.get $lenA
  i32.const 32
  i32.lt_s
  if
   local.get $hi
   local.tee $var$10
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $startB
   local.get $var$10
   local.get $startB
   i32.lt_s
   select
   local.set $endA
   local.get $ptr
   i32.const 0
   local.get $endA
   local.get $lenA
   local.get $comparator
   call $~lib/util/sort/insertionSort<f32>
  end
  i32.const 0
  local.set $top
  i32.const 0
  local.set $startA
  loop $while-continue|2
   local.get $endA
   local.get $hi
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $endA
    i32.const 1
    i32.add
    local.set $startB
    local.get $ptr
    local.get $startB
    local.get $hi
    local.get $comparator
    call $~lib/util/sort/extendRunRight<f32>
    local.set $endB
    local.get $endB
    local.get $startB
    i32.sub
    i32.const 1
    i32.add
    local.set $lenB
    local.get $lenB
    i32.const 32
    i32.lt_s
    if
     local.get $hi
     local.tee $k
     local.get $startB
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $var$20
     local.get $k
     local.get $var$20
     i32.lt_s
     select
     local.set $endB
     local.get $ptr
     local.get $startB
     local.get $endB
     local.get $lenB
     local.get $comparator
     call $~lib/util/sort/insertionSort<f32>
    end
    i32.const 0
    local.get $hi
    local.get $startA
    local.get $startB
    local.get $endB
    call $~lib/util/sort/nodePower
    local.set $k
    local.get $top
    local.set $var$20
    loop $for-loop|3
     local.get $var$20
     local.get $k
     i32.gt_u
     local.set $var$21
     local.get $var$21
     if
      local.get $leftRunStartBuf
      local.get $var$20
      i32.const 2
      i32.shl
      i32.add
      i32.load $0
      local.set $var$22
      local.get $var$22
      i32.const -1
      i32.ne
      if
       local.get $ptr
       local.get $var$22
       local.get $leftRunEndBuf
       local.get $var$20
       i32.const 2
       i32.shl
       i32.add
       i32.load $0
       i32.const 1
       i32.add
       local.get $endA
       local.get $buffer
       local.get $comparator
       call $~lib/util/sort/mergeRuns<f32>
       local.get $var$22
       local.set $startA
       local.get $leftRunStartBuf
       local.get $var$20
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store $0
      end
      local.get $var$20
      i32.const 1
      i32.sub
      local.set $var$20
      br $for-loop|3
     end
    end
    local.get $leftRunStartBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $startA
    i32.store $0
    local.get $leftRunEndBuf
    local.get $k
    i32.const 2
    i32.shl
    i32.add
    local.get $endA
    i32.store $0
    local.get $startB
    local.set $startA
    local.get $endB
    local.set $endA
    local.get $k
    local.set $top
    br $while-continue|2
   end
  end
  local.get $top
  local.set $var$10
  loop $for-loop|4
   local.get $var$10
   i32.const 0
   i32.ne
   local.set $var$20
   local.get $var$20
   if
    local.get $leftRunStartBuf
    local.get $var$10
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$21
    local.get $var$21
    i32.const -1
    i32.ne
    if
     local.get $ptr
     local.get $var$21
     local.get $leftRunEndBuf
     local.get $var$10
     i32.const 2
     i32.shl
     i32.add
     i32.load $0
     i32.const 1
     i32.add
     local.get $hi
     local.get $buffer
     local.get $comparator
     call $~lib/util/sort/mergeRuns<f32>
    end
    local.get $var$10
    i32.const 1
    i32.sub
    local.set $var$10
    br $for-loop|4
   end
  end
  local.get $buffer
  call $~lib/rt/tlsf/__free
  local.get $leftRunStartBuf
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/typedarray/Float32Array#sort (param $this i32) (param $comparator i32) (result i32)
  local.get $this
  i32.load $0 offset=4
  local.get $this
  call $~lib/typedarray/Float32Array#get:length
  local.get $comparator
  call $~lib/util/sort/SORT<f32>
  local.get $this
 )
 (func $~lib/util/sort/COMPARATOR<f32>~anonymous|0 (param $a f32) (param $b f32) (result i32)
  (local $ia i32)
  (local $ib i32)
  local.get $a
  i32.reinterpret_f32
  local.set $ia
  local.get $b
  i32.reinterpret_f32
  local.set $ib
  local.get $ia
  local.get $ia
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  i32.xor
  local.set $ia
  local.get $ib
  local.get $ib
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  i32.xor
  local.set $ib
  local.get $ia
  local.get $ib
  i32.gt_s
  local.get $ia
  local.get $ib
  i32.lt_s
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Float32Array,f32>~anonymous|0 (param $a f32) (param $b f32) (result i32)
  local.get $b
  local.get $a
  f32.gt
  local.get $b
  local.get $a
  f32.lt
  i32.sub
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Float64Array,f64>~anonymous|0 (param $a f64) (param $b f64) (result i32)
  local.get $b
  local.get $a
  f64.gt
  local.get $b
  local.get $a
  f64.lt
  i32.sub
 )
 (func $~lib/rt/itcms/__collect
  (local $var$0 i32)
  i32.const 0
  drop
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    i32.const 0
    i32.ne
    local.set $var$0
    local.get $var$0
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.ne
   local.set $var$0
   local.get $var$0
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i32.const 200
  i64.extend_i32_u
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
  i32.const 0
  drop
 )
 (func $~lib/rt/__visit_globals (param $0 i32)
  (local $1 i32)
  global.get $std/typedarray/forEachValues
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/typedarray/testArrayReverseValues
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/typedarray/testArrayIndexOfAndLastIndexOfValues
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/typedarray/testArrayWrapValues
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/typedarray/setSource1
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/typedarray/setSource2
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/typedarray/setSource3
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/typedarray/setSource7
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 336
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 32
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 144
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 7408
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 8464
  local.get $0
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/arraybuffer/ArrayBufferView~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.load $0
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/typedarray/Int8Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Uint8Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Uint8ClampedArray~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Int16Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Uint16Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Int32Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Uint32Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Int64Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Uint64Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Float32Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/typedarray/Float64Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>i32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Cf64%29=>i32>#__visit
 )
 (func $~lib/array/Array<i8>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i8>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i8>#__visit
 )
 (func $~lib/array/Array<i32>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#__visit
 )
 (func $~lib/function/Function<%28i8%2Ci8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i8%2Ci8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i8%2Ci8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>#__visit
 )
 (func $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>#__visit
 )
 (func $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>#__visit
 )
 (func $~lib/function/Function<%28i16%2Ci16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i16%2Ci16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i16%2Ci16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>#__visit
 )
 (func $~lib/function/Function<%28u16%2Cu16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u16%2Cu16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u16%2Cu16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28u32%2Cu32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u32%2Cu32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u32%2Cu32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>#__visit
 )
 (func $~lib/function/Function<%28i64%2Ci64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i64%2Ci64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i64%2Ci64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>#__visit
 )
 (func $~lib/function/Function<%28u64%2Cu64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u64%2Cu64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u64%2Cu64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>#__visit
 )
 (func $~lib/function/Function<%28f32%2Cf32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f32%2Cf32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f32%2Cf32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>#__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Cf64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>#__visit
 )
 (func $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>#__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>#__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>#__visit
 )
 (func $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>#__visit
 )
 (func $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>#__visit
 )
 (func $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>#__visit
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>#__visit
 )
 (func $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>#__visit
 )
 (func $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>#__visit
 )
 (func $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>bool>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>bool>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>bool>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>bool>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>bool>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>bool>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>bool>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>bool>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>bool>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>bool>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>bool>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>void>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>void>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>void>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>void>#__visit
 )
 (func $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>void>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>void>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>void>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>void>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>void>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>void>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>void>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>void>#__visit
 )
 (func $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>void>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>void>#__visit
 )
 (func $~lib/array/Array<f32>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<f32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<f32>#__visit
 )
 (func $~lib/array/Array<f64>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<f64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<f64>#__visit
 )
 (func $~lib/array/Array<u8>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u8>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u8>#__visit
 )
 (func $~lib/array/Array<i16>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i16>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i16>#__visit
 )
 (func $~lib/array/Array<u16>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u16>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u16>#__visit
 )
 (func $~lib/array/Array<u32>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u32>#__visit
 )
 (func $~lib/array/Array<i64>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i64>#__visit
 )
 (func $~lib/array/Array<u64>#__visit (param $this i32) (param $cookie i32)
  i32.const 0
  drop
  local.get $this
  i32.load $0
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u64>#__visit
 )
 (func $~lib/function/Function<%28i8%2Ci8%29=>i32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i8%2Ci8%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i8%2Ci8%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28u8%2Cu8%29=>i32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u8%2Cu8%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u8%2Cu8%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28i16%2Ci16%29=>i32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i16%2Ci16%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i16%2Ci16%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28u16%2Cu16%29=>i32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u16%2Cu16%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u16%2Cu16%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%29=>i32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28u32%2Cu32%29=>i32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u32%2Cu32%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u32%2Cu32%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28i64%2Ci64%29=>i32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i64%2Ci64%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i64%2Ci64%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28u64%2Cu64%29=>i32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u64%2Cu64%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u64%2Cu64%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28f32%2Cf32%29=>i32>#__visit (param $this i32) (param $cookie i32)
  local.get $this
  i32.load $0 offset=4
  local.get $cookie
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f32%2Cf32%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f32%2Cf32%29=>i32>#__visit
 )
 (func $~lib/rt/__visit_members (param $0 i32) (param $1 i32)
  block $invalid
   block $~lib/function/Function<%28f32%2Cf32%29=>i32>
    block $~lib/function/Function<%28u64%2Cu64%29=>i32>
     block $~lib/function/Function<%28i64%2Ci64%29=>i32>
      block $~lib/function/Function<%28u32%2Cu32%29=>i32>
       block $~lib/function/Function<%28i32%2Ci32%29=>i32>
        block $~lib/function/Function<%28u16%2Cu16%29=>i32>
         block $~lib/function/Function<%28i16%2Ci16%29=>i32>
          block $~lib/function/Function<%28u8%2Cu8%29=>i32>
           block $~lib/function/Function<%28i8%2Ci8%29=>i32>
            block $~lib/array/Array<u64>
             block $~lib/array/Array<i64>
              block $~lib/array/Array<u32>
               block $~lib/array/Array<u16>
                block $~lib/array/Array<i16>
                 block $~lib/array/Array<u8>
                  block $~lib/array/Array<f64>
                   block $~lib/array/Array<f32>
                    block $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>void>
                     block $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>void>
                      block $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>void>
                       block $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>void>
                        block $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>void>
                         block $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>void>
                          block $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>void>
                           block $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>void>
                            block $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>void>
                             block $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>void>
                              block $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>void>
                               block $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>bool>
                                block $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>bool>
                                 block $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>bool>
                                  block $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>bool>
                                   block $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>bool>
                                    block $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>bool>
                                     block $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>bool>
                                      block $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>bool>
                                       block $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>bool>
                                        block $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>bool>
                                         block $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>bool>
                                          block $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>
                                           block $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>
                                            block $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>
                                             block $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>
                                              block $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>
                                               block $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>
                                                block $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>
                                                 block $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>
                                                  block $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>
                                                   block $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>
                                                    block $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>
                                                     block $~lib/function/Function<%28f64%2Cf64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>
                                                      block $~lib/function/Function<%28f32%2Cf32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>
                                                       block $~lib/function/Function<%28u64%2Cu64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>
                                                        block $~lib/function/Function<%28i64%2Ci64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>
                                                         block $~lib/function/Function<%28u32%2Cu32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>
                                                          block $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>
                                                           block $~lib/function/Function<%28u16%2Cu16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>
                                                            block $~lib/function/Function<%28i16%2Ci16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>
                                                             block $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>
                                                              block $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>
                                                               block $~lib/function/Function<%28i8%2Ci8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>
                                                                block $~lib/array/Array<i32>
                                                                 block $~lib/array/Array<i8>
                                                                  block $~lib/function/Function<%28f64%2Cf64%29=>i32>
                                                                   block $~lib/typedarray/Float64Array
                                                                    block $~lib/typedarray/Float32Array
                                                                     block $~lib/typedarray/Uint64Array
                                                                      block $~lib/typedarray/Int64Array
                                                                       block $~lib/typedarray/Uint32Array
                                                                        block $~lib/typedarray/Int32Array
                                                                         block $~lib/typedarray/Uint16Array
                                                                          block $~lib/typedarray/Int16Array
                                                                           block $~lib/typedarray/Uint8ClampedArray
                                                                            block $~lib/typedarray/Uint8Array
                                                                             block $~lib/typedarray/Int8Array
                                                                              block $~lib/arraybuffer/ArrayBufferView
                                                                               block $~lib/string/String
                                                                                block $~lib/arraybuffer/ArrayBuffer
                                                                                 local.get $0
                                                                                 i32.const 8
                                                                                 i32.sub
                                                                                 i32.load $0
                                                                                 br_table $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $~lib/typedarray/Int8Array $~lib/typedarray/Uint8Array $~lib/typedarray/Uint8ClampedArray $~lib/typedarray/Int16Array $~lib/typedarray/Uint16Array $~lib/typedarray/Int32Array $~lib/typedarray/Uint32Array $~lib/typedarray/Int64Array $~lib/typedarray/Uint64Array $~lib/typedarray/Float32Array $~lib/typedarray/Float64Array $~lib/function/Function<%28f64%2Cf64%29=>i32> $~lib/array/Array<i8> $~lib/array/Array<i32> $~lib/function/Function<%28i8%2Ci8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8> $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8> $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8> $~lib/function/Function<%28i16%2Ci16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16> $~lib/function/Function<%28u16%2Cu16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16> $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32> $~lib/function/Function<%28u32%2Cu32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32> $~lib/function/Function<%28i64%2Ci64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64> $~lib/function/Function<%28u64%2Cu64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64> $~lib/function/Function<%28f32%2Cf32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32> $~lib/function/Function<%28f64%2Cf64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64> $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8> $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8> $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8> $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16> $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16> $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32> $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32> $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64> $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64> $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32> $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64> $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>bool> $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>bool> $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>bool> $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>bool> $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>bool> $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>bool> $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>bool> $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>bool> $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>bool> $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>bool> $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>bool> $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>void> $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>void> $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>void> $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>void> $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>void> $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>void> $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>void> $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>void> $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>void> $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>void> $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>void> $~lib/array/Array<f32> $~lib/array/Array<f64> $~lib/array/Array<u8> $~lib/array/Array<i16> $~lib/array/Array<u16> $~lib/array/Array<u32> $~lib/array/Array<i64> $~lib/array/Array<u64> $~lib/function/Function<%28i8%2Ci8%29=>i32> $~lib/function/Function<%28u8%2Cu8%29=>i32> $~lib/function/Function<%28i16%2Ci16%29=>i32> $~lib/function/Function<%28u16%2Cu16%29=>i32> $~lib/function/Function<%28i32%2Ci32%29=>i32> $~lib/function/Function<%28u32%2Cu32%29=>i32> $~lib/function/Function<%28i64%2Ci64%29=>i32> $~lib/function/Function<%28u64%2Cu64%29=>i32> $~lib/function/Function<%28f32%2Cf32%29=>i32> $invalid
                                                                                end
                                                                                return
                                                                               end
                                                                               return
                                                                              end
                                                                              local.get $0
                                                                              local.get $1
                                                                              call $~lib/arraybuffer/ArrayBufferView~visit
                                                                              return
                                                                             end
                                                                             local.get $0
                                                                             local.get $1
                                                                             call $~lib/typedarray/Int8Array~visit
                                                                             return
                                                                            end
                                                                            local.get $0
                                                                            local.get $1
                                                                            call $~lib/typedarray/Uint8Array~visit
                                                                            return
                                                                           end
                                                                           local.get $0
                                                                           local.get $1
                                                                           call $~lib/typedarray/Uint8ClampedArray~visit
                                                                           return
                                                                          end
                                                                          local.get $0
                                                                          local.get $1
                                                                          call $~lib/typedarray/Int16Array~visit
                                                                          return
                                                                         end
                                                                         local.get $0
                                                                         local.get $1
                                                                         call $~lib/typedarray/Uint16Array~visit
                                                                         return
                                                                        end
                                                                        local.get $0
                                                                        local.get $1
                                                                        call $~lib/typedarray/Int32Array~visit
                                                                        return
                                                                       end
                                                                       local.get $0
                                                                       local.get $1
                                                                       call $~lib/typedarray/Uint32Array~visit
                                                                       return
                                                                      end
                                                                      local.get $0
                                                                      local.get $1
                                                                      call $~lib/typedarray/Int64Array~visit
                                                                      return
                                                                     end
                                                                     local.get $0
                                                                     local.get $1
                                                                     call $~lib/typedarray/Uint64Array~visit
                                                                     return
                                                                    end
                                                                    local.get $0
                                                                    local.get $1
                                                                    call $~lib/typedarray/Float32Array~visit
                                                                    return
                                                                   end
                                                                   local.get $0
                                                                   local.get $1
                                                                   call $~lib/typedarray/Float64Array~visit
                                                                   return
                                                                  end
                                                                  local.get $0
                                                                  local.get $1
                                                                  call $~lib/function/Function<%28f64%2Cf64%29=>i32>~visit
                                                                  return
                                                                 end
                                                                 local.get $0
                                                                 local.get $1
                                                                 call $~lib/array/Array<i8>~visit
                                                                 return
                                                                end
                                                                local.get $0
                                                                local.get $1
                                                                call $~lib/array/Array<i32>~visit
                                                                return
                                                               end
                                                               local.get $0
                                                               local.get $1
                                                               call $~lib/function/Function<%28i8%2Ci8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>~visit
                                                               return
                                                              end
                                                              local.get $0
                                                              local.get $1
                                                              call $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>~visit
                                                              return
                                                             end
                                                             local.get $0
                                                             local.get $1
                                                             call $~lib/function/Function<%28u8%2Cu8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>~visit
                                                             return
                                                            end
                                                            local.get $0
                                                            local.get $1
                                                            call $~lib/function/Function<%28i16%2Ci16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>~visit
                                                            return
                                                           end
                                                           local.get $0
                                                           local.get $1
                                                           call $~lib/function/Function<%28u16%2Cu16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>~visit
                                                           return
                                                          end
                                                          local.get $0
                                                          local.get $1
                                                          call $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>~visit
                                                          return
                                                         end
                                                         local.get $0
                                                         local.get $1
                                                         call $~lib/function/Function<%28u32%2Cu32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>~visit
                                                         return
                                                        end
                                                        local.get $0
                                                        local.get $1
                                                        call $~lib/function/Function<%28i64%2Ci64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>~visit
                                                        return
                                                       end
                                                       local.get $0
                                                       local.get $1
                                                       call $~lib/function/Function<%28u64%2Cu64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>~visit
                                                       return
                                                      end
                                                      local.get $0
                                                      local.get $1
                                                      call $~lib/function/Function<%28f32%2Cf32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>~visit
                                                      return
                                                     end
                                                     local.get $0
                                                     local.get $1
                                                     call $~lib/function/Function<%28f64%2Cf64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>~visit
                                                     return
                                                    end
                                                    local.get $0
                                                    local.get $1
                                                    call $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>i8>~visit
                                                    return
                                                   end
                                                   local.get $0
                                                   local.get $1
                                                   call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>u8>~visit
                                                   return
                                                  end
                                                  local.get $0
                                                  local.get $1
                                                  call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>u8>~visit
                                                  return
                                                 end
                                                 local.get $0
                                                 local.get $1
                                                 call $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>i16>~visit
                                                 return
                                                end
                                                local.get $0
                                                local.get $1
                                                call $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>u16>~visit
                                                return
                                               end
                                               local.get $0
                                               local.get $1
                                               call $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>i32>~visit
                                               return
                                              end
                                              local.get $0
                                              local.get $1
                                              call $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>u32>~visit
                                              return
                                             end
                                             local.get $0
                                             local.get $1
                                             call $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>i64>~visit
                                             return
                                            end
                                            local.get $0
                                            local.get $1
                                            call $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>u64>~visit
                                            return
                                           end
                                           local.get $0
                                           local.get $1
                                           call $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>f32>~visit
                                           return
                                          end
                                          local.get $0
                                          local.get $1
                                          call $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>f64>~visit
                                          return
                                         end
                                         local.get $0
                                         local.get $1
                                         call $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>bool>~visit
                                         return
                                        end
                                        local.get $0
                                        local.get $1
                                        call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>bool>~visit
                                        return
                                       end
                                       local.get $0
                                       local.get $1
                                       call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>bool>~visit
                                       return
                                      end
                                      local.get $0
                                      local.get $1
                                      call $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>bool>~visit
                                      return
                                     end
                                     local.get $0
                                     local.get $1
                                     call $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>bool>~visit
                                     return
                                    end
                                    local.get $0
                                    local.get $1
                                    call $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>bool>~visit
                                    return
                                   end
                                   local.get $0
                                   local.get $1
                                   call $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>bool>~visit
                                   return
                                  end
                                  local.get $0
                                  local.get $1
                                  call $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>bool>~visit
                                  return
                                 end
                                 local.get $0
                                 local.get $1
                                 call $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>bool>~visit
                                 return
                                end
                                local.get $0
                                local.get $1
                                call $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>bool>~visit
                                return
                               end
                               local.get $0
                               local.get $1
                               call $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>bool>~visit
                               return
                              end
                              local.get $0
                              local.get $1
                              call $~lib/function/Function<%28i8%2Ci32%2C~lib/typedarray/Int8Array%29=>void>~visit
                              return
                             end
                             local.get $0
                             local.get $1
                             call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8Array%29=>void>~visit
                             return
                            end
                            local.get $0
                            local.get $1
                            call $~lib/function/Function<%28u8%2Ci32%2C~lib/typedarray/Uint8ClampedArray%29=>void>~visit
                            return
                           end
                           local.get $0
                           local.get $1
                           call $~lib/function/Function<%28i16%2Ci32%2C~lib/typedarray/Int16Array%29=>void>~visit
                           return
                          end
                          local.get $0
                          local.get $1
                          call $~lib/function/Function<%28u16%2Ci32%2C~lib/typedarray/Uint16Array%29=>void>~visit
                          return
                         end
                         local.get $0
                         local.get $1
                         call $~lib/function/Function<%28i32%2Ci32%2C~lib/typedarray/Int32Array%29=>void>~visit
                         return
                        end
                        local.get $0
                        local.get $1
                        call $~lib/function/Function<%28u32%2Ci32%2C~lib/typedarray/Uint32Array%29=>void>~visit
                        return
                       end
                       local.get $0
                       local.get $1
                       call $~lib/function/Function<%28i64%2Ci32%2C~lib/typedarray/Int64Array%29=>void>~visit
                       return
                      end
                      local.get $0
                      local.get $1
                      call $~lib/function/Function<%28u64%2Ci32%2C~lib/typedarray/Uint64Array%29=>void>~visit
                      return
                     end
                     local.get $0
                     local.get $1
                     call $~lib/function/Function<%28f32%2Ci32%2C~lib/typedarray/Float32Array%29=>void>~visit
                     return
                    end
                    local.get $0
                    local.get $1
                    call $~lib/function/Function<%28f64%2Ci32%2C~lib/typedarray/Float64Array%29=>void>~visit
                    return
                   end
                   local.get $0
                   local.get $1
                   call $~lib/array/Array<f32>~visit
                   return
                  end
                  local.get $0
                  local.get $1
                  call $~lib/array/Array<f64>~visit
                  return
                 end
                 local.get $0
                 local.get $1
                 call $~lib/array/Array<u8>~visit
                 return
                end
                local.get $0
                local.get $1
                call $~lib/array/Array<i16>~visit
                return
               end
               local.get $0
               local.get $1
               call $~lib/array/Array<u16>~visit
               return
              end
              local.get $0
              local.get $1
              call $~lib/array/Array<u32>~visit
              return
             end
             local.get $0
             local.get $1
             call $~lib/array/Array<i64>~visit
             return
            end
            local.get $0
            local.get $1
            call $~lib/array/Array<u64>~visit
            return
           end
           local.get $0
           local.get $1
           call $~lib/function/Function<%28i8%2Ci8%29=>i32>~visit
           return
          end
          local.get $0
          local.get $1
          call $~lib/function/Function<%28u8%2Cu8%29=>i32>~visit
          return
         end
         local.get $0
         local.get $1
         call $~lib/function/Function<%28i16%2Ci16%29=>i32>~visit
         return
        end
        local.get $0
        local.get $1
        call $~lib/function/Function<%28u16%2Cu16%29=>i32>~visit
        return
       end
       local.get $0
       local.get $1
       call $~lib/function/Function<%28i32%2Ci32%29=>i32>~visit
       return
      end
      local.get $0
      local.get $1
      call $~lib/function/Function<%28u32%2Cu32%29=>i32>~visit
      return
     end
     local.get $0
     local.get $1
     call $~lib/function/Function<%28i64%2Ci64%29=>i32>~visit
     return
    end
    local.get $0
    local.get $1
    call $~lib/function/Function<%28u64%2Cu64%29=>i32>~visit
    return
   end
   local.get $0
   local.get $1
   call $~lib/function/Function<%28f32%2Cf32%29=>i32>~visit
   return
  end
  unreachable
 )
 (func $~start
  call $start:std/typedarray
 )
 (func $~stack_check
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__data_end
  i32.lt_s
  if
   i32.const 32016
   i32.const 32064
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int8Array,i8>
  (local $array i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 1872
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Int8Array#reduce<i8>
  local.set $result
  local.get $result
  i32.extend8_s
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 323
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint8Array,u8>
  (local $array i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 1904
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Uint8Array#reduce<u8>
  local.set $result
  local.get $result
  i32.const 255
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 323
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint8ClampedArray,u8>
  (local $array i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 1936
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#reduce<u8>
  local.set $result
  local.get $result
  i32.const 255
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 323
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int16Array,i16>
  (local $array i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 1968
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Int16Array#reduce<i16>
  local.set $result
  local.get $result
  i32.extend16_s
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 323
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint16Array,u16>
  (local $array i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 2000
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Uint16Array#reduce<u16>
  local.set $result
  local.get $result
  i32.const 65535
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 323
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int32Array,i32>
  (local $array i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 2032
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Int32Array#reduce<i32>
  local.set $result
  local.get $result
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 323
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint32Array,u32>
  (local $array i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 2064
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Uint32Array#reduce<u32>
  local.set $result
  local.get $result
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 323
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Int64Array,i64>
  (local $array i32)
  (local $result i64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 2096
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i64.const 0
  call $~lib/typedarray/Int64Array#reduce<i64>
  local.set $result
  local.get $result
  i64.const 6
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 323
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Uint64Array,u64>
  (local $array i32)
  (local $result i64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 2128
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i64.const 0
  call $~lib/typedarray/Uint64Array#reduce<u64>
  local.set $result
  local.get $result
  i64.const 6
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 323
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Float32Array,f32>
  (local $array i32)
  (local $result f32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 2160
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  f32.const 0
  call $~lib/typedarray/Float32Array#reduce<f32>
  local.set $result
  local.get $result
  f32.const 6
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 323
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduce<~lib/typedarray/Float64Array,f64>
  (local $array i32)
  (local $result f64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 2192
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  f64.const 0
  call $~lib/typedarray/Float64Array#reduce<f64>
  local.set $result
  local.get $result
  f64.const 6
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 323
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int8Array,i8>
  (local $array i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 2224
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Int8Array#reduceRight<i8>
  local.set $result
  local.get $result
  i32.extend8_s
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 367
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint8Array,u8>
  (local $array i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 2256
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Uint8Array#reduceRight<u8>
  local.set $result
  local.get $result
  i32.const 255
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 367
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint8ClampedArray,u8>
  (local $array i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 2288
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#reduceRight<u8>
  local.set $result
  local.get $result
  i32.const 255
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 367
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int16Array,i16>
  (local $array i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 2320
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Int16Array#reduceRight<i16>
  local.set $result
  local.get $result
  i32.extend16_s
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 367
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint16Array,u16>
  (local $array i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 2352
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Uint16Array#reduceRight<u16>
  local.set $result
  local.get $result
  i32.const 65535
  i32.and
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 367
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int32Array,i32>
  (local $array i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 2384
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Int32Array#reduceRight<i32>
  local.set $result
  local.get $result
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 367
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint32Array,u32>
  (local $array i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 2416
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i32.const 0
  call $~lib/typedarray/Uint32Array#reduceRight<u32>
  local.set $result
  local.get $result
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 367
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Int64Array,i64>
  (local $array i32)
  (local $result i64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 2448
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i64.const 0
  call $~lib/typedarray/Int64Array#reduceRight<i64>
  local.set $result
  local.get $result
  i64.const 6
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 367
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Uint64Array,u64>
  (local $array i32)
  (local $result i64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 2480
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  i64.const 0
  call $~lib/typedarray/Uint64Array#reduceRight<u64>
  local.set $result
  local.get $result
  i64.const 6
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 367
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Float32Array,f32>
  (local $array i32)
  (local $result f32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 2512
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  f32.const 0
  call $~lib/typedarray/Float32Array#reduceRight<f32>
  local.set $result
  local.get $result
  f32.const 6
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 367
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testReduceRight<~lib/typedarray/Float64Array,f64>
  (local $array i32)
  (local $result f64)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 2544
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  f64.const 0
  call $~lib/typedarray/Float64Array#reduceRight<f64>
  local.set $result
  local.get $result
  f64.const 6
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 367
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int8Array,i8>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 2576
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Int8Array#map
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 388
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 389
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 390
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint8Array,u8>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 2608
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Uint8Array#map
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 388
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 389
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 390
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint8ClampedArray,u8>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 2640
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Uint8ClampedArray#map
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 388
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 389
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 390
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int16Array,i16>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 2672
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Int16Array#map
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 388
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 389
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 390
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint16Array,u16>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 2704
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Uint16Array#map
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 388
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 389
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 390
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int32Array,i32>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 2736
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Int32Array#map
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 388
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 389
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 390
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint32Array,u32>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 2768
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Uint32Array#map
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 388
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 389
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 9
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 390
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Int64Array,i64>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 2800
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Int64Array#map
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 388
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 4
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 389
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 9
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 390
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Uint64Array,u64>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 2832
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Uint64Array#map
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 388
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 4
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 389
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 9
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 390
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Float32Array,f32>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 2864
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Float32Array#map
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 1
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 388
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 4
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 389
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 9
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 390
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayMap<~lib/typedarray/Float64Array,f64>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 2896
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Float64Array#map
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 1
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 388
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 4
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 389
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 9
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 390
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int8Array,i8>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int8Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Int8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 2928
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Int8Array#filter
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 413
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  call $~lib/typedarray/Int8Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 414
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 415
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 416
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 417
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint8Array,u8>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 2960
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Uint8Array#filter
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 413
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 414
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 415
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 416
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 417
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint8ClampedArray,u8>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Uint8ClampedArray#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 2992
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Uint8ClampedArray#filter
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 413
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  call $~lib/typedarray/Uint8ClampedArray#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 414
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 415
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 416
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 417
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int16Array,i16>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int16Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 3024
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Int16Array#filter
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 413
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  call $~lib/typedarray/Int16Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 414
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 415
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 416
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 417
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint16Array,u16>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Uint16Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 3056
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Uint16Array#filter
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 413
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  call $~lib/typedarray/Uint16Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 414
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 415
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 416
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 417
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int32Array,i32>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Int32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 3088
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Int32Array#filter
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 413
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  call $~lib/typedarray/Int32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 414
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 415
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 416
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 417
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint32Array,u32>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 5
  i32.const 5
  call $~lib/typedarray/Uint32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 3120
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Uint32Array#filter
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 413
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  call $~lib/typedarray/Uint32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 414
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 415
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 416
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 417
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Int64Array,i64>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 3
  i64.const 4
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 5
  i64.const 5
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 3152
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Int64Array#filter
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 413
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  call $~lib/typedarray/Int64Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 414
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 415
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 4
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 416
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 5
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 417
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Uint64Array,u64>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 3
  i64.const 4
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 5
  i64.const 5
  call $~lib/typedarray/Uint64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 3184
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Uint64Array#filter
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 413
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  call $~lib/typedarray/Uint64Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 414
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 415
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 4
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 416
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 5
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 417
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Float32Array,f32>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Float32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 3
  f32.const 4
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 5
  f32.const 5
  call $~lib/typedarray/Float32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 3216
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Float32Array#filter
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 413
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  call $~lib/typedarray/Float32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 414
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 3
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 415
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 4
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 416
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 5
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 417
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFilter<~lib/typedarray/Float64Array,f64>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Float64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 3
  f64.const 4
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 5
  f64.const 5
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 3248
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=4
  local.get $2
  call $~lib/typedarray/Float64Array#filter
  local.tee $result
  i32.store $0 offset=8
  local.get $result
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 413
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  call $~lib/typedarray/Float64Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 414
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 3
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 415
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 4
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 416
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 5
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 417
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int8Array,i8>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 3280
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int8Array#some
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 438
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 3312
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int8Array#some
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 440
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint8Array,u8>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 3344
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8Array#some
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 438
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 3376
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8Array#some
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 440
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint8ClampedArray,u8>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 3408
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8ClampedArray#some
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 438
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 3440
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8ClampedArray#some
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 440
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int16Array,i16>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 3472
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int16Array#some
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 438
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 3504
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int16Array#some
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 440
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint16Array,u16>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 3536
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint16Array#some
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 438
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 3568
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint16Array#some
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 440
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int32Array,i32>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 3600
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int32Array#some
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 438
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 3632
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int32Array#some
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 440
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint32Array,u32>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 3664
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint32Array#some
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 438
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 3696
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint32Array#some
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 440
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Int64Array,i64>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 1
  i64.const 4
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 2
  i64.const 6
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 3728
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int64Array#some
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 438
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 3760
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int64Array#some
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 440
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Uint64Array,u64>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 1
  i64.const 4
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 2
  i64.const 6
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 3792
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint64Array#some
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 438
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 3824
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint64Array#some
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 440
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Float32Array,f32>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 1
  f32.const 4
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 2
  f32.const 6
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 3856
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float32Array#some
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 438
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 3888
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float32Array#some
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 440
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySome<~lib/typedarray/Float64Array,f64>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 1
  f64.const 4
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 2
  f64.const 6
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 3920
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float64Array#some
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 438
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 3952
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float64Array#some
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 440
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int8Array,i8>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 3984
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int8Array#findIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 461
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4016
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int8Array#findIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 463
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8Array,u8>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 4048
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8Array#findIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 461
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4080
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8Array#findIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 463
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8ClampedArray,u8>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 4112
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8ClampedArray#findIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 461
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4144
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8ClampedArray#findIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 463
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int16Array,i16>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 4176
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int16Array#findIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 461
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4208
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int16Array#findIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 463
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint16Array,u16>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 4240
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint16Array#findIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 461
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4272
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint16Array#findIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 463
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int32Array,i32>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 4304
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int32Array#findIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 461
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4336
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int32Array#findIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 463
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint32Array,u32>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 4368
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint32Array#findIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 461
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4400
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint32Array#findIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 463
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Int64Array,i64>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 4432
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int64Array#findIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 461
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4464
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int64Array#findIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 463
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint64Array,u64>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 4496
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint64Array#findIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 461
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4528
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint64Array#findIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 463
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Float32Array,f32>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 4560
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float32Array#findIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 461
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4592
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float32Array#findIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 463
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindIndex<~lib/typedarray/Float64Array,f64>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 4624
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float64Array#findIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 461
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4656
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float64Array#findIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 463
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int8Array,i8>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 4688
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int8Array#findLastIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 484
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4720
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int8Array#findLastIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 486
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8Array,u8>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 4752
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8Array#findLastIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 484
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4784
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8Array#findLastIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 486
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8ClampedArray,u8>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 4816
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8ClampedArray#findLastIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 484
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4848
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8ClampedArray#findLastIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 486
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int16Array,i16>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 4880
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int16Array#findLastIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 484
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4912
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int16Array#findLastIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 486
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint16Array,u16>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 4944
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint16Array#findLastIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 484
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 4976
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint16Array#findLastIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 486
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int32Array,i32>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 5008
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int32Array#findLastIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 484
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5040
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int32Array#findLastIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 486
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint32Array,u32>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 5072
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint32Array#findLastIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 484
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5104
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint32Array#findLastIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 486
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int64Array,i64>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 5136
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int64Array#findLastIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 484
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5168
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int64Array#findLastIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 486
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint64Array,u64>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 5200
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint64Array#findLastIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 484
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5232
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint64Array#findLastIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 486
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float32Array,f32>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 5264
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float32Array#findLastIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 484
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5296
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float32Array#findLastIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 486
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float64Array,f64>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 5328
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float64Array#findLastIndex
  local.set $result
  local.get $result
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 484
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5360
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float64Array#findLastIndex
  local.set $failResult
  local.get $failResult
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 486
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int8Array,i8>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 5392
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int8Array#every
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 507
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5424
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int8Array#every
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 509
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint8Array,u8>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 5456
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8Array#every
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 507
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5488
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8Array#every
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 509
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint8ClampedArray,u8>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 5520
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8ClampedArray#every
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 507
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5552
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint8ClampedArray#every
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 509
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int16Array,i16>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 5584
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int16Array#every
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 507
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5616
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int16Array#every
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 509
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint16Array,u16>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 5648
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint16Array#every
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 507
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5680
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint16Array#every
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 509
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int32Array,i32>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 5712
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int32Array#every
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 507
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5744
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int32Array#every
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 509
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint32Array,u32>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 5776
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint32Array#every
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 507
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5808
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint32Array#every
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 509
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Int64Array,i64>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 1
  i64.const 4
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 2
  i64.const 6
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 5840
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int64Array#every
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 507
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5872
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Int64Array#every
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 509
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Uint64Array,u64>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 1
  i64.const 4
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 2
  i64.const 6
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 5904
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint64Array#every
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 507
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 5936
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Uint64Array#every
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 509
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Float32Array,f32>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 1
  f32.const 4
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 2
  f32.const 6
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 5968
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float32Array#every
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 507
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 6000
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float32Array#every
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 509
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayEvery<~lib/typedarray/Float64Array,f64>
  (local $source i32)
  (local $result i32)
  (local $failResult i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 0
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 1
  f64.const 4
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 2
  f64.const 6
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 6032
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float64Array#every
  local.set $result
  local.get $result
  i32.const 0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 507
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $source
  i32.const 6064
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.store $0 offset=4
  local.get $3
  call $~lib/typedarray/Float64Array#every
  local.set $failResult
  local.get $failResult
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 509
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int8Array,i8>~anonymous|0 (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.extend8_s
  local.get $matchedValue
  i32.extend8_s
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 536
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 537
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 538
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int8Array,i8>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  global.set $std/typedarray/forEachSelf
  local.get $array
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.extend8_s
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.extend8_s
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.extend8_s
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 6176
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/typedarray/Int8Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 541
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint8Array,u8>~anonymous|0 (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.const 255
  i32.and
  local.get $matchedValue
  i32.const 255
  i32.and
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 536
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 537
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 538
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint8Array,u8>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  global.set $std/typedarray/forEachSelf
  local.get $array
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 6208
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/typedarray/Uint8Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 541
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint8ClampedArray,u8>~anonymous|0 (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.const 255
  i32.and
  local.get $matchedValue
  i32.const 255
  i32.and
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 536
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 537
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 538
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint8ClampedArray,u8>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $array
  i32.store $0
  local.get $array
  global.set $std/typedarray/forEachSelf
  local.get $array
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 255
  i32.and
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 6240
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/typedarray/Uint8ClampedArray#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 541
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int16Array,i16>~anonymous|0 (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.extend16_s
  local.get $matchedValue
  i32.extend16_s
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 536
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 537
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 538
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int16Array,i16>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  global.set $std/typedarray/forEachSelf
  local.get $array
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.extend16_s
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.extend16_s
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.extend16_s
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 6272
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/typedarray/Int16Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 541
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint16Array,u16>~anonymous|0 (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  i32.const 65535
  i32.and
  local.get $matchedValue
  i32.const 65535
  i32.and
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 536
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 537
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 538
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint16Array,u16>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  global.set $std/typedarray/forEachSelf
  local.get $array
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 65535
  i32.and
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 65535
  i32.and
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 65535
  i32.and
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 6304
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/typedarray/Uint16Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 541
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int32Array,i32>~anonymous|0 (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 536
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 537
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 538
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int32Array,i32>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  global.set $std/typedarray/forEachSelf
  local.get $array
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 1
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 6336
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/typedarray/Int32Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 541
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint32Array,u32>~anonymous|0 (param $value i32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 536
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 537
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 538
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint32Array,u32>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  global.set $std/typedarray/forEachSelf
  local.get $array
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 1
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  call $~lib/array/Array<i32>#__get
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 6368
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/typedarray/Uint32Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 541
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int64Array,i64>~anonymous|0 (param $value i64) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  i64.extend_i32_s
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 536
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 537
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 538
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Int64Array,i64>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  global.set $std/typedarray/forEachSelf
  local.get $array
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 6400
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/typedarray/Int64Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 541
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint64Array,u64>~anonymous|0 (param $value i64) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  i64.extend_i32_s
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 536
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 537
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 538
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Uint64Array,u64>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  global.set $std/typedarray/forEachSelf
  local.get $array
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i64.extend_i32_s
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 6432
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/typedarray/Uint64Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 541
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Float32Array,f32>~anonymous|0 (param $value f32) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  f32.convert_i32_s
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 536
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 537
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 538
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Float32Array,f32>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  global.set $std/typedarray/forEachSelf
  local.get $array
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#__get
  f32.convert_i32_s
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 1
  call $~lib/array/Array<i32>#__get
  f32.convert_i32_s
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  call $~lib/array/Array<i32>#__get
  f32.convert_i32_s
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 6464
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/typedarray/Float32Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 541
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Float64Array,f64>~anonymous|0 (param $value f64) (param $index i32) (param $self i32)
  (local $matchedValue i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  global.get $std/typedarray/forEachValues
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.store $0
  local.get $4
  local.get $index
  call $~lib/array/Array<i32>#__get
  local.set $matchedValue
  local.get $value
  local.get $matchedValue
  f64.convert_i32_s
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 536
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $index
  global.get $std/typedarray/forEachCallCount
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 537
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachSelf
  local.get $self
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 538
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/typedarray/forEachCallCount
  i32.const 1
  i32.add
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayForEach<~lib/typedarray/Float64Array,f64>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  i32.const 0
  global.set $std/typedarray/forEachCallCount
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  global.set $std/typedarray/forEachSelf
  local.get $array
  i32.const 0
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#__get
  f64.convert_i32_s
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 1
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 1
  call $~lib/array/Array<i32>#__get
  f64.convert_i32_s
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 2
  global.get $std/typedarray/forEachValues
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 2
  call $~lib/array/Array<i32>#__get
  f64.convert_i32_s
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 6496
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/typedarray/Float64Array#forEach
  global.get $std/typedarray/forEachCallCount
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 541
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayReverse<~lib/typedarray/Int8Array,i8>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $arrayWithOffset i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $reversedSlice i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int8Array#constructor
  local.tee $array
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int8Array#constructor
  local.tee $arrayWithOffset
  i32.store $0 offset=8
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    call $~lib/typedarray/Int8Array#__set
    local.get $arrayWithOffset
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    call $~lib/typedarray/Int8Array#__set
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $array
  call $~lib/typedarray/Int8Array#reverse
  drop
  i32.const 0
  local.set $var$4
  loop $for-loop|1
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    call $~lib/typedarray/Int8Array#__get
    local.get $values
    local.get $length
    i32.const 1
    i32.sub
    local.get $var$4
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 570
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $arrayWithOffset
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Int8Array#subarray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $~lib/typedarray/Int8Array#reverse
  local.tee $reversedSlice
  i32.store $0 offset=16
  local.get $reversedSlice
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 575
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 576
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 577
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 3
  call $~lib/typedarray/Int8Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 578
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayReverse<~lib/typedarray/Uint8Array,u8>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $arrayWithOffset i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $reversedSlice i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $array
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $arrayWithOffset
  i32.store $0 offset=8
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $arrayWithOffset
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $array
  call $~lib/typedarray/Uint8Array#reverse
  drop
  i32.const 0
  local.set $var$4
  loop $for-loop|1
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    call $~lib/typedarray/Uint8Array#__get
    local.get $values
    local.get $length
    i32.const 1
    i32.sub
    local.get $var$4
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 570
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $arrayWithOffset
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint8Array#subarray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $~lib/typedarray/Uint8Array#reverse
  local.tee $reversedSlice
  i32.store $0 offset=16
  local.get $reversedSlice
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 575
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 576
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 577
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 3
  call $~lib/typedarray/Uint8Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 578
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayReverse<~lib/typedarray/Uint8ClampedArray,u8>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $arrayWithOffset i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $reversedSlice i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $array
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $arrayWithOffset
  i32.store $0 offset=8
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8ClampedArray#__set
    local.get $arrayWithOffset
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8ClampedArray#__set
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $array
  call $~lib/typedarray/Uint8ClampedArray#reverse
  drop
  i32.const 0
  local.set $var$4
  loop $for-loop|1
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    call $~lib/typedarray/Uint8ClampedArray#__get
    local.get $values
    local.get $length
    i32.const 1
    i32.sub
    local.get $var$4
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 570
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $arrayWithOffset
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint8ClampedArray#subarray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $~lib/typedarray/Uint8ClampedArray#reverse
  local.tee $reversedSlice
  i32.store $0 offset=16
  local.get $reversedSlice
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 575
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 576
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 577
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 578
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayReverse<~lib/typedarray/Int16Array,i16>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $arrayWithOffset i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $reversedSlice i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int16Array#constructor
  local.tee $array
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int16Array#constructor
  local.tee $arrayWithOffset
  i32.store $0 offset=8
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    call $~lib/typedarray/Int16Array#__set
    local.get $arrayWithOffset
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    call $~lib/typedarray/Int16Array#__set
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $array
  call $~lib/typedarray/Int16Array#reverse
  drop
  i32.const 0
  local.set $var$4
  loop $for-loop|1
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    call $~lib/typedarray/Int16Array#__get
    local.get $values
    local.get $length
    i32.const 1
    i32.sub
    local.get $var$4
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 570
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $arrayWithOffset
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Int16Array#subarray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $~lib/typedarray/Int16Array#reverse
  local.tee $reversedSlice
  i32.store $0 offset=16
  local.get $reversedSlice
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 575
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 576
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 577
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 3
  call $~lib/typedarray/Int16Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 578
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayReverse<~lib/typedarray/Uint16Array,u16>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $arrayWithOffset i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $reversedSlice i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $array
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $arrayWithOffset
  i32.store $0 offset=8
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    call $~lib/typedarray/Uint16Array#__set
    local.get $arrayWithOffset
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    call $~lib/typedarray/Uint16Array#__set
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $array
  call $~lib/typedarray/Uint16Array#reverse
  drop
  i32.const 0
  local.set $var$4
  loop $for-loop|1
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    call $~lib/typedarray/Uint16Array#__get
    local.get $values
    local.get $length
    i32.const 1
    i32.sub
    local.get $var$4
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 570
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $arrayWithOffset
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint16Array#subarray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $~lib/typedarray/Uint16Array#reverse
  local.tee $reversedSlice
  i32.store $0 offset=16
  local.get $reversedSlice
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 575
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 576
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 577
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 3
  call $~lib/typedarray/Uint16Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 578
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayReverse<~lib/typedarray/Int32Array,i32>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $arrayWithOffset i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $reversedSlice i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int32Array#constructor
  local.tee $array
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int32Array#constructor
  local.tee $arrayWithOffset
  i32.store $0 offset=8
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Int32Array#__set
    local.get $arrayWithOffset
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Int32Array#__set
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $array
  call $~lib/typedarray/Int32Array#reverse
  drop
  i32.const 0
  local.set $var$4
  loop $for-loop|1
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    call $~lib/typedarray/Int32Array#__get
    local.get $values
    local.get $length
    i32.const 1
    i32.sub
    local.get $var$4
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 570
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $arrayWithOffset
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Int32Array#subarray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $~lib/typedarray/Int32Array#reverse
  local.tee $reversedSlice
  i32.store $0 offset=16
  local.get $reversedSlice
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 575
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 576
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 577
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 3
  call $~lib/typedarray/Int32Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 578
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayReverse<~lib/typedarray/Uint32Array,u32>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $arrayWithOffset i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $reversedSlice i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $array
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $arrayWithOffset
  i32.store $0 offset=8
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Uint32Array#__set
    local.get $arrayWithOffset
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Uint32Array#__set
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $array
  call $~lib/typedarray/Uint32Array#reverse
  drop
  i32.const 0
  local.set $var$4
  loop $for-loop|1
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    call $~lib/typedarray/Uint32Array#__get
    local.get $values
    local.get $length
    i32.const 1
    i32.sub
    local.get $var$4
    i32.sub
    call $~lib/array/Array<i32>#__get
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 570
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $arrayWithOffset
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint32Array#subarray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $~lib/typedarray/Uint32Array#reverse
  local.tee $reversedSlice
  i32.store $0 offset=16
  local.get $reversedSlice
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 575
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 7
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 576
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 577
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 3
  call $~lib/typedarray/Uint32Array#__get
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 578
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayReverse<~lib/typedarray/Int64Array,i64>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $arrayWithOffset i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $reversedSlice i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int64Array#constructor
  local.tee $array
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int64Array#constructor
  local.tee $arrayWithOffset
  i32.store $0 offset=8
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Int64Array#__set
    local.get $arrayWithOffset
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Int64Array#__set
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $array
  call $~lib/typedarray/Int64Array#reverse
  drop
  i32.const 0
  local.set $var$4
  loop $for-loop|1
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    call $~lib/typedarray/Int64Array#__get
    local.get $values
    local.get $length
    i32.const 1
    i32.sub
    local.get $var$4
    i32.sub
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    i64.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 570
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $arrayWithOffset
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Int64Array#subarray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $~lib/typedarray/Int64Array#reverse
  local.tee $reversedSlice
  i32.store $0 offset=16
  local.get $reversedSlice
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 8
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 575
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 7
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 576
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 6
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 577
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 3
  call $~lib/typedarray/Int64Array#__get
  i64.const 5
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 578
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayReverse<~lib/typedarray/Uint64Array,u64>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $arrayWithOffset i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $reversedSlice i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $array
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $arrayWithOffset
  i32.store $0 offset=8
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Uint64Array#__set
    local.get $arrayWithOffset
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Uint64Array#__set
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $array
  call $~lib/typedarray/Uint64Array#reverse
  drop
  i32.const 0
  local.set $var$4
  loop $for-loop|1
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    call $~lib/typedarray/Uint64Array#__get
    local.get $values
    local.get $length
    i32.const 1
    i32.sub
    local.get $var$4
    i32.sub
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    i64.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 570
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $arrayWithOffset
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Uint64Array#subarray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $~lib/typedarray/Uint64Array#reverse
  local.tee $reversedSlice
  i32.store $0 offset=16
  local.get $reversedSlice
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 8
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 575
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 7
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 576
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 6
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 577
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 3
  call $~lib/typedarray/Uint64Array#__get
  i64.const 5
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 578
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayReverse<~lib/typedarray/Float32Array,f32>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $arrayWithOffset i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $reversedSlice i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Float32Array#constructor
  local.tee $array
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Float32Array#constructor
  local.tee $arrayWithOffset
  i32.store $0 offset=8
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    call $~lib/typedarray/Float32Array#__set
    local.get $arrayWithOffset
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    call $~lib/typedarray/Float32Array#__set
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $array
  call $~lib/typedarray/Float32Array#reverse
  drop
  i32.const 0
  local.set $var$4
  loop $for-loop|1
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    call $~lib/typedarray/Float32Array#__get
    local.get $values
    local.get $length
    i32.const 1
    i32.sub
    local.get $var$4
    i32.sub
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    f32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 570
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $arrayWithOffset
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Float32Array#subarray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $~lib/typedarray/Float32Array#reverse
  local.tee $reversedSlice
  i32.store $0 offset=16
  local.get $reversedSlice
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 8
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 575
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 7
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 576
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 6
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 577
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 3
  call $~lib/typedarray/Float32Array#__get
  f32.const 5
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 578
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayReverse<~lib/typedarray/Float64Array,f64>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $arrayWithOffset i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $reversedSlice i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayReverseValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Float64Array#constructor
  local.tee $array
  i32.store $0 offset=4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Float64Array#constructor
  local.tee $arrayWithOffset
  i32.store $0 offset=8
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    call $~lib/typedarray/Float64Array#__set
    local.get $arrayWithOffset
    local.get $var$4
    local.get $values
    local.get $var$4
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    call $~lib/typedarray/Float64Array#__set
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $array
  call $~lib/typedarray/Float64Array#reverse
  drop
  i32.const 0
  local.set $var$4
  loop $for-loop|1
   local.get $var$4
   local.get $length
   i32.lt_s
   local.set $var$5
   local.get $var$5
   if
    local.get $array
    local.get $var$4
    call $~lib/typedarray/Float64Array#__get
    local.get $values
    local.get $length
    i32.const 1
    i32.sub
    local.get $var$4
    i32.sub
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    f64.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 570
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $arrayWithOffset
  i32.const 4
  i32.const 8
  call $~lib/typedarray/Float64Array#subarray
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=12
  local.get $7
  call $~lib/typedarray/Float64Array#reverse
  local.tee $reversedSlice
  i32.store $0 offset=16
  local.get $reversedSlice
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 8
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 575
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 7
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 576
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 6
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 577
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $reversedSlice
  i32.const 3
  call $~lib/typedarray/Float64Array#__get
  f64.const 5
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 578
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Int8Array#toString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/typedarray/Int8Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Int8Array,i8>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int8Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $array
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int8Array#__set
  i32.const 0
  drop
  local.get $array
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/typedarray/Int8Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 675
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  call $~lib/typedarray/Int8Array#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 676
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint8Array#toString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/typedarray/Uint8Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Uint8Array,u8>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8Array#__set
  local.get $array
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Uint8Array#__set
  i32.const 0
  drop
  local.get $array
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/typedarray/Uint8Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 675
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  call $~lib/typedarray/Uint8Array#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 676
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint8ClampedArray#toString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/typedarray/Uint8ClampedArray#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Uint8ClampedArray,u8>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $array
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Uint8ClampedArray#__set
  i32.const 0
  drop
  local.get $array
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/typedarray/Uint8ClampedArray#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 675
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  call $~lib/typedarray/Uint8ClampedArray#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 676
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Int16Array#toString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/typedarray/Int16Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Int16Array,i16>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int16Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int16Array#__set
  local.get $array
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int16Array#__set
  i32.const 0
  drop
  local.get $array
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/typedarray/Int16Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 675
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  call $~lib/typedarray/Int16Array#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 676
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint16Array#toString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/typedarray/Uint16Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Uint16Array,u16>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint16Array#__set
  local.get $array
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Uint16Array#__set
  i32.const 0
  drop
  local.get $array
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/typedarray/Uint16Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 675
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  call $~lib/typedarray/Uint16Array#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 676
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Int32Array#toString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/typedarray/Int32Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Int32Array,i32>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $array
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int32Array#__set
  i32.const 0
  drop
  local.get $array
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/typedarray/Int32Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 675
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  call $~lib/typedarray/Int32Array#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 676
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint32Array#toString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/typedarray/Uint32Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Uint32Array,u32>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Uint32Array#__set
  local.get $array
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Uint32Array#__set
  i32.const 0
  drop
  local.get $array
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/typedarray/Uint32Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 675
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  call $~lib/typedarray/Uint32Array#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 676
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Int64Array#toString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/typedarray/Int64Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Int64Array,i64>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 3
  i64.const 4
  call $~lib/typedarray/Int64Array#__set
  local.get $array
  i32.const 4
  i64.const 5
  call $~lib/typedarray/Int64Array#__set
  i32.const 0
  drop
  local.get $array
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/typedarray/Int64Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 675
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  call $~lib/typedarray/Int64Array#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 676
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Uint64Array#toString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/typedarray/Uint64Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Uint64Array,u64>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 2
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 3
  i64.const 4
  call $~lib/typedarray/Uint64Array#__set
  local.get $array
  i32.const 4
  i64.const 5
  call $~lib/typedarray/Uint64Array#__set
  i32.const 0
  drop
  local.get $array
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/typedarray/Uint64Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 675
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  call $~lib/typedarray/Uint64Array#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 8592
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 676
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Float32Array#toString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/typedarray/Float32Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Float32Array,f32>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Float32Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 2
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 3
  f32.const 4
  call $~lib/typedarray/Float32Array#__set
  local.get $array
  i32.const 4
  f32.const 5
  call $~lib/typedarray/Float32Array#__set
  i32.const 1
  drop
  local.get $array
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/typedarray/Float32Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 9776
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 672
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  call $~lib/typedarray/Float32Array#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 9776
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 673
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/typedarray/Float64Array#toString (param $this i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0
  local.get $1
  call $~lib/typedarray/Float64Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Float64Array,f64>
  (local $array i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Float64Array#constructor
  local.tee $array
  i32.store $0
  local.get $array
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 2
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 3
  f64.const 4
  call $~lib/typedarray/Float64Array#__set
  local.get $array
  i32.const 4
  f64.const 5
  call $~lib/typedarray/Float64Array#__set
  i32.const 1
  drop
  local.get $array
  i32.const 8560
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=12
  local.get $1
  call $~lib/typedarray/Float64Array#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 9776
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 672
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $array
  call $~lib/typedarray/Float64Array#toString
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=4
  local.get $1
  i32.const 9776
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store $0 offset=8
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 673
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayWrap<~lib/typedarray/Int8Array,i8>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $buffer i32)
  (local $result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int8Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    i32.extend8_s
    call $~lib/typedarray/Int8Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $buffer
  i32.store $0 offset=12
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $buffer
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array.wrap@varargs
  local.tee $result
  i32.store $0 offset=16
  i32.const 0
  local.set $var$3
  loop $for-loop|1
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    call $~lib/typedarray/Int8Array#__get
    local.get $result
    local.get $var$3
    call $~lib/typedarray/Int8Array#__get
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 730
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayWrap<~lib/typedarray/Uint8Array,u8>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $buffer i32)
  (local $result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $buffer
  i32.store $0 offset=12
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $buffer
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.tee $result
  i32.store $0 offset=16
  i32.const 0
  local.set $var$3
  loop $for-loop|1
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    call $~lib/typedarray/Uint8Array#__get
    local.get $result
    local.get $var$3
    call $~lib/typedarray/Uint8Array#__get
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 730
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayWrap<~lib/typedarray/Uint8ClampedArray,u8>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $buffer i32)
  (local $result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    i32.const 255
    i32.and
    call $~lib/typedarray/Uint8ClampedArray#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $buffer
  i32.store $0 offset=12
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $buffer
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray.wrap@varargs
  local.tee $result
  i32.store $0 offset=16
  i32.const 0
  local.set $var$3
  loop $for-loop|1
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    call $~lib/typedarray/Uint8ClampedArray#__get
    local.get $result
    local.get $var$3
    call $~lib/typedarray/Uint8ClampedArray#__get
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 730
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayWrap<~lib/typedarray/Int16Array,i16>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $buffer i32)
  (local $result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int16Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    i32.extend16_s
    call $~lib/typedarray/Int16Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $buffer
  i32.store $0 offset=12
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $buffer
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array.wrap@varargs
  local.tee $result
  i32.store $0 offset=16
  i32.const 0
  local.set $var$3
  loop $for-loop|1
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    call $~lib/typedarray/Int16Array#__get
    local.get $result
    local.get $var$3
    call $~lib/typedarray/Int16Array#__get
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 730
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayWrap<~lib/typedarray/Uint16Array,u16>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $buffer i32)
  (local $result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    i32.const 65535
    i32.and
    call $~lib/typedarray/Uint16Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $buffer
  i32.store $0 offset=12
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $buffer
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array.wrap@varargs
  local.tee $result
  i32.store $0 offset=16
  i32.const 0
  local.set $var$3
  loop $for-loop|1
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    call $~lib/typedarray/Uint16Array#__get
    local.get $result
    local.get $var$3
    call $~lib/typedarray/Uint16Array#__get
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 730
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayWrap<~lib/typedarray/Int32Array,i32>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $buffer i32)
  (local $result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int32Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Int32Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $buffer
  i32.store $0 offset=12
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $buffer
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array.wrap@varargs
  local.tee $result
  i32.store $0 offset=16
  i32.const 0
  local.set $var$3
  loop $for-loop|1
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    call $~lib/typedarray/Int32Array#__get
    local.get $result
    local.get $var$3
    call $~lib/typedarray/Int32Array#__get
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 730
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayWrap<~lib/typedarray/Uint32Array,u32>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $buffer i32)
  (local $result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    call $~lib/typedarray/Uint32Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $buffer
  i32.store $0 offset=12
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $buffer
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array.wrap@varargs
  local.tee $result
  i32.store $0 offset=16
  i32.const 0
  local.set $var$3
  loop $for-loop|1
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    call $~lib/typedarray/Uint32Array#__get
    local.get $result
    local.get $var$3
    call $~lib/typedarray/Uint32Array#__get
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 730
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayWrap<~lib/typedarray/Int64Array,i64>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $buffer i32)
  (local $result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Int64Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Int64Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $buffer
  i32.store $0 offset=12
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $buffer
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array.wrap@varargs
  local.tee $result
  i32.store $0 offset=16
  i32.const 0
  local.set $var$3
  loop $for-loop|1
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    call $~lib/typedarray/Int64Array#__get
    local.get $result
    local.get $var$3
    call $~lib/typedarray/Int64Array#__get
    i64.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 730
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayWrap<~lib/typedarray/Uint64Array,u64>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $buffer i32)
  (local $result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    i64.extend_i32_s
    call $~lib/typedarray/Uint64Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $buffer
  i32.store $0 offset=12
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $buffer
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array.wrap@varargs
  local.tee $result
  i32.store $0 offset=16
  i32.const 0
  local.set $var$3
  loop $for-loop|1
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    call $~lib/typedarray/Uint64Array#__get
    local.get $result
    local.get $var$3
    call $~lib/typedarray/Uint64Array#__get
    i64.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 730
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayWrap<~lib/typedarray/Float32Array,f32>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $buffer i32)
  (local $result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Float32Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    f32.convert_i32_s
    call $~lib/typedarray/Float32Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $buffer
  i32.store $0 offset=12
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $buffer
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array.wrap@varargs
  local.tee $result
  i32.store $0 offset=16
  i32.const 0
  local.set $var$3
  loop $for-loop|1
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    call $~lib/typedarray/Float32Array#__get
    local.get $result
    local.get $var$3
    call $~lib/typedarray/Float32Array#__get
    f32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 730
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArrayWrap<~lib/typedarray/Float64Array,f64>
  (local $values i32)
  (local $length i32)
  (local $array i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $buffer i32)
  (local $result i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  global.get $std/typedarray/testArrayWrapValues
  local.tee $values
  i32.store $0
  local.get $values
  call $~lib/array/Array<i32>#get:length
  local.set $length
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $length
  call $~lib/typedarray/Float64Array#constructor
  local.tee $array
  i32.store $0 offset=4
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    local.get $values
    local.get $var$3
    call $~lib/array/Array<i32>#__get
    f64.convert_i32_s
    call $~lib/typedarray/Float64Array#__set
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $array
  i32.load $0
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store $0 offset=8
  local.get $7
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $array
  i32.load $0 offset=8
  i32.add
  call $~lib/arraybuffer/ArrayBuffer#slice
  local.tee $buffer
  i32.store $0 offset=12
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  global.get $~lib/memory/__stack_pointer
  local.get $buffer
  i32.const 0
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array.wrap@varargs
  local.tee $result
  i32.store $0 offset=16
  i32.const 0
  local.set $var$3
  loop $for-loop|1
   local.get $var$3
   local.get $length
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $array
    local.get $var$3
    call $~lib/typedarray/Float64Array#__get
    local.get $result
    local.get $var$3
    call $~lib/typedarray/Float64Array#__get
    f64.eq
    i32.eqz
    if
     i32.const 0
     i32.const 544
     i32.const 730
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/valuesEqual<~lib/typedarray/Int8Array> (param $target i32) (param $compare i32)
  (local $len i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $target
  call $~lib/typedarray/Int8Array#get:length
  local.set $len
  local.get $len
  local.get $compare
  call $~lib/array/Array<i8>#get:length
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 758
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $len
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $target
    local.get $var$3
    call $~lib/typedarray/Int8Array#__uget
    local.set $var$5
    local.get $compare
    local.get $var$3
    call $~lib/array/Array<i8>#__uget
    local.set $var$6
    local.get $var$5
    local.get $var$6
    i32.ne
    if
     i32.const 10320
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     i32.const 3
     local.get $var$3
     f64.convert_i32_s
     local.get $var$5
     f64.convert_i32_s
     local.get $var$6
     f64.convert_i32_s
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     i32.const 0
     i32.eqz
     if
      i32.const 0
      i32.const 544
      i32.const 764
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testTypedArraySet<~lib/typedarray/Int8Array>
  (local $setSource4 i32)
  (local $setSource5 i32)
  (local $setSource6 i32)
  (local $a i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $setSource4
  i32.store $0
  local.get $setSource4
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $setSource5
  i32.store $0 offset=4
  local.get $setSource5
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $setSource6
  i32.store $0 offset=8
  local.get $setSource6
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Int8Array#constructor
  local.tee $a
  i32.store $0 offset=12
  local.get $a
  global.get $std/typedarray/setSource1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 0
  call $~lib/typedarray/Int8Array#set<~lib/array/Array<i32>>
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 10288
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int8Array>
  local.get $a
  global.get $std/typedarray/setSource2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 3
  call $~lib/typedarray/Int8Array#set<~lib/array/Array<f32>>
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 10368
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int8Array>
  local.get $a
  local.get $setSource4
  i32.const 6
  call $~lib/typedarray/Int8Array#set<~lib/typedarray/Int64Array>
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 10400
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int8Array>
  i32.const 1
  drop
  local.get $a
  global.get $std/typedarray/setSource3
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 2
  call $~lib/typedarray/Int8Array#set<~lib/array/Array<f64>>
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 10432
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int8Array>
  local.get $a
  local.get $setSource5
  i32.const 0
  call $~lib/typedarray/Int8Array#set<~lib/typedarray/Uint8Array>
  local.get $a
  local.get $setSource6
  i32.const 4
  call $~lib/typedarray/Int8Array#set<~lib/typedarray/Int16Array>
  local.get $a
  global.get $std/typedarray/setSource7
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 7
  call $~lib/typedarray/Int8Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 15
  i32.const 10464
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int8Array>
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/valuesEqual<~lib/typedarray/Uint8Array> (param $target i32) (param $compare i32)
  (local $len i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $target
  call $~lib/typedarray/Uint8Array#get:length
  local.set $len
  local.get $len
  local.get $compare
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 758
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $len
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $target
    local.get $var$3
    call $~lib/typedarray/Uint8Array#__uget
    local.set $var$5
    local.get $compare
    local.get $var$3
    call $~lib/array/Array<u8>#__uget
    local.set $var$6
    local.get $var$5
    local.get $var$6
    i32.ne
    if
     i32.const 10528
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     i32.const 3
     local.get $var$3
     f64.convert_i32_s
     local.get $var$5
     f64.convert_i32_u
     local.get $var$6
     f64.convert_i32_u
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     i32.const 0
     i32.eqz
     if
      i32.const 0
      i32.const 544
      i32.const 764
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testTypedArraySet<~lib/typedarray/Uint8Array>
  (local $setSource4 i32)
  (local $setSource5 i32)
  (local $setSource6 i32)
  (local $a i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $setSource4
  i32.store $0
  local.get $setSource4
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $setSource5
  i32.store $0 offset=4
  local.get $setSource5
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $setSource6
  i32.store $0 offset=8
  local.get $setSource6
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $a
  i32.store $0 offset=12
  local.get $a
  global.get $std/typedarray/setSource1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 0
  call $~lib/typedarray/Uint8Array#set<~lib/array/Array<i32>>
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 10496
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint8Array>
  local.get $a
  global.get $std/typedarray/setSource2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 3
  call $~lib/typedarray/Uint8Array#set<~lib/array/Array<f32>>
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 10576
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint8Array>
  local.get $a
  local.get $setSource4
  i32.const 6
  call $~lib/typedarray/Uint8Array#set<~lib/typedarray/Int64Array>
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 10608
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint8Array>
  i32.const 1
  drop
  local.get $a
  global.get $std/typedarray/setSource3
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 2
  call $~lib/typedarray/Uint8Array#set<~lib/array/Array<f64>>
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 10640
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint8Array>
  local.get $a
  local.get $setSource5
  i32.const 0
  call $~lib/typedarray/Uint8Array#set<~lib/typedarray/Uint8Array>
  local.get $a
  local.get $setSource6
  i32.const 4
  call $~lib/typedarray/Uint8Array#set<~lib/typedarray/Int16Array>
  local.get $a
  global.get $std/typedarray/setSource7
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 7
  call $~lib/typedarray/Uint8Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 10672
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint8Array>
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/valuesEqual<~lib/typedarray/Uint8ClampedArray> (param $target i32) (param $compare i32)
  (local $len i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $target
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $len
  local.get $len
  local.get $compare
  call $~lib/array/Array<u8>#get:length
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 758
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $len
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $target
    local.get $var$3
    call $~lib/typedarray/Uint8ClampedArray#__uget
    local.set $var$5
    local.get $compare
    local.get $var$3
    call $~lib/array/Array<u8>#__uget
    local.set $var$6
    local.get $var$5
    local.get $var$6
    i32.ne
    if
     i32.const 10736
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     i32.const 3
     local.get $var$3
     f64.convert_i32_s
     local.get $var$5
     f64.convert_i32_u
     local.get $var$6
     f64.convert_i32_u
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     i32.const 0
     i32.eqz
     if
      i32.const 0
      i32.const 544
      i32.const 764
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testTypedArraySet<~lib/typedarray/Uint8ClampedArray>
  (local $setSource4 i32)
  (local $setSource5 i32)
  (local $setSource6 i32)
  (local $a i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $setSource4
  i32.store $0
  local.get $setSource4
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $setSource5
  i32.store $0 offset=4
  local.get $setSource5
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $setSource6
  i32.store $0 offset=8
  local.get $setSource6
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $a
  i32.store $0 offset=12
  local.get $a
  global.get $std/typedarray/setSource1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<i32>>
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 10704
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint8ClampedArray>
  local.get $a
  global.get $std/typedarray/setSource2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<f32>>
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 10800
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint8ClampedArray>
  local.get $a
  local.get $setSource4
  i32.const 6
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int64Array>
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 10832
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint8ClampedArray>
  i32.const 1
  drop
  local.get $a
  global.get $std/typedarray/setSource3
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<f64>>
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 10864
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint8ClampedArray>
  local.get $a
  local.get $setSource5
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Uint8Array>
  local.get $a
  local.get $setSource6
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int16Array>
  local.get $a
  global.get $std/typedarray/setSource7
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 7
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/array/Array<i8>>
  i32.const 1
  drop
  local.get $a
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 10896
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint8ClampedArray>
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/valuesEqual<~lib/typedarray/Int16Array> (param $target i32) (param $compare i32)
  (local $len i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $target
  call $~lib/typedarray/Int16Array#get:length
  local.set $len
  local.get $len
  local.get $compare
  call $~lib/array/Array<i16>#get:length
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 758
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $len
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $target
    local.get $var$3
    call $~lib/typedarray/Int16Array#__uget
    local.set $var$5
    local.get $compare
    local.get $var$3
    call $~lib/array/Array<i16>#__uget
    local.set $var$6
    local.get $var$5
    local.get $var$6
    i32.ne
    if
     i32.const 10976
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     i32.const 3
     local.get $var$3
     f64.convert_i32_s
     local.get $var$5
     f64.convert_i32_s
     local.get $var$6
     f64.convert_i32_s
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     i32.const 0
     i32.eqz
     if
      i32.const 0
      i32.const 544
      i32.const 764
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testTypedArraySet<~lib/typedarray/Int16Array>
  (local $setSource4 i32)
  (local $setSource5 i32)
  (local $setSource6 i32)
  (local $a i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $setSource4
  i32.store $0
  local.get $setSource4
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $setSource5
  i32.store $0 offset=4
  local.get $setSource5
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $setSource6
  i32.store $0 offset=8
  local.get $setSource6
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Int16Array#constructor
  local.tee $a
  i32.store $0 offset=12
  local.get $a
  global.get $std/typedarray/setSource1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 0
  call $~lib/typedarray/Int16Array#set<~lib/array/Array<i32>>
  local.get $a
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 10928
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int16Array>
  local.get $a
  global.get $std/typedarray/setSource2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 3
  call $~lib/typedarray/Int16Array#set<~lib/array/Array<f32>>
  local.get $a
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 11024
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int16Array>
  local.get $a
  local.get $setSource4
  i32.const 6
  call $~lib/typedarray/Int16Array#set<~lib/typedarray/Int64Array>
  local.get $a
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 11072
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int16Array>
  i32.const 1
  drop
  local.get $a
  global.get $std/typedarray/setSource3
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 2
  call $~lib/typedarray/Int16Array#set<~lib/array/Array<f64>>
  local.get $a
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 11120
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int16Array>
  local.get $a
  local.get $setSource5
  i32.const 0
  call $~lib/typedarray/Int16Array#set<~lib/typedarray/Uint8Array>
  local.get $a
  local.get $setSource6
  i32.const 4
  call $~lib/typedarray/Int16Array#set<~lib/typedarray/Int16Array>
  local.get $a
  global.get $std/typedarray/setSource7
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 7
  call $~lib/typedarray/Int16Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a
  i32.const 10
  i32.const 1
  i32.const 64
  i32.const 11168
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int16Array>
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/valuesEqual<~lib/typedarray/Uint16Array> (param $target i32) (param $compare i32)
  (local $len i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $target
  call $~lib/typedarray/Uint16Array#get:length
  local.set $len
  local.get $len
  local.get $compare
  call $~lib/array/Array<u16>#get:length
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 758
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $len
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $target
    local.get $var$3
    call $~lib/typedarray/Uint16Array#__uget
    local.set $var$5
    local.get $compare
    local.get $var$3
    call $~lib/array/Array<u16>#__uget
    local.set $var$6
    local.get $var$5
    local.get $var$6
    i32.ne
    if
     i32.const 11264
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     i32.const 3
     local.get $var$3
     f64.convert_i32_s
     local.get $var$5
     f64.convert_i32_u
     local.get $var$6
     f64.convert_i32_u
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     i32.const 0
     i32.eqz
     if
      i32.const 0
      i32.const 544
      i32.const 764
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testTypedArraySet<~lib/typedarray/Uint16Array>
  (local $setSource4 i32)
  (local $setSource5 i32)
  (local $setSource6 i32)
  (local $a i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $setSource4
  i32.store $0
  local.get $setSource4
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $setSource5
  i32.store $0 offset=4
  local.get $setSource5
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $setSource6
  i32.store $0 offset=8
  local.get $setSource6
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $a
  i32.store $0 offset=12
  local.get $a
  global.get $std/typedarray/setSource1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 0
  call $~lib/typedarray/Uint16Array#set<~lib/array/Array<i32>>
  local.get $a
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 11216
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint16Array>
  local.get $a
  global.get $std/typedarray/setSource2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 3
  call $~lib/typedarray/Uint16Array#set<~lib/array/Array<f32>>
  local.get $a
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 11312
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint16Array>
  local.get $a
  local.get $setSource4
  i32.const 6
  call $~lib/typedarray/Uint16Array#set<~lib/typedarray/Int64Array>
  local.get $a
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 11360
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint16Array>
  i32.const 1
  drop
  local.get $a
  global.get $std/typedarray/setSource3
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 2
  call $~lib/typedarray/Uint16Array#set<~lib/array/Array<f64>>
  local.get $a
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 11408
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint16Array>
  local.get $a
  local.get $setSource5
  i32.const 0
  call $~lib/typedarray/Uint16Array#set<~lib/typedarray/Uint8Array>
  local.get $a
  local.get $setSource6
  i32.const 4
  call $~lib/typedarray/Uint16Array#set<~lib/typedarray/Int16Array>
  local.get $a
  global.get $std/typedarray/setSource7
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 7
  call $~lib/typedarray/Uint16Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a
  i32.const 10
  i32.const 1
  i32.const 65
  i32.const 11456
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint16Array>
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/valuesEqual<~lib/typedarray/Int32Array> (param $target i32) (param $compare i32)
  (local $len i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $target
  call $~lib/typedarray/Int32Array#get:length
  local.set $len
  local.get $len
  local.get $compare
  call $~lib/array/Array<i32>#get:length
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 758
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $len
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $target
    local.get $var$3
    call $~lib/typedarray/Int32Array#__uget
    local.set $var$5
    local.get $compare
    local.get $var$3
    call $~lib/array/Array<i32>#__uget
    local.set $var$6
    local.get $var$5
    local.get $var$6
    i32.ne
    if
     i32.const 11568
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     i32.const 3
     local.get $var$3
     f64.convert_i32_s
     local.get $var$5
     f64.convert_i32_s
     local.get $var$6
     f64.convert_i32_s
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     i32.const 0
     i32.eqz
     if
      i32.const 0
      i32.const 544
      i32.const 764
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testTypedArraySet<~lib/typedarray/Int32Array>
  (local $setSource4 i32)
  (local $setSource5 i32)
  (local $setSource6 i32)
  (local $a i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $setSource4
  i32.store $0
  local.get $setSource4
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $setSource5
  i32.store $0 offset=4
  local.get $setSource5
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $setSource6
  i32.store $0 offset=8
  local.get $setSource6
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Int32Array#constructor
  local.tee $a
  i32.store $0 offset=12
  local.get $a
  global.get $std/typedarray/setSource1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 0
  call $~lib/typedarray/Int32Array#set<~lib/array/Array<i32>>
  local.get $a
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 11504
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int32Array>
  local.get $a
  global.get $std/typedarray/setSource2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 3
  call $~lib/typedarray/Int32Array#set<~lib/array/Array<f32>>
  local.get $a
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 11616
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int32Array>
  local.get $a
  local.get $setSource4
  i32.const 6
  call $~lib/typedarray/Int32Array#set<~lib/typedarray/Int64Array>
  local.get $a
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 11680
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int32Array>
  i32.const 1
  drop
  local.get $a
  global.get $std/typedarray/setSource3
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 2
  call $~lib/typedarray/Int32Array#set<~lib/array/Array<f64>>
  local.get $a
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 11744
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int32Array>
  local.get $a
  local.get $setSource5
  i32.const 0
  call $~lib/typedarray/Int32Array#set<~lib/typedarray/Uint8Array>
  local.get $a
  local.get $setSource6
  i32.const 4
  call $~lib/typedarray/Int32Array#set<~lib/typedarray/Int16Array>
  local.get $a
  global.get $std/typedarray/setSource7
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 7
  call $~lib/typedarray/Int32Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a
  i32.const 10
  i32.const 2
  i32.const 16
  i32.const 11808
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int32Array>
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/valuesEqual<~lib/typedarray/Uint32Array> (param $target i32) (param $compare i32)
  (local $len i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $target
  call $~lib/typedarray/Uint32Array#get:length
  local.set $len
  local.get $len
  local.get $compare
  call $~lib/array/Array<u32>#get:length
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 758
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $len
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $target
    local.get $var$3
    call $~lib/typedarray/Uint32Array#__uget
    local.set $var$5
    local.get $compare
    local.get $var$3
    call $~lib/array/Array<u32>#__uget
    local.set $var$6
    local.get $var$5
    local.get $var$6
    i32.ne
    if
     i32.const 11936
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     i32.const 3
     local.get $var$3
     f64.convert_i32_s
     local.get $var$5
     f64.convert_i32_u
     local.get $var$6
     f64.convert_i32_u
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     i32.const 0
     i32.eqz
     if
      i32.const 0
      i32.const 544
      i32.const 764
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testTypedArraySet<~lib/typedarray/Uint32Array>
  (local $setSource4 i32)
  (local $setSource5 i32)
  (local $setSource6 i32)
  (local $a i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $setSource4
  i32.store $0
  local.get $setSource4
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $setSource5
  i32.store $0 offset=4
  local.get $setSource5
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $setSource6
  i32.store $0 offset=8
  local.get $setSource6
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $a
  i32.store $0 offset=12
  local.get $a
  global.get $std/typedarray/setSource1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 0
  call $~lib/typedarray/Uint32Array#set<~lib/array/Array<i32>>
  local.get $a
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 11872
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint32Array>
  local.get $a
  global.get $std/typedarray/setSource2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 3
  call $~lib/typedarray/Uint32Array#set<~lib/array/Array<f32>>
  local.get $a
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 11984
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint32Array>
  local.get $a
  local.get $setSource4
  i32.const 6
  call $~lib/typedarray/Uint32Array#set<~lib/typedarray/Int64Array>
  local.get $a
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 12048
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint32Array>
  i32.const 1
  drop
  local.get $a
  global.get $std/typedarray/setSource3
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 2
  call $~lib/typedarray/Uint32Array#set<~lib/array/Array<f64>>
  local.get $a
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 12112
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint32Array>
  local.get $a
  local.get $setSource5
  i32.const 0
  call $~lib/typedarray/Uint32Array#set<~lib/typedarray/Uint8Array>
  local.get $a
  local.get $setSource6
  i32.const 4
  call $~lib/typedarray/Uint32Array#set<~lib/typedarray/Int16Array>
  local.get $a
  global.get $std/typedarray/setSource7
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 7
  call $~lib/typedarray/Uint32Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a
  i32.const 10
  i32.const 2
  i32.const 66
  i32.const 12176
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint32Array>
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/valuesEqual<~lib/typedarray/Int64Array> (param $target i32) (param $compare i32)
  (local $len i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i64)
  (local $var$6 i64)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $target
  call $~lib/typedarray/Int64Array#get:length
  local.set $len
  local.get $len
  local.get $compare
  call $~lib/array/Array<i64>#get:length
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 758
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $len
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $target
    local.get $var$3
    call $~lib/typedarray/Int64Array#__uget
    local.set $var$5
    local.get $compare
    local.get $var$3
    call $~lib/array/Array<i64>#__uget
    local.set $var$6
    local.get $var$5
    local.get $var$6
    i64.ne
    if
     i32.const 12352
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     i32.const 3
     local.get $var$3
     f64.convert_i32_s
     local.get $var$5
     f64.convert_i64_s
     local.get $var$6
     f64.convert_i64_s
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     i32.const 0
     i32.eqz
     if
      i32.const 0
      i32.const 544
      i32.const 764
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testTypedArraySet<~lib/typedarray/Int64Array>
  (local $setSource4 i32)
  (local $setSource5 i32)
  (local $setSource6 i32)
  (local $a i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $setSource4
  i32.store $0
  local.get $setSource4
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $setSource5
  i32.store $0 offset=4
  local.get $setSource5
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $setSource6
  i32.store $0 offset=8
  local.get $setSource6
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Int64Array#constructor
  local.tee $a
  i32.store $0 offset=12
  local.get $a
  global.get $std/typedarray/setSource1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 0
  call $~lib/typedarray/Int64Array#set<~lib/array/Array<i32>>
  local.get $a
  i32.const 10
  i32.const 3
  i32.const 67
  i32.const 12240
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int64Array>
  local.get $a
  global.get $std/typedarray/setSource2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 3
  call $~lib/typedarray/Int64Array#set<~lib/array/Array<f32>>
  local.get $a
  i32.const 10
  i32.const 3
  i32.const 67
  i32.const 12400
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int64Array>
  local.get $a
  local.get $setSource4
  i32.const 6
  call $~lib/typedarray/Int64Array#set<~lib/typedarray/Int64Array>
  local.get $a
  i32.const 10
  i32.const 3
  i32.const 67
  i32.const 12512
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int64Array>
  i32.const 1
  drop
  local.get $a
  global.get $std/typedarray/setSource3
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 2
  call $~lib/typedarray/Int64Array#set<~lib/array/Array<f64>>
  local.get $a
  i32.const 10
  i32.const 3
  i32.const 67
  i32.const 12624
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int64Array>
  local.get $a
  local.get $setSource5
  i32.const 0
  call $~lib/typedarray/Int64Array#set<~lib/typedarray/Uint8Array>
  local.get $a
  local.get $setSource6
  i32.const 4
  call $~lib/typedarray/Int64Array#set<~lib/typedarray/Int16Array>
  local.get $a
  global.get $std/typedarray/setSource7
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 7
  call $~lib/typedarray/Int64Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a
  i32.const 10
  i32.const 3
  i32.const 67
  i32.const 12736
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Int64Array>
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/valuesEqual<~lib/typedarray/Uint64Array> (param $target i32) (param $compare i32)
  (local $len i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i64)
  (local $var$6 i64)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $target
  call $~lib/typedarray/Uint64Array#get:length
  local.set $len
  local.get $len
  local.get $compare
  call $~lib/array/Array<u64>#get:length
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 758
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $len
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $target
    local.get $var$3
    call $~lib/typedarray/Uint64Array#__uget
    local.set $var$5
    local.get $compare
    local.get $var$3
    call $~lib/array/Array<u64>#__uget
    local.set $var$6
    local.get $var$5
    local.get $var$6
    i64.ne
    if
     i32.const 12960
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     i32.const 3
     local.get $var$3
     f64.convert_i32_s
     local.get $var$5
     f64.convert_i64_u
     local.get $var$6
     f64.convert_i64_u
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     i32.const 0
     i32.eqz
     if
      i32.const 0
      i32.const 544
      i32.const 764
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testTypedArraySet<~lib/typedarray/Uint64Array>
  (local $setSource4 i32)
  (local $setSource5 i32)
  (local $setSource6 i32)
  (local $a i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $setSource4
  i32.store $0
  local.get $setSource4
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $setSource5
  i32.store $0 offset=4
  local.get $setSource5
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $setSource6
  i32.store $0 offset=8
  local.get $setSource6
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $a
  i32.store $0 offset=12
  local.get $a
  global.get $std/typedarray/setSource1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 0
  call $~lib/typedarray/Uint64Array#set<~lib/array/Array<i32>>
  local.get $a
  i32.const 10
  i32.const 3
  i32.const 68
  i32.const 12848
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint64Array>
  local.get $a
  global.get $std/typedarray/setSource2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 3
  call $~lib/typedarray/Uint64Array#set<~lib/array/Array<f32>>
  local.get $a
  i32.const 10
  i32.const 3
  i32.const 68
  i32.const 13008
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint64Array>
  local.get $a
  local.get $setSource4
  i32.const 6
  call $~lib/typedarray/Uint64Array#set<~lib/typedarray/Int64Array>
  local.get $a
  i32.const 10
  i32.const 3
  i32.const 68
  i32.const 13120
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint64Array>
  i32.const 1
  drop
  local.get $a
  global.get $std/typedarray/setSource3
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 2
  call $~lib/typedarray/Uint64Array#set<~lib/array/Array<f64>>
  local.get $a
  i32.const 10
  i32.const 3
  i32.const 68
  i32.const 13232
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint64Array>
  local.get $a
  local.get $setSource5
  i32.const 0
  call $~lib/typedarray/Uint64Array#set<~lib/typedarray/Uint8Array>
  local.get $a
  local.get $setSource6
  i32.const 4
  call $~lib/typedarray/Uint64Array#set<~lib/typedarray/Int16Array>
  local.get $a
  global.get $std/typedarray/setSource7
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 7
  call $~lib/typedarray/Uint64Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a
  i32.const 10
  i32.const 3
  i32.const 68
  i32.const 13344
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint64Array>
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/valuesEqual<~lib/typedarray/Float32Array> (param $target i32) (param $compare i32)
  (local $len i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 f32)
  (local $var$6 f32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $target
  call $~lib/typedarray/Float32Array#get:length
  local.set $len
  local.get $len
  local.get $compare
  call $~lib/array/Array<f32>#get:length
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 758
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $len
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $target
    local.get $var$3
    call $~lib/typedarray/Float32Array#__uget
    local.set $var$5
    local.get $compare
    local.get $var$3
    call $~lib/array/Array<f32>#__uget
    local.set $var$6
    local.get $var$5
    local.get $var$6
    f32.ne
    if
     i32.const 13520
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     i32.const 3
     local.get $var$3
     f64.convert_i32_s
     local.get $var$5
     f64.promote_f32
     local.get $var$6
     f64.promote_f32
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     i32.const 0
     i32.eqz
     if
      i32.const 0
      i32.const 544
      i32.const 764
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testTypedArraySet<~lib/typedarray/Float32Array>
  (local $setSource4 i32)
  (local $setSource5 i32)
  (local $setSource6 i32)
  (local $a i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $setSource4
  i32.store $0
  local.get $setSource4
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $setSource5
  i32.store $0 offset=4
  local.get $setSource5
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $setSource6
  i32.store $0 offset=8
  local.get $setSource6
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Float32Array#constructor
  local.tee $a
  i32.store $0 offset=12
  local.get $a
  global.get $std/typedarray/setSource1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 0
  call $~lib/typedarray/Float32Array#set<~lib/array/Array<i32>>
  local.get $a
  i32.const 10
  i32.const 2
  i32.const 61
  i32.const 13456
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Float32Array>
  local.get $a
  global.get $std/typedarray/setSource2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 3
  call $~lib/typedarray/Float32Array#set<~lib/array/Array<f32>>
  local.get $a
  i32.const 10
  i32.const 2
  i32.const 61
  i32.const 13568
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Float32Array>
  local.get $a
  local.get $setSource4
  i32.const 6
  call $~lib/typedarray/Float32Array#set<~lib/typedarray/Int64Array>
  local.get $a
  i32.const 10
  i32.const 2
  i32.const 61
  i32.const 13632
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Float32Array>
  i32.const 0
  drop
  local.get $a
  local.get $setSource5
  i32.const 0
  call $~lib/typedarray/Float32Array#set<~lib/typedarray/Uint8Array>
  local.get $a
  local.get $setSource6
  i32.const 4
  call $~lib/typedarray/Float32Array#set<~lib/typedarray/Int16Array>
  local.get $a
  global.get $std/typedarray/setSource7
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 7
  call $~lib/typedarray/Float32Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a
  i32.const 10
  i32.const 2
  i32.const 61
  i32.const 13696
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Float32Array>
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/valuesEqual<~lib/typedarray/Float64Array> (param $target i32) (param $compare i32)
  (local $len i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 f64)
  (local $var$6 f64)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $target
  call $~lib/typedarray/Float64Array#get:length
  local.set $len
  local.get $len
  local.get $compare
  call $~lib/array/Array<f64>#get:length
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 758
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $var$3
  loop $for-loop|0
   local.get $var$3
   local.get $len
   i32.lt_s
   local.set $var$4
   local.get $var$4
   if
    local.get $target
    local.get $var$3
    call $~lib/typedarray/Float64Array#__uget
    local.set $var$5
    local.get $compare
    local.get $var$3
    call $~lib/array/Array<f64>#__uget
    local.set $var$6
    local.get $var$5
    local.get $var$6
    f64.ne
    if
     i32.const 13872
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store $0
     local.get $7
     i32.const 3
     local.get $var$3
     f64.convert_i32_s
     local.get $var$5
     local.get $var$6
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     i32.const 0
     i32.eqz
     if
      i32.const 0
      i32.const 544
      i32.const 764
      i32.const 7
      call $~lib/builtins/abort
      unreachable
     end
    end
    local.get $var$3
    i32.const 1
    i32.add
    local.set $var$3
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testTypedArraySet<~lib/typedarray/Float64Array>
  (local $setSource4 i32)
  (local $setSource5 i32)
  (local $setSource6 i32)
  (local $a i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 20
  memory.fill $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $setSource4
  i32.store $0
  local.get $setSource4
  i32.const 0
  i64.const 7
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 1
  i64.const 8
  call $~lib/typedarray/Int64Array#__set
  local.get $setSource4
  i32.const 2
  i64.const 9
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $setSource5
  i32.store $0 offset=4
  local.get $setSource5
  i32.const 0
  i32.const 100
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 1
  i32.const 101
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 2
  i32.const 102
  call $~lib/typedarray/Uint8Array#__set
  local.get $setSource5
  i32.const 3
  i32.const 103
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $setSource6
  i32.store $0 offset=8
  local.get $setSource6
  i32.const 0
  i32.const 1000
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 1
  i32.const 1001
  call $~lib/typedarray/Int16Array#__set
  local.get $setSource6
  i32.const 2
  i32.const 1002
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Float64Array#constructor
  local.tee $a
  i32.store $0 offset=12
  local.get $a
  global.get $std/typedarray/setSource1
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 0
  call $~lib/typedarray/Float64Array#set<~lib/array/Array<i32>>
  local.get $a
  i32.const 10
  i32.const 3
  i32.const 62
  i32.const 13760
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Float64Array>
  local.get $a
  global.get $std/typedarray/setSource2
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 3
  call $~lib/typedarray/Float64Array#set<~lib/array/Array<f32>>
  local.get $a
  i32.const 10
  i32.const 3
  i32.const 62
  i32.const 13920
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Float64Array>
  local.get $a
  local.get $setSource4
  i32.const 6
  call $~lib/typedarray/Float64Array#set<~lib/typedarray/Int64Array>
  local.get $a
  i32.const 10
  i32.const 3
  i32.const 62
  i32.const 14032
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Float64Array>
  i32.const 0
  drop
  local.get $a
  local.get $setSource5
  i32.const 0
  call $~lib/typedarray/Float64Array#set<~lib/typedarray/Uint8Array>
  local.get $a
  local.get $setSource6
  i32.const 4
  call $~lib/typedarray/Float64Array#set<~lib/typedarray/Int16Array>
  local.get $a
  global.get $std/typedarray/setSource7
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  i32.const 7
  call $~lib/typedarray/Float64Array#set<~lib/array/Array<i8>>
  i32.const 0
  drop
  local.get $a
  i32.const 10
  i32.const 3
  i32.const 62
  i32.const 14144
  call $~lib/rt/__newArray
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.store $0 offset=16
  local.get $6
  call $std/typedarray/valuesEqual<~lib/typedarray/Float64Array>
  global.get $~lib/memory/__stack_pointer
  i32.const 20
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int8Array,i8>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $source
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int8Array#sort@varargs
  local.tee $result
  i32.store $0 offset=4
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 885
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 886
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 887
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 14352
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/typedarray/Int8Array#sort
  drop
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 889
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 890
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 891
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint8Array,u8>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8Array#__set
  local.get $source
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array#sort@varargs
  local.tee $result
  i32.store $0 offset=4
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 885
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 886
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 887
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 14416
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/typedarray/Uint8Array#sort
  drop
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 889
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 890
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint8Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 891
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint8ClampedArray,u8>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $source
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#sort@varargs
  local.tee $result
  i32.store $0 offset=4
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 885
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 886
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 887
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 14480
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/typedarray/Uint8ClampedArray#sort
  drop
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 889
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 890
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 891
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int16Array,i16>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int16Array#__set
  local.get $source
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int16Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int16Array#sort@varargs
  local.tee $result
  i32.store $0 offset=4
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 885
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 886
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 887
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 14544
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/typedarray/Int16Array#sort
  drop
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 889
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int16Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 890
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 891
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint16Array,u16>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint16Array#__set
  local.get $source
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint16Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint16Array#sort@varargs
  local.tee $result
  i32.store $0 offset=4
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 885
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 886
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 887
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 14608
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/typedarray/Uint16Array#sort
  drop
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint16Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 889
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint16Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 890
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint16Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 891
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int32Array,i32>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $source
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int32Array#sort@varargs
  local.tee $result
  i32.store $0 offset=4
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 885
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 886
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 887
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 14672
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/typedarray/Int32Array#sort
  drop
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 889
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 890
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 891
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint32Array,u32>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 2
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint32Array#__set
  local.get $source
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint32Array#sort@varargs
  local.tee $result
  i32.store $0 offset=4
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 885
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 886
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 887
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 14736
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/typedarray/Uint32Array#sort
  drop
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 889
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 890
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 891
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Int64Array,i64>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 2
  i64.const 1
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Int64Array#__set
  local.get $source
  i32.const 0
  i64.const 3
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Int64Array#sort@varargs
  local.tee $result
  i32.store $0 offset=4
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 885
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 2
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 886
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 887
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 14800
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/typedarray/Int64Array#sort
  drop
  local.get $result
  i32.const 0
  call $~lib/typedarray/Int64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 889
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Int64Array#__get
  i64.const 2
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 890
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Int64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 891
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Uint64Array,u64>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 2
  i64.const 1
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 1
  i64.const 2
  call $~lib/typedarray/Uint64Array#__set
  local.get $source
  i32.const 0
  i64.const 3
  call $~lib/typedarray/Uint64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint64Array#sort@varargs
  local.tee $result
  i32.store $0 offset=4
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 885
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 2
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 886
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 887
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 14864
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/typedarray/Uint64Array#sort
  drop
  local.get $result
  i32.const 0
  call $~lib/typedarray/Uint64Array#__get
  i64.const 3
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 889
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Uint64Array#__get
  i64.const 2
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 890
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Uint64Array#__get
  i64.const 1
  i64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 891
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Float32Array,f32>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 2
  f32.const 1
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 1
  f32.const 2
  call $~lib/typedarray/Float32Array#__set
  local.get $source
  i32.const 0
  f32.const 3
  call $~lib/typedarray/Float32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float32Array#sort@varargs
  local.tee $result
  i32.store $0 offset=4
  local.get $result
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 1
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 885
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 2
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 886
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 3
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 887
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 14928
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/typedarray/Float32Array#sort
  drop
  local.get $result
  i32.const 0
  call $~lib/typedarray/Float32Array#__get
  f32.const 3
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 889
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Float32Array#__get
  f32.const 2
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 890
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Float32Array#__get
  f32.const 1
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 891
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/typedarray/testArraySort<~lib/typedarray/Float64Array,f64>
  (local $source i32)
  (local $result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0 offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float64Array#constructor
  local.tee $source
  i32.store $0
  local.get $source
  i32.const 2
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $source
  i32.const 0
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $source
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#sort@varargs
  local.tee $result
  i32.store $0 offset=4
  local.get $result
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 1
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 885
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 2
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 886
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 3
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 887
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 14960
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store $0 offset=8
  local.get $2
  call $~lib/typedarray/Float64Array#sort
  drop
  local.get $result
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 3
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 889
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 1
  call $~lib/typedarray/Float64Array#__get
  f64.const 2
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 890
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $result
  i32.const 2
  call $~lib/typedarray/Float64Array#__get
  f64.const 1
  f64.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 891
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:std/typedarray
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 32
  memory.fill $0
  global.get $~lib/typedarray/Int8Array.BYTES_PER_ELEMENT
  i32.const 1
  i32.eq
  drop
  global.get $~lib/typedarray/Uint8Array.BYTES_PER_ELEMENT
  i32.const 1
  i32.eq
  drop
  global.get $~lib/typedarray/Uint8ClampedArray.BYTES_PER_ELEMENT
  i32.const 1
  i32.eq
  drop
  global.get $~lib/typedarray/Int16Array.BYTES_PER_ELEMENT
  i32.const 2
  i32.eq
  drop
  global.get $~lib/typedarray/Uint16Array.BYTES_PER_ELEMENT
  i32.const 2
  i32.eq
  drop
  global.get $~lib/typedarray/Int32Array.BYTES_PER_ELEMENT
  i32.const 4
  i32.eq
  drop
  global.get $~lib/typedarray/Uint32Array.BYTES_PER_ELEMENT
  i32.const 4
  i32.eq
  drop
  global.get $~lib/typedarray/Int64Array.BYTES_PER_ELEMENT
  i32.const 8
  i32.eq
  drop
  global.get $~lib/typedarray/Uint64Array.BYTES_PER_ELEMENT
  i32.const 8
  i32.eq
  drop
  global.get $~lib/typedarray/Float32Array.BYTES_PER_ELEMENT
  i32.const 4
  i32.eq
  drop
  global.get $~lib/typedarray/Float64Array.BYTES_PER_ELEMENT
  i32.const 8
  i32.eq
  drop
  memory.size $0
  i32.const 16
  i32.shl
  global.get $~lib/memory/__heap_base
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 256
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 288
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 432
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
  i32.const 0
  call $std/typedarray/testInstantiate
  i32.const 5
  call $std/typedarray/testInstantiate
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Int32Array#constructor
  local.tee $0
  i32.store $0
  local.get $0
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  call $~lib/typedarray/Int32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 95
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 96
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load $0 offset=8
  i32.const 3
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 97
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 98
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 99
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 2
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 100
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#subarray
  local.tee $0
  i32.store $0
  local.get $0
  call $~lib/typedarray/Int32Array#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 103
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 1
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 104
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load $0 offset=8
  i32.const 1
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 105
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 106
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 8
  call $~lib/typedarray/Float64Array#constructor
  local.tee $0
  i32.store $0
  local.get $0
  i32.const 0
  f64.const 1
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 1
  f64.const 2
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 2
  f64.const 7
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 3
  f64.const 6
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 4
  f64.const 5
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 5
  f64.const 4
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 6
  f64.const 3
  call $~lib/typedarray/Float64Array#__set
  local.get $0
  i32.const 7
  f64.const 8
  call $~lib/typedarray/Float64Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 2
  i32.const 6
  call $~lib/typedarray/Float64Array#subarray
  local.tee $0
  i32.store $0
  local.get $0
  call $~lib/typedarray/Float64Array#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 122
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 2
  i32.const 8
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 123
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load $0 offset=8
  i32.const 4
  i32.const 8
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 124
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Float64Array#sort@varargs
  drop
  local.get $0
  i32.const 0
  call $~lib/typedarray/Float64Array#__get
  f64.const 4
  f64.eq
  if (result i32)
   local.get $0
   i32.const 1
   call $~lib/typedarray/Float64Array#__get
   f64.const 5
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 2
   call $~lib/typedarray/Float64Array#__get
   f64.const 6
   f64.eq
  else
   i32.const 0
  end
  if (result i32)
   local.get $0
   i32.const 3
   call $~lib/typedarray/Float64Array#__get
   f64.const 7
   f64.eq
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 126
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $0
  i32.store $0
  local.get $0
  i32.const 0
  i32.const -32
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $0
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $0
  i32.const 2
  i32.const 256
  call $~lib/typedarray/Uint8ClampedArray#__set
  local.get $0
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 135
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 136
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 2
  call $~lib/typedarray/Uint8ClampedArray#__get
  i32.const 255
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 137
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int8Array#constructor
  local.tee $0
  i32.store $0
  local.get $0
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $0
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $0
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $0
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $0
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int8Array#__set
  local.get $0
  i32.const 1
  i32.const 1
  i32.const 3
  call $~lib/typedarray/Int8Array#fill
  drop
  local.get $0
  i32.const 5
  i32.const 0
  i32.const 15
  i32.const 704
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt8ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 149
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int8Array#fill
  drop
  local.get $0
  i32.const 5
  i32.const 0
  i32.const 15
  i32.const 784
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt8ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 152
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  i32.const 0
  i32.const -3
  call $~lib/typedarray/Int8Array#fill
  drop
  local.get $0
  i32.const 5
  i32.const 0
  i32.const 15
  i32.const 816
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt8ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 155
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int8Array#fill
  drop
  local.get $0
  i32.const 5
  i32.const 0
  i32.const 15
  i32.const 848
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt8ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 158
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  i32.const 1
  i32.const 0
  call $~lib/typedarray/Int8Array#fill
  drop
  local.get $0
  i32.const 5
  i32.const 0
  i32.const 15
  i32.const 880
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt8ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 161
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int8Array#subarray
  local.tee $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int8Array#fill
  drop
  local.get $2
  call $~lib/typedarray/Int8Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 165
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 166
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.load $0 offset=8
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 167
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 3
  i32.const 0
  i32.const 15
  i32.const 912
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt8ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 168
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 5
  i32.const 0
  i32.const 15
  i32.const 944
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt8ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 169
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int32Array#constructor
  local.tee $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $2
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $2
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $2
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $2
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int32Array#__set
  local.get $2
  i32.const 1
  i32.const 1
  i32.const 3
  call $~lib/typedarray/Int32Array#fill
  drop
  local.get $2
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 976
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 181
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#fill
  drop
  local.get $2
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1024
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 184
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 1
  i32.const 0
  i32.const -3
  call $~lib/typedarray/Int32Array#fill
  drop
  local.get $2
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1072
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 187
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#fill
  drop
  local.get $2
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1120
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 190
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 0
  i32.const 1
  i32.const 0
  call $~lib/typedarray/Int32Array#fill
  drop
  local.get $2
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1168
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 193
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int32Array#subarray
  local.tee $1
  i32.store $0 offset=12
  local.get $1
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#fill
  drop
  local.get $1
  call $~lib/typedarray/Int32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 197
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 1
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 198
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load $0 offset=8
  i32.const 3
  i32.const 4
  i32.mul
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 199
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 3
  i32.const 2
  i32.const 16
  i32.const 1216
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 200
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1248
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 201
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 6
  call $~lib/typedarray/Int8Array#constructor
  local.tee $1
  i32.store $0 offset=12
  local.get $1
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int8Array#__set
  local.get $1
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int8Array#__set
  local.get $1
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int8Array#__set
  local.get $1
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int8Array#__set
  local.get $1
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int8Array#__set
  local.get $1
  i32.const 5
  i32.const 6
  call $~lib/typedarray/Int8Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 1
  i32.const 6
  call $~lib/typedarray/Int8Array#subarray
  local.tee $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 222
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  call $~lib/typedarray/Int8Array#get:length
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 223
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 224
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.load $0 offset=8
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 225
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 1
  i32.const 5
  call $~lib/typedarray/Int8Array#subarray
  local.tee $0
  i32.store $0
  local.get $0
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 228
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/typedarray/Int8Array#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 229
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 230
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load $0 offset=8
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 231
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int8Array#subarray
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.const 0
  call $~lib/typedarray/Int8Array#__get
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 234
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  call $~lib/typedarray/Int8Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 235
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 236
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.load $0 offset=8
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 237
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int32Array#constructor
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $3
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $3
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $3
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $3
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $0
  i32.store $0
  local.get $3
  i32.const 0
  i32.const 3
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#copyWithin
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1296
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 248
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.const 1
  i32.const 3
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#copyWithin
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1344
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 250
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.const 1
  i32.const 2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#copyWithin
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1392
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 252
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.const 2
  i32.const 2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#copyWithin
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1440
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 254
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.const 0
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#copyWithin
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1488
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 256
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.const 1
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#copyWithin
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1536
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 258
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.const 1
  i32.const 2
  i32.const 4
  call $~lib/typedarray/Int32Array#copyWithin
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1584
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 260
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.const 0
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#copyWithin
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1632
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 262
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.const 0
  i32.const -2
  i32.const -1
  call $~lib/typedarray/Int32Array#copyWithin
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1680
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 264
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.const -4
  i32.const -3
  i32.const -2
  call $~lib/typedarray/Int32Array#copyWithin
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1728
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 266
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.const -4
  i32.const -3
  i32.const -1
  call $~lib/typedarray/Int32Array#copyWithin
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1776
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 268
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.const -4
  i32.const -3
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#copyWithin
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=20
  local.get $8
  i32.const 5
  i32.const 2
  i32.const 16
  i32.const 1824
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/isInt32ArrayEqual
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 270
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 5
  call $~lib/typedarray/Int32Array#constructor
  local.tee $0
  i32.store $0
  local.get $0
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  i32.const 2
  i32.const 3
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  i32.const 3
  i32.const 4
  call $~lib/typedarray/Int32Array#__set
  local.get $0
  i32.const 4
  i32.const 5
  call $~lib/typedarray/Int32Array#__set
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 1
  i32.const 4
  call $~lib/typedarray/Int32Array#subarray
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  call $~lib/typedarray/Int32Array#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 282
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 283
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.load $0 offset=8
  i32.const 12
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 284
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 1
  i32.const 3
  call $~lib/typedarray/Int32Array#slice
  local.tee $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 287
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 1
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 288
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  call $~lib/typedarray/Int32Array#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 289
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 290
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.load $0 offset=8
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 291
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.const 1
  i32.const 2
  call $~lib/typedarray/Int32Array#slice
  local.tee $1
  i32.store $0 offset=12
  local.get $1
  i32.const 0
  call $~lib/typedarray/Int32Array#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 294
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  call $~lib/typedarray/Int32Array#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 295
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 296
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load $0 offset=8
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 297
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/typedarray/Int32Array#slice
  local.tee $4
  i32.store $0 offset=24
  local.get $4
  local.get $0
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 300
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  call $~lib/typedarray/Int32Array#get:length
  local.get $0
  call $~lib/typedarray/Int32Array#get:length
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 301
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  local.get $0
  call $~lib/arraybuffer/ArrayBufferView#get:byteOffset
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 302
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.load $0 offset=8
  local.get $0
  i32.load $0 offset=8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 303
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  call $std/typedarray/testReduce<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testReduce<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testReduce<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testReduce<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testReduce<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testReduce<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testReduce<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testReduce<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testReduce<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testReduce<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testReduce<~lib/typedarray/Float64Array,f64>
  call $std/typedarray/testAt<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testAt<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testAt<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testAt<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testAt<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testAt<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testAt<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testAt<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testAt<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testAt<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testAt<~lib/typedarray/Float64Array,f64>
  call $std/typedarray/testReduceRight<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testReduceRight<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testReduceRight<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testReduceRight<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testReduceRight<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testReduceRight<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testReduceRight<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testReduceRight<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testReduceRight<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testReduceRight<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testReduceRight<~lib/typedarray/Float64Array,f64>
  call $std/typedarray/testArrayMap<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testArrayMap<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testArrayMap<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testArrayMap<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testArrayMap<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testArrayMap<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testArrayMap<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testArrayMap<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testArrayMap<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testArrayMap<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testArrayMap<~lib/typedarray/Float64Array,f64>
  call $std/typedarray/testArrayFilter<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testArrayFilter<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testArrayFilter<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testArrayFilter<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testArrayFilter<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testArrayFilter<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testArrayFilter<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testArrayFilter<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testArrayFilter<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testArrayFilter<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testArrayFilter<~lib/typedarray/Float64Array,f64>
  call $std/typedarray/testArraySome<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testArraySome<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testArraySome<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testArraySome<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testArraySome<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testArraySome<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testArraySome<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testArraySome<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testArraySome<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testArraySome<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testArraySome<~lib/typedarray/Float64Array,f64>
  call $std/typedarray/testArrayFindIndex<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testArrayFindIndex<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testArrayFindIndex<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testArrayFindIndex<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testArrayFindIndex<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testArrayFindIndex<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testArrayFindIndex<~lib/typedarray/Float64Array,f64>
  call $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testArrayFindLastIndex<~lib/typedarray/Float64Array,f64>
  call $std/typedarray/testArrayEvery<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testArrayEvery<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testArrayEvery<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testArrayEvery<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testArrayEvery<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testArrayEvery<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testArrayEvery<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testArrayEvery<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testArrayEvery<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testArrayEvery<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testArrayEvery<~lib/typedarray/Float64Array,f64>
  call $std/typedarray/testArrayForEach<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testArrayForEach<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testArrayForEach<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testArrayForEach<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testArrayForEach<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testArrayForEach<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testArrayForEach<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testArrayForEach<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testArrayForEach<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testArrayForEach<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testArrayForEach<~lib/typedarray/Float64Array,f64>
  call $std/typedarray/testArrayReverse<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testArrayReverse<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testArrayReverse<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testArrayReverse<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testArrayReverse<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testArrayReverse<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testArrayReverse<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testArrayReverse<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testArrayReverse<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testArrayReverse<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testArrayReverse<~lib/typedarray/Float64Array,f64>
  call $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testArrayIndexOfAndLastIndexOf<~lib/typedarray/Float64Array,f64>
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Float64Array#constructor
  local.tee $1
  i32.store $0 offset=12
  local.get $1
  i32.const 0
  f64.const nan:0x8000000000000
  call $~lib/typedarray/Float64Array#__set
  local.get $1
  f64.const nan:0x8000000000000
  i32.const 0
  call $~lib/typedarray/Float64Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 653
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  f64.const nan:0x8000000000000
  i32.const 0
  call $~lib/typedarray/Float64Array#includes
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 654
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Float32Array#constructor
  local.tee $4
  i32.store $0 offset=24
  local.get $4
  i32.const 0
  f32.const nan:0x400000
  call $~lib/typedarray/Float32Array#__set
  local.get $4
  f32.const nan:0x400000
  i32.const 0
  call $~lib/typedarray/Float32Array#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 659
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  f32.const nan:0x400000
  i32.const 0
  call $~lib/typedarray/Float32Array#includes
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 660
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  call $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testArrayJoinAndToString<~lib/typedarray/Float64Array,f64>
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 0
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.tee $4
  i32.store $0 offset=24
  local.get $4
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 737
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  call $~lib/arraybuffer/ArrayBuffer#constructor
  local.tee $1
  i32.store $0 offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 2
  i32.const 2
  global.set $~argumentsLength
  i32.const 0
  call $~lib/typedarray/Uint8Array.wrap@varargs
  local.tee $4
  i32.store $0 offset=24
  local.get $4
  call $~lib/typedarray/Uint8Array#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 544
   i32.const 741
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  call $std/typedarray/testArrayWrap<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testArrayWrap<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testArrayWrap<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testArrayWrap<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testArrayWrap<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testArrayWrap<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testArrayWrap<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testArrayWrap<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testArrayWrap<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testArrayWrap<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testArrayWrap<~lib/typedarray/Float64Array,f64>
  call $std/typedarray/testTypedArraySet<~lib/typedarray/Int8Array>
  call $std/typedarray/testTypedArraySet<~lib/typedarray/Uint8Array>
  call $std/typedarray/testTypedArraySet<~lib/typedarray/Uint8ClampedArray>
  call $std/typedarray/testTypedArraySet<~lib/typedarray/Int16Array>
  call $std/typedarray/testTypedArraySet<~lib/typedarray/Uint16Array>
  call $std/typedarray/testTypedArraySet<~lib/typedarray/Int32Array>
  call $std/typedarray/testTypedArraySet<~lib/typedarray/Uint32Array>
  call $std/typedarray/testTypedArraySet<~lib/typedarray/Int64Array>
  call $std/typedarray/testTypedArraySet<~lib/typedarray/Uint64Array>
  call $std/typedarray/testTypedArraySet<~lib/typedarray/Float32Array>
  call $std/typedarray/testTypedArraySet<~lib/typedarray/Float64Array>
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 10
  call $~lib/typedarray/Uint8ClampedArray#constructor
  local.tee $4
  i32.store $0 offset=24
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 3
  call $~lib/typedarray/Float32Array#constructor
  local.tee $1
  i32.store $0 offset=12
  local.get $1
  i32.const 0
  f32.const 400
  call $~lib/typedarray/Float32Array#__set
  local.get $1
  i32.const 1
  f32.const nan:0x400000
  call $~lib/typedarray/Float32Array#__set
  local.get $1
  i32.const 2
  f32.const inf
  call $~lib/typedarray/Float32Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Int64Array#constructor
  local.tee $2
  i32.store $0 offset=8
  local.get $2
  i32.const 0
  i64.const -10
  call $~lib/typedarray/Int64Array#__set
  local.get $2
  i32.const 1
  i64.const 100
  call $~lib/typedarray/Int64Array#__set
  local.get $2
  i32.const 2
  i64.const 10
  call $~lib/typedarray/Int64Array#__set
  local.get $2
  i32.const 3
  i64.const 300
  call $~lib/typedarray/Int64Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  call $~lib/typedarray/Int32Array#constructor
  local.tee $3
  i32.store $0 offset=16
  local.get $3
  i32.const 0
  i32.const 300
  call $~lib/typedarray/Int32Array#__set
  local.get $3
  i32.const 1
  i32.const -1
  call $~lib/typedarray/Int32Array#__set
  local.get $4
  local.get $1
  i32.const 1
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Float32Array>
  local.get $4
  local.get $2
  i32.const 4
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int64Array>
  local.get $4
  local.get $3
  i32.const 8
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int32Array>
  local.get $4
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 14256
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint8ClampedArray>
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Uint32Array#constructor
  local.tee $5
  i32.store $0 offset=28
  local.get $5
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint32Array#__set
  local.get $5
  i32.const 1
  i32.const 300
  call $~lib/typedarray/Uint32Array#__set
  local.get $5
  i32.const 2
  i32.const 100
  call $~lib/typedarray/Uint32Array#__set
  local.get $5
  i32.const 3
  i32.const -1
  call $~lib/typedarray/Uint32Array#__set
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 4
  call $~lib/typedarray/Int16Array#constructor
  local.tee $0
  i32.store $0
  local.get $0
  i32.const 0
  i32.const -10
  call $~lib/typedarray/Int16Array#__set
  local.get $0
  i32.const 1
  i32.const 100
  call $~lib/typedarray/Int16Array#__set
  local.get $0
  i32.const 2
  i32.const 10
  call $~lib/typedarray/Int16Array#__set
  local.get $0
  i32.const 3
  i32.const 300
  call $~lib/typedarray/Int16Array#__set
  local.get $4
  local.get $5
  i32.const 0
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Uint32Array>
  local.get $4
  local.get $0
  i32.const 5
  call $~lib/typedarray/Uint8ClampedArray#set<~lib/typedarray/Int16Array>
  local.get $4
  i32.const 10
  i32.const 0
  i32.const 63
  i32.const 14288
  call $~lib/rt/__newArray
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store $0 offset=4
  local.get $8
  call $std/typedarray/valuesEqual<~lib/typedarray/Uint8ClampedArray>
  call $std/typedarray/testArraySort<~lib/typedarray/Int8Array,i8>
  call $std/typedarray/testArraySort<~lib/typedarray/Uint8Array,u8>
  call $std/typedarray/testArraySort<~lib/typedarray/Uint8ClampedArray,u8>
  call $std/typedarray/testArraySort<~lib/typedarray/Int16Array,i16>
  call $std/typedarray/testArraySort<~lib/typedarray/Uint16Array,u16>
  call $std/typedarray/testArraySort<~lib/typedarray/Int32Array,i32>
  call $std/typedarray/testArraySort<~lib/typedarray/Uint32Array,u32>
  call $std/typedarray/testArraySort<~lib/typedarray/Int64Array,i64>
  call $std/typedarray/testArraySort<~lib/typedarray/Uint64Array,u64>
  call $std/typedarray/testArraySort<~lib/typedarray/Float32Array,f32>
  call $std/typedarray/testArraySort<~lib/typedarray/Float64Array,f64>
  global.get $~lib/memory/__heap_base
  global.set $~lib/memory/__stack_pointer
  call $~lib/rt/itcms/__collect
  global.get $~lib/memory/__stack_pointer
  i32.const 32
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (param $this i32) (param $length i32) (param $alignLog2 i32) (result i32)
  (local $buffer i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $length
  i32.const 1073741820
  local.get $alignLog2
  i32.shr_u
  i32.gt_u
  if
   i32.const 32
   i32.const 80
   i32.const 19
   i32.const 57
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $length
  local.get $alignLog2
  i32.shl
  local.tee $length
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0 offset=4
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $this
  local.get $buffer
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $this
  local.get $buffer
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $this
  local.get $length
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $this
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/typedarray/Int8Array#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 3
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint8Array#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint8ClampedArray#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 5
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Int16Array#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 6
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 1
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint16Array#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 7
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 1
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Int32Array#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 8
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint32Array#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 9
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Int64Array#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 10
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 3
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint64Array#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 11
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 3
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Float32Array#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 12
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 2
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Float64Array#constructor (param $this i32) (param $length i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 13
   call $~lib/rt/itcms/__new
   local.tee $this
   i32.store $0
  end
  global.get $~lib/memory/__stack_pointer
  local.get $this
  local.get $length
  i32.const 3
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $this
  i32.store $0
  local.get $this
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Int32Array#subarray (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $var$5
  local.get $begin
  local.set $var$4
  local.get $end
  local.set $var$3
  local.get $var$5
  call $~lib/typedarray/Int32Array#get:length
  local.set $var$6
  local.get $var$4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$4
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$4
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$4
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$3
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$3
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$3
  local.get $var$3
  local.tee $var$7
  local.get $var$4
  local.tee $var$8
  local.get $var$7
  local.get $var$8
  i32.gt_s
  select
  local.set $var$3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 8
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  local.get $var$5
  i32.load $0
  local.set $var$8
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$4
  i32.const 2
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$3
  local.get $var$4
  i32.sub
  i32.const 2
  i32.shl
  i32.store $0 offset=8
  local.get $var$7
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Float64Array#subarray (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $var$5
  local.get $begin
  local.set $var$4
  local.get $end
  local.set $var$3
  local.get $var$5
  call $~lib/typedarray/Float64Array#get:length
  local.set $var$6
  local.get $var$4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$4
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$4
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$4
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$3
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$3
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$3
  local.get $var$3
  local.tee $var$7
  local.get $var$4
  local.tee $var$8
  local.get $var$7
  local.get $var$8
  i32.gt_s
  select
  local.set $var$3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 13
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  local.get $var$5
  i32.load $0
  local.set $var$8
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$4
  i32.const 3
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$3
  local.get $var$4
  i32.sub
  i32.const 3
  i32.shl
  i32.store $0 offset=8
  local.get $var$7
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Float64Array#sort@varargs (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<f64>|inlined.0 (result i32)
    i32.const 0
    drop
    i32.const 1
    drop
    i32.const 8
    i32.const 4
    i32.eq
    drop
    i32.const 672
    br $~lib/util/sort/COMPARATOR<f64>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Float64Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/rt/__newArray (param $length i32) (param $alignLog2 i32) (param $id i32) (param $data i32) (result i32)
  (local $bufferSize i32)
  (local $buffer i32)
  (local $array i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  local.get $alignLog2
  i32.shl
  local.set $bufferSize
  global.get $~lib/memory/__stack_pointer
  local.get $bufferSize
  i32.const 0
  local.get $data
  call $~lib/rt/__newBuffer
  local.tee $buffer
  i32.store $0
  i32.const 16
  local.get $id
  call $~lib/rt/itcms/__new
  local.set $array
  local.get $array
  local.get $buffer
  i32.store $0
  local.get $array
  local.get $buffer
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $array
  local.get $buffer
  i32.store $0 offset=4
  local.get $array
  local.get $bufferSize
  i32.store $0 offset=8
  local.get $array
  local.get $length
  i32.store $0 offset=12
  local.get $array
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $~lib/typedarray/Int8Array#subarray (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $var$5
  local.get $begin
  local.set $var$4
  local.get $end
  local.set $var$3
  local.get $var$5
  call $~lib/typedarray/Int8Array#get:length
  local.set $var$6
  local.get $var$4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$4
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$4
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$4
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$3
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$3
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$3
  local.get $var$3
  local.tee $var$7
  local.get $var$4
  local.tee $var$8
  local.get $var$7
  local.get $var$8
  i32.gt_s
  select
  local.set $var$3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 3
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  local.get $var$5
  i32.load $0
  local.set $var$8
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$4
  i32.const 0
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$3
  local.get $var$4
  i32.sub
  i32.const 0
  i32.shl
  i32.store $0 offset=8
  local.get $var$7
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Int32Array#slice (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $var$5
  local.get $begin
  local.set $var$4
  local.get $end
  local.set $var$3
  local.get $var$5
  call $~lib/typedarray/Int32Array#get:length
  local.set $var$6
  local.get $var$4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$4
   local.get $var$6
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$4
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$4
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$3
   local.get $var$6
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$3
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$3
  local.get $var$3
  local.get $var$4
  i32.sub
  local.tee $var$7
  i32.const 0
  local.tee $var$8
  local.get $var$7
  local.get $var$8
  i32.gt_s
  select
  local.set $var$6
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $var$6
  call $~lib/typedarray/Int32Array#constructor
  local.tee $var$7
  i32.store $0
  local.get $var$7
  i32.load $0 offset=4
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$4
  i32.const 2
  i32.shl
  i32.add
  local.get $var$6
  i32.const 2
  i32.shl
  memory.copy $0 $0
  local.get $var$7
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Int8Array#map (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Int8Array#get:length
  local.set $var$4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$5
  local.get $var$4
  i32.const 0
  i32.shl
  local.set $var$6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 3
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$6
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0 offset=4
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.get $var$5
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$8
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Uint8Array#map (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$5
  local.get $var$4
  i32.const 0
  i32.shl
  local.set $var$6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$6
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0 offset=4
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.get $var$5
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$8
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Uint8ClampedArray#map (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $var$4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$5
  local.get $var$4
  i32.const 0
  i32.shl
  local.set $var$6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 5
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$6
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0 offset=4
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$8
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    local.get $var$5
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store8 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$8
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Int16Array#map (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$5
  local.get $var$4
  i32.const 1
  i32.shl
  local.set $var$6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 6
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$6
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0 offset=4
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$8
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    local.get $var$5
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store16 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$8
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Uint16Array#map (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Uint16Array#get:length
  local.set $var$4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$5
  local.get $var$4
  i32.const 1
  i32.shl
  local.set $var$6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 7
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$6
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0 offset=4
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$8
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    local.get $var$5
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store16 $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$8
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Int32Array#map (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Int32Array#get:length
  local.set $var$4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$5
  local.get $var$4
  i32.const 2
  i32.shl
  local.set $var$6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 8
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$6
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0 offset=4
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.get $var$5
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$8
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Uint32Array#map (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Uint32Array#get:length
  local.set $var$4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$5
  local.get $var$4
  i32.const 2
  i32.shl
  local.set $var$6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 9
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$6
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0 offset=4
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.get $var$5
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$8
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Int64Array#map (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$5
  local.get $var$4
  i32.const 3
  i32.shl
  local.set $var$6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 10
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$6
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0 offset=4
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.get $var$5
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_i64)
    i64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$8
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Uint64Array#map (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Uint64Array#get:length
  local.set $var$4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$5
  local.get $var$4
  i32.const 3
  i32.shl
  local.set $var$6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 11
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$6
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0 offset=4
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.get $var$5
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_i64)
    i64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$8
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Float32Array#map (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Float32Array#get:length
  local.set $var$4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$5
  local.get $var$4
  i32.const 2
  i32.shl
  local.set $var$6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 12
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$6
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0 offset=4
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$8
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    local.get $var$5
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $f32_i32_i32_=>_f32)
    f32.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$8
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Float64Array#map (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Float64Array#get:length
  local.set $var$4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$5
  local.get $var$4
  i32.const 3
  i32.shl
  local.set $var$6
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 13
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$6
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0 offset=4
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$8
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    local.get $var$5
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $f64_i32_i32_=>_f64)
    f64.store $0
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$8
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/typedarray/Int8Array#filter (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Int8Array#get:length
  local.set $var$4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 3
  call $~lib/rt/itcms/__new
  local.tee $var$5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$4
  i32.const 0
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$6
  i32.store $0 offset=4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$7
  i32.const 0
  local.set $var$8
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $var$11
    local.get $var$11
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $var$6
     local.get $var$8
     local.tee $var$12
     i32.const 1
     i32.add
     local.set $var$8
     local.get $var$12
     i32.const 0
     i32.shl
     i32.add
     local.get $var$11
     i32.store8 $0
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$8
  i32.const 0
  i32.shl
  local.set $var$9
  local.get $var$6
  local.get $var$9
  call $~lib/rt/itcms/__renew
  local.set $var$10
  local.get $var$5
  local.get $var$10
  i32.store $0
  local.get $var$5
  local.get $var$10
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$5
  local.get $var$9
  i32.store $0 offset=8
  local.get $var$5
  local.get $var$10
  i32.store $0 offset=4
  local.get $var$5
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
 )
 (func $~lib/typedarray/Uint8Array#filter (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  call $~lib/rt/itcms/__new
  local.tee $var$5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$4
  i32.const 0
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$6
  i32.store $0 offset=4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$7
  i32.const 0
  local.set $var$8
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $var$11
    local.get $var$11
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $var$6
     local.get $var$8
     local.tee $var$12
     i32.const 1
     i32.add
     local.set $var$8
     local.get $var$12
     i32.const 0
     i32.shl
     i32.add
     local.get $var$11
     i32.store8 $0
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$8
  i32.const 0
  i32.shl
  local.set $var$9
  local.get $var$6
  local.get $var$9
  call $~lib/rt/itcms/__renew
  local.set $var$10
  local.get $var$5
  local.get $var$10
  i32.store $0
  local.get $var$5
  local.get $var$10
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$5
  local.get $var$9
  i32.store $0 offset=8
  local.get $var$5
  local.get $var$10
  i32.store $0 offset=4
  local.get $var$5
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
 )
 (func $~lib/typedarray/Uint8ClampedArray#filter (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $var$4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 5
  call $~lib/rt/itcms/__new
  local.tee $var$5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$4
  i32.const 0
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$6
  i32.store $0 offset=4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$7
  i32.const 0
  local.set $var$8
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $var$11
    local.get $var$11
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $var$6
     local.get $var$8
     local.tee $var$12
     i32.const 1
     i32.add
     local.set $var$8
     local.get $var$12
     i32.const 0
     i32.shl
     i32.add
     local.get $var$11
     i32.store8 $0
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$8
  i32.const 0
  i32.shl
  local.set $var$9
  local.get $var$6
  local.get $var$9
  call $~lib/rt/itcms/__renew
  local.set $var$10
  local.get $var$5
  local.get $var$10
  i32.store $0
  local.get $var$5
  local.get $var$10
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$5
  local.get $var$9
  i32.store $0 offset=8
  local.get $var$5
  local.get $var$10
  i32.store $0 offset=4
  local.get $var$5
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
 )
 (func $~lib/typedarray/Int16Array#filter (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 6
  call $~lib/rt/itcms/__new
  local.tee $var$5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$4
  i32.const 1
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$6
  i32.store $0 offset=4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$7
  i32.const 0
  local.set $var$8
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $var$11
    local.get $var$11
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $var$6
     local.get $var$8
     local.tee $var$12
     i32.const 1
     i32.add
     local.set $var$8
     local.get $var$12
     i32.const 1
     i32.shl
     i32.add
     local.get $var$11
     i32.store16 $0
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$8
  i32.const 1
  i32.shl
  local.set $var$9
  local.get $var$6
  local.get $var$9
  call $~lib/rt/itcms/__renew
  local.set $var$10
  local.get $var$5
  local.get $var$10
  i32.store $0
  local.get $var$5
  local.get $var$10
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$5
  local.get $var$9
  i32.store $0 offset=8
  local.get $var$5
  local.get $var$10
  i32.store $0 offset=4
  local.get $var$5
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
 )
 (func $~lib/typedarray/Uint16Array#filter (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Uint16Array#get:length
  local.set $var$4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 7
  call $~lib/rt/itcms/__new
  local.tee $var$5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$4
  i32.const 1
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$6
  i32.store $0 offset=4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$7
  i32.const 0
  local.set $var$8
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.set $var$11
    local.get $var$11
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $var$6
     local.get $var$8
     local.tee $var$12
     i32.const 1
     i32.add
     local.set $var$8
     local.get $var$12
     i32.const 1
     i32.shl
     i32.add
     local.get $var$11
     i32.store16 $0
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$8
  i32.const 1
  i32.shl
  local.set $var$9
  local.get $var$6
  local.get $var$9
  call $~lib/rt/itcms/__renew
  local.set $var$10
  local.get $var$5
  local.get $var$10
  i32.store $0
  local.get $var$5
  local.get $var$10
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$5
  local.get $var$9
  i32.store $0 offset=8
  local.get $var$5
  local.get $var$10
  i32.store $0 offset=4
  local.get $var$5
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
 )
 (func $~lib/typedarray/Int32Array#filter (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Int32Array#get:length
  local.set $var$4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 8
  call $~lib/rt/itcms/__new
  local.tee $var$5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$4
  i32.const 2
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$6
  i32.store $0 offset=4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$7
  i32.const 0
  local.set $var$8
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$11
    local.get $var$11
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $var$6
     local.get $var$8
     local.tee $var$12
     i32.const 1
     i32.add
     local.set $var$8
     local.get $var$12
     i32.const 2
     i32.shl
     i32.add
     local.get $var$11
     i32.store $0
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$8
  i32.const 2
  i32.shl
  local.set $var$9
  local.get $var$6
  local.get $var$9
  call $~lib/rt/itcms/__renew
  local.set $var$10
  local.get $var$5
  local.get $var$10
  i32.store $0
  local.get $var$5
  local.get $var$10
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$5
  local.get $var$9
  i32.store $0 offset=8
  local.get $var$5
  local.get $var$10
  i32.store $0 offset=4
  local.get $var$5
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
 )
 (func $~lib/typedarray/Uint32Array#filter (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $var$12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Uint32Array#get:length
  local.set $var$4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 9
  call $~lib/rt/itcms/__new
  local.tee $var$5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$4
  i32.const 2
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$6
  i32.store $0 offset=4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$7
  i32.const 0
  local.set $var$8
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $var$11
    local.get $var$11
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $var$6
     local.get $var$8
     local.tee $var$12
     i32.const 1
     i32.add
     local.set $var$8
     local.get $var$12
     i32.const 2
     i32.shl
     i32.add
     local.get $var$11
     i32.store $0
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$8
  i32.const 2
  i32.shl
  local.set $var$9
  local.get $var$6
  local.get $var$9
  call $~lib/rt/itcms/__renew
  local.set $var$10
  local.get $var$5
  local.get $var$10
  i32.store $0
  local.get $var$5
  local.get $var$10
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$5
  local.get $var$9
  i32.store $0 offset=8
  local.get $var$5
  local.get $var$10
  i32.store $0 offset=4
  local.get $var$5
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
 )
 (func $~lib/typedarray/Int64Array#filter (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i64)
  (local $var$12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 10
  call $~lib/rt/itcms/__new
  local.tee $var$5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$4
  i32.const 3
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$6
  i32.store $0 offset=4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$7
  i32.const 0
  local.set $var$8
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$11
    local.get $var$11
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_i32)
    if
     local.get $var$6
     local.get $var$8
     local.tee $var$12
     i32.const 1
     i32.add
     local.set $var$8
     local.get $var$12
     i32.const 3
     i32.shl
     i32.add
     local.get $var$11
     i64.store $0
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$8
  i32.const 3
  i32.shl
  local.set $var$9
  local.get $var$6
  local.get $var$9
  call $~lib/rt/itcms/__renew
  local.set $var$10
  local.get $var$5
  local.get $var$10
  i32.store $0
  local.get $var$5
  local.get $var$10
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$5
  local.get $var$9
  i32.store $0 offset=8
  local.get $var$5
  local.get $var$10
  i32.store $0 offset=4
  local.get $var$5
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
 )
 (func $~lib/typedarray/Uint64Array#filter (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 i64)
  (local $var$12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Uint64Array#get:length
  local.set $var$4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 11
  call $~lib/rt/itcms/__new
  local.tee $var$5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$4
  i32.const 3
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$6
  i32.store $0 offset=4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$7
  i32.const 0
  local.set $var$8
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $var$11
    local.get $var$11
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $i64_i32_i32_=>_i32)
    if
     local.get $var$6
     local.get $var$8
     local.tee $var$12
     i32.const 1
     i32.add
     local.set $var$8
     local.get $var$12
     i32.const 3
     i32.shl
     i32.add
     local.get $var$11
     i64.store $0
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$8
  i32.const 3
  i32.shl
  local.set $var$9
  local.get $var$6
  local.get $var$9
  call $~lib/rt/itcms/__renew
  local.set $var$10
  local.get $var$5
  local.get $var$10
  i32.store $0
  local.get $var$5
  local.get $var$10
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$5
  local.get $var$9
  i32.store $0 offset=8
  local.get $var$5
  local.get $var$10
  i32.store $0 offset=4
  local.get $var$5
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
 )
 (func $~lib/typedarray/Float32Array#filter (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 f32)
  (local $var$12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Float32Array#get:length
  local.set $var$4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 12
  call $~lib/rt/itcms/__new
  local.tee $var$5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$4
  i32.const 2
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$6
  i32.store $0 offset=4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$7
  i32.const 0
  local.set $var$8
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $var$11
    local.get $var$11
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $f32_i32_i32_=>_i32)
    if
     local.get $var$6
     local.get $var$8
     local.tee $var$12
     i32.const 1
     i32.add
     local.set $var$8
     local.get $var$12
     i32.const 2
     i32.shl
     i32.add
     local.get $var$11
     f32.store $0
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$8
  i32.const 2
  i32.shl
  local.set $var$9
  local.get $var$6
  local.get $var$9
  call $~lib/rt/itcms/__renew
  local.set $var$10
  local.get $var$5
  local.get $var$10
  i32.store $0
  local.get $var$5
  local.get $var$10
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$5
  local.get $var$9
  i32.store $0 offset=8
  local.get $var$5
  local.get $var$10
  i32.store $0 offset=4
  local.get $var$5
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
 )
 (func $~lib/typedarray/Float64Array#filter (param $this i32) (param $fn i32) (result i32)
  (local $var$2 i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $var$11 f64)
  (local $var$12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store $0
  local.get $this
  local.set $var$3
  local.get $fn
  local.set $var$2
  local.get $var$3
  call $~lib/typedarray/Float64Array#get:length
  local.set $var$4
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 13
  call $~lib/rt/itcms/__new
  local.tee $var$5
  i32.store $0
  global.get $~lib/memory/__stack_pointer
  local.get $var$4
  i32.const 3
  i32.shl
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $var$6
  i32.store $0 offset=4
  local.get $var$3
  i32.load $0 offset=4
  local.set $var$7
  i32.const 0
  local.set $var$8
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $var$4
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $var$7
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $var$11
    local.get $var$11
    local.get $var$9
    local.get $var$3
    i32.const 3
    global.set $~argumentsLength
    local.get $var$2
    i32.load $0
    call_indirect $0 (type $f64_i32_i32_=>_i32)
    if
     local.get $var$6
     local.get $var$8
     local.tee $var$12
     i32.const 1
     i32.add
     local.set $var$8
     local.get $var$12
     i32.const 3
     i32.shl
     i32.add
     local.get $var$11
     f64.store $0
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $var$8
  i32.const 3
  i32.shl
  local.set $var$9
  local.get $var$6
  local.get $var$9
  call $~lib/rt/itcms/__renew
  local.set $var$10
  local.get $var$5
  local.get $var$10
  i32.store $0
  local.get $var$5
  local.get $var$10
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$5
  local.get $var$9
  i32.store $0 offset=8
  local.get $var$5
  local.get $var$10
  i32.store $0 offset=4
  local.get $var$5
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
 )
 (func $~lib/typedarray/Uint8Array#subarray (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $var$5
  local.get $begin
  local.set $var$4
  local.get $end
  local.set $var$3
  local.get $var$5
  call $~lib/typedarray/Uint8Array#get:length
  local.set $var$6
  local.get $var$4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$4
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$4
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$4
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$3
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$3
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$3
  local.get $var$3
  local.tee $var$7
  local.get $var$4
  local.tee $var$8
  local.get $var$7
  local.get $var$8
  i32.gt_s
  select
  local.set $var$3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  local.get $var$5
  i32.load $0
  local.set $var$8
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$4
  i32.const 0
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$3
  local.get $var$4
  i32.sub
  i32.const 0
  i32.shl
  i32.store $0 offset=8
  local.get $var$7
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Uint8ClampedArray#subarray (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $var$5
  local.get $start
  local.set $var$4
  local.get $end
  local.set $var$3
  local.get $var$5
  call $~lib/typedarray/Uint8ClampedArray#get:length
  local.set $var$6
  local.get $var$4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$4
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$4
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$4
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$3
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$3
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$3
  local.get $var$3
  local.tee $var$7
  local.get $var$4
  local.tee $var$8
  local.get $var$7
  local.get $var$8
  i32.gt_s
  select
  local.set $var$3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 5
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  local.get $var$5
  i32.load $0
  local.set $var$8
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$4
  i32.const 0
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$3
  local.get $var$4
  i32.sub
  i32.const 0
  i32.shl
  i32.store $0 offset=8
  local.get $var$7
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Int16Array#subarray (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $var$5
  local.get $begin
  local.set $var$4
  local.get $end
  local.set $var$3
  local.get $var$5
  call $~lib/typedarray/Int16Array#get:length
  local.set $var$6
  local.get $var$4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$4
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$4
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$4
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$3
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$3
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$3
  local.get $var$3
  local.tee $var$7
  local.get $var$4
  local.tee $var$8
  local.get $var$7
  local.get $var$8
  i32.gt_s
  select
  local.set $var$3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 6
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  local.get $var$5
  i32.load $0
  local.set $var$8
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$4
  i32.const 1
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$3
  local.get $var$4
  i32.sub
  i32.const 1
  i32.shl
  i32.store $0 offset=8
  local.get $var$7
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Uint16Array#subarray (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $var$5
  local.get $begin
  local.set $var$4
  local.get $end
  local.set $var$3
  local.get $var$5
  call $~lib/typedarray/Uint16Array#get:length
  local.set $var$6
  local.get $var$4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$4
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$4
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$4
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$3
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$3
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$3
  local.get $var$3
  local.tee $var$7
  local.get $var$4
  local.tee $var$8
  local.get $var$7
  local.get $var$8
  i32.gt_s
  select
  local.set $var$3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 7
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  local.get $var$5
  i32.load $0
  local.set $var$8
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$4
  i32.const 1
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$3
  local.get $var$4
  i32.sub
  i32.const 1
  i32.shl
  i32.store $0 offset=8
  local.get $var$7
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Uint32Array#subarray (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $var$5
  local.get $begin
  local.set $var$4
  local.get $end
  local.set $var$3
  local.get $var$5
  call $~lib/typedarray/Uint32Array#get:length
  local.set $var$6
  local.get $var$4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$4
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$4
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$4
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$3
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$3
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$3
  local.get $var$3
  local.tee $var$7
  local.get $var$4
  local.tee $var$8
  local.get $var$7
  local.get $var$8
  i32.gt_s
  select
  local.set $var$3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 9
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  local.get $var$5
  i32.load $0
  local.set $var$8
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$4
  i32.const 2
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$3
  local.get $var$4
  i32.sub
  i32.const 2
  i32.shl
  i32.store $0 offset=8
  local.get $var$7
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Int64Array#subarray (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $var$5
  local.get $begin
  local.set $var$4
  local.get $end
  local.set $var$3
  local.get $var$5
  call $~lib/typedarray/Int64Array#get:length
  local.set $var$6
  local.get $var$4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$4
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$4
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$4
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$3
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$3
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$3
  local.get $var$3
  local.tee $var$7
  local.get $var$4
  local.tee $var$8
  local.get $var$7
  local.get $var$8
  i32.gt_s
  select
  local.set $var$3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 10
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  local.get $var$5
  i32.load $0
  local.set $var$8
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$4
  i32.const 3
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$3
  local.get $var$4
  i32.sub
  i32.const 3
  i32.shl
  i32.store $0 offset=8
  local.get $var$7
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Uint64Array#subarray (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $var$5
  local.get $begin
  local.set $var$4
  local.get $end
  local.set $var$3
  local.get $var$5
  call $~lib/typedarray/Uint64Array#get:length
  local.set $var$6
  local.get $var$4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$4
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$4
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$4
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$3
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$3
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$3
  local.get $var$3
  local.tee $var$7
  local.get $var$4
  local.tee $var$8
  local.get $var$7
  local.get $var$8
  i32.gt_s
  select
  local.set $var$3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 11
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  local.get $var$5
  i32.load $0
  local.set $var$8
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$4
  i32.const 3
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$3
  local.get $var$4
  i32.sub
  i32.const 3
  i32.shl
  i32.store $0 offset=8
  local.get $var$7
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Float32Array#subarray (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  local.set $var$5
  local.get $begin
  local.set $var$4
  local.get $end
  local.set $var$3
  local.get $var$5
  call $~lib/typedarray/Float32Array#get:length
  local.set $var$6
  local.get $var$4
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$4
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$4
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$4
  local.get $var$3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $var$6
   local.get $var$3
   i32.add
   local.tee $var$7
   i32.const 0
   local.tee $var$8
   local.get $var$7
   local.get $var$8
   i32.gt_s
   select
  else
   local.get $var$3
   local.tee $var$8
   local.get $var$6
   local.tee $var$7
   local.get $var$8
   local.get $var$7
   i32.lt_s
   select
  end
  local.set $var$3
  local.get $var$3
  local.tee $var$7
  local.get $var$4
  local.tee $var$8
  local.get $var$7
  local.get $var$8
  i32.gt_s
  select
  local.set $var$3
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 12
  call $~lib/rt/itcms/__new
  local.tee $var$7
  i32.store $0
  local.get $var$5
  i32.load $0
  local.set $var$8
  local.get $var$7
  local.get $var$8
  i32.store $0
  local.get $var$7
  local.get $var$8
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$7
  local.get $var$5
  i32.load $0 offset=4
  local.get $var$4
  i32.const 2
  i32.shl
  i32.add
  i32.store $0 offset=4
  local.get $var$7
  local.get $var$3
  local.get $var$4
  i32.sub
  i32.const 2
  i32.shl
  i32.store $0 offset=8
  local.get $var$7
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/util/number/itoa32 (param $value i32) (param $radix i32) (result i32)
  (local $sign i32)
  (local $out i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $radix
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $radix
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 6784
   i32.const 6912
   i32.const 373
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  i32.eqz
  if
   i32.const 6976
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  local.get $value
  i32.const 31
  i32.shr_u
  i32.const 1
  i32.shl
  local.set $sign
  local.get $sign
  if
   i32.const 0
   local.get $value
   i32.sub
   local.set $value
  end
  local.get $radix
  i32.const 10
  i32.eq
  if
   local.get $value
   call $~lib/util/number/decimalCount32
   local.set $var$4
   global.get $~lib/memory/__stack_pointer
   local.get $var$4
   i32.const 1
   i32.shl
   local.get $sign
   i32.add
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $out
   i32.store $0
   local.get $out
   local.get $sign
   i32.add
   local.set $var$7
   local.get $value
   local.set $var$6
   local.get $var$4
   local.set $var$5
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $var$7
   local.get $var$6
   local.get $var$5
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $radix
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $value
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $var$4
    global.get $~lib/memory/__stack_pointer
    local.get $var$4
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $sign
    i32.add
    local.set $var$7
    local.get $value
    local.set $var$6
    local.get $var$4
    local.set $var$5
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $var$7
    local.get $var$6
    i64.extend_i32_u
    local.get $var$5
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $value
    local.set $var$4
    local.get $var$4
    i64.extend_i32_u
    local.get $radix
    call $~lib/util/number/ulog_base
    local.set $var$7
    global.get $~lib/memory/__stack_pointer
    local.get $var$7
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $sign
    i32.add
    local.get $var$4
    i64.extend_i32_u
    local.get $var$7
    local.get $radix
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $sign
  if
   local.get $out
   i32.const 45
   i32.store16 $0
  end
  local.get $out
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $~lib/string/String#substring (param $this i32) (param $start i32) (param $end i32) (result i32)
  (local $len i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $finalStart i32)
  (local $finalEnd i32)
  (local $fromPos i32)
  (local $toPos i32)
  (local $size i32)
  (local $out i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  call $~lib/string/String#get:length
  local.set $len
  local.get $start
  local.tee $var$4
  i32.const 0
  local.tee $var$5
  local.get $var$4
  local.get $var$5
  i32.gt_s
  select
  local.tee $var$5
  local.get $len
  local.tee $var$4
  local.get $var$5
  local.get $var$4
  i32.lt_s
  select
  local.set $finalStart
  local.get $end
  local.tee $var$4
  i32.const 0
  local.tee $var$5
  local.get $var$4
  local.get $var$5
  i32.gt_s
  select
  local.tee $var$5
  local.get $len
  local.tee $var$4
  local.get $var$5
  local.get $var$4
  i32.lt_s
  select
  local.set $finalEnd
  local.get $finalStart
  local.tee $var$4
  local.get $finalEnd
  local.tee $var$5
  local.get $var$4
  local.get $var$5
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.set $fromPos
  local.get $finalStart
  local.tee $var$5
  local.get $finalEnd
  local.tee $var$4
  local.get $var$5
  local.get $var$4
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.set $toPos
  local.get $toPos
  local.get $fromPos
  i32.sub
  local.set $size
  local.get $size
  i32.eqz
  if
   i32.const 6752
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $fromPos
  i32.eqz
  if (result i32)
   local.get $toPos
   local.get $len
   i32.const 1
   i32.shl
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $this
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $size
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $this
  local.get $fromPos
  i32.add
  local.get $size
  memory.copy $0 $0
  local.get $out
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
 )
 (func $~lib/util/string/joinIntegerArray<i8> (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $var$4 i32)
  (local $sepLen i32)
  (local $estLen i32)
  (local $result i32)
  (local $offset i32)
  (local $value i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 6752
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   local.get $dataStart
   i32.load8_s $0
   local.set $var$4
   i32.const 1
   drop
   i32.const 1
   i32.const 4
   i32.le_u
   drop
   local.get $var$4
   i32.const 10
   call $~lib/util/number/itoa32
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $separator
  call $~lib/string/String#get:length
  local.set $sepLen
  i32.const 11
  local.get $sepLen
  i32.add
  local.get $lastIndex
  i32.mul
  i32.const 11
  i32.add
  local.set $estLen
  global.get $~lib/memory/__stack_pointer
  local.get $estLen
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0
  i32.const 0
  local.set $offset
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $lastIndex
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $dataStart
    local.get $var$4
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s $0
    local.set $value
    local.get $offset
    local.get $result
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $value
    call $~lib/util/number/itoa_buffered<i8>
    i32.add
    local.set $offset
    local.get $sepLen
    if
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $separator
     local.get $sepLen
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $offset
     local.get $sepLen
     i32.add
     local.set $offset
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $dataStart
  local.get $lastIndex
  i32.const 0
  i32.shl
  i32.add
  i32.load8_s $0
  local.set $value
  local.get $offset
  local.get $result
  local.get $offset
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  call $~lib/util/number/itoa_buffered<i8>
  i32.add
  local.set $offset
  local.get $estLen
  local.get $offset
  i32.gt_s
  if
   local.get $result
   i32.const 0
   local.get $offset
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $result
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/util/number/utoa32 (param $value i32) (param $radix i32) (result i32)
  (local $out i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $radix
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $radix
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 6784
   i32.const 6912
   i32.const 350
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  i32.eqz
  if
   i32.const 6976
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $radix
  i32.const 10
  i32.eq
  if
   local.get $value
   call $~lib/util/number/decimalCount32
   local.set $var$3
   global.get $~lib/memory/__stack_pointer
   local.get $var$3
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $out
   i32.store $0
   local.get $out
   local.set $var$6
   local.get $value
   local.set $var$5
   local.get $var$3
   local.set $var$4
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $var$6
   local.get $var$5
   local.get $var$4
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $radix
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $value
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $var$3
    global.get $~lib/memory/__stack_pointer
    local.get $var$3
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.set $var$6
    local.get $value
    local.set $var$5
    local.get $var$3
    local.set $var$4
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $var$6
    local.get $var$5
    i64.extend_i32_u
    local.get $var$4
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $value
    i64.extend_i32_u
    local.get $radix
    call $~lib/util/number/ulog_base
    local.set $var$3
    global.get $~lib/memory/__stack_pointer
    local.get $var$3
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $value
    i64.extend_i32_u
    local.get $var$3
    local.get $radix
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $out
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $~lib/util/string/joinIntegerArray<u8> (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $var$4 i32)
  (local $sepLen i32)
  (local $estLen i32)
  (local $result i32)
  (local $offset i32)
  (local $value i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 6752
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   local.get $dataStart
   i32.load8_u $0
   local.set $var$4
   i32.const 0
   drop
   i32.const 1
   i32.const 4
   i32.le_u
   drop
   local.get $var$4
   i32.const 10
   call $~lib/util/number/utoa32
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $separator
  call $~lib/string/String#get:length
  local.set $sepLen
  i32.const 10
  local.get $sepLen
  i32.add
  local.get $lastIndex
  i32.mul
  i32.const 10
  i32.add
  local.set $estLen
  global.get $~lib/memory/__stack_pointer
  local.get $estLen
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0
  i32.const 0
  local.set $offset
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $lastIndex
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $dataStart
    local.get $var$4
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u $0
    local.set $value
    local.get $offset
    local.get $result
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $value
    call $~lib/util/number/itoa_buffered<u8>
    i32.add
    local.set $offset
    local.get $sepLen
    if
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $separator
     local.get $sepLen
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $offset
     local.get $sepLen
     i32.add
     local.set $offset
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $dataStart
  local.get $lastIndex
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u $0
  local.set $value
  local.get $offset
  local.get $result
  local.get $offset
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  call $~lib/util/number/itoa_buffered<u8>
  i32.add
  local.set $offset
  local.get $estLen
  local.get $offset
  i32.gt_s
  if
   local.get $result
   i32.const 0
   local.get $offset
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $result
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/util/string/joinIntegerArray<i16> (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $var$4 i32)
  (local $sepLen i32)
  (local $estLen i32)
  (local $result i32)
  (local $offset i32)
  (local $value i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 6752
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   local.get $dataStart
   i32.load16_s $0
   local.set $var$4
   i32.const 1
   drop
   i32.const 2
   i32.const 4
   i32.le_u
   drop
   local.get $var$4
   i32.const 10
   call $~lib/util/number/itoa32
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $separator
  call $~lib/string/String#get:length
  local.set $sepLen
  i32.const 11
  local.get $sepLen
  i32.add
  local.get $lastIndex
  i32.mul
  i32.const 11
  i32.add
  local.set $estLen
  global.get $~lib/memory/__stack_pointer
  local.get $estLen
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0
  i32.const 0
  local.set $offset
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $lastIndex
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $dataStart
    local.get $var$4
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s $0
    local.set $value
    local.get $offset
    local.get $result
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $value
    call $~lib/util/number/itoa_buffered<i16>
    i32.add
    local.set $offset
    local.get $sepLen
    if
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $separator
     local.get $sepLen
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $offset
     local.get $sepLen
     i32.add
     local.set $offset
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $dataStart
  local.get $lastIndex
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s $0
  local.set $value
  local.get $offset
  local.get $result
  local.get $offset
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  call $~lib/util/number/itoa_buffered<i16>
  i32.add
  local.set $offset
  local.get $estLen
  local.get $offset
  i32.gt_s
  if
   local.get $result
   i32.const 0
   local.get $offset
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $result
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/util/string/joinIntegerArray<u16> (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $var$4 i32)
  (local $sepLen i32)
  (local $estLen i32)
  (local $result i32)
  (local $offset i32)
  (local $value i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 6752
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   local.get $dataStart
   i32.load16_u $0
   local.set $var$4
   i32.const 0
   drop
   i32.const 2
   i32.const 4
   i32.le_u
   drop
   local.get $var$4
   i32.const 10
   call $~lib/util/number/utoa32
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $separator
  call $~lib/string/String#get:length
  local.set $sepLen
  i32.const 10
  local.get $sepLen
  i32.add
  local.get $lastIndex
  i32.mul
  i32.const 10
  i32.add
  local.set $estLen
  global.get $~lib/memory/__stack_pointer
  local.get $estLen
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0
  i32.const 0
  local.set $offset
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $lastIndex
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $dataStart
    local.get $var$4
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u $0
    local.set $value
    local.get $offset
    local.get $result
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $value
    call $~lib/util/number/itoa_buffered<u16>
    i32.add
    local.set $offset
    local.get $sepLen
    if
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $separator
     local.get $sepLen
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $offset
     local.get $sepLen
     i32.add
     local.set $offset
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $dataStart
  local.get $lastIndex
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u $0
  local.set $value
  local.get $offset
  local.get $result
  local.get $offset
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  call $~lib/util/number/itoa_buffered<u16>
  i32.add
  local.set $offset
  local.get $estLen
  local.get $offset
  i32.gt_s
  if
   local.get $result
   i32.const 0
   local.get $offset
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $result
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/util/string/joinIntegerArray<i32> (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $var$4 i32)
  (local $sepLen i32)
  (local $estLen i32)
  (local $result i32)
  (local $offset i32)
  (local $value i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 6752
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   local.get $dataStart
   i32.load $0
   local.set $var$4
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   local.get $var$4
   i32.const 10
   call $~lib/util/number/itoa32
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $separator
  call $~lib/string/String#get:length
  local.set $sepLen
  i32.const 11
  local.get $sepLen
  i32.add
  local.get $lastIndex
  i32.mul
  i32.const 11
  i32.add
  local.set $estLen
  global.get $~lib/memory/__stack_pointer
  local.get $estLen
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0
  i32.const 0
  local.set $offset
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $lastIndex
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $dataStart
    local.get $var$4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    local.get $offset
    local.get $result
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $value
    call $~lib/util/number/itoa_buffered<i32>
    i32.add
    local.set $offset
    local.get $sepLen
    if
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $separator
     local.get $sepLen
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $offset
     local.get $sepLen
     i32.add
     local.set $offset
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $dataStart
  local.get $lastIndex
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  local.get $offset
  local.get $result
  local.get $offset
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  call $~lib/util/number/itoa_buffered<i32>
  i32.add
  local.set $offset
  local.get $estLen
  local.get $offset
  i32.gt_s
  if
   local.get $result
   i32.const 0
   local.get $offset
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $result
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/util/string/joinIntegerArray<u32> (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $var$4 i32)
  (local $sepLen i32)
  (local $estLen i32)
  (local $result i32)
  (local $offset i32)
  (local $value i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 6752
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   local.get $dataStart
   i32.load $0
   local.set $var$4
   i32.const 0
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   local.get $var$4
   i32.const 10
   call $~lib/util/number/utoa32
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $separator
  call $~lib/string/String#get:length
  local.set $sepLen
  i32.const 10
  local.get $sepLen
  i32.add
  local.get $lastIndex
  i32.mul
  i32.const 10
  i32.add
  local.set $estLen
  global.get $~lib/memory/__stack_pointer
  local.get $estLen
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0
  i32.const 0
  local.set $offset
  i32.const 0
  local.set $var$4
  loop $for-loop|0
   local.get $var$4
   local.get $lastIndex
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $dataStart
    local.get $var$4
    i32.const 2
    i32.shl
    i32.add
    i32.load $0
    local.set $value
    local.get $offset
    local.get $result
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $value
    call $~lib/util/number/itoa_buffered<u32>
    i32.add
    local.set $offset
    local.get $sepLen
    if
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $separator
     local.get $sepLen
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $offset
     local.get $sepLen
     i32.add
     local.set $offset
    end
    local.get $var$4
    i32.const 1
    i32.add
    local.set $var$4
    br $for-loop|0
   end
  end
  local.get $dataStart
  local.get $lastIndex
  i32.const 2
  i32.shl
  i32.add
  i32.load $0
  local.set $value
  local.get $offset
  local.get $result
  local.get $offset
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  call $~lib/util/number/itoa_buffered<u32>
  i32.add
  local.set $offset
  local.get $estLen
  local.get $offset
  i32.gt_s
  if
   local.get $result
   i32.const 0
   local.get $offset
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $result
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/util/number/itoa64 (param $value i64) (param $radix i32) (result i32)
  (local $sign i32)
  (local $out i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $var$9 i64)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $radix
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $radix
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 6784
   i32.const 6912
   i32.const 431
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  i64.const 0
  i64.ne
  i32.eqz
  if
   i32.const 6976
   local.set $10
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  end
  local.get $value
  i64.const 63
  i64.shr_u
  i32.wrap_i64
  i32.const 1
  i32.shl
  local.set $sign
  local.get $sign
  if
   i64.const 0
   local.get $value
   i64.sub
   local.set $value
  end
  local.get $radix
  i32.const 10
  i32.eq
  if
   local.get $value
   global.get $~lib/builtins/u32.MAX_VALUE
   i64.extend_i32_u
   i64.le_u
   if
    local.get $value
    i32.wrap_i64
    local.set $var$4
    local.get $var$4
    call $~lib/util/number/decimalCount32
    local.set $var$5
    global.get $~lib/memory/__stack_pointer
    local.get $var$5
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $sign
    i32.add
    local.set $var$8
    local.get $var$4
    local.set $var$7
    local.get $var$5
    local.set $var$6
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $var$8
    local.get $var$7
    local.get $var$6
    call $~lib/util/number/utoa32_dec_lut
   else
    local.get $value
    call $~lib/util/number/decimalCount64High
    local.set $var$5
    global.get $~lib/memory/__stack_pointer
    local.get $var$5
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $sign
    i32.add
    local.set $var$7
    local.get $value
    local.set $var$9
    local.get $var$5
    local.set $var$6
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $var$7
    local.get $var$9
    local.get $var$6
    call $~lib/util/number/utoa64_dec_lut
   end
  else
   local.get $radix
   i32.const 16
   i32.eq
   if
    i32.const 63
    local.get $value
    i64.clz
    i32.wrap_i64
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $var$5
    global.get $~lib/memory/__stack_pointer
    local.get $var$5
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $sign
    i32.add
    local.set $var$4
    local.get $value
    local.set $var$9
    local.get $var$5
    local.set $var$8
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $var$4
    local.get $var$9
    local.get $var$8
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $value
    local.get $radix
    call $~lib/util/number/ulog_base
    local.set $var$5
    global.get $~lib/memory/__stack_pointer
    local.get $var$5
    i32.const 1
    i32.shl
    local.get $sign
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $sign
    i32.add
    local.get $value
    local.get $var$5
    local.get $radix
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $sign
  if
   local.get $out
   i32.const 45
   i32.store16 $0
  end
  local.get $out
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $~lib/util/string/joinIntegerArray<i64> (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $var$4 i64)
  (local $sepLen i32)
  (local $estLen i32)
  (local $result i32)
  (local $offset i32)
  (local $value i64)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 6752
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   local.get $dataStart
   i64.load $0
   local.set $var$4
   i32.const 1
   drop
   i32.const 8
   i32.const 4
   i32.le_u
   drop
   local.get $var$4
   i32.wrap_i64
   i64.extend_i32_s
   i32.const 10
   call $~lib/util/number/itoa64
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $separator
  call $~lib/string/String#get:length
  local.set $sepLen
  i32.const 21
  local.get $sepLen
  i32.add
  local.get $lastIndex
  i32.mul
  i32.const 21
  i32.add
  local.set $estLen
  global.get $~lib/memory/__stack_pointer
  local.get $estLen
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0
  i32.const 0
  local.set $offset
  i32.const 0
  local.set $var$10
  loop $for-loop|0
   local.get $var$10
   local.get $lastIndex
   i32.lt_s
   local.set $var$11
   local.get $var$11
   if
    local.get $dataStart
    local.get $var$10
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    local.get $offset
    local.get $result
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $value
    call $~lib/util/number/itoa_buffered<i64>
    i32.add
    local.set $offset
    local.get $sepLen
    if
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $separator
     local.get $sepLen
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $offset
     local.get $sepLen
     i32.add
     local.set $offset
    end
    local.get $var$10
    i32.const 1
    i32.add
    local.set $var$10
    br $for-loop|0
   end
  end
  local.get $dataStart
  local.get $lastIndex
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  local.set $value
  local.get $offset
  local.get $result
  local.get $offset
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  call $~lib/util/number/itoa_buffered<i64>
  i32.add
  local.set $offset
  local.get $estLen
  local.get $offset
  i32.gt_s
  if
   local.get $result
   i32.const 0
   local.get $offset
   call $~lib/string/String#substring
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $result
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
 )
 (func $~lib/util/number/utoa64 (param $value i64) (param $radix i32) (result i32)
  (local $out i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i64)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $radix
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $radix
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 6784
   i32.const 6912
   i32.const 401
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $value
  i64.const 0
  i64.ne
  i32.eqz
  if
   i32.const 6976
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  local.get $radix
  i32.const 10
  i32.eq
  if
   local.get $value
   global.get $~lib/builtins/u32.MAX_VALUE
   i64.extend_i32_u
   i64.le_u
   if
    local.get $value
    i32.wrap_i64
    local.set $var$3
    local.get $var$3
    call $~lib/util/number/decimalCount32
    local.set $var$4
    global.get $~lib/memory/__stack_pointer
    local.get $var$4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.set $var$7
    local.get $var$3
    local.set $var$6
    local.get $var$4
    local.set $var$5
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $var$7
    local.get $var$6
    local.get $var$5
    call $~lib/util/number/utoa32_dec_lut
   else
    local.get $value
    call $~lib/util/number/decimalCount64High
    local.set $var$4
    global.get $~lib/memory/__stack_pointer
    local.get $var$4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.set $var$6
    local.get $value
    local.set $var$8
    local.get $var$4
    local.set $var$5
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $var$6
    local.get $var$8
    local.get $var$5
    call $~lib/util/number/utoa64_dec_lut
   end
  else
   local.get $radix
   i32.const 16
   i32.eq
   if
    i32.const 63
    local.get $value
    i64.clz
    i32.wrap_i64
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $var$4
    global.get $~lib/memory/__stack_pointer
    local.get $var$4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.set $var$3
    local.get $value
    local.set $var$8
    local.get $var$4
    local.set $var$7
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $var$3
    local.get $var$8
    local.get $var$7
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $value
    local.get $radix
    call $~lib/util/number/ulog_base
    local.set $var$4
    global.get $~lib/memory/__stack_pointer
    local.get $var$4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $out
    i32.store $0
    local.get $out
    local.get $value
    local.get $var$4
    local.get $radix
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $out
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/util/string/joinIntegerArray<u64> (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $var$4 i64)
  (local $sepLen i32)
  (local $estLen i32)
  (local $result i32)
  (local $offset i32)
  (local $value i64)
  (local $var$10 i32)
  (local $var$11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 6752
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   local.get $dataStart
   i64.load $0
   local.set $var$4
   i32.const 0
   drop
   i32.const 8
   i32.const 4
   i32.le_u
   drop
   local.get $var$4
   i32.const 10
   call $~lib/util/number/utoa64
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $separator
  call $~lib/string/String#get:length
  local.set $sepLen
  i32.const 20
  local.get $sepLen
  i32.add
  local.get $lastIndex
  i32.mul
  i32.const 20
  i32.add
  local.set $estLen
  global.get $~lib/memory/__stack_pointer
  local.get $estLen
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0
  i32.const 0
  local.set $offset
  i32.const 0
  local.set $var$10
  loop $for-loop|0
   local.get $var$10
   local.get $lastIndex
   i32.lt_s
   local.set $var$11
   local.get $var$11
   if
    local.get $dataStart
    local.get $var$10
    i32.const 3
    i32.shl
    i32.add
    i64.load $0
    local.set $value
    local.get $offset
    local.get $result
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $value
    call $~lib/util/number/itoa_buffered<u64>
    i32.add
    local.set $offset
    local.get $sepLen
    if
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $separator
     local.get $sepLen
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $offset
     local.get $sepLen
     i32.add
     local.set $offset
    end
    local.get $var$10
    i32.const 1
    i32.add
    local.set $var$10
    br $for-loop|0
   end
  end
  local.get $dataStart
  local.get $lastIndex
  i32.const 3
  i32.shl
  i32.add
  i64.load $0
  local.set $value
  local.get $offset
  local.get $result
  local.get $offset
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  call $~lib/util/number/itoa_buffered<u64>
  i32.add
  local.set $offset
  local.get $estLen
  local.get $offset
  i32.gt_s
  if
   local.get $result
   i32.const 0
   local.get $offset
   call $~lib/string/String#substring
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $result
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
 )
 (func $~lib/util/number/dtoa (param $value f64) (result i32)
  (local $size i32)
  (local $result i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $value
  f64.const 0
  f64.eq
  if
   i32.const 8640
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $value
  local.get $value
  f64.sub
  f64.const 0
  f64.eq
  i32.eqz
  if
   local.get $value
   local.get $value
   f64.ne
   if
    i32.const 8672
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   i32.const 8704
   i32.const 8752
   local.get $value
   f64.const 0
   f64.lt
   select
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 8784
  local.get $value
  call $~lib/util/number/dtoa_core
  i32.const 1
  i32.shl
  local.set $size
  global.get $~lib/memory/__stack_pointer
  local.get $size
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0
  local.get $result
  i32.const 8784
  local.get $size
  memory.copy $0 $0
  local.get $result
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/util/string/joinFloatArray<f32> (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $sepLen i32)
  (local $estLen i32)
  (local $result i32)
  (local $offset i32)
  (local $value f32)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 6752
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   local.get $dataStart
   f32.load $0
   f64.promote_f32
   call $~lib/util/number/dtoa
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $separator
  call $~lib/string/String#get:length
  local.set $sepLen
  i32.const 28
  local.get $sepLen
  i32.add
  local.get $lastIndex
  i32.mul
  i32.const 28
  i32.add
  local.set $estLen
  global.get $~lib/memory/__stack_pointer
  local.get $estLen
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0
  i32.const 0
  local.set $offset
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $lastIndex
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $dataStart
    local.get $var$9
    i32.const 2
    i32.shl
    i32.add
    f32.load $0
    local.set $value
    local.get $offset
    local.get $result
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $value
    f64.promote_f32
    call $~lib/util/number/dtoa_buffered
    i32.add
    local.set $offset
    local.get $sepLen
    if
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $separator
     local.get $sepLen
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $offset
     local.get $sepLen
     i32.add
     local.set $offset
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $dataStart
  local.get $lastIndex
  i32.const 2
  i32.shl
  i32.add
  f32.load $0
  local.set $value
  local.get $offset
  local.get $result
  local.get $offset
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  f64.promote_f32
  call $~lib/util/number/dtoa_buffered
  i32.add
  local.set $offset
  local.get $estLen
  local.get $offset
  i32.gt_s
  if
   local.get $result
   i32.const 0
   local.get $offset
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $result
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/util/string/joinFloatArray<f64> (param $dataStart i32) (param $length i32) (param $separator i32) (result i32)
  (local $lastIndex i32)
  (local $sepLen i32)
  (local $estLen i32)
  (local $result i32)
  (local $offset i32)
  (local $value f64)
  (local $var$9 i32)
  (local $var$10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1
  i32.sub
  local.set $lastIndex
  local.get $lastIndex
  i32.const 0
  i32.lt_s
  if
   i32.const 6752
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $lastIndex
  i32.eqz
  if
   local.get $dataStart
   f64.load $0
   call $~lib/util/number/dtoa
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $separator
  call $~lib/string/String#get:length
  local.set $sepLen
  i32.const 28
  local.get $sepLen
  i32.add
  local.get $lastIndex
  i32.mul
  i32.const 28
  i32.add
  local.set $estLen
  global.get $~lib/memory/__stack_pointer
  local.get $estLen
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $result
  i32.store $0
  i32.const 0
  local.set $offset
  i32.const 0
  local.set $var$9
  loop $for-loop|0
   local.get $var$9
   local.get $lastIndex
   i32.lt_s
   local.set $var$10
   local.get $var$10
   if
    local.get $dataStart
    local.get $var$9
    i32.const 3
    i32.shl
    i32.add
    f64.load $0
    local.set $value
    local.get $offset
    local.get $result
    local.get $offset
    i32.const 1
    i32.shl
    i32.add
    local.get $value
    call $~lib/util/number/dtoa_buffered
    i32.add
    local.set $offset
    local.get $sepLen
    if
     local.get $result
     local.get $offset
     i32.const 1
     i32.shl
     i32.add
     local.get $separator
     local.get $sepLen
     i32.const 1
     i32.shl
     memory.copy $0 $0
     local.get $offset
     local.get $sepLen
     i32.add
     local.set $offset
    end
    local.get $var$9
    i32.const 1
    i32.add
    local.set $var$9
    br $for-loop|0
   end
  end
  local.get $dataStart
  local.get $lastIndex
  i32.const 3
  i32.shl
  i32.add
  f64.load $0
  local.set $value
  local.get $offset
  local.get $result
  local.get $offset
  i32.const 1
  i32.shl
  i32.add
  local.get $value
  call $~lib/util/number/dtoa_buffered
  i32.add
  local.set $offset
  local.get $estLen
  local.get $offset
  i32.gt_s
  if
   local.get $result
   i32.const 0
   local.get $offset
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $result
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/arraybuffer/ArrayBuffer#constructor (param $this i32) (param $length i32) (result i32)
  (local $buffer i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $length
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 32
   i32.const 80
   i32.const 52
   i32.const 43
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $length
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $buffer
  i32.store $0
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $buffer
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/typedarray/Uint8Array.wrap (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $var$5
  local.get $byteOffset
  local.set $var$4
  local.get $length
  local.set $var$3
  local.get $var$5
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $var$7
  local.get $var$4
  local.get $var$7
  i32.gt_u
  local.get $var$4
  i32.const 0
  i32.and
  i32.or
  if
   i32.const 336
   i32.const 608
   i32.const 1860
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$3
  i32.const 0
  i32.lt_s
  if
   local.get $var$3
   i32.const -1
   i32.eq
   if
    local.get $var$7
    i32.const 0
    i32.and
    if
     i32.const 32
     i32.const 608
     i32.const 1865
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$7
    local.get $var$4
    i32.sub
    local.set $var$6
   else
    i32.const 32
    i32.const 608
    i32.const 1869
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  else
   local.get $var$3
   i32.const 0
   i32.shl
   local.set $var$6
   local.get $var$4
   local.get $var$6
   i32.add
   local.get $var$7
   i32.gt_s
   if
    i32.const 32
    i32.const 608
    i32.const 1874
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 4
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$8
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$8
  local.get $var$5
  local.get $var$4
  i32.add
  i32.store $0 offset=4
  local.get $var$8
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/arraybuffer/ArrayBuffer#slice (param $this i32) (param $begin i32) (param $end i32) (result i32)
  (local $length i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $outSize i32)
  (local $out i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $this
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $length
  local.get $begin
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $length
   local.get $begin
   i32.add
   local.tee $var$4
   i32.const 0
   local.tee $var$5
   local.get $var$4
   local.get $var$5
   i32.gt_s
   select
  else
   local.get $begin
   local.tee $var$5
   local.get $length
   local.tee $var$4
   local.get $var$5
   local.get $var$4
   i32.lt_s
   select
  end
  local.set $begin
  local.get $end
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $length
   local.get $end
   i32.add
   local.tee $var$4
   i32.const 0
   local.tee $var$5
   local.get $var$4
   local.get $var$5
   i32.gt_s
   select
  else
   local.get $end
   local.tee $var$5
   local.get $length
   local.tee $var$4
   local.get $var$5
   local.get $var$4
   i32.lt_s
   select
  end
  local.set $end
  local.get $end
  local.get $begin
  i32.sub
  local.tee $var$4
  i32.const 0
  local.tee $var$5
  local.get $var$4
  local.get $var$5
  i32.gt_s
  select
  local.set $outSize
  global.get $~lib/memory/__stack_pointer
  local.get $outSize
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $out
  i32.store $0
  local.get $out
  local.get $this
  local.get $begin
  i32.add
  local.get $outSize
  memory.copy $0 $0
  local.get $out
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $~lib/typedarray/Int8Array.wrap (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $var$5
  local.get $byteOffset
  local.set $var$4
  local.get $length
  local.set $var$3
  local.get $var$5
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $var$7
  local.get $var$4
  local.get $var$7
  i32.gt_u
  local.get $var$4
  i32.const 0
  i32.and
  i32.or
  if
   i32.const 336
   i32.const 608
   i32.const 1860
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$3
  i32.const 0
  i32.lt_s
  if
   local.get $var$3
   i32.const -1
   i32.eq
   if
    local.get $var$7
    i32.const 0
    i32.and
    if
     i32.const 32
     i32.const 608
     i32.const 1865
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$7
    local.get $var$4
    i32.sub
    local.set $var$6
   else
    i32.const 32
    i32.const 608
    i32.const 1869
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  else
   local.get $var$3
   i32.const 0
   i32.shl
   local.set $var$6
   local.get $var$4
   local.get $var$6
   i32.add
   local.get $var$7
   i32.gt_s
   if
    i32.const 32
    i32.const 608
    i32.const 1874
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 3
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$8
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$8
  local.get $var$5
  local.get $var$4
  i32.add
  i32.store $0 offset=4
  local.get $var$8
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Uint8ClampedArray.wrap (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $var$5
  local.get $byteOffset
  local.set $var$4
  local.get $length
  local.set $var$3
  local.get $var$5
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $var$7
  local.get $var$4
  local.get $var$7
  i32.gt_u
  local.get $var$4
  i32.const 0
  i32.and
  i32.or
  if
   i32.const 336
   i32.const 608
   i32.const 1860
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$3
  i32.const 0
  i32.lt_s
  if
   local.get $var$3
   i32.const -1
   i32.eq
   if
    local.get $var$7
    i32.const 0
    i32.and
    if
     i32.const 32
     i32.const 608
     i32.const 1865
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$7
    local.get $var$4
    i32.sub
    local.set $var$6
   else
    i32.const 32
    i32.const 608
    i32.const 1869
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  else
   local.get $var$3
   i32.const 0
   i32.shl
   local.set $var$6
   local.get $var$4
   local.get $var$6
   i32.add
   local.get $var$7
   i32.gt_s
   if
    i32.const 32
    i32.const 608
    i32.const 1874
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 5
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$8
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$8
  local.get $var$5
  local.get $var$4
  i32.add
  i32.store $0 offset=4
  local.get $var$8
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Int16Array.wrap (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $var$5
  local.get $byteOffset
  local.set $var$4
  local.get $length
  local.set $var$3
  local.get $var$5
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $var$7
  local.get $var$4
  local.get $var$7
  i32.gt_u
  local.get $var$4
  i32.const 1
  i32.and
  i32.or
  if
   i32.const 336
   i32.const 608
   i32.const 1860
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$3
  i32.const 0
  i32.lt_s
  if
   local.get $var$3
   i32.const -1
   i32.eq
   if
    local.get $var$7
    i32.const 1
    i32.and
    if
     i32.const 32
     i32.const 608
     i32.const 1865
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$7
    local.get $var$4
    i32.sub
    local.set $var$6
   else
    i32.const 32
    i32.const 608
    i32.const 1869
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  else
   local.get $var$3
   i32.const 1
   i32.shl
   local.set $var$6
   local.get $var$4
   local.get $var$6
   i32.add
   local.get $var$7
   i32.gt_s
   if
    i32.const 32
    i32.const 608
    i32.const 1874
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 6
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$8
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$8
  local.get $var$5
  local.get $var$4
  i32.add
  i32.store $0 offset=4
  local.get $var$8
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Uint16Array.wrap (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $var$5
  local.get $byteOffset
  local.set $var$4
  local.get $length
  local.set $var$3
  local.get $var$5
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $var$7
  local.get $var$4
  local.get $var$7
  i32.gt_u
  local.get $var$4
  i32.const 1
  i32.and
  i32.or
  if
   i32.const 336
   i32.const 608
   i32.const 1860
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$3
  i32.const 0
  i32.lt_s
  if
   local.get $var$3
   i32.const -1
   i32.eq
   if
    local.get $var$7
    i32.const 1
    i32.and
    if
     i32.const 32
     i32.const 608
     i32.const 1865
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$7
    local.get $var$4
    i32.sub
    local.set $var$6
   else
    i32.const 32
    i32.const 608
    i32.const 1869
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  else
   local.get $var$3
   i32.const 1
   i32.shl
   local.set $var$6
   local.get $var$4
   local.get $var$6
   i32.add
   local.get $var$7
   i32.gt_s
   if
    i32.const 32
    i32.const 608
    i32.const 1874
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 7
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$8
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$8
  local.get $var$5
  local.get $var$4
  i32.add
  i32.store $0 offset=4
  local.get $var$8
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Int32Array.wrap (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $var$5
  local.get $byteOffset
  local.set $var$4
  local.get $length
  local.set $var$3
  local.get $var$5
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $var$7
  local.get $var$4
  local.get $var$7
  i32.gt_u
  local.get $var$4
  i32.const 3
  i32.and
  i32.or
  if
   i32.const 336
   i32.const 608
   i32.const 1860
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$3
  i32.const 0
  i32.lt_s
  if
   local.get $var$3
   i32.const -1
   i32.eq
   if
    local.get $var$7
    i32.const 3
    i32.and
    if
     i32.const 32
     i32.const 608
     i32.const 1865
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$7
    local.get $var$4
    i32.sub
    local.set $var$6
   else
    i32.const 32
    i32.const 608
    i32.const 1869
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  else
   local.get $var$3
   i32.const 2
   i32.shl
   local.set $var$6
   local.get $var$4
   local.get $var$6
   i32.add
   local.get $var$7
   i32.gt_s
   if
    i32.const 32
    i32.const 608
    i32.const 1874
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 8
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$8
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$8
  local.get $var$5
  local.get $var$4
  i32.add
  i32.store $0 offset=4
  local.get $var$8
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Uint32Array.wrap (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $var$5
  local.get $byteOffset
  local.set $var$4
  local.get $length
  local.set $var$3
  local.get $var$5
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $var$7
  local.get $var$4
  local.get $var$7
  i32.gt_u
  local.get $var$4
  i32.const 3
  i32.and
  i32.or
  if
   i32.const 336
   i32.const 608
   i32.const 1860
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$3
  i32.const 0
  i32.lt_s
  if
   local.get $var$3
   i32.const -1
   i32.eq
   if
    local.get $var$7
    i32.const 3
    i32.and
    if
     i32.const 32
     i32.const 608
     i32.const 1865
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$7
    local.get $var$4
    i32.sub
    local.set $var$6
   else
    i32.const 32
    i32.const 608
    i32.const 1869
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  else
   local.get $var$3
   i32.const 2
   i32.shl
   local.set $var$6
   local.get $var$4
   local.get $var$6
   i32.add
   local.get $var$7
   i32.gt_s
   if
    i32.const 32
    i32.const 608
    i32.const 1874
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 9
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$8
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$8
  local.get $var$5
  local.get $var$4
  i32.add
  i32.store $0 offset=4
  local.get $var$8
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Int64Array.wrap (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $var$5
  local.get $byteOffset
  local.set $var$4
  local.get $length
  local.set $var$3
  local.get $var$5
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $var$7
  local.get $var$4
  local.get $var$7
  i32.gt_u
  local.get $var$4
  i32.const 7
  i32.and
  i32.or
  if
   i32.const 336
   i32.const 608
   i32.const 1860
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$3
  i32.const 0
  i32.lt_s
  if
   local.get $var$3
   i32.const -1
   i32.eq
   if
    local.get $var$7
    i32.const 7
    i32.and
    if
     i32.const 32
     i32.const 608
     i32.const 1865
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$7
    local.get $var$4
    i32.sub
    local.set $var$6
   else
    i32.const 32
    i32.const 608
    i32.const 1869
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  else
   local.get $var$3
   i32.const 3
   i32.shl
   local.set $var$6
   local.get $var$4
   local.get $var$6
   i32.add
   local.get $var$7
   i32.gt_s
   if
    i32.const 32
    i32.const 608
    i32.const 1874
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 10
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$8
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$8
  local.get $var$5
  local.get $var$4
  i32.add
  i32.store $0 offset=4
  local.get $var$8
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Uint64Array.wrap (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $var$5
  local.get $byteOffset
  local.set $var$4
  local.get $length
  local.set $var$3
  local.get $var$5
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $var$7
  local.get $var$4
  local.get $var$7
  i32.gt_u
  local.get $var$4
  i32.const 7
  i32.and
  i32.or
  if
   i32.const 336
   i32.const 608
   i32.const 1860
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$3
  i32.const 0
  i32.lt_s
  if
   local.get $var$3
   i32.const -1
   i32.eq
   if
    local.get $var$7
    i32.const 7
    i32.and
    if
     i32.const 32
     i32.const 608
     i32.const 1865
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$7
    local.get $var$4
    i32.sub
    local.set $var$6
   else
    i32.const 32
    i32.const 608
    i32.const 1869
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  else
   local.get $var$3
   i32.const 3
   i32.shl
   local.set $var$6
   local.get $var$4
   local.get $var$6
   i32.add
   local.get $var$7
   i32.gt_s
   if
    i32.const 32
    i32.const 608
    i32.const 1874
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 11
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$8
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$8
  local.get $var$5
  local.get $var$4
  i32.add
  i32.store $0 offset=4
  local.get $var$8
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Float32Array.wrap (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $var$5
  local.get $byteOffset
  local.set $var$4
  local.get $length
  local.set $var$3
  local.get $var$5
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $var$7
  local.get $var$4
  local.get $var$7
  i32.gt_u
  local.get $var$4
  i32.const 3
  i32.and
  i32.or
  if
   i32.const 336
   i32.const 608
   i32.const 1860
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$3
  i32.const 0
  i32.lt_s
  if
   local.get $var$3
   i32.const -1
   i32.eq
   if
    local.get $var$7
    i32.const 3
    i32.and
    if
     i32.const 32
     i32.const 608
     i32.const 1865
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$7
    local.get $var$4
    i32.sub
    local.set $var$6
   else
    i32.const 32
    i32.const 608
    i32.const 1869
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  else
   local.get $var$3
   i32.const 2
   i32.shl
   local.set $var$6
   local.get $var$4
   local.get $var$6
   i32.add
   local.get $var$7
   i32.gt_s
   if
    i32.const 32
    i32.const 608
    i32.const 1874
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 12
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$8
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$8
  local.get $var$5
  local.get $var$4
  i32.add
  i32.store $0 offset=4
  local.get $var$8
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Float64Array.wrap (param $buffer i32) (param $byteOffset i32) (param $length i32) (result i32)
  (local $var$3 i32)
  (local $var$4 i32)
  (local $var$5 i32)
  (local $var$6 i32)
  (local $var$7 i32)
  (local $var$8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  local.get $buffer
  local.set $var$5
  local.get $byteOffset
  local.set $var$4
  local.get $length
  local.set $var$3
  local.get $var$5
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  local.set $var$7
  local.get $var$4
  local.get $var$7
  i32.gt_u
  local.get $var$4
  i32.const 7
  i32.and
  i32.or
  if
   i32.const 336
   i32.const 608
   i32.const 1860
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $var$3
  i32.const 0
  i32.lt_s
  if
   local.get $var$3
   i32.const -1
   i32.eq
   if
    local.get $var$7
    i32.const 7
    i32.and
    if
     i32.const 32
     i32.const 608
     i32.const 1865
     i32.const 9
     call $~lib/builtins/abort
     unreachable
    end
    local.get $var$7
    local.get $var$4
    i32.sub
    local.set $var$6
   else
    i32.const 32
    i32.const 608
    i32.const 1869
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  else
   local.get $var$3
   i32.const 3
   i32.shl
   local.set $var$6
   local.get $var$4
   local.get $var$6
   i32.add
   local.get $var$7
   i32.gt_s
   if
    i32.const 32
    i32.const 608
    i32.const 1874
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 13
  call $~lib/rt/itcms/__new
  local.tee $var$8
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.store $0
  local.get $var$8
  local.get $var$5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $var$8
  local.get $var$6
  i32.store $0 offset=8
  local.get $var$8
  local.get $var$5
  local.get $var$4
  i32.add
  i32.store $0 offset=4
  local.get $var$8
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/typedarray/Int8Array#sort@varargs (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<i8>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 1
    i32.const 4
    i32.le_u
    drop
    i32.const 14320
    br $~lib/util/sort/COMPARATOR<i8>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Int8Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint8Array#sort@varargs (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<u8>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 14384
    br $~lib/util/sort/COMPARATOR<u8>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint8Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint8ClampedArray#sort@varargs (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<u8>|inlined.1 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 14448
    br $~lib/util/sort/COMPARATOR<u8>|inlined.1
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint8ClampedArray#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Int16Array#sort@varargs (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<i16>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 2
    i32.const 4
    i32.le_u
    drop
    i32.const 14512
    br $~lib/util/sort/COMPARATOR<i16>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Int16Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint16Array#sort@varargs (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<u16>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 14576
    br $~lib/util/sort/COMPARATOR<u16>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint16Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Int32Array#sort@varargs (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<i32>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 4
    i32.const 4
    i32.le_u
    drop
    i32.const 14640
    br $~lib/util/sort/COMPARATOR<i32>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Int32Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint32Array#sort@varargs (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<u32>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 14704
    br $~lib/util/sort/COMPARATOR<u32>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint32Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Int64Array#sort@varargs (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<i64>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 8
    i32.const 4
    i32.le_u
    drop
    i32.const 14768
    br $~lib/util/sort/COMPARATOR<i64>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Int64Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Uint64Array#sort@varargs (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<u64>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 14832
    br $~lib/util/sort/COMPARATOR<u64>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Uint64Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/typedarray/Float32Array#sort@varargs (param $this i32) (param $comparator i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store $0
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<f32>|inlined.0 (result i32)
    i32.const 0
    drop
    i32.const 1
    drop
    i32.const 4
    i32.const 4
    i32.eq
    drop
    i32.const 14896
    br $~lib/util/sort/COMPARATOR<f32>|inlined.0
   end
   local.tee $comparator
   i32.store $0
  end
  local.get $this
  local.get $comparator
  call $~lib/typedarray/Float32Array#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
)

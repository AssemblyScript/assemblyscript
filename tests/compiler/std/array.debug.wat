(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32) (result i32)))
 (type $f32_f32_=>_i32 (func (param f32 f32) (result i32)))
 (type $f64_f64_=>_i32 (func (param f64 f64) (result i32)))
 (type $i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32)))
 (type $i32_i32_i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32 i32 i32)))
 (type $i32_=>_none (func (param i32)))
 (type $none_=>_none (func))
 (type $none_=>_f64 (func (result f64)))
 (type $i64_i32_=>_i32 (func (param i64 i32) (result i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i64_=>_i64 (func (param i64) (result i64)))
 (type $i32_f32_i32_=>_i32 (func (param i32 f32 i32) (result i32)))
 (type $i32_f64_i32_=>_i32 (func (param i32 f64 i32) (result i32)))
 (type $i32_i32_i32_=>_f32 (func (param i32 i32 i32) (result f32)))
 (type $i32_i32_i32_i32_i32_=>_i32 (func (param i32 i32 i32 i32 i32) (result i32)))
 (type $i32_i64_i32_=>_none (func (param i32 i64 i32)))
 (type $i32_f64_=>_i32 (func (param i32 f64) (result i32)))
 (type $i32_i64_=>_i32 (func (param i32 i64) (result i32)))
 (type $none_=>_i32 (func (result i32)))
 (type $i32_f32_i32_i32_=>_i32 (func (param i32 f32 i32 i32) (result i32)))
 (type $i32_i32_=>_f32 (func (param i32 i32) (result f32)))
 (type $i64_=>_none (func (param i64)))
 (type $i32_i32_=>_f64 (func (param i32 i32) (result f64)))
 (type $i32_i64_i32_i32_=>_none (func (param i32 i64 i32 i32)))
 (type $i32_i64_i32_i64_i32_i64_i32_=>_i32 (func (param i32 i64 i32 i64 i32 i64 i32) (result i32)))
 (type $i64_=>_i32 (func (param i64) (result i32)))
 (type $f64_=>_i32 (func (param f64) (result i32)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "env" "Math.random" (func $~lib/bindings/dom/Math.random (result f64)))
 (import "env" "seed" (func $~lib/builtins/seed (result f64)))
 (global $~lib/shared/runtime/Runtime.Stub i32 (i32.const 0))
 (global $~lib/shared/runtime/Runtime.Minimal i32 (i32.const 1))
 (global $~lib/shared/runtime/Runtime.Incremental i32 (i32.const 2))
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/native/ASC_LOW_MEMORY_LIMIT i32 (i32.const 0))
 (global $~lib/native/ASC_RUNTIME i32 (i32.const 2))
 (global $std/array/arr (mut i32) (i32.const 0))
 (global $~lib/builtins/i32.MAX_VALUE i32 (i32.const 2147483647))
 (global $~lib/native/ASC_SHRINK_LEVEL i32 (i32.const 0))
 (global $std/array/i (mut i32) (i32.const 0))
 (global $~argumentsLength (mut i32) (i32.const 0))
 (global $~lib/math/random_state0_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state1_64 (mut i64) (i64.const 0))
 (global $~lib/math/random_state0_32 (mut i32) (i32.const 0))
 (global $~lib/math/random_state1_32 (mut i32) (i32.const 0))
 (global $~lib/math/random_seeded (mut i32) (i32.const 0))
 (global $std/array/charset i32 (i32.const 7136))
 (global $std/array/inputStabArr (mut i32) (i32.const 0))
 (global $std/array/outputStabArr (mut i32) (i32.const 0))
 (global $~lib/builtins/u32.MAX_VALUE i32 (i32.const -1))
 (global $~lib/builtins/i32.MIN_VALUE i32 (i32.const -2147483648))
 (global $~lib/util/number/_frc_plus (mut i64) (i64.const 0))
 (global $~lib/util/number/_frc_minus (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp (mut i32) (i32.const 0))
 (global $~lib/util/number/_K (mut i32) (i32.const 0))
 (global $~lib/util/number/_frc_pow (mut i64) (i64.const 0))
 (global $~lib/util/number/_exp_pow (mut i32) (i32.const 0))
 (global $~lib/builtins/i64.MIN_VALUE i64 (i64.const -9223372036854775808))
 (global $~lib/builtins/i64.MAX_VALUE i64 (i64.const 9223372036854775807))
 (global $~lib/rt/__rtti_base i32 (i32.const 14880))
 (global $~lib/memory/__data_end i32 (i32.const 15244))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 31628))
 (global $~lib/memory/__heap_base i32 (i32.const 31628))
 (global $~started (mut i32) (i32.const 0))
 (memory $0 1)
 (data (i32.const 12) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00I\00n\00v\00a\00l\00i\00d\00 \00l\00e\00n\00g\00t\00h\00")
 (data (i32.const 60) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00")
 (data (i32.const 108) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e\00\00\00\00\00")
 (data (i32.const 172) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 240) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 272) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 300) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 364) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s\00\00\00\00\00\00\00\00\00")
 (data (i32.const 416) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 444) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 508) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\18\00\00\00s\00t\00d\00/\00a\00r\00r\00a\00y\00.\00t\00s\00\00\00\00\00")
 (data (i32.const 556) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00a\00r\00r\00a\00y\00b\00u\00f\00f\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 620) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00a\00b\00c\00\00\00\00\00\00\00")
 (data (i32.const 652) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\02\03\04\05\00\00\00\00\00\00\00")
 (data (i32.const 684) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\01\04\05\00\00\00\00\00\00\00")
 (data (i32.const 716) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 748) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 780) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\02\02\00\00\00\00\00\00\00")
 (data (i32.const 812) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\01\01\00\02\02\00\00\00\00\00\00\00")
 (data (i32.const 844) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\05\00\00\00\ff\ff\ff\ff\ff\00\00\00\00\00\00\00")
 (data (i32.const 876) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 924) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 972) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1020) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1068) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1116) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\01\00\00\00\00\00\00\00\02\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1164) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 1212) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00?\00\00\80?\00\00\c0?\00\00 @\00\00@@\00\00\00\00\00\00\00\00")
 (data (i32.const 1260) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00?\00\00\80?\00\00\80?\00\00 @\00\00@@\00\00\00\00\00\00\00\00")
 (data (i32.const 1308) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1356) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\80?\00\00\80?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1404) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\80?\00\00\80?\00\00\00\00\00\00\00@\00\00\00@\00\00\00\00\00\00\00\00")
 (data (i32.const 1452) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\80?\00\00\80?\00\00\00\00\00\00\00@\00\00\00@\00\00\00\00\00\00\00\00")
 (data (i32.const 1500) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\80\bf\00\00\80\bf\00\00\80\bf\00\00\80\bf\00\00\80\bf\00\00\00\00\00\00\00\00")
 (data (i32.const 1548) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\80\00\00\00\80\00\00\00\80\00\00\00\80\00\00\00\80\00\00\00\00\00\00\00\00")
 (data (i32.const 1596) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00A\00r\00r\00a\00y\00 \00i\00s\00 \00e\00m\00p\00t\00y\00")
 (data (i32.const 1644) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1692) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1724) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1756) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1804) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1852) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1900) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\04\00\00\00\05\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1948) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 1996) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2044) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2092) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2140) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2188) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2236) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2284) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\04\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2332) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2380) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2428) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2476) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\05\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2524) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2572) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2620) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2668) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2716) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2764) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2812) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2860) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2908) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\03\00\00\00\05\00\00\00\07\00\00\00\t\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 2956) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\07\00\00\00\t\00\00\00\0b\00\00\00")
 (data (i32.const 2988) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\07\00\00\00\t\00\00\00\00\00\00\00")
 (data (i32.const 3020) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\05\00\00\00\07\00\00\00\t\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3068) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\t\00\00\00\0b\00\00\00\00\00\00\00")
 (data (i32.const 3100) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\07\00\00\00\t\00\00\00\00\00\00\00")
 (data (i32.const 3132) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\07\00\00\00\t\00\00\00\00\00\00\00")
 (data (i32.const 3164) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\01\02\03\00\00\00\00\00\00\00\00")
 (data (i32.const 3196) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\01\02\03\04\05\06\07\00\00\00\00")
 (data (i32.const 3228) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\01\02\03\04\05\06\07\08\t\n\0b\0c\0d\0e\0f\10\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3276) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3324) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3372) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\01\00\02\00\03\00\04\00\05\00\06\00\07\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3420) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\c0\7f\00\00\00\00\00\00\00\00")
 (data (i32.const 3452) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\f8\7f\00\00\00\00")
 (data (i32.const 3484) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\02\00\00\00\05\00\00\00\t\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3532) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\c0\7f\00\00\00\00\00\00\00\00")
 (data (i32.const 3564) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\00\00\00\f8\7f\00\00\00\00")
 (data (i32.const 3596) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3644) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3692) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3724) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3772) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3804) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3852) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 3900) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00")
 (data (i32.const 3932) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 3964) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4012) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\04\00\00\00\00\00\00\00")
 (data (i32.const 4044) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\05\00\00\00")
 (data (i32.const 4076) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4124) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4156) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4204) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4252) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4284) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4332) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4380) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00")
 (data (i32.const 4412) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00")
 (data (i32.const 4444) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4492) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4524) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4572) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4620) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4652) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4700) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4748) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4780) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4828) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4876) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4908) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 4956) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5004) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5036) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5084) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5132) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5164) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5212) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5260) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5292) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5340) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5372) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00^\00\00\00E\00l\00e\00m\00e\00n\00t\00 \00t\00y\00p\00e\00 \00m\00u\00s\00t\00 \00b\00e\00 \00n\00u\00l\00l\00a\00b\00l\00e\00 \00i\00f\00 \00a\00r\00r\00a\00y\00 \00i\00s\00 \00h\00o\00l\00e\00y\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5500) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00u\00n\00e\00x\00p\00e\00c\00t\00e\00d\00 \00n\00u\00l\00l\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5564) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5596) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5628) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5660) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5692) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\05\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5724) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\06\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5756) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5804) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\07\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5836) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\08\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5868) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5900) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\n\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5932) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\0b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5964) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 5996) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\0d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6028) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\0e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6060) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\0f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6092) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6124) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\11\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6156) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6188) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\13\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6220) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6252) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\15\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6284) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6316) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\17\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6348) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\18\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6380) "\1c\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\08\00\00\00\19\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6412) "\1c\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\08\00\00\00\1a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6444) "\1c\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\08\00\00\00\1b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6476) "\1c\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\08\00\00\00\1c\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6508) "\1c\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\08\00\00\00\1d\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6540) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\1e\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6572) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00\1f\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6604) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00 \00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6636) "\1c\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\08\00\00\00!\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6668) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00\"\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6700) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00#\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6732) "\1c\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\08\00\00\00$\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6764) "\1c\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\08\00\00\00%\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6796) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00&\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6828) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00\'\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6860) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00(\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6892) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00)\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6924) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00*\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6956) "\1c\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\08\00\00\00+\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 6988) "\1c\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\08\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7020) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00-\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7052) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00.\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7084) "\1c\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\08\00\00\00/\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7116) "\bc\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\ac\00\00\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\000\001\002\003\004\005\006\007\008\009\00_\00-\00,\00.\00+\00/\00\\\00[\00]\00{\00}\00(\00)\00<\00>\00*\00&\00$\00%\00^\00@\00#\00!\00?\00")
 (data (i32.const 7308) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00@\00\00\80\bf\00\00\00\00")
 (data (i32.const 7340) "\1c\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\08\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7372) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\80\bf\00\00\00\00\00\00\00@")
 (data (i32.const 7404) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\80?\00\00\c0\7f\00\00\80\ff\00\00\80?\00\00\00\00\00\00\80\bf\00\00\00\c0\00\00\80\7f\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7468) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\80\ff\00\00\00\c0\00\00\80\bf\00\00\00\00\00\00\80?\00\00\80?\00\00\80\7f\00\00\c0\7f\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7532) "\\\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8\7f\00\00\00\00\00\00\f0\ff\05\00\00\00\00\00\f0?\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0\bf\00\00\00\00\00\00\00\c0\00\00\00\00\00\00\f0\7f\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7628) "\1c\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\08\00\00\001\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7660) "\\\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00@\00\00\00\00\00\00\00\00\00\f0\ff\00\00\00\00\00\00\00\c0\00\00\00\00\00\00\f0\bf\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?\05\00\00\00\00\00\f0?\00\00\00\00\00\00\f0\7f\00\00\00\00\00\00\f8\7f\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7756) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7804) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\002\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7836) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7884) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\01\00\00\00\ff\ff\ff\ff\fe\ff\ff\ff\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7932) "\1c\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\08\00\00\003\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 7964) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\fe\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 8012) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8044) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8076) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\02\00\00\00\01\00\00\00\00\00\00\00")
 (data (i32.const 8108) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\03\00\00\00\02\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8156) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8204) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\004\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8236) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8268) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 8300) "\1c\00\00\00\00\00\00\00\00\00\00\00\19\00\00\00\08\00\00\005\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8332) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\006\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8364) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\007\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8396) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\008\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8428) "\1c\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\08\00\00\009\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8460) "\1c\00\00\00\00\00\00\00\00\00\00\00\1b\00\00\00\08\00\00\00:\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8492) "\1c\00\00\00\00\00\00\00\00\00\00\00\1e\00\00\00\08\00\00\00;\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8524) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00a\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8556) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00b\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8588) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00a\00b\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8620) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00b\00a\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8652) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8684) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00`!\00\00\80!\00\00`!\00\00\a0!\00\00\c0!\00\00\e0!\00\00\00\00\00\00")
 (data (i32.const 8732) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\e0!\00\00`!\00\00`!\00\00\a0!\00\00\80!\00\00\c0!\00\00\00\00\00\00")
 (data (i32.const 8780) "\1c\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\08\00\00\00<\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8812) "\1c\00\00\00\00\00\00\00\00\00\00\00\"\00\00\00\08\00\00\00=\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8844) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8876) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00t\00r\00u\00e\00\00\00\00\00")
 (data (i32.const 8908) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00f\00a\00l\00s\00e\00\00\00")
 (data (i32.const 8940) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00,\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 8972) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\14\00\00\00t\00r\00u\00e\00,\00f\00a\00l\00s\00e\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9020) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\fe\ff\ff\ff\fd\ff\ff\ff")
 (data (i32.const 9052) "|\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9180) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s\00\00\00\00\00\00\00")
 (data (i32.const 9244) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 9276) "0\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\00")
 (data (i32.const 9676) "\1c\04\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\04\00\000\000\000\001\000\002\000\003\000\004\000\005\000\006\000\007\000\008\000\009\000\00a\000\00b\000\00c\000\00d\000\00e\000\00f\001\000\001\001\001\002\001\003\001\004\001\005\001\006\001\007\001\008\001\009\001\00a\001\00b\001\00c\001\00d\001\00e\001\00f\002\000\002\001\002\002\002\003\002\004\002\005\002\006\002\007\002\008\002\009\002\00a\002\00b\002\00c\002\00d\002\00e\002\00f\003\000\003\001\003\002\003\003\003\004\003\005\003\006\003\007\003\008\003\009\003\00a\003\00b\003\00c\003\00d\003\00e\003\00f\004\000\004\001\004\002\004\003\004\004\004\005\004\006\004\007\004\008\004\009\004\00a\004\00b\004\00c\004\00d\004\00e\004\00f\005\000\005\001\005\002\005\003\005\004\005\005\005\006\005\007\005\008\005\009\005\00a\005\00b\005\00c\005\00d\005\00e\005\00f\006\000\006\001\006\002\006\003\006\004\006\005\006\006\006\007\006\008\006\009\006\00a\006\00b\006\00c\006\00d\006\00e\006\00f\007\000\007\001\007\002\007\003\007\004\007\005\007\006\007\007\007\008\007\009\007\00a\007\00b\007\00c\007\00d\007\00e\007\00f\008\000\008\001\008\002\008\003\008\004\008\005\008\006\008\007\008\008\008\009\008\00a\008\00b\008\00c\008\00d\008\00e\008\00f\009\000\009\001\009\002\009\003\009\004\009\005\009\006\009\007\009\008\009\009\009\00a\009\00b\009\00c\009\00d\009\00e\009\00f\00a\000\00a\001\00a\002\00a\003\00a\004\00a\005\00a\006\00a\007\00a\008\00a\009\00a\00a\00a\00b\00a\00c\00a\00d\00a\00e\00a\00f\00b\000\00b\001\00b\002\00b\003\00b\004\00b\005\00b\006\00b\007\00b\008\00b\009\00b\00a\00b\00b\00b\00c\00b\00d\00b\00e\00b\00f\00c\000\00c\001\00c\002\00c\003\00c\004\00c\005\00c\006\00c\007\00c\008\00c\009\00c\00a\00c\00b\00c\00c\00c\00d\00c\00e\00c\00f\00d\000\00d\001\00d\002\00d\003\00d\004\00d\005\00d\006\00d\007\00d\008\00d\009\00d\00a\00d\00b\00d\00c\00d\00d\00d\00e\00d\00f\00e\000\00e\001\00e\002\00e\003\00e\004\00e\005\00e\006\00e\007\00e\008\00e\009\00e\00a\00e\00b\00e\00c\00e\00d\00e\00e\00e\00f\00f\000\00f\001\00f\002\00f\003\00f\004\00f\005\00f\006\00f\007\00f\008\00f\009\00f\00a\00f\00b\00f\00c\00f\00d\00f\00e\00f\00f\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10732) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00\00\00\00\00")
 (data (i32.const 10828) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\001\00-\002\00-\003\00\00\00")
 (data (i32.const 10860) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00")
 (data (i32.const 10892) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00-\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10924) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\80\00\00\00\80\00\00\00\00")
 (data (i32.const 10956) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00_\00_\00\00\00\00\00\00\00\00\00")
 (data (i32.const 10988) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\000\00\00\00-\002\001\004\007\004\008\003\006\004\008\00_\00_\00-\002\001\004\007\004\008\003\006\004\008\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11068) "L\00\00\00\00\00\00\00\00\00\00\00\00\00\00\000\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f0?\00\00\00\00\00\00\00\c0\00\00\00\00\00\00\f8\7f\00\00\00\00\00\00\f0\ff\00\00\00\00\00\00\f0\7f\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11148) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00,\00 \00\00\00\00\00\00\00\00\00")
 (data (i32.const 11180) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\000\00.\000\00\00\00\00\00\00\00")
 (data (i32.const 11212) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00N\00a\00N\00\00\00\00\00\00\00")
 (data (i32.const 11244) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\00-\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11292) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\10\00\00\00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11344) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 11400) "\88\02\1c\08\a0\d5\8f\fav\bf>\a2\7f\e1\ae\bav\acU0 \fb\16\8b\ea5\ce]J\89B\cf-;eU\aa\b0k\9a\dfE\1a=\03\cf\1a\e6\ca\c6\9a\c7\17\fep\abO\dc\bc\be\fc\b1w\ff\0c\d6kA\ef\91V\be<\fc\7f\90\ad\1f\d0\8d\83\9aU1(\\Q\d3\b5\c9\a6\ad\8f\acq\9d\cb\8b\ee#w\"\9c\eamSx@\91I\cc\aeW\ce\b6]y\12<\827V\fbM6\94\10\c2O\98H8o\ea\96\90\c7:\82%\cb\85t\d7\f4\97\bf\97\cd\cf\86\a0\e5\ac*\17\98\n4\ef\8e\b25*\fbg8\b2;?\c6\d2\df\d4\c8\84\ba\cd\d3\1a\'D\dd\c5\96\c9%\bb\ce\9fk\93\84\a5b}$l\ac\db\f6\da_\0dXf\ab\a3&\f1\c3\de\93\f8\e2\f3\b8\80\ff\aa\a8\ad\b5\b5\8bJ|l\05_b\87S0\c14`\ff\bc\c9U&\ba\91\8c\85N\96\bd~)p$w\f9\df\8f\b8\e5\b8\9f\bd\df\a6\94}t\88\cf_\a9\f8\cf\9b\a8\8f\93pD\b9k\15\0f\bf\f8\f0\08\8a\b611eU%\b0\cd\ac\7f{\d0\c6\e2?\99\06;+*\c4\10\\\e4\d3\92si\99$$\aa\0e\ca\00\83\f2\b5\87\fd\eb\1a\11\92d\08\e5\bc\cc\88Po\t\cc\bc\8c,e\19\e2X\17\b7\d1\00\00\00\00\00\00@\9c\00\00\00\00\10\a5\d4\e8\00\00b\ac\c5\ebx\ad\84\t\94\f8x9?\81\b3\15\07\c9{\ce\97\c0p\\\ea{\ce2~\8fh\80\e9\ab\a48\d2\d5E\"\9a\17&\'O\9f\'\fb\c4\d41\a2c\ed\a8\ad\c8\8c8e\de\b0\dbe\ab\1a\8e\08\c7\83\9a\1dqB\f9\1d]\c4X\e7\1b\a6,iM\92\ea\8dp\1ad\ee\01\daJw\ef\9a\99\a3m\a2\85k}\b4{x\t\f2w\18\ddy\a1\e4T\b4\c2\c5\9b[\92\86[\86=]\96\c8\c5S5\c8\b3\a0\97\fa\\\b4*\95\e3_\a0\99\bd\9fF\de%\8c9\db4\c2\9b\a5\\\9f\98\a3r\9a\c6\f6\ce\be\e9TS\bf\dc\b7\e2A\"\f2\17\f3\fc\88\a5x\\\d3\9b\ce \cc\dfS!{\f3Z\16\98:0\1f\97\dc\b5\a0\e2\96\b3\e3\\S\d1\d9\a8<D\a7\a4\d9|\9b\fb\10D\a4\a7LLv\bb\1a\9c@\b6\ef\8e\ab\8b,\84W\a6\10\ef\1f\d0)1\91\e9\e5\a4\10\9b\9d\0c\9c\a1\fb\9b\10\e7)\f4;b\d9 (\ac\85\cf\a7z^KD\80-\dd\ac\03@\e4!\bf\8f\ffD^/\9cg\8eA\b8\8c\9c\9d\173\d4\a9\1b\e3\b4\92\db\19\9e\d9w\df\ban\bf\96\ebk\ee\f0\9b;\02\87\af")
 (data (i32.const 12096) "<\fbW\fbr\fb\8c\fb\a7\fb\c1\fb\dc\fb\f6\fb\11\fc,\fcF\fca\fc{\fc\96\fc\b1\fc\cb\fc\e6\fc\00\fd\1b\fd5\fdP\fdk\fd\85\fd\a0\fd\ba\fd\d5\fd\ef\fd\n\fe%\fe?\feZ\fet\fe\8f\fe\a9\fe\c4\fe\df\fe\f9\fe\14\ff.\ffI\ffc\ff~\ff\99\ff\b3\ff\ce\ff\e8\ff\03\00\1e\008\00S\00m\00\88\00\a2\00\bd\00\d8\00\f2\00\0d\01\'\01B\01\\\01w\01\92\01\ac\01\c7\01\e1\01\fc\01\16\021\02L\02f\02\81\02\9b\02\b6\02\d0\02\eb\02\06\03 \03;\03U\03p\03\8b\03\a5\03\c0\03\da\03\f5\03\0f\04*\04")
 (data (i32.const 12272) "\01\00\00\00\n\00\00\00d\00\00\00\e8\03\00\00\10\'\00\00\a0\86\01\00@B\0f\00\80\96\98\00\00\e1\f5\05\00\ca\9a;")
 (data (i32.const 12316) "l\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00P\00\00\000\00.\000\00,\00 \001\00.\000\00,\00 \00-\002\00.\000\00,\00 \00N\00a\00N\00,\00 \00-\00I\00n\00f\00i\00n\00i\00t\00y\00,\00 \00I\00n\00f\00i\00n\00i\00t\00y\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12428) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\001\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12460) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\e0!\00\00\a00\00\00\00\00\00\00")
 (data (i32.const 12492) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1e\00\00\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12556) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00@\00\00\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]\00,\00,\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12652) "\\\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00>\00\00\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]\00,\00[\00o\00b\00j\00e\00c\00t\00 \00O\00b\00j\00e\00c\00t\00]\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12748) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12780) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12812) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 12844) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12892) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\001\00,\002\00\00\00\00\00\00\00")
 (data (i32.const 12924) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\000\00,\001\00,\002\00,\003\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 12972) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\01\ff\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13004) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\001\00,\00-\001\00,\000\00")
 (data (i32.const 13036) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\03\00\00\00\80\81\80\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13068) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1c\00\00\00-\001\002\008\00,\00-\001\002\007\00,\00-\001\002\008\00")
 (data (i32.const 13116) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\06\00\00\00\01\00\ff\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 13148) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\12\00\00\001\00,\006\005\005\003\005\00,\000\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13196) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\80\01\ff\00\00\00\00\00\00\00\00")
 (data (i32.const 13228) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\16\00\00\00-\003\002\007\006\008\00,\00-\002\005\005\00\00\00\00\00\00\00")
 (data (i32.const 13276) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\00\00\00\80\80\ff\ff\ff\00\00\00\00")
 (data (i32.const 13308) "<\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00 \00\00\00-\002\001\004\007\004\008\003\006\004\008\00,\00-\001\002\008\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13372) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\18\00\00\00\01\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13420) "L\00\00\00\00\00\00\00\00\00\00\00\01\00\00\000\00\00\001\00,\001\008\004\004\006\007\004\004\000\007\003\007\000\009\005\005\001\006\001\005\00,\000\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13500) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00(\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff@Eu\c3*\9d\fb\ff\00\00\00\00\00\00\00\80\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\7f\00\00\00\00")
 (data (i32.const 13564) "\9c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00~\00\00\00-\001\00,\00-\001\002\003\004\005\006\007\008\009\000\001\002\003\004\005\006\00,\00-\009\002\002\003\003\007\002\000\003\006\008\005\004\007\007\005\008\000\008\00,\000\00,\009\002\002\003\003\007\002\000\003\006\008\005\004\007\007\005\008\000\007\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13724) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1c\00\00\00\e0!\00\00`!\00\00`!\00\00\a0!\00\00\80!\00\00\c0!\00\00\00\00\00\00")
 (data (i32.const 13772) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\1a\00\00\00,\00a\00,\00a\00,\00a\00b\00,\00b\00,\00b\00a\00,\00\00\00")
 (data (i32.const 13820) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\002\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13852) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\02\00\00\004\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13884) ",\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\a00\00\00\106\00\00\00\00\00\0006\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 13932) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0c\00\00\001\00,\002\00,\00,\004\00")
 (data (i32.const 13964) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00")
 (data (i32.const 13996) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\08\00\00\00\03\00\00\00\04\00\00\00\00\00\00\00")
 (data (i32.const 14028) ",\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\0e\00\00\001\00,\002\00,\003\00,\004\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14076) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\01\02\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14108) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\03\04\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14140) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14172) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14204) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00")
 (data (i32.const 14236) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\04\00\00\00\05\00\00\00\06\00\00\00")
 (data (i32.const 14268) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00")
 (data (i32.const 14300) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00o\00n\00e\00\00\00\00\00\00\00")
 (data (i32.const 14332) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\f07\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14364) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00t\00w\00o\00\00\00\00\00\00\00")
 (data (i32.const 14396) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00t\00h\00r\00e\00e\00\00\00")
 (data (i32.const 14428) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\0008\00\00\00\00\00\00P8\00\00")
 (data (i32.const 14460) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00f\00o\00u\00r\00\00\00\00\00")
 (data (i32.const 14492) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\08\00\00\00f\00i\00v\00e\00\00\00\00\00")
 (data (i32.const 14524) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\06\00\00\00s\00i\00x\00\00\00\00\00\00\00")
 (data (i32.const 14556) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\908\00\00\b08\00\00\d08\00\00")
 (data (i32.const 14588) "\1c\00\00\00\00\00\00\00\00\00\00\00\01\00\00\00\n\00\00\00s\00e\00v\00e\00n\00\00\00")
 (data (i32.const 14620) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\109\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14652) "<\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\f07\00\0008\00\00\00\00\00\00P8\00\00\908\00\00\b08\00\00\d08\00\00\109\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14716) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14748) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14780) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14812) "\1c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\04\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14844) "\1c\00\00\00\00\00\00\00\00\00\00\00,\00\00\00\08\00\00\00>\00\00\00\00\00\00\00\00\00\00\00")
 (data (i32.const 14880) "-\00\00\00 \00\00\00\00\00\00\00 \00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\t\00\00\00\00\00\00 \00\00\00\00\00\00\00A\00\00\00\02\00\00\00B\00\00\00\00\00\00\00\02\01\00\00\00\00\00\00\02\19\00\00\00\00\00\00\02A\00\00\00\00\00\00\82\00\00\00\00\00\00\00\02\1a\00\00\00\00\00\00\02a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00 \00\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00B\00\00\00\00\00\00\00B\08\00\00\00\00\00\00\82\08\00\00\00\00\00\00\02\02\00\00\00\00\00\00\02\n\00\00\00\00\00\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00\02A\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
 (table $0 63 63 funcref)
 (elem $0 (i32.const 1) $start:std/array~anonymous|0 $start:std/array~anonymous|1 $start:std/array~anonymous|2 $start:std/array~anonymous|3 $start:std/array~anonymous|4 $start:std/array~anonymous|5 $start:std/array~anonymous|6 $start:std/array~anonymous|7 $start:std/array~anonymous|8 $start:std/array~anonymous|9 $start:std/array~anonymous|10 $start:std/array~anonymous|11 $start:std/array~anonymous|12 $start:std/array~anonymous|13 $start:std/array~anonymous|14 $start:std/array~anonymous|15 $start:std/array~anonymous|16 $start:std/array~anonymous|17 $start:std/array~anonymous|18 $start:std/array~anonymous|19 $start:std/array~anonymous|20 $start:std/array~anonymous|21 $start:std/array~anonymous|22 $start:std/array~anonymous|23 $start:std/array~anonymous|24 $start:std/array~anonymous|25 $start:std/array~anonymous|26 $start:std/array~anonymous|27 $start:std/array~anonymous|28 $start:std/array~anonymous|29 $start:std/array~anonymous|30 $start:std/array~anonymous|31 $start:std/array~anonymous|32 $start:std/array~anonymous|33 $start:std/array~anonymous|34 $start:std/array~anonymous|35 $start:std/array~anonymous|36 $start:std/array~anonymous|37 $start:std/array~anonymous|38 $start:std/array~anonymous|39 $start:std/array~anonymous|40 $start:std/array~anonymous|41 $start:std/array~anonymous|42 $start:std/array~anonymous|43 $start:std/array~anonymous|44 $start:std/array~anonymous|45 $start:std/array~anonymous|46 $~lib/util/sort/COMPARATOR<f32>~anonymous|0 $~lib/util/sort/COMPARATOR<f64>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|0 $~lib/util/sort/COMPARATOR<u32>~anonymous|0 $~lib/util/sort/COMPARATOR<i32>~anonymous|1 $std/array/assertStableSortedForComplexObjects~anonymous|0 $start:std/array~anonymous|47 $start:std/array~anonymous|48 $start:std/array~anonymous|49 $start:std/array~anonymous|50 $start:std/array~anonymous|51 $start:std/array~anonymous|52 $~lib/util/sort/COMPARATOR<~lib/string/String|null>~anonymous|0 $~lib/util/sort/COMPARATOR<~lib/string/String>~anonymous|0 $start:std/array~anonymous|53)
 (export "memory" (memory $0))
 (export "_start" (func $~start))
 (func $~lib/rt/itcms/Object#set:nextWithColor (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/rt/itcms/Object#set:prev (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/rt/itcms/initLazy (param $0 i32) (result i32)
  local.get $0
  local.get $0
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $0
  local.get $0
  call $~lib/rt/itcms/Object#set:prev
  local.get $0
 )
 (func $~lib/rt/itcms/Object#get:next (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
 )
 (func $~lib/rt/itcms/Object#get:color (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.and
 )
 (func $~lib/rt/itcms/visitRoots (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  call $~lib/rt/__visit_globals
  global.get $~lib/rt/itcms/pinSpace
  local.set $1
  local.get $1
  call $~lib/rt/itcms/Object#get:next
  local.set $2
  loop $while-continue|0
   local.get $2
   local.get $1
   i32.ne
   local.set $3
   local.get $3
   if
    i32.const 1
    drop
    local.get $2
    call $~lib/rt/itcms/Object#get:color
    i32.const 3
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 192
     i32.const 159
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $2
    i32.const 20
    i32.add
    local.get $0
    call $~lib/rt/__visit_members
    local.get $2
    call $~lib/rt/itcms/Object#get:next
    local.set $2
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (param $0 i32) (param $1 i32)
  local.get $0
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $1
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#set:next (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
 )
 (func $~lib/rt/itcms/Object#unlink (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  call $~lib/rt/itcms/Object#get:next
  local.set $1
  local.get $1
  i32.const 0
  i32.eq
  if
   i32.const 1
   drop
   local.get $0
   i32.load offset=8
   i32.const 0
   i32.eq
   if (result i32)
    local.get $0
    global.get $~lib/memory/__heap_base
    i32.lt_u
   else
    i32.const 0
   end
   i32.eqz
   if
    i32.const 0
    i32.const 192
    i32.const 127
    i32.const 18
    call $~lib/builtins/abort
    unreachable
   end
   return
  end
  local.get $0
  i32.load offset=8
  local.set $2
  i32.const 1
  drop
  local.get $2
  i32.eqz
  if
   i32.const 0
   i32.const 192
   i32.const 131
   i32.const 16
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.get $2
  call $~lib/rt/itcms/Object#set:prev
  local.get $2
  local.get $1
  call $~lib/rt/itcms/Object#set:next
 )
 (func $~lib/rt/__typeinfo (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/rt/__rtti_base
  local.set $1
  local.get $0
  local.get $1
  i32.load
  i32.gt_u
  if
   i32.const 320
   i32.const 384
   i32.const 22
   i32.const 28
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $0
  i32.const 8
  i32.mul
  i32.add
  i32.load
 )
 (func $~lib/rt/itcms/Object#get:isPointerfree (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.load offset=12
  local.set $1
  local.get $1
  i32.const 1
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $1
   call $~lib/rt/__typeinfo
   i32.const 32
   i32.and
   i32.const 0
   i32.ne
  end
 )
 (func $~lib/rt/itcms/Object#linkTo (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  i32.load offset=8
  local.set $3
  local.get $0
  local.get $1
  local.get $2
  i32.or
  call $~lib/rt/itcms/Object#set:nextWithColor
  local.get $0
  local.get $3
  call $~lib/rt/itcms/Object#set:prev
  local.get $3
  local.get $0
  call $~lib/rt/itcms/Object#set:next
  local.get $1
  local.get $0
  call $~lib/rt/itcms/Object#set:prev
 )
 (func $~lib/rt/itcms/Object#makeGray (param $0 i32)
  (local $1 i32)
  local.get $0
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.eqz
   if (result i32)
    i32.const 0
    i32.const 192
    i32.const 147
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   else
    local.get $1
   end
   global.set $~lib/rt/itcms/iter
  end
  local.get $0
  call $~lib/rt/itcms/Object#unlink
  local.get $0
  global.get $~lib/rt/itcms/toSpace
  local.get $0
  call $~lib/rt/itcms/Object#get:isPointerfree
  if (result i32)
   global.get $~lib/rt/itcms/white
   i32.eqz
  else
   i32.const 2
  end
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/itcms/__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.eqz
  if
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  local.set $2
  i32.const 0
  drop
  local.get $2
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $2
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/itcms/visitStack (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  local.set $1
  loop $while-continue|0
   local.get $1
   global.get $~lib/memory/__heap_base
   i32.lt_u
   local.set $2
   local.get $2
   if
    local.get $1
    i32.load
    local.get $0
    call $~lib/rt/itcms/__visit
    local.get $1
    i32.const 4
    i32.add
    local.set $1
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#get:size (param $0 i32) (result i32)
  i32.const 4
  local.get $0
  i32.load
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
 )
 (func $~lib/rt/tlsf/Root#set:flMap (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
 )
 (func $~lib/rt/common/BLOCK#set:mmInfo (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
 )
 (func $~lib/rt/tlsf/Block#set:prev (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/Block#set:next (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $1
  i32.load
  local.set $2
  i32.const 1
  drop
  local.get $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 464
   i32.const 268
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $3
  i32.const 1
  drop
  local.get $3
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 464
   i32.const 270
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $4
   local.get $3
   i32.const 4
   i32.shr_u
   local.set $5
  else
   local.get $3
   local.tee $6
   i32.const 1073741820
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_u
   select
   local.set $6
   i32.const 31
   local.get $6
   i32.clz
   i32.sub
   local.set $4
   local.get $6
   local.get $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $5
   local.get $4
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $4
  end
  i32.const 1
  drop
  local.get $4
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $5
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 464
   i32.const 284
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=4
  local.set $8
  local.get $1
  i32.load offset=8
  local.set $9
  local.get $8
  if
   local.get $8
   local.get $9
   call $~lib/rt/tlsf/Block#set:next
  end
  local.get $9
  if
   local.get $9
   local.get $8
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $1
  local.get $0
  local.set $10
  local.get $4
  local.set $6
  local.get $5
  local.set $7
  local.get $10
  local.get $6
  i32.const 4
  i32.shl
  local.get $7
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  i32.eq
  if
   local.get $0
   local.set $11
   local.get $4
   local.set $10
   local.get $5
   local.set $6
   local.get $9
   local.set $7
   local.get $11
   local.get $10
   i32.const 4
   i32.shl
   local.get $6
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $7
   i32.store offset=96
   local.get $9
   i32.eqz
   if
    local.get $0
    local.set $6
    local.get $4
    local.set $7
    local.get $6
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.set $6
    local.get $0
    local.set $7
    local.get $4
    local.set $11
    local.get $6
    i32.const 1
    local.get $5
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.tee $6
    local.set $10
    local.get $7
    local.get $11
    i32.const 2
    i32.shl
    i32.add
    local.get $10
    i32.store offset=4
    local.get $6
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load
     i32.const 1
     local.get $4
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     call $~lib/rt/tlsf/Root#set:flMap
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  i32.const 1
  drop
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 464
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load
  local.set $2
  i32.const 1
  drop
  local.get $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 464
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.set $3
  local.get $3
  i32.const 4
  i32.add
  local.get $3
  i32.load
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.add
  local.set $4
  local.get $4
  i32.load
  local.set $5
  local.get $5
  i32.const 1
  i32.and
  if
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/removeBlock
   local.get $1
   local.get $2
   i32.const 4
   i32.add
   local.get $5
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $2
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $1
   local.set $3
   local.get $3
   i32.const 4
   i32.add
   local.get $3
   i32.load
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.set $4
   local.get $4
   i32.load
   local.set $5
  end
  local.get $2
  i32.const 2
  i32.and
  if
   local.get $1
   local.set $3
   local.get $3
   i32.const 4
   i32.sub
   i32.load
   local.set $3
   local.get $3
   i32.load
   local.set $6
   i32.const 1
   drop
   local.get $6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 464
    i32.const 221
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $3
   call $~lib/rt/tlsf/removeBlock
   local.get $3
   local.set $1
   local.get $1
   local.get $6
   i32.const 4
   i32.add
   local.get $2
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.tee $2
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
  local.get $4
  local.get $5
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $2
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.set $7
  i32.const 1
  drop
  local.get $7
  i32.const 12
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 464
   i32.const 233
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  drop
  local.get $1
  i32.const 4
  i32.add
  local.get $7
  i32.add
  local.get $4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 464
   i32.const 234
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store
  local.get $7
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $8
   local.get $7
   i32.const 4
   i32.shr_u
   local.set $9
  else
   local.get $7
   local.tee $3
   i32.const 1073741820
   local.tee $6
   local.get $3
   local.get $6
   i32.lt_u
   select
   local.set $3
   i32.const 31
   local.get $3
   i32.clz
   i32.sub
   local.set $8
   local.get $3
   local.get $8
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $9
   local.get $8
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $8
  end
  i32.const 1
  drop
  local.get $8
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $9
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 464
   i32.const 251
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $10
  local.get $8
  local.set $3
  local.get $9
  local.set $6
  local.get $10
  local.get $3
  i32.const 4
  i32.shl
  local.get $6
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  local.set $11
  local.get $1
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $1
  local.get $11
  call $~lib/rt/tlsf/Block#set:next
  local.get $11
  if
   local.get $11
   local.get $1
   call $~lib/rt/tlsf/Block#set:prev
  end
  local.get $0
  local.set $12
  local.get $8
  local.set $10
  local.get $9
  local.set $3
  local.get $1
  local.set $6
  local.get $12
  local.get $10
  i32.const 4
  i32.shl
  local.get $3
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $6
  i32.store offset=96
  local.get $0
  local.get $0
  i32.load
  i32.const 1
  local.get $8
  i32.shl
  i32.or
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $0
  local.set $13
  local.get $8
  local.set $12
  local.get $0
  local.set $3
  local.get $8
  local.set $6
  local.get $3
  local.get $6
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const 1
  local.get $9
  i32.shl
  i32.or
  local.set $10
  local.get $13
  local.get $12
  i32.const 2
  i32.shl
  i32.add
  local.get $10
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  i32.const 1
  drop
  local.get $1
  local.get $2
  i32.le_u
  i32.eqz
  if
   i32.const 0
   i32.const 464
   i32.const 377
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $2
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $2
  local.get $0
  local.set $3
  local.get $3
  i32.load offset=1568
  local.set $4
  i32.const 0
  local.set $5
  local.get $4
  if
   i32.const 1
   drop
   local.get $1
   local.get $4
   i32.const 4
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 464
    i32.const 384
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 16
   i32.sub
   local.get $4
   i32.eq
   if
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
    local.get $4
    i32.load
    local.set $5
   else
    nop
   end
  else
   i32.const 1
   drop
   local.get $1
   local.get $0
   i32.const 1572
   i32.add
   i32.ge_u
   i32.eqz
   if
    i32.const 0
    i32.const 464
    i32.const 397
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  local.get $1
  i32.sub
  local.set $6
  local.get $6
  i32.const 4
  i32.const 12
  i32.add
  i32.const 4
  i32.add
  i32.lt_u
  if
   i32.const 0
   return
  end
  local.get $6
  i32.const 2
  i32.const 4
  i32.mul
  i32.sub
  local.set $7
  local.get $1
  local.set $8
  local.get $8
  local.get $7
  i32.const 1
  i32.or
  local.get $5
  i32.const 2
  i32.and
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $8
  i32.const 0
  call $~lib/rt/tlsf/Block#set:prev
  local.get $8
  i32.const 0
  call $~lib/rt/tlsf/Block#set:next
  local.get $1
  i32.const 4
  i32.add
  local.get $7
  i32.add
  local.set $4
  local.get $4
  i32.const 0
  i32.const 2
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $0
  local.set $9
  local.get $4
  local.set $3
  local.get $9
  local.get $3
  i32.store offset=1568
  local.get $0
  local.get $8
  call $~lib/rt/tlsf/insertBlock
  i32.const 1
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  i32.const 0
  drop
  global.get $~lib/memory/__heap_base
  i32.const 15
  i32.add
  i32.const 15
  i32.const -1
  i32.xor
  i32.and
  local.set $0
  memory.size
  local.set $1
  local.get $0
  i32.const 1572
  i32.add
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $2
  local.get $2
  local.get $1
  i32.gt_s
  if (result i32)
   local.get $2
   local.get $1
   i32.sub
   memory.grow
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  local.get $0
  local.set $3
  local.get $3
  i32.const 0
  call $~lib/rt/tlsf/Root#set:flMap
  local.get $3
  local.set $5
  i32.const 0
  local.set $4
  local.get $5
  local.get $4
  i32.store offset=1568
  i32.const 0
  local.set $5
  loop $for-loop|0
   local.get $5
   i32.const 23
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $3
    local.set $8
    local.get $5
    local.set $7
    i32.const 0
    local.set $6
    local.get $8
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    local.get $6
    i32.store offset=4
    i32.const 0
    local.set $8
    loop $for-loop|1
     local.get $8
     i32.const 16
     i32.lt_u
     local.set $7
     local.get $7
     if
      local.get $3
      local.set $11
      local.get $5
      local.set $10
      local.get $8
      local.set $9
      i32.const 0
      local.set $6
      local.get $11
      local.get $10
      i32.const 4
      i32.shl
      local.get $9
      i32.add
      i32.const 2
      i32.shl
      i32.add
      local.get $6
      i32.store offset=96
      local.get $8
      i32.const 1
      i32.add
      local.set $8
      br $for-loop|1
     end
    end
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $0
  i32.const 1572
  i32.add
  local.set $12
  i32.const 0
  drop
  local.get $3
  local.get $12
  memory.size
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
  local.get $3
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/tlsf/checkUsedBlock (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 4
  i32.sub
  local.set $1
  local.get $0
  i32.const 0
  i32.ne
  if (result i32)
   local.get $0
   i32.const 15
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $1
   i32.load
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 464
   i32.const 559
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
 )
 (func $~lib/rt/tlsf/freeBlock (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $1
  local.get $1
  i32.load
  i32.const 1
  i32.or
  call $~lib/rt/common/BLOCK#set:mmInfo
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/__free (param $0 i32)
  local.get $0
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   return
  end
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  call $~lib/rt/tlsf/checkUsedBlock
  call $~lib/rt/tlsf/freeBlock
 )
 (func $~lib/rt/itcms/free (param $0 i32)
  local.get $0
  global.get $~lib/memory/__heap_base
  i32.lt_u
  if
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/Object#set:nextWithColor
   local.get $0
   i32.const 0
   call $~lib/rt/itcms/Object#set:prev
  else
   global.get $~lib/rt/itcms/total
   local.get $0
   call $~lib/rt/itcms/Object#get:size
   i32.sub
   global.set $~lib/rt/itcms/total
   i32.const 0
   drop
   local.get $0
   i32.const 4
   i32.add
   call $~lib/rt/tlsf/__free
  end
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  block $break|0
   block $case2|0
    block $case1|0
     block $case0|0
      global.get $~lib/rt/itcms/state
      local.set $1
      local.get $1
      i32.const 0
      i32.eq
      br_if $case0|0
      local.get $1
      i32.const 1
      i32.eq
      br_if $case1|0
      local.get $1
      i32.const 2
      i32.eq
      br_if $case2|0
      br $break|0
     end
     i32.const 1
     global.set $~lib/rt/itcms/state
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     i32.const 0
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/visitCount
     i32.const 1
     i32.mul
     return
    end
    global.get $~lib/rt/itcms/white
    i32.eqz
    local.set $1
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $0
    loop $while-continue|1
     local.get $0
     global.get $~lib/rt/itcms/toSpace
     i32.ne
     local.set $2
     local.get $2
     if
      local.get $0
      global.set $~lib/rt/itcms/iter
      local.get $0
      call $~lib/rt/itcms/Object#get:color
      local.get $1
      i32.ne
      if
       local.get $0
       local.get $1
       call $~lib/rt/itcms/Object#set:color
       i32.const 0
       global.set $~lib/rt/itcms/visitCount
       local.get $0
       i32.const 20
       i32.add
       i32.const 0
       call $~lib/rt/__visit_members
       global.get $~lib/rt/itcms/visitCount
       i32.const 1
       i32.mul
       return
      end
      local.get $0
      call $~lib/rt/itcms/Object#get:next
      local.set $0
      br $while-continue|1
     end
    end
    i32.const 0
    global.set $~lib/rt/itcms/visitCount
    i32.const 0
    call $~lib/rt/itcms/visitRoots
    global.get $~lib/rt/itcms/iter
    call $~lib/rt/itcms/Object#get:next
    local.set $0
    local.get $0
    global.get $~lib/rt/itcms/toSpace
    i32.eq
    if
     i32.const 0
     call $~lib/rt/itcms/visitStack
     global.get $~lib/rt/itcms/iter
     call $~lib/rt/itcms/Object#get:next
     local.set $0
     loop $while-continue|2
      local.get $0
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      local.set $2
      local.get $2
      if
       local.get $0
       call $~lib/rt/itcms/Object#get:color
       local.get $1
       i32.ne
       if
        local.get $0
        local.get $1
        call $~lib/rt/itcms/Object#set:color
        local.get $0
        i32.const 20
        i32.add
        i32.const 0
        call $~lib/rt/__visit_members
       end
       local.get $0
       call $~lib/rt/itcms/Object#get:next
       local.set $0
       br $while-continue|2
      end
     end
     global.get $~lib/rt/itcms/fromSpace
     local.set $2
     global.get $~lib/rt/itcms/toSpace
     global.set $~lib/rt/itcms/fromSpace
     local.get $2
     global.set $~lib/rt/itcms/toSpace
     local.get $1
     global.set $~lib/rt/itcms/white
     local.get $2
     call $~lib/rt/itcms/Object#get:next
     global.set $~lib/rt/itcms/iter
     i32.const 2
     global.set $~lib/rt/itcms/state
    end
    global.get $~lib/rt/itcms/visitCount
    i32.const 1
    i32.mul
    return
   end
   global.get $~lib/rt/itcms/iter
   local.set $0
   local.get $0
   global.get $~lib/rt/itcms/toSpace
   i32.ne
   if
    local.get $0
    call $~lib/rt/itcms/Object#get:next
    global.set $~lib/rt/itcms/iter
    i32.const 1
    drop
    local.get $0
    call $~lib/rt/itcms/Object#get:color
    global.get $~lib/rt/itcms/white
    i32.eqz
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 192
     i32.const 228
     i32.const 20
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    call $~lib/rt/itcms/free
    i32.const 10
    return
   end
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:nextWithColor
   global.get $~lib/rt/itcms/toSpace
   global.get $~lib/rt/itcms/toSpace
   call $~lib/rt/itcms/Object#set:prev
   i32.const 0
   global.set $~lib/rt/itcms/state
   br $break|0
  end
  i32.const 0
 )
 (func $~lib/rt/itcms/interrupt
  (local $0 i32)
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1024
  i32.const 200
  i32.mul
  i32.const 100
  i32.div_u
  local.set $0
  loop $do-loop|0
   local.get $0
   call $~lib/rt/itcms/step
   i32.sub
   local.set $0
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.eq
   if
    i32.const 0
    drop
    global.get $~lib/rt/itcms/total
    i64.extend_i32_u
    i32.const 200
    i64.extend_i32_u
    i64.mul
    i64.const 100
    i64.div_u
    i32.wrap_i64
    i32.const 1024
    i32.add
    global.set $~lib/rt/itcms/threshold
    i32.const 0
    drop
    return
   end
   local.get $0
   i32.const 0
   i32.gt_s
   br_if $do-loop|0
  end
  i32.const 0
  drop
  global.get $~lib/rt/itcms/total
  i32.const 1024
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.sub
  i32.const 1024
  i32.lt_u
  i32.mul
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
 )
 (func $~lib/rt/tlsf/computeSize (param $0 i32) (result i32)
  local.get $0
  i32.const 12
  i32.le_u
  if (result i32)
   i32.const 12
  else
   local.get $0
   i32.const 4
   i32.add
   i32.const 15
   i32.add
   i32.const 15
   i32.const -1
   i32.xor
   i32.and
   i32.const 4
   i32.sub
  end
 )
 (func $~lib/rt/tlsf/prepareSize (param $0 i32) (result i32)
  local.get $0
  i32.const 1073741820
  i32.gt_u
  if
   i32.const 128
   i32.const 464
   i32.const 458
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/rt/tlsf/computeSize
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if
   i32.const 0
   local.set $2
   local.get $1
   i32.const 4
   i32.shr_u
   local.set $3
  else
   local.get $1
   i32.const 536870910
   i32.lt_u
   if (result i32)
    local.get $1
    i32.const 1
    i32.const 27
    local.get $1
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
   else
    local.get $1
   end
   local.set $4
   i32.const 31
   local.get $4
   i32.clz
   i32.sub
   local.set $2
   local.get $4
   local.get $2
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 1
   i32.const 4
   i32.shl
   i32.xor
   local.set $3
   local.get $2
   i32.const 8
   i32.const 1
   i32.sub
   i32.sub
   local.set $2
  end
  i32.const 1
  drop
  local.get $2
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $3
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 464
   i32.const 330
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.set $5
  local.get $2
  local.set $4
  local.get $5
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const 0
  i32.const -1
  i32.xor
  local.get $3
  i32.shl
  i32.and
  local.set $6
  i32.const 0
  local.set $7
  local.get $6
  i32.eqz
  if
   local.get $0
   i32.load
   i32.const 0
   i32.const -1
   i32.xor
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.set $5
   local.get $5
   i32.eqz
   if
    i32.const 0
    local.set $7
   else
    local.get $5
    i32.ctz
    local.set $2
    local.get $0
    local.set $8
    local.get $2
    local.set $4
    local.get $8
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.set $6
    i32.const 1
    drop
    local.get $6
    i32.eqz
    if
     i32.const 0
     i32.const 464
     i32.const 343
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.set $9
    local.get $2
    local.set $8
    local.get $6
    i32.ctz
    local.set $4
    local.get $9
    local.get $8
    i32.const 4
    i32.shl
    local.get $4
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=96
    local.set $7
   end
  else
   local.get $0
   local.set $9
   local.get $2
   local.set $8
   local.get $6
   i32.ctz
   local.set $4
   local.get $9
   local.get $8
   i32.const 4
   i32.shl
   local.get $4
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
   local.set $7
  end
  local.get $7
 )
 (func $~lib/rt/tlsf/growMemory (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  i32.const 0
  drop
  local.get $1
  i32.const 536870910
  i32.lt_u
  if
   local.get $1
   i32.const 1
   i32.const 27
   local.get $1
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.set $1
  end
  memory.size
  local.set $2
  local.get $1
  i32.const 4
  local.get $2
  i32.const 16
  i32.shl
  i32.const 4
  i32.sub
  local.get $0
  local.set $3
  local.get $3
  i32.load offset=1568
  i32.ne
  i32.shl
  i32.add
  local.set $1
  local.get $1
  i32.const 65535
  i32.add
  i32.const 65535
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.shr_u
  local.set $4
  local.get $2
  local.tee $3
  local.get $4
  local.tee $5
  local.get $3
  local.get $5
  i32.gt_s
  select
  local.set $6
  local.get $6
  memory.grow
  i32.const 0
  i32.lt_s
  if
   local.get $4
   memory.grow
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
  end
  memory.size
  local.set $7
  local.get $0
  local.get $2
  i32.const 16
  i32.shl
  local.get $7
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  drop
 )
 (func $~lib/rt/tlsf/prepareBlock (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load
  local.set $3
  i32.const 1
  drop
  local.get $2
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 464
   i32.const 357
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $2
  i32.sub
  local.set $4
  local.get $4
  i32.const 4
  i32.const 12
  i32.add
  i32.ge_u
  if
   local.get $1
   local.get $2
   local.get $3
   i32.const 2
   i32.and
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $1
   i32.const 4
   i32.add
   local.get $2
   i32.add
   local.set $5
   local.get $5
   local.get $4
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $0
   local.get $5
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $1
   local.get $3
   i32.const 1
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
   local.get $1
   local.set $5
   local.get $5
   i32.const 4
   i32.add
   local.get $5
   i32.load
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   local.get $1
   local.set $5
   local.get $5
   i32.const 4
   i32.add
   local.get $5
   i32.load
   i32.const 3
   i32.const -1
   i32.xor
   i32.and
   i32.add
   i32.load
   i32.const 2
   i32.const -1
   i32.xor
   i32.and
   call $~lib/rt/common/BLOCK#set:mmInfo
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  call $~lib/rt/tlsf/prepareSize
  local.set $2
  local.get $0
  local.get $2
  call $~lib/rt/tlsf/searchBlock
  local.set $3
  local.get $3
  i32.eqz
  if
   local.get $0
   local.get $2
   call $~lib/rt/tlsf/growMemory
   local.get $0
   local.get $2
   call $~lib/rt/tlsf/searchBlock
   local.set $3
   i32.const 1
   drop
   local.get $3
   i32.eqz
   if
    i32.const 0
    i32.const 464
    i32.const 496
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  i32.const 1
  drop
  local.get $3
  i32.load
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  local.get $2
  i32.ge_u
  i32.eqz
  if
   i32.const 0
   i32.const 464
   i32.const 498
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $3
  call $~lib/rt/tlsf/removeBlock
  local.get $0
  local.get $3
  local.get $2
  call $~lib/rt/tlsf/prepareBlock
  i32.const 0
  drop
  local.get $3
 )
 (func $~lib/rt/tlsf/__alloc (param $0 i32) (result i32)
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $0
  call $~lib/rt/tlsf/allocateBlock
  i32.const 4
  i32.add
 )
 (func $~lib/rt/itcms/Object#set:rtId (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/rt/itcms/Object#set:rtSize (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=16
 )
 (func $~lib/rt/itcms/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 128
   i32.const 192
   i32.const 260
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   call $~lib/rt/itcms/interrupt
  end
  i32.const 16
  local.get $0
  i32.add
  call $~lib/rt/tlsf/__alloc
  i32.const 4
  i32.sub
  local.set $2
  local.get $2
  local.get $1
  call $~lib/rt/itcms/Object#set:rtId
  local.get $2
  local.get $0
  call $~lib/rt/itcms/Object#set:rtSize
  local.get $2
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $2
  call $~lib/rt/itcms/Object#get:size
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $2
  i32.const 20
  i32.add
  local.set $3
  local.get $3
  i32.const 0
  local.get $0
  memory.fill
  local.get $3
 )
 (func $~lib/rt/itcms/__link (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.eqz
  if
   return
  end
  i32.const 1
  drop
  local.get $0
  i32.eqz
  if
   i32.const 0
   i32.const 192
   i32.const 294
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 20
  i32.sub
  local.set $3
  local.get $3
  call $~lib/rt/itcms/Object#get:color
  global.get $~lib/rt/itcms/white
  i32.eq
  if
   local.get $0
   i32.const 20
   i32.sub
   local.set $4
   local.get $4
   call $~lib/rt/itcms/Object#get:color
   local.set $5
   local.get $5
   global.get $~lib/rt/itcms/white
   i32.eqz
   i32.eq
   if
    local.get $2
    if
     local.get $4
     call $~lib/rt/itcms/Object#makeGray
    else
     local.get $3
     call $~lib/rt/itcms/Object#makeGray
    end
   else
    local.get $5
    i32.const 3
    i32.eq
    if (result i32)
     global.get $~lib/rt/itcms/state
     i32.const 1
     i32.eq
    else
     i32.const 0
    end
    if
     local.get $3
     call $~lib/rt/itcms/Object#makeGray
    end
   end
  end
 )
 (func $~lib/array/Array<i32>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<i32>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<i32>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array<i32>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array.isArray<~lib/array/Array<i32>|null> (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $std/array/Ref#set:v (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
 )
 (func $~lib/array/Array.isArray<std/array/Ref> (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 0
  else
   i32.const 0
  end
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/arraybuffer/ArrayBufferView#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array.isArray<~lib/typedarray/Uint8Array> (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 0
  else
   i32.const 0
  end
 )
 (func $~lib/array/Array.isArray<i32> (param $0 i32) (result i32)
  i32.const 0
 )
 (func $~lib/array/Array.isArray<~lib/string/String> (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 0
  else
   i32.const 0
  end
 )
 (func $~lib/array/Array.isArray<~lib/array/Array<i32>> (param $0 i32) (result i32)
  local.get $0
  i32.const 0
  i32.ne
  if (result i32)
   i32.const 1
  else
   i32.const 0
  end
 )
 (func $~lib/rt/__newBuffer (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  local.get $0
  local.get $1
  call $~lib/rt/itcms/__new
  local.set $3
  local.get $2
  if
   local.get $3
   local.get $2
   local.get $0
   memory.copy
  end
  local.get $3
 )
 (func $~lib/array/Array<u8>#fill (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=4
  local.set $4
  local.get $0
  i32.load offset=12
  local.set $5
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $5
   local.get $2
   i32.add
   local.tee $6
   i32.const 0
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_s
   select
  else
   local.get $2
   local.tee $7
   local.get $5
   local.tee $6
   local.get $7
   local.get $6
   i32.lt_s
   select
  end
  local.set $2
  local.get $3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $5
   local.get $3
   i32.add
   local.tee $6
   i32.const 0
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_s
   select
  else
   local.get $3
   local.tee $7
   local.get $5
   local.tee $6
   local.get $7
   local.get $6
   i32.lt_s
   select
  end
  local.set $3
  i32.const 0
  drop
  i32.const 1
  i32.const 1
  i32.eq
  drop
  local.get $2
  local.get $3
  i32.lt_s
  if
   local.get $4
   local.get $2
   i32.add
   local.get $1
   local.get $3
   local.get $2
   i32.sub
   memory.fill
  end
  local.get $0
 )
 (func $~lib/array/Array<u8>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<u8>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 320
   i32.const 80
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u
  local.set $2
  i32.const 0
  drop
  local.get $2
 )
 (func $std/array/isArraysEqual<u8> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  i32.eqz
  if
   local.get $0
   call $~lib/array/Array<u8>#get:length
   local.set $2
   local.get $2
   local.get $1
   call $~lib/array/Array<u8>#get:length
   i32.ne
   if
    i32.const 0
    return
   end
   local.get $0
   local.get $1
   i32.eq
   if
    i32.const 1
    return
   end
  end
  i32.const 0
  local.set $3
  loop $for-loop|0
   local.get $3
   local.get $2
   i32.lt_s
   local.set $4
   local.get $4
   if
    i32.const 0
    drop
    local.get $0
    local.get $3
    call $~lib/array/Array<u8>#__get
    local.get $1
    local.get $3
    call $~lib/array/Array<u8>#__get
    i32.ne
    if
     i32.const 0
     return
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $~lib/array/Array<u32>#fill (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=4
  local.set $4
  local.get $0
  i32.load offset=12
  local.set $5
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $5
   local.get $2
   i32.add
   local.tee $6
   i32.const 0
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_s
   select
  else
   local.get $2
   local.tee $7
   local.get $5
   local.tee $6
   local.get $7
   local.get $6
   i32.lt_s
   select
  end
  local.set $2
  local.get $3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $5
   local.get $3
   i32.add
   local.tee $6
   i32.const 0
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_s
   select
  else
   local.get $3
   local.tee $7
   local.get $5
   local.tee $6
   local.get $7
   local.get $6
   i32.lt_s
   select
  end
  local.set $3
  i32.const 0
  drop
  i32.const 4
  i32.const 1
  i32.eq
  drop
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  local.get $1
  i32.const 0
  i32.eq
  local.get $1
  i32.const -1
  i32.eq
  i32.or
  if
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $1
    local.get $3
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.fill
   end
   local.get $0
   return
  end
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $0
 )
 (func $~lib/array/Array<u32>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<u32>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 320
   i32.const 80
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  i32.const 0
  drop
  local.get $2
 )
 (func $std/array/isArraysEqual<u32> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  i32.eqz
  if
   local.get $0
   call $~lib/array/Array<u32>#get:length
   local.set $2
   local.get $2
   local.get $1
   call $~lib/array/Array<u32>#get:length
   i32.ne
   if
    i32.const 0
    return
   end
   local.get $0
   local.get $1
   i32.eq
   if
    i32.const 1
    return
   end
  end
  i32.const 0
  local.set $3
  loop $for-loop|0
   local.get $3
   local.get $2
   i32.lt_s
   local.set $4
   local.get $4
   if
    i32.const 0
    drop
    local.get $0
    local.get $3
    call $~lib/array/Array<u32>#__get
    local.get $1
    local.get $3
    call $~lib/array/Array<u32>#__get
    i32.ne
    if
     i32.const 0
     return
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $~lib/array/Array<f32>#fill (param $0 i32) (param $1 f32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $0
  i32.load offset=4
  local.set $4
  local.get $0
  i32.load offset=12
  local.set $5
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $5
   local.get $2
   i32.add
   local.tee $6
   i32.const 0
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_s
   select
  else
   local.get $2
   local.tee $7
   local.get $5
   local.tee $6
   local.get $7
   local.get $6
   i32.lt_s
   select
  end
  local.set $2
  local.get $3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $5
   local.get $3
   i32.add
   local.tee $6
   i32.const 0
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_s
   select
  else
   local.get $3
   local.tee $7
   local.get $5
   local.tee $6
   local.get $7
   local.get $6
   i32.lt_s
   select
  end
  local.set $3
  i32.const 0
  drop
  i32.const 4
  i32.const 1
  i32.eq
  drop
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $1
  i32.reinterpret_f32
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   i32.const 4
   i32.const 8
   i32.eq
  end
  if
   local.get $2
   local.get $3
   i32.lt_s
   if
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.const 0
    local.get $3
    local.get $2
    i32.sub
    i32.const 2
    i32.shl
    memory.fill
   end
   local.get $0
   return
  end
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    local.get $1
    f32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $0
 )
 (func $~lib/array/Array<f32>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<f32>#__get (param $0 i32) (param $1 i32) (result f32)
  (local $2 f32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 320
   i32.const 80
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  f32.load
  local.set $2
  i32.const 0
  drop
  local.get $2
 )
 (func $std/array/isArraysEqual<f32> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f32)
  (local $6 f64)
  local.get $2
  i32.eqz
  if
   local.get $0
   call $~lib/array/Array<f32>#get:length
   local.set $2
   local.get $2
   local.get $1
   call $~lib/array/Array<f32>#get:length
   i32.ne
   if
    i32.const 0
    return
   end
   local.get $0
   local.get $1
   i32.eq
   if
    i32.const 1
    return
   end
  end
  i32.const 0
  local.set $3
  loop $for-loop|0
   local.get $3
   local.get $2
   i32.lt_s
   local.set $4
   local.get $4
   if
    block $for-continue|0
     i32.const 1
     drop
     local.get $0
     local.get $3
     call $~lib/array/Array<f32>#__get
     local.tee $5
     local.get $5
     f32.ne
     if (result i32)
      local.get $1
      local.get $3
      call $~lib/array/Array<f32>#__get
      local.tee $5
      local.get $5
      f32.ne
     else
      i32.const 0
     end
     if
      br $for-continue|0
     end
     local.get $0
     local.get $3
     call $~lib/array/Array<f32>#__get
     f64.promote_f32
     local.set $6
     local.get $6
     i64.reinterpret_f64
     i64.const 63
     i64.shr_u
     i64.const 0
     i64.ne
     i32.const 0
     i32.ne
     local.get $1
     local.get $3
     call $~lib/array/Array<f32>#__get
     f64.promote_f32
     local.set $6
     local.get $6
     i64.reinterpret_f64
     i64.const 63
     i64.shr_u
     i64.const 0
     i64.ne
     i32.const 0
     i32.ne
     i32.ne
     if
      i32.const 0
      return
     end
     local.get $0
     local.get $3
     call $~lib/array/Array<f32>#__get
     local.get $1
     local.get $3
     call $~lib/array/Array<f32>#__get
     f32.ne
     if
      i32.const 0
      return
     end
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $~lib/array/Array<i32>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/arraybuffer/ArrayBuffer#get:byteLength (param $0 i32) (result i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
 )
 (func $~lib/rt/itcms/__renew (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.const 20
  i32.sub
  local.set $2
  local.get $1
  local.get $2
  i32.load
  i32.const 3
  i32.const -1
  i32.xor
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/Object#set:rtSize
   local.get $0
   return
  end
  local.get $1
  local.get $2
  i32.load offset=12
  call $~lib/rt/itcms/__new
  local.set $3
  local.get $3
  local.get $0
  local.get $1
  local.tee $4
  local.get $2
  i32.load offset=16
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_u
  select
  memory.copy
  local.get $3
 )
 (func $~lib/array/ensureCapacity (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $0
  i32.load offset=8
  local.set $4
  local.get $1
  local.get $4
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   local.get $1
   i32.const 1073741820
   local.get $2
   i32.shr_u
   i32.gt_u
   if
    i32.const 32
    i32.const 80
    i32.const 19
    i32.const 48
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   i32.load
   local.set $5
   local.get $1
   local.tee $6
   i32.const 8
   local.tee $7
   local.get $6
   local.get $7
   i32.gt_u
   select
   local.get $2
   i32.shl
   local.set $6
   local.get $3
   if
    local.get $4
    i32.const 1
    i32.shl
    local.tee $7
    i32.const 1073741820
    local.tee $8
    local.get $7
    local.get $8
    i32.lt_u
    select
    local.tee $8
    local.get $6
    local.tee $7
    local.get $8
    local.get $7
    i32.gt_u
    select
    local.set $6
   end
   local.get $5
   local.get $6
   call $~lib/rt/itcms/__renew
   local.set $8
   i32.const 2
   global.get $~lib/shared/runtime/Runtime.Incremental
   i32.ne
   drop
   local.get $8
   local.get $5
   i32.ne
   if
    local.get $0
    local.get $8
    i32.store
    local.get $0
    local.get $8
    i32.store offset=4
    local.get $0
    local.get $8
    i32.const 0
    call $~lib/rt/itcms/__link
   end
   local.get $0
   local.get $6
   i32.store offset=8
  end
 )
 (func $~lib/array/Array<i32>#push (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $2
  i32.const 1
  i32.add
  local.set $3
  local.get $0
  local.get $3
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  i32.const 0
  drop
  local.get $0
  i32.load offset=4
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store
  local.get $0
  local.get $3
  call $~lib/array/Array<i32>#set:length_
  local.get $3
 )
 (func $~lib/array/Array<i32>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 320
   i32.const 80
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  i32.const 0
  drop
  local.get $2
 )
 (func $~lib/array/Array<i32>#pop (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load offset=12
  local.set $1
  local.get $1
  i32.const 1
  i32.lt_s
  if
   i32.const 1616
   i32.const 80
   i32.const 319
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 1
  i32.sub
  local.tee $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $2
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#set:length_
  local.get $2
 )
 (func $~lib/array/Array<std/array/Ref>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 1
  drop
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<std/array/Ref>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<std/array/Ref>#set:length (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.const 2
  i32.const 0
  call $~lib/array/ensureCapacity
  local.get $0
  local.get $1
  call $~lib/array/Array<std/array/Ref>#set:length_
 )
 (func $~lib/array/Array<std/array/Ref>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<i32>#at (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $1
  i32.const 0
  local.get $2
  local.get $1
  i32.const 0
  i32.ge_s
  select
  i32.add
  local.set $1
  local.get $1
  local.get $2
  i32.ge_u
  if
   i32.const 320
   i32.const 80
   i32.const 147
   i32.const 33
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $3
  i32.const 0
  drop
  local.get $3
 )
 (func $~lib/array/Array<i32>#copyWithin (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $0
  i32.load offset=4
  local.set $4
  local.get $0
  i32.load offset=12
  local.set $5
  local.get $3
  local.tee $6
  local.get $5
  local.tee $7
  local.get $6
  local.get $7
  i32.lt_s
  select
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $5
   local.get $1
   i32.add
   local.tee $7
   i32.const 0
   local.tee $6
   local.get $7
   local.get $6
   i32.gt_s
   select
  else
   local.get $1
   local.tee $6
   local.get $5
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $8
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $5
   local.get $2
   i32.add
   local.tee $7
   i32.const 0
   local.tee $6
   local.get $7
   local.get $6
   i32.gt_s
   select
  else
   local.get $2
   local.tee $6
   local.get $5
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $9
  local.get $3
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $5
   local.get $3
   i32.add
   local.tee $7
   i32.const 0
   local.tee $6
   local.get $7
   local.get $6
   i32.gt_s
   select
  else
   local.get $3
   local.tee $6
   local.get $5
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
  end
  local.set $10
  local.get $10
  local.get $9
  i32.sub
  local.tee $7
  local.get $5
  local.get $8
  i32.sub
  local.tee $6
  local.get $7
  local.get $6
  i32.lt_s
  select
  local.set $11
  local.get $4
  local.get $8
  i32.const 2
  i32.shl
  i32.add
  local.get $4
  local.get $9
  i32.const 2
  i32.shl
  i32.add
  local.get $11
  i32.const 2
  i32.shl
  memory.copy
  local.get $0
 )
 (func $std/array/isArraysEqual<i32> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  i32.eqz
  if
   local.get $0
   call $~lib/array/Array<i32>#get:length
   local.set $2
   local.get $2
   local.get $1
   call $~lib/array/Array<i32>#get:length
   i32.ne
   if
    i32.const 0
    return
   end
   local.get $0
   local.get $1
   i32.eq
   if
    i32.const 1
    return
   end
  end
  i32.const 0
  local.set $3
  loop $for-loop|0
   local.get $3
   local.get $2
   i32.lt_s
   local.set $4
   local.get $4
   if
    i32.const 0
    drop
    local.get $0
    local.get $3
    call $~lib/array/Array<i32>#__get
    local.get $1
    local.get $3
    call $~lib/array/Array<i32>#__get
    i32.ne
    if
     i32.const 0
     return
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $~lib/array/Array<i32>#unshift (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  i32.const 1
  i32.add
  local.set $2
  local.get $0
  local.get $2
  i32.const 2
  i32.const 1
  call $~lib/array/ensureCapacity
  local.get $0
  i32.load offset=4
  local.set $3
  local.get $3
  i32.const 4
  i32.add
  local.get $3
  local.get $2
  i32.const 1
  i32.sub
  i32.const 2
  i32.shl
  memory.copy
  local.get $3
  local.get $1
  i32.store
  i32.const 0
  drop
  local.get $0
  local.get $2
  call $~lib/array/Array<i32>#set:length_
  local.get $2
 )
 (func $~lib/array/Array<i32>#shift (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.load offset=12
  local.set $1
  local.get $1
  i32.const 1
  i32.lt_s
  if
   i32.const 1616
   i32.const 80
   i32.const 378
   i32.const 18
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  i32.load
  local.set $3
  local.get $1
  i32.const 1
  i32.sub
  local.set $4
  local.get $2
  local.get $2
  i32.const 4
  i32.add
  local.get $4
  i32.const 2
  i32.shl
  memory.copy
  i32.const 0
  drop
  local.get $2
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  i32.const 0
  i32.store
  local.get $0
  local.get $4
  call $~lib/array/Array<i32>#set:length_
  local.get $3
 )
 (func $~lib/util/bytes/REVERSE<i32> (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $2
   local.get $1
   i32.const 1
   i32.shr_u
   local.set $4
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 4
   i32.const 1
   i32.eq
   drop
   i32.const 4
   i32.const 2
   i32.eq
   drop
   local.get $1
   i32.const 1
   i32.sub
   local.set $3
   loop $while-continue|0
    local.get $2
    local.get $4
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $0
     local.get $2
     i32.const 2
     i32.shl
     i32.add
     local.set $6
     local.get $0
     local.get $3
     local.get $2
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     local.set $7
     local.get $6
     i32.load
     local.set $8
     local.get $6
     local.get $7
     i32.load
     i32.store
     local.get $7
     local.get $8
     i32.store
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/array/Array<i32>#reverse (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=12
  call $~lib/util/bytes/REVERSE<i32>
  local.get $0
 )
 (func $~lib/polyfills/bswap<u64> (param $0 i64) (result i64)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  i32.const 1
  drop
  i32.const 8
  i32.const 1
  i32.eq
  drop
  i32.const 8
  i32.const 2
  i32.eq
  drop
  i32.const 8
  i32.const 4
  i32.eq
  drop
  i32.const 8
  i32.const 8
  i32.eq
  drop
  local.get $0
  i64.const 8
  i64.shr_u
  i64.const 71777214294589695
  i64.and
  local.set $1
  local.get $0
  i64.const 71777214294589695
  i64.and
  i64.const 8
  i64.shl
  local.set $2
  local.get $1
  local.get $2
  i64.or
  local.set $3
  local.get $3
  i64.const 16
  i64.shr_u
  i64.const 281470681808895
  i64.and
  local.set $1
  local.get $3
  i64.const 281470681808895
  i64.and
  i64.const 16
  i64.shl
  local.set $2
  local.get $1
  local.get $2
  i64.or
  i64.const 32
  i64.rotr
  return
 )
 (func $~lib/util/bytes/REVERSE<u8> (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $1
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $2
   local.get $1
   i32.const 1
   i32.shr_u
   local.set $4
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 1
   i32.const 1
   i32.eq
   drop
   local.get $1
   i32.const 8
   i32.sub
   local.set $3
   loop $while-continue|0
    local.get $2
    i32.const 7
    i32.add
    local.get $4
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $0
     local.get $2
     i32.add
     local.set $6
     local.get $0
     local.get $3
     i32.add
     local.get $2
     i32.sub
     local.set $7
     local.get $6
     i64.load
     call $~lib/polyfills/bswap<u64>
     local.set $8
     local.get $6
     local.get $7
     i64.load
     call $~lib/polyfills/bswap<u64>
     i64.store
     local.get $7
     local.get $8
     i64.store
     local.get $2
     i32.const 8
     i32.add
     local.set $2
     br $while-continue|0
    end
   end
   i32.const 1
   i32.const 2
   i32.eq
   drop
   local.get $1
   i32.const 1
   i32.sub
   local.set $3
   loop $while-continue|1
    local.get $2
    local.get $4
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $0
     local.get $2
     i32.const 0
     i32.shl
     i32.add
     local.set $9
     local.get $0
     local.get $3
     local.get $2
     i32.sub
     i32.const 0
     i32.shl
     i32.add
     local.set $10
     local.get $9
     i32.load8_u
     local.set $11
     local.get $9
     local.get $10
     i32.load8_u
     i32.store8
     local.get $10
     local.get $11
     i32.store8
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $while-continue|1
    end
   end
  end
 )
 (func $~lib/array/Array<u8>#reverse (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=12
  call $~lib/util/bytes/REVERSE<u8>
  local.get $0
 )
 (func $~lib/util/bytes/REVERSE<u16> (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $1
  i32.const 1
  i32.gt_u
  if
   i32.const 0
   local.set $2
   local.get $1
   i32.const 1
   i32.shr_u
   local.set $4
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   i32.const 2
   i32.const 1
   i32.eq
   drop
   i32.const 2
   i32.const 2
   i32.eq
   drop
   local.get $1
   i32.const 2
   i32.sub
   local.set $3
   loop $while-continue|0
    local.get $2
    i32.const 1
    i32.add
    local.get $4
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $0
     local.get $2
     i32.const 1
     i32.shl
     i32.add
     local.set $6
     local.get $0
     local.get $3
     local.get $2
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $7
     local.get $7
     i32.load
     i32.const 16
     i32.rotr
     local.set $8
     local.get $7
     local.get $6
     i32.load
     i32.const 16
     i32.rotr
     i32.store
     local.get $6
     local.get $8
     i32.store
     local.get $2
     i32.const 2
     i32.add
     local.set $2
     br $while-continue|0
    end
   end
   local.get $1
   i32.const 1
   i32.sub
   local.set $3
   loop $while-continue|1
    local.get $2
    local.get $4
    i32.lt_u
    local.set $5
    local.get $5
    if
     local.get $0
     local.get $2
     i32.const 1
     i32.shl
     i32.add
     local.set $9
     local.get $0
     local.get $3
     local.get $2
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $10
     local.get $9
     i32.load16_u
     local.set $11
     local.get $9
     local.get $10
     i32.load16_u
     i32.store16
     local.get $10
     local.get $11
     i32.store16
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $while-continue|1
    end
   end
  end
 )
 (func $~lib/array/Array<u16>#reverse (param $0 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=12
  call $~lib/util/bytes/REVERSE<u16>
  local.get $0
 )
 (func $~lib/array/Array<u16>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<u16>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 320
   i32.const 80
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
  local.set $2
  i32.const 0
  drop
  local.get $2
 )
 (func $~lib/array/Array<i32>#indexOf (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $3
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $2
   local.get $3
   i32.ge_s
  end
  if
   i32.const -1
   return
  end
  local.get $2
  i32.const 0
  i32.lt_s
  if
   local.get $3
   local.get $2
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $2
  end
  local.get $0
  i32.load offset=4
  local.set $6
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $6
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $1
    i32.eq
    if
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  i32.const -1
 )
 (func $~lib/array/Array<f32>#indexOf (param $0 i32) (param $1 f32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $3
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $2
   local.get $3
   i32.ge_s
  end
  if
   i32.const -1
   return
  end
  local.get $2
  i32.const 0
  i32.lt_s
  if
   local.get $3
   local.get $2
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $2
  end
  local.get $0
  i32.load offset=4
  local.set $6
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $6
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    f32.load
    local.get $1
    f32.eq
    if
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  i32.const -1
 )
 (func $~lib/array/Array<f64>#indexOf (param $0 i32) (param $1 f64) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $3
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $2
   local.get $3
   i32.ge_s
  end
  if
   i32.const -1
   return
  end
  local.get $2
  i32.const 0
  i32.lt_s
  if
   local.get $3
   local.get $2
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $2
  end
  local.get $0
  i32.load offset=4
  local.set $6
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $6
    local.get $2
    i32.const 3
    i32.shl
    i32.add
    f64.load
    local.get $1
    f64.eq
    if
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  i32.const -1
 )
 (func $~lib/array/Array<i32>#lastIndexOf (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $3
  i32.const 0
  i32.eq
  if
   i32.const -1
   return
  end
  local.get $2
  i32.const 0
  i32.lt_s
  if
   local.get $3
   local.get $2
   i32.add
   local.set $2
  else
   local.get $2
   local.get $3
   i32.ge_s
   if
    local.get $3
    i32.const 1
    i32.sub
    local.set $2
   end
  end
  local.get $0
  i32.load offset=4
  local.set $4
  loop $while-continue|0
   local.get $2
   i32.const 0
   i32.ge_s
   local.set $5
   local.get $5
   if
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $1
    i32.eq
    if
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $while-continue|0
   end
  end
  i32.const -1
 )
 (func $~lib/array/Array<i32>#lastIndexOf@varargs (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   local.get $0
   i32.load offset=12
   local.set $2
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<i32>#lastIndexOf
 )
 (func $~lib/array/Array<i32>#includes (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  i32.const 0
  drop
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<i32>#indexOf
  i32.const 0
  i32.ge_s
  return
 )
 (func $~lib/array/Array<f32>#includes (param $0 i32) (param $1 f32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $3
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $2
   local.get $3
   i32.ge_s
  end
  if
   i32.const 0
   return
  end
  local.get $2
  i32.const 0
  i32.lt_s
  if
   local.get $3
   local.get $2
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $2
  end
  local.get $0
  i32.load offset=4
  local.set $4
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    f32.load
    local.set $6
    local.get $6
    local.get $1
    f32.eq
    if (result i32)
     i32.const 1
    else
     local.get $6
     local.get $6
     f32.ne
     local.get $1
     local.get $1
     f32.ne
     i32.and
    end
    if
     i32.const 1
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  i32.const 0
  return
 )
 (func $~lib/array/Array<f64>#includes (param $0 i32) (param $1 f64) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 f64)
  i32.const 1
  drop
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $3
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $2
   local.get $3
   i32.ge_s
  end
  if
   i32.const 0
   return
  end
  local.get $2
  i32.const 0
  i32.lt_s
  if
   local.get $3
   local.get $2
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
   local.set $2
  end
  local.get $0
  i32.load offset=4
  local.set $4
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $4
    local.get $2
    i32.const 3
    i32.shl
    i32.add
    f64.load
    local.set $6
    local.get $6
    local.get $1
    f64.eq
    if (result i32)
     i32.const 1
    else
     local.get $6
     local.get $6
     f64.ne
     local.get $1
     local.get $1
     f64.ne
     i32.and
    end
    if
     i32.const 1
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  i32.const 0
  return
 )
 (func $~lib/array/Array<std/array/Ref|null>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 1
  drop
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<std/array/Ref|null>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<std/array/Ref|null>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<i32>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 0
  drop
 )
 (func $~lib/array/Array<i32>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 320
    i32.const 80
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   call $~lib/array/Array<i32>#set:length_
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<i32>#__uset
 )
 (func $start:std/array~anonymous|0 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  i32.eq
 )
 (func $~lib/array/Array<i32>#findIndex (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  loop $for-loop|0
   local.get $2
   local.get $3
   local.tee $4
   local.get $0
   i32.load offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $0
    i32.load offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $2
    local.get $0
    i32.const 3
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  i32.const -1
 )
 (func $start:std/array~anonymous|1 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 1
  i32.eq
 )
 (func $start:std/array~anonymous|2 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|3 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|4 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|5 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|6 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  i32.eq
 )
 (func $~lib/array/Array<i32>#findLastIndex (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=12
  i32.const 1
  i32.sub
  local.set $2
  loop $for-loop|0
   local.get $2
   i32.const 0
   i32.ge_s
   local.set $3
   local.get $3
   if
    local.get $0
    i32.load offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $2
    local.get $0
    i32.const 3
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $2
     return
    end
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    br $for-loop|0
   end
  end
  i32.const -1
 )
 (func $start:std/array~anonymous|7 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 1
  i32.eq
 )
 (func $start:std/array~anonymous|8 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|9 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  local.get $0
  i32.const 100
  i32.eq
 )
 (func $start:std/array~anonymous|10 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  i32.ge_s
 )
 (func $~lib/array/Array<i32>#every (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  loop $for-loop|0
   local.get $2
   local.get $3
   local.tee $4
   local.get $0
   i32.load offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $0
    i32.load offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $2
    local.get $0
    i32.const 3
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    i32.eqz
    if
     i32.const 0
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $start:std/array~anonymous|11 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 0
  i32.le_s
 )
 (func $start:std/array~anonymous|12 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  local.get $0
  i32.const 10
  i32.lt_s
 )
 (func $start:std/array~anonymous|13 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 10
  i32.lt_s
 )
 (func $start:std/array~anonymous|14 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  local.get $0
  i32.const 3
  i32.lt_s
 )
 (func $start:std/array~anonymous|15 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 3
  i32.ge_s
 )
 (func $~lib/array/Array<i32>#some (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  loop $for-loop|0
   local.get $2
   local.get $3
   local.tee $4
   local.get $0
   i32.load offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $0
    i32.load offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $2
    local.get $0
    i32.const 3
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     i32.const 1
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  i32.const 0
 )
 (func $start:std/array~anonymous|16 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const -1
  i32.le_s
 )
 (func $start:std/array~anonymous|17 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  local.get $0
  i32.const 10
  i32.gt_s
 )
 (func $start:std/array~anonymous|18 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 10
  i32.gt_s
 )
 (func $start:std/array~anonymous|19 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  local.get $0
  i32.const 3
  i32.gt_s
 )
 (func $start:std/array~anonymous|20 (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
 )
 (func $~lib/array/Array<i32>#forEach (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 0
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  loop $for-loop|0
   local.get $2
   local.get $3
   local.tee $4
   local.get $0
   i32.load offset=12
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $0
    i32.load offset=4
    local.get $2
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $2
    local.get $0
    i32.const 3
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_none)
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
 )
 (func $start:std/array~anonymous|21 (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|22 (param $0 i32) (param $1 i32) (param $2 i32)
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|23 (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
 )
 (func $start:std/array~anonymous|24 (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i32.const 0
  i32.eq
  if
   i32.const 0
   local.set $3
   loop $for-loop|0
    local.get $3
    i32.const 4
    i32.lt_s
    local.set $4
    local.get $4
    if
     local.get $2
     call $~lib/array/Array<i32>#pop
     drop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|0
    end
   end
   i32.const 0
   local.set $3
   loop $for-loop|1
    local.get $3
    i32.const 100
    i32.lt_s
    local.set $4
    local.get $4
    if
     local.get $2
     i32.const 100
     local.get $3
     i32.add
     call $~lib/array/Array<i32>#push
     drop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|1
    end
   end
   i32.const 0
   local.set $3
   loop $for-loop|2
    local.get $3
    i32.const 100
    i32.lt_s
    local.set $4
    local.get $4
    if
     local.get $2
     call $~lib/array/Array<i32>#pop
     drop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|2
    end
   end
   i32.const 0
   local.set $3
   loop $for-loop|3
    local.get $3
    i32.const 100
    i32.lt_s
    local.set $4
    local.get $4
    if
     local.get $2
     local.get $3
     i32.const 200
     i32.add
     call $~lib/array/Array<i32>#push
     drop
     local.get $3
     i32.const 1
     i32.add
     local.set $3
     br $for-loop|3
    end
   end
  end
  local.get $1
  i32.const 2
  i32.eq
  if
   local.get $0
   i32.const 202
   i32.eq
   i32.eqz
   if
    i32.const 0
    i32.const 528
    i32.const 767
    i32.const 7
    call $~lib/builtins/abort
    unreachable
   end
  end
 )
 (func $start:std/array~anonymous|25 (param $0 i32) (param $1 i32) (param $2 i32) (result f32)
  local.get $0
  f32.convert_i32_s
 )
 (func $start:std/array~anonymous|26 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
 )
 (func $start:std/array~anonymous|27 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
 )
 (func $start:std/array~anonymous|28 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
 )
 (func $start:std/array~anonymous|29 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|30 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  i32.const 100
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|31 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|32 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/i
  local.get $0
  i32.add
  global.set $std/array/i
  local.get $0
  i32.const 2
  i32.ge_s
 )
 (func $start:std/array~anonymous|33 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $1
  i32.add
 )
 (func $~lib/array/Array<i32>#reduce<i32> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $2
  local.set $3
  i32.const 0
  local.set $4
  local.get $0
  i32.load offset=12
  local.set $5
  loop $for-loop|0
   local.get $4
   local.get $5
   local.tee $6
   local.get $0
   i32.load offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $6
   local.get $6
   if
    local.get $3
    local.get $0
    i32.load offset=4
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $4
    local.get $0
    i32.const 4
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $3
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $3
 )
 (func $start:std/array~anonymous|34 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $1
  i32.add
 )
 (func $start:std/array~anonymous|35 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 2
   i32.gt_s
  end
 )
 (func $~lib/array/Array<i32>#reduce<bool> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $2
  local.set $3
  i32.const 0
  local.set $4
  local.get $0
  i32.load offset=12
  local.set $5
  loop $for-loop|0
   local.get $4
   local.get $5
   local.tee $6
   local.get $0
   i32.load offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $6
   local.get $6
   if
    local.get $3
    local.get $0
    i32.load offset=4
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $4
    local.get $0
    i32.const 4
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $3
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $3
 )
 (func $start:std/array~anonymous|36 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 100
   i32.gt_s
  end
 )
 (func $start:std/array~anonymous|37 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $3
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  local.get $0
  local.get $1
  i32.add
 )
 (func $start:std/array~anonymous|38 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $1
  i32.add
 )
 (func $start:std/array~anonymous|39 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $3
  call $~lib/array/Array<i32>#pop
  drop
  local.get $0
  local.get $1
  i32.add
 )
 (func $start:std/array~anonymous|40 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $1
  i32.add
 )
 (func $~lib/array/Array<i32>#reduceRight<i32> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $2
  local.set $3
  local.get $0
  i32.load offset=12
  i32.const 1
  i32.sub
  local.set $4
  loop $for-loop|0
   local.get $4
   i32.const 0
   i32.ge_s
   local.set $5
   local.get $5
   if
    local.get $3
    local.get $0
    i32.load offset=4
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $4
    local.get $0
    i32.const 4
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $3
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    br $for-loop|0
   end
  end
  local.get $3
 )
 (func $start:std/array~anonymous|41 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $1
  i32.add
 )
 (func $start:std/array~anonymous|42 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 2
   i32.gt_s
  end
 )
 (func $~lib/array/Array<i32>#reduceRight<bool> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $2
  local.set $3
  local.get $0
  i32.load offset=12
  i32.const 1
  i32.sub
  local.set $4
  loop $for-loop|0
   local.get $4
   i32.const 0
   i32.ge_s
   local.set $5
   local.get $5
   if
    local.get $3
    local.get $0
    i32.load offset=4
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $4
    local.get $0
    i32.const 4
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_i32_=>_i32)
    local.set $3
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    br $for-loop|0
   end
  end
  local.get $3
 )
 (func $start:std/array~anonymous|43 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 100
   i32.gt_s
  end
 )
 (func $start:std/array~anonymous|44 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $3
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  local.get $0
  local.get $1
  i32.add
 )
 (func $start:std/array~anonymous|45 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $0
  local.get $1
  i32.add
 )
 (func $start:std/array~anonymous|46 (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  local.get $3
  call $~lib/array/Array<i32>#pop
  drop
  local.get $0
  local.get $1
  i32.add
 )
 (func $~lib/math/murmurHash3 (param $0 i64) (result i64)
  local.get $0
  local.get $0
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
  i64.const -49064778989728563
  i64.mul
  local.set $0
  local.get $0
  local.get $0
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
  i64.const -4265267296055464877
  i64.mul
  local.set $0
  local.get $0
  local.get $0
  i64.const 33
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
 )
 (func $~lib/math/splitMix32 (param $0 i32) (result i32)
  local.get $0
  i32.const 1831565813
  i32.add
  local.set $0
  local.get $0
  local.get $0
  i32.const 15
  i32.shr_u
  i32.xor
  local.get $0
  i32.const 1
  i32.or
  i32.mul
  local.set $0
  local.get $0
  local.get $0
  local.get $0
  local.get $0
  i32.const 7
  i32.shr_u
  i32.xor
  local.get $0
  i32.const 61
  i32.or
  i32.mul
  i32.add
  i32.xor
  local.set $0
  local.get $0
  local.get $0
  i32.const 14
  i32.shr_u
  i32.xor
 )
 (func $~lib/math/NativeMath.seedRandom (param $0 i64)
  local.get $0
  i64.const 0
  i64.eq
  if
   i64.const -7046029254386353131
   local.set $0
  end
  local.get $0
  call $~lib/math/murmurHash3
  global.set $~lib/math/random_state0_64
  global.get $~lib/math/random_state0_64
  i64.const -1
  i64.xor
  call $~lib/math/murmurHash3
  global.set $~lib/math/random_state1_64
  local.get $0
  i32.wrap_i64
  call $~lib/math/splitMix32
  global.set $~lib/math/random_state0_32
  global.get $~lib/math/random_state0_32
  call $~lib/math/splitMix32
  global.set $~lib/math/random_state1_32
  i32.const 1
  global.set $~lib/math/random_seeded
 )
 (func $std/array/Dim#set:height (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
 )
 (func $std/array/Dim#set:width (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<std/array/Dim>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 1
  drop
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/util/sort/insertionSort<f32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 f32)
  (local $10 f32)
  (local $11 f32)
  (local $12 i32)
  (local $13 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.set $5
  local.get $1
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  local.get $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $3
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $2
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    f32.load
    local.set $8
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    f32.load offset=4
    local.set $9
    local.get $9
    local.set $10
    local.get $8
    local.set $11
    local.get $8
    local.get $9
    i32.const 2
    global.set $~argumentsLength
    local.get $4
    i32.load
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $8
     local.set $10
     local.get $9
     local.set $11
    end
    local.get $6
    i32.const 1
    i32.sub
    local.set $12
    block $while-break|1
     loop $while-continue|1
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       f32.load
       local.set $8
       local.get $8
       local.get $11
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        f32.store offset=8
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $11
    f32.store offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       f32.load
       local.set $8
       local.get $8
       local.get $10
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $f32_f32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        f32.store offset=4
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $10
    f32.store offset=4
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f32)
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   return
  end
  local.get $1
  local.set $4
  local.get $0
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  f32.load
  local.get $0
  local.get $4
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  f32.load
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  i32.load
  call_indirect $0 (type $f32_f32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     f32.load offset=4
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     f32.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $5
   loop $while-continue|1
    local.get $1
    local.get $5
    i32.lt_s
    local.set $6
    local.get $6
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     f32.load
     local.set $7
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     f32.load
     f32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     f32.store
     local.get $5
     i32.const 1
     i32.sub
     local.set $5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     f32.load offset=4
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     f32.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
 )
 (func $~lib/util/sort/nodePower (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i64)
  local.get $1
  local.get $0
  i32.sub
  i32.const 1
  i32.add
  i64.extend_i32_u
  local.set $5
  local.get $3
  local.get $0
  i32.const 1
  i32.shl
  i32.sub
  local.set $6
  local.get $2
  local.get $6
  i32.add
  local.set $7
  local.get $4
  local.get $6
  i32.add
  i32.const 1
  i32.add
  local.set $8
  local.get $7
  i64.extend_i32_u
  i64.const 30
  i64.shl
  local.get $5
  i64.div_u
  local.set $9
  local.get $8
  i64.extend_i32_u
  i64.const 30
  i64.shl
  local.get $5
  i64.div_u
  local.set $10
  local.get $9
  local.get $10
  i64.xor
  i32.wrap_i64
  i32.clz
 )
 (func $~lib/util/sort/mergeRuns<f32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f32)
  (local $12 f32)
  local.get $2
  i32.const 1
  i32.sub
  local.set $2
  local.get $3
  local.get $2
  i32.add
  local.set $8
  local.get $2
  i32.const 1
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $1
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    f32.load
    f32.store
    local.get $6
    i32.const 1
    i32.sub
    local.set $6
    br $for-loop|0
   end
  end
  local.get $2
  local.set $7
  loop $for-loop|1
   local.get $7
   local.get $3
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $8
    local.get $7
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    f32.load offset=4
    f32.store
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|1
   end
  end
  local.get $1
  local.set $9
  loop $for-loop|2
   local.get $9
   local.get $3
   i32.le_s
   local.set $10
   local.get $10
   if
    local.get $4
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    f32.load
    local.set $11
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    f32.load
    local.set $12
    local.get $11
    local.get $12
    i32.const 2
    global.set $~argumentsLength
    local.get $5
    i32.load
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $11
     f32.store
     local.get $7
     i32.const 1
     i32.sub
     local.set $7
    else
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $12
     f32.store
     local.get $6
     i32.const 1
     i32.add
     local.set $6
    end
    local.get $9
    i32.const 1
    i32.add
    local.set $9
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<f32> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 f32)
  (local $5 f32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $1
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $0
     f32.load
     local.set $4
     local.get $0
     f32.load offset=4
     local.set $5
     local.get $4
     local.get $5
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $3
     local.get $0
     local.get $5
     local.get $4
     local.get $3
     select
     f32.store
     local.get $4
     local.get $5
     local.get $3
     select
     local.set $4
     local.get $0
     f32.load offset=8
     local.set $5
     local.get $4
     local.get $5
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $f32_f32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $3
     local.get $0
     local.get $5
     local.get $4
     local.get $3
     select
     f32.store offset=4
     local.get $0
     local.get $4
     local.get $5
     local.get $3
     select
     f32.store offset=8
    end
    local.get $0
    f32.load
    local.set $5
    local.get $0
    f32.load offset=4
    local.set $4
    local.get $5
    local.get $4
    i32.const 2
    global.set $~argumentsLength
    local.get $2
    i32.load
    call_indirect $0 (type $f32_f32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $3
    local.get $0
    local.get $4
    local.get $5
    local.get $3
    select
    f32.store
    local.get $0
    local.get $5
    local.get $4
    local.get $3
    select
    f32.store offset=4
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   local.get $2
   call $~lib/util/sort/insertionSort<f32>
   return
  end
  local.get $1
  local.set $3
  i32.const 31
  local.get $3
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $6
  local.get $6
  i32.const 2
  i32.shl
  local.set $7
  local.get $7
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $8
  local.get $8
  local.get $7
  i32.add
  local.set $9
  i32.const 0
  local.set $3
  loop $for-loop|1
   local.get $3
   local.get $6
   i32.lt_u
   local.set $10
   local.get $10
   if
    local.get $8
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|1
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $11
  local.get $1
  i32.const 1
  i32.sub
  local.set $12
  local.get $0
  i32.const 0
  local.get $12
  local.get $2
  call $~lib/util/sort/extendRunRight<f32>
  local.set $13
  local.get $13
  i32.const 1
  i32.add
  local.set $14
  local.get $14
  i32.const 32
  i32.lt_s
  if
   local.get $12
   local.tee $10
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $3
   local.get $10
   local.get $3
   i32.lt_s
   select
   local.set $13
   local.get $0
   i32.const 0
   local.get $13
   local.get $14
   local.get $2
   call $~lib/util/sort/insertionSort<f32>
  end
  i32.const 0
  local.set $15
  i32.const 0
  local.set $16
  loop $while-continue|2
   local.get $13
   local.get $12
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $13
    i32.const 1
    i32.add
    local.set $3
    local.get $0
    local.get $3
    local.get $12
    local.get $2
    call $~lib/util/sort/extendRunRight<f32>
    local.set $17
    local.get $17
    local.get $3
    i32.sub
    i32.const 1
    i32.add
    local.set $18
    local.get $18
    i32.const 32
    i32.lt_s
    if
     local.get $12
     local.tee $19
     local.get $3
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $20
     local.get $19
     local.get $20
     i32.lt_s
     select
     local.set $17
     local.get $0
     local.get $3
     local.get $17
     local.get $18
     local.get $2
     call $~lib/util/sort/insertionSort<f32>
    end
    i32.const 0
    local.get $12
    local.get $16
    local.get $3
    local.get $17
    call $~lib/util/sort/nodePower
    local.set $19
    local.get $15
    local.set $20
    loop $for-loop|3
     local.get $20
     local.get $19
     i32.gt_u
     local.set $21
     local.get $21
     if
      local.get $8
      local.get $20
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $22
      local.get $22
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $22
       local.get $9
       local.get $20
       i32.const 2
       i32.shl
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $13
       local.get $11
       local.get $2
       call $~lib/util/sort/mergeRuns<f32>
       local.get $22
       local.set $16
       local.get $8
       local.get $20
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store
      end
      local.get $20
      i32.const 1
      i32.sub
      local.set $20
      br $for-loop|3
     end
    end
    local.get $8
    local.get $19
    i32.const 2
    i32.shl
    i32.add
    local.get $16
    i32.store
    local.get $9
    local.get $19
    i32.const 2
    i32.shl
    i32.add
    local.get $13
    i32.store
    local.get $3
    local.set $16
    local.get $17
    local.set $13
    local.get $19
    local.set $15
    br $while-continue|2
   end
  end
  local.get $15
  local.set $10
  loop $for-loop|4
   local.get $10
   i32.const 0
   i32.ne
   local.set $20
   local.get $20
   if
    local.get $8
    local.get $10
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $21
    local.get $21
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $21
     local.get $9
     local.get $10
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $12
     local.get $11
     local.get $2
     call $~lib/util/sort/mergeRuns<f32>
    end
    local.get $10
    i32.const 1
    i32.sub
    local.set $10
    br $for-loop|4
   end
  end
  local.get $11
  call $~lib/rt/tlsf/__free
  local.get $8
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/array/Array<f32>#sort (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/util/sort/SORT<f32>
  local.get $0
 )
 (func $~lib/util/sort/COMPARATOR<f32>~anonymous|0 (param $0 f32) (param $1 f32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.reinterpret_f32
  local.set $2
  local.get $1
  i32.reinterpret_f32
  local.set $3
  local.get $2
  local.get $2
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  i32.xor
  local.set $2
  local.get $3
  local.get $3
  i32.const 31
  i32.shr_s
  i32.const 1
  i32.shr_u
  i32.xor
  local.set $3
  local.get $2
  local.get $3
  i32.gt_s
  local.get $2
  local.get $3
  i32.lt_s
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<f64> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  (local $9 f64)
  (local $10 f64)
  (local $11 f64)
  (local $12 i32)
  (local $13 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.set $5
  local.get $1
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  local.get $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $3
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $2
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $0
    local.get $6
    i32.const 3
    i32.shl
    i32.add
    f64.load
    local.set $8
    local.get $0
    local.get $6
    i32.const 3
    i32.shl
    i32.add
    f64.load offset=8
    local.set $9
    local.get $9
    local.set $10
    local.get $8
    local.set $11
    local.get $8
    local.get $9
    i32.const 2
    global.set $~argumentsLength
    local.get $4
    i32.load
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $8
     local.set $10
     local.get $9
     local.set $11
    end
    local.get $6
    i32.const 1
    i32.sub
    local.set $12
    block $while-break|1
     loop $while-continue|1
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $0
       local.get $12
       i32.const 3
       i32.shl
       i32.add
       f64.load
       local.set $8
       local.get $8
       local.get $11
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 3
        i32.shl
        i32.add
        local.get $8
        f64.store offset=16
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 3
    i32.shl
    i32.add
    local.get $11
    f64.store offset=16
    block $while-break|2
     loop $while-continue|2
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $0
       local.get $12
       i32.const 3
       i32.shl
       i32.add
       f64.load
       local.set $8
       local.get $8
       local.get $10
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $f64_f64_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 3
        i32.shl
        i32.add
        local.get $8
        f64.store offset=8
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 3
    i32.shl
    i32.add
    local.get $10
    f64.store offset=8
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<f64> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 f64)
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   return
  end
  local.get $1
  local.set $4
  local.get $0
  local.get $4
  i32.const 3
  i32.shl
  i32.add
  f64.load
  local.get $0
  local.get $4
  i32.const 1
  i32.add
  local.tee $4
  i32.const 3
  i32.shl
  i32.add
  f64.load
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  i32.load
  call_indirect $0 (type $f64_f64_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 3
     i32.shl
     i32.add
     f64.load offset=8
     local.get $0
     local.get $4
     i32.const 3
     i32.shl
     i32.add
     f64.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $5
   loop $while-continue|1
    local.get $1
    local.get $5
    i32.lt_s
    local.set $6
    local.get $6
    if
     local.get $0
     local.get $1
     i32.const 3
     i32.shl
     i32.add
     f64.load
     local.set $7
     local.get $0
     local.get $1
     i32.const 3
     i32.shl
     i32.add
     local.get $0
     local.get $5
     i32.const 3
     i32.shl
     i32.add
     f64.load
     f64.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $0
     local.get $5
     i32.const 3
     i32.shl
     i32.add
     local.get $7
     f64.store
     local.get $5
     i32.const 1
     i32.sub
     local.set $5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 3
     i32.shl
     i32.add
     f64.load offset=8
     local.get $0
     local.get $4
     i32.const 3
     i32.shl
     i32.add
     f64.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
 )
 (func $~lib/util/sort/mergeRuns<f64> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 f64)
  (local $12 f64)
  local.get $2
  i32.const 1
  i32.sub
  local.set $2
  local.get $3
  local.get $2
  i32.add
  local.set $8
  local.get $2
  i32.const 1
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $1
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $6
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 1
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    f64.load
    f64.store
    local.get $6
    i32.const 1
    i32.sub
    local.set $6
    br $for-loop|0
   end
  end
  local.get $2
  local.set $7
  loop $for-loop|1
   local.get $7
   local.get $3
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $8
    local.get $7
    i32.sub
    i32.const 3
    i32.shl
    i32.add
    local.get $0
    local.get $7
    i32.const 3
    i32.shl
    i32.add
    f64.load offset=8
    f64.store
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|1
   end
  end
  local.get $1
  local.set $9
  loop $for-loop|2
   local.get $9
   local.get $3
   i32.le_s
   local.set $10
   local.get $10
   if
    local.get $4
    local.get $7
    i32.const 3
    i32.shl
    i32.add
    f64.load
    local.set $11
    local.get $4
    local.get $6
    i32.const 3
    i32.shl
    i32.add
    f64.load
    local.set $12
    local.get $11
    local.get $12
    i32.const 2
    global.set $~argumentsLength
    local.get $5
    i32.load
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $9
     i32.const 3
     i32.shl
     i32.add
     local.get $11
     f64.store
     local.get $7
     i32.const 1
     i32.sub
     local.set $7
    else
     local.get $0
     local.get $9
     i32.const 3
     i32.shl
     i32.add
     local.get $12
     f64.store
     local.get $6
     i32.const 1
     i32.add
     local.set $6
    end
    local.get $9
    i32.const 1
    i32.add
    local.set $9
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<f64> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 f64)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $1
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $0
     f64.load
     local.set $4
     local.get $0
     f64.load offset=8
     local.set $5
     local.get $4
     local.get $5
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $3
     local.get $0
     local.get $5
     local.get $4
     local.get $3
     select
     f64.store
     local.get $4
     local.get $5
     local.get $3
     select
     local.set $4
     local.get $0
     f64.load offset=16
     local.set $5
     local.get $4
     local.get $5
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $f64_f64_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $3
     local.get $0
     local.get $5
     local.get $4
     local.get $3
     select
     f64.store offset=8
     local.get $0
     local.get $4
     local.get $5
     local.get $3
     select
     f64.store offset=16
    end
    local.get $0
    f64.load
    local.set $5
    local.get $0
    f64.load offset=8
    local.set $4
    local.get $5
    local.get $4
    i32.const 2
    global.set $~argumentsLength
    local.get $2
    i32.load
    call_indirect $0 (type $f64_f64_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $3
    local.get $0
    local.get $4
    local.get $5
    local.get $3
    select
    f64.store
    local.get $0
    local.get $5
    local.get $4
    local.get $3
    select
    f64.store offset=8
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   local.get $2
   call $~lib/util/sort/insertionSort<f64>
   return
  end
  local.get $1
  local.set $3
  i32.const 31
  local.get $3
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $6
  local.get $6
  i32.const 2
  i32.shl
  local.set $7
  local.get $7
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $8
  local.get $8
  local.get $7
  i32.add
  local.set $9
  i32.const 0
  local.set $3
  loop $for-loop|1
   local.get $3
   local.get $6
   i32.lt_u
   local.set $10
   local.get $10
   if
    local.get $8
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|1
   end
  end
  local.get $1
  i32.const 3
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $11
  local.get $1
  i32.const 1
  i32.sub
  local.set $12
  local.get $0
  i32.const 0
  local.get $12
  local.get $2
  call $~lib/util/sort/extendRunRight<f64>
  local.set $13
  local.get $13
  i32.const 1
  i32.add
  local.set $14
  local.get $14
  i32.const 32
  i32.lt_s
  if
   local.get $12
   local.tee $10
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $3
   local.get $10
   local.get $3
   i32.lt_s
   select
   local.set $13
   local.get $0
   i32.const 0
   local.get $13
   local.get $14
   local.get $2
   call $~lib/util/sort/insertionSort<f64>
  end
  i32.const 0
  local.set $15
  i32.const 0
  local.set $16
  loop $while-continue|2
   local.get $13
   local.get $12
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $13
    i32.const 1
    i32.add
    local.set $3
    local.get $0
    local.get $3
    local.get $12
    local.get $2
    call $~lib/util/sort/extendRunRight<f64>
    local.set $17
    local.get $17
    local.get $3
    i32.sub
    i32.const 1
    i32.add
    local.set $18
    local.get $18
    i32.const 32
    i32.lt_s
    if
     local.get $12
     local.tee $19
     local.get $3
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $20
     local.get $19
     local.get $20
     i32.lt_s
     select
     local.set $17
     local.get $0
     local.get $3
     local.get $17
     local.get $18
     local.get $2
     call $~lib/util/sort/insertionSort<f64>
    end
    i32.const 0
    local.get $12
    local.get $16
    local.get $3
    local.get $17
    call $~lib/util/sort/nodePower
    local.set $19
    local.get $15
    local.set $20
    loop $for-loop|3
     local.get $20
     local.get $19
     i32.gt_u
     local.set $21
     local.get $21
     if
      local.get $8
      local.get $20
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $22
      local.get $22
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $22
       local.get $9
       local.get $20
       i32.const 2
       i32.shl
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $13
       local.get $11
       local.get $2
       call $~lib/util/sort/mergeRuns<f64>
       local.get $22
       local.set $16
       local.get $8
       local.get $20
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store
      end
      local.get $20
      i32.const 1
      i32.sub
      local.set $20
      br $for-loop|3
     end
    end
    local.get $8
    local.get $19
    i32.const 2
    i32.shl
    i32.add
    local.get $16
    i32.store
    local.get $9
    local.get $19
    i32.const 2
    i32.shl
    i32.add
    local.get $13
    i32.store
    local.get $3
    local.set $16
    local.get $17
    local.set $13
    local.get $19
    local.set $15
    br $while-continue|2
   end
  end
  local.get $15
  local.set $10
  loop $for-loop|4
   local.get $10
   i32.const 0
   i32.ne
   local.set $20
   local.get $20
   if
    local.get $8
    local.get $10
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $21
    local.get $21
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $21
     local.get $9
     local.get $10
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $12
     local.get $11
     local.get $2
     call $~lib/util/sort/mergeRuns<f64>
    end
    local.get $10
    i32.const 1
    i32.sub
    local.set $10
    br $for-loop|4
   end
  end
  local.get $11
  call $~lib/rt/tlsf/__free
  local.get $8
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/array/Array<f64>#sort (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/util/sort/SORT<f64>
  local.get $0
 )
 (func $~lib/util/sort/COMPARATOR<f64>~anonymous|0 (param $0 f64) (param $1 f64) (result i32)
  (local $2 i64)
  (local $3 i64)
  local.get $0
  i64.reinterpret_f64
  local.set $2
  local.get $1
  i64.reinterpret_f64
  local.set $3
  local.get $2
  local.get $2
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  i64.xor
  local.set $2
  local.get $3
  local.get $3
  i64.const 63
  i64.shr_s
  i64.const 1
  i64.shr_u
  i64.xor
  local.set $3
  local.get $2
  local.get $3
  i64.gt_s
  local.get $2
  local.get $3
  i64.lt_s
  i32.sub
 )
 (func $~lib/array/Array<f64>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<f64>#__get (param $0 i32) (param $1 i32) (result f64)
  (local $2 f64)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 320
   i32.const 80
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 3
  i32.shl
  i32.add
  f64.load
  local.set $2
  i32.const 0
  drop
  local.get $2
 )
 (func $std/array/isArraysEqual<f64> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  local.get $2
  i32.eqz
  if
   local.get $0
   call $~lib/array/Array<f64>#get:length
   local.set $2
   local.get $2
   local.get $1
   call $~lib/array/Array<f64>#get:length
   i32.ne
   if
    i32.const 0
    return
   end
   local.get $0
   local.get $1
   i32.eq
   if
    i32.const 1
    return
   end
  end
  i32.const 0
  local.set $3
  loop $for-loop|0
   local.get $3
   local.get $2
   i32.lt_s
   local.set $4
   local.get $4
   if
    block $for-continue|0
     i32.const 1
     drop
     local.get $0
     local.get $3
     call $~lib/array/Array<f64>#__get
     local.tee $5
     local.get $5
     f64.ne
     if (result i32)
      local.get $1
      local.get $3
      call $~lib/array/Array<f64>#__get
      local.tee $5
      local.get $5
      f64.ne
     else
      i32.const 0
     end
     if
      br $for-continue|0
     end
     local.get $0
     local.get $3
     call $~lib/array/Array<f64>#__get
     local.set $5
     local.get $5
     i64.reinterpret_f64
     i64.const 63
     i64.shr_u
     i64.const 0
     i64.ne
     i32.const 0
     i32.ne
     local.get $1
     local.get $3
     call $~lib/array/Array<f64>#__get
     local.set $5
     local.get $5
     i64.reinterpret_f64
     i64.const 63
     i64.shr_u
     i64.const 0
     i64.ne
     i32.const 0
     i32.ne
     i32.ne
     if
      i32.const 0
      return
     end
     local.get $0
     local.get $3
     call $~lib/array/Array<f64>#__get
     local.get $1
     local.get $3
     call $~lib/array/Array<f64>#__get
     f64.ne
     if
      i32.const 0
      return
     end
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $~lib/util/sort/insertionSort<i32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.set $5
  local.get $1
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  local.get $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $3
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $2
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $8
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.set $9
    local.get $9
    local.set $10
    local.get $8
    local.set $11
    local.get $8
    local.get $9
    i32.const 2
    global.set $~argumentsLength
    local.get $4
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $8
     local.set $10
     local.get $9
     local.set $11
    end
    local.get $6
    i32.const 1
    i32.sub
    local.set $12
    block $while-break|1
     loop $while-continue|1
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.set $8
       local.get $8
       local.get $11
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        i32.store offset=8
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $11
    i32.store offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.set $8
       local.get $8
       local.get $10
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        i32.store offset=4
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $10
    i32.store offset=4
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<i32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   return
  end
  local.get $1
  local.set $4
  local.get $0
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.get $0
  local.get $4
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  i32.load
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $5
   loop $while-continue|1
    local.get $1
    local.get $5
    i32.lt_s
    local.set $6
    local.get $6
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $7
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store
     local.get $5
     i32.const 1
     i32.sub
     local.set $5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
 )
 (func $~lib/util/sort/mergeRuns<i32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $2
  i32.const 1
  i32.sub
  local.set $2
  local.get $3
  local.get $2
  i32.add
  local.set $8
  local.get $2
  i32.const 1
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $1
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load
    i32.store
    local.get $6
    i32.const 1
    i32.sub
    local.set $6
    br $for-loop|0
   end
  end
  local.get $2
  local.set $7
  loop $for-loop|1
   local.get $7
   local.get $3
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $8
    local.get $7
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    i32.store
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|1
   end
  end
  local.get $1
  local.set $9
  loop $for-loop|2
   local.get $9
   local.get $3
   i32.le_s
   local.set $10
   local.get $10
   if
    local.get $4
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $11
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $12
    local.get $11
    local.get $12
    i32.const 2
    global.set $~argumentsLength
    local.get $5
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $11
     i32.store
     local.get $7
     i32.const 1
     i32.sub
     local.set $7
    else
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $12
     i32.store
     local.get $6
     i32.const 1
     i32.add
     local.set $6
    end
    local.get $9
    i32.const 1
    i32.add
    local.set $9
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<i32> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $1
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $0
     i32.load
     local.set $3
     local.get $0
     i32.load offset=4
     local.set $4
     local.get $3
     local.get $4
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $5
     local.get $0
     local.get $4
     local.get $3
     local.get $5
     select
     i32.store
     local.get $3
     local.get $4
     local.get $5
     select
     local.set $3
     local.get $0
     i32.load offset=8
     local.set $4
     local.get $3
     local.get $4
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $5
     local.get $0
     local.get $4
     local.get $3
     local.get $5
     select
     i32.store offset=4
     local.get $0
     local.get $3
     local.get $4
     local.get $5
     select
     i32.store offset=8
    end
    local.get $0
    i32.load
    local.set $5
    local.get $0
    i32.load offset=4
    local.set $4
    local.get $5
    local.get $4
    i32.const 2
    global.set $~argumentsLength
    local.get $2
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $3
    local.get $0
    local.get $4
    local.get $5
    local.get $3
    select
    i32.store
    local.get $0
    local.get $5
    local.get $4
    local.get $3
    select
    i32.store offset=4
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   local.get $2
   call $~lib/util/sort/insertionSort<i32>
   return
  end
  local.get $1
  local.set $5
  i32.const 31
  local.get $5
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $6
  local.get $6
  i32.const 2
  i32.shl
  local.set $7
  local.get $7
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $8
  local.get $8
  local.get $7
  i32.add
  local.set $9
  i32.const 0
  local.set $5
  loop $for-loop|1
   local.get $5
   local.get $6
   i32.lt_u
   local.set $3
   local.get $3
   if
    local.get $8
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|1
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $10
  local.get $1
  i32.const 1
  i32.sub
  local.set $11
  local.get $0
  i32.const 0
  local.get $11
  local.get $2
  call $~lib/util/sort/extendRunRight<i32>
  local.set $12
  local.get $12
  i32.const 1
  i32.add
  local.set $13
  local.get $13
  i32.const 32
  i32.lt_s
  if
   local.get $11
   local.tee $4
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   local.set $12
   local.get $0
   i32.const 0
   local.get $12
   local.get $13
   local.get $2
   call $~lib/util/sort/insertionSort<i32>
  end
  i32.const 0
  local.set $14
  i32.const 0
  local.set $15
  loop $while-continue|2
   local.get $12
   local.get $11
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $12
    i32.const 1
    i32.add
    local.set $5
    local.get $0
    local.get $5
    local.get $11
    local.get $2
    call $~lib/util/sort/extendRunRight<i32>
    local.set $3
    local.get $3
    local.get $5
    i32.sub
    i32.const 1
    i32.add
    local.set $16
    local.get $16
    i32.const 32
    i32.lt_s
    if
     local.get $11
     local.tee $17
     local.get $5
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $18
     local.get $17
     local.get $18
     i32.lt_s
     select
     local.set $3
     local.get $0
     local.get $5
     local.get $3
     local.get $16
     local.get $2
     call $~lib/util/sort/insertionSort<i32>
    end
    i32.const 0
    local.get $11
    local.get $15
    local.get $5
    local.get $3
    call $~lib/util/sort/nodePower
    local.set $17
    local.get $14
    local.set $18
    loop $for-loop|3
     local.get $18
     local.get $17
     i32.gt_u
     local.set $19
     local.get $19
     if
      local.get $8
      local.get $18
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $20
      local.get $20
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $20
       local.get $9
       local.get $18
       i32.const 2
       i32.shl
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $12
       local.get $10
       local.get $2
       call $~lib/util/sort/mergeRuns<i32>
       local.get $20
       local.set $15
       local.get $8
       local.get $18
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store
      end
      local.get $18
      i32.const 1
      i32.sub
      local.set $18
      br $for-loop|3
     end
    end
    local.get $8
    local.get $17
    i32.const 2
    i32.shl
    i32.add
    local.get $15
    i32.store
    local.get $9
    local.get $17
    i32.const 2
    i32.shl
    i32.add
    local.get $12
    i32.store
    local.get $5
    local.set $15
    local.get $3
    local.set $12
    local.get $17
    local.set $14
    br $while-continue|2
   end
  end
  local.get $14
  local.set $4
  loop $for-loop|4
   local.get $4
   i32.const 0
   i32.ne
   local.set $18
   local.get $18
   if
    local.get $8
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $19
    local.get $19
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $19
     local.get $9
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $11
     local.get $10
     local.get $2
     call $~lib/util/sort/mergeRuns<i32>
    end
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    br $for-loop|4
   end
  end
  local.get $10
  call $~lib/rt/tlsf/__free
  local.get $8
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/array/Array<i32>#sort (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/util/sort/SORT<i32>
  local.get $0
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<u32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.set $5
  local.get $1
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  local.get $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $3
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $2
   i32.le_s
   local.set $7
   local.get $7
   if
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $8
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.set $9
    local.get $9
    local.set $10
    local.get $8
    local.set $11
    local.get $8
    local.get $9
    i32.const 2
    global.set $~argumentsLength
    local.get $4
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $8
     local.set $10
     local.get $9
     local.set $11
    end
    local.get $6
    i32.const 1
    i32.sub
    local.set $12
    block $while-break|1
     loop $while-continue|1
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.set $8
       local.get $8
       local.get $11
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        i32.store offset=8
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $11
    i32.store offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.set $8
       local.get $8
       local.get $10
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        i32.store offset=4
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $10
    i32.store offset=4
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
 )
 (func $~lib/util/sort/extendRunRight<u32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   return
  end
  local.get $1
  local.set $4
  local.get $0
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.get $0
  local.get $4
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  i32.load
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $5
   loop $while-continue|1
    local.get $1
    local.get $5
    i32.lt_s
    local.set $6
    local.get $6
    if
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $7
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store
     local.get $5
     i32.const 1
     i32.sub
     local.set $5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
 )
 (func $~lib/util/sort/mergeRuns<u32> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  local.get $2
  i32.const 1
  i32.sub
  local.set $2
  local.get $3
  local.get $2
  i32.add
  local.set $8
  local.get $2
  i32.const 1
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $1
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load
    i32.store
    local.get $6
    i32.const 1
    i32.sub
    local.set $6
    br $for-loop|0
   end
  end
  local.get $2
  local.set $7
  loop $for-loop|1
   local.get $7
   local.get $3
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $8
    local.get $7
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    i32.store
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|1
   end
  end
  local.get $1
  local.set $9
  loop $for-loop|2
   local.get $9
   local.get $3
   i32.le_s
   local.set $10
   local.get $10
   if
    local.get $4
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $11
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $12
    local.get $11
    local.get $12
    i32.const 2
    global.set $~argumentsLength
    local.get $5
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $11
     i32.store
     local.get $7
     i32.const 1
     i32.sub
     local.set $7
    else
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $12
     i32.store
     local.get $6
     i32.const 1
     i32.add
     local.set $6
    end
    local.get $9
    i32.const 1
    i32.add
    local.set $9
    br $for-loop|2
   end
  end
 )
 (func $~lib/util/sort/SORT<u32> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $1
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     local.get $0
     i32.load
     local.set $3
     local.get $0
     i32.load offset=4
     local.set $4
     local.get $3
     local.get $4
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $5
     local.get $0
     local.get $4
     local.get $3
     local.get $5
     select
     i32.store
     local.get $3
     local.get $4
     local.get $5
     select
     local.set $3
     local.get $0
     i32.load offset=8
     local.set $4
     local.get $3
     local.get $4
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $5
     local.get $0
     local.get $4
     local.get $3
     local.get $5
     select
     i32.store offset=4
     local.get $0
     local.get $3
     local.get $4
     local.get $5
     select
     i32.store offset=8
    end
    local.get $0
    i32.load
    local.set $5
    local.get $0
    i32.load offset=4
    local.set $4
    local.get $5
    local.get $4
    i32.const 2
    global.set $~argumentsLength
    local.get $2
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $3
    local.get $0
    local.get $4
    local.get $5
    local.get $3
    select
    i32.store
    local.get $0
    local.get $5
    local.get $4
    local.get $3
    select
    i32.store offset=4
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   local.get $2
   call $~lib/util/sort/insertionSort<u32>
   return
  end
  local.get $1
  local.set $5
  i32.const 31
  local.get $5
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $6
  local.get $6
  i32.const 2
  i32.shl
  local.set $7
  local.get $7
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $8
  local.get $8
  local.get $7
  i32.add
  local.set $9
  i32.const 0
  local.set $5
  loop $for-loop|1
   local.get $5
   local.get $6
   i32.lt_u
   local.set $3
   local.get $3
   if
    local.get $8
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|1
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $10
  local.get $1
  i32.const 1
  i32.sub
  local.set $11
  local.get $0
  i32.const 0
  local.get $11
  local.get $2
  call $~lib/util/sort/extendRunRight<u32>
  local.set $12
  local.get $12
  i32.const 1
  i32.add
  local.set $13
  local.get $13
  i32.const 32
  i32.lt_s
  if
   local.get $11
   local.tee $4
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   local.set $12
   local.get $0
   i32.const 0
   local.get $12
   local.get $13
   local.get $2
   call $~lib/util/sort/insertionSort<u32>
  end
  i32.const 0
  local.set $14
  i32.const 0
  local.set $15
  loop $while-continue|2
   local.get $12
   local.get $11
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $12
    i32.const 1
    i32.add
    local.set $5
    local.get $0
    local.get $5
    local.get $11
    local.get $2
    call $~lib/util/sort/extendRunRight<u32>
    local.set $3
    local.get $3
    local.get $5
    i32.sub
    i32.const 1
    i32.add
    local.set $16
    local.get $16
    i32.const 32
    i32.lt_s
    if
     local.get $11
     local.tee $17
     local.get $5
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $18
     local.get $17
     local.get $18
     i32.lt_s
     select
     local.set $3
     local.get $0
     local.get $5
     local.get $3
     local.get $16
     local.get $2
     call $~lib/util/sort/insertionSort<u32>
    end
    i32.const 0
    local.get $11
    local.get $15
    local.get $5
    local.get $3
    call $~lib/util/sort/nodePower
    local.set $17
    local.get $14
    local.set $18
    loop $for-loop|3
     local.get $18
     local.get $17
     i32.gt_u
     local.set $19
     local.get $19
     if
      local.get $8
      local.get $18
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $20
      local.get $20
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $20
       local.get $9
       local.get $18
       i32.const 2
       i32.shl
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $12
       local.get $10
       local.get $2
       call $~lib/util/sort/mergeRuns<u32>
       local.get $20
       local.set $15
       local.get $8
       local.get $18
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store
      end
      local.get $18
      i32.const 1
      i32.sub
      local.set $18
      br $for-loop|3
     end
    end
    local.get $8
    local.get $17
    i32.const 2
    i32.shl
    i32.add
    local.get $15
    i32.store
    local.get $9
    local.get $17
    i32.const 2
    i32.shl
    i32.add
    local.get $12
    i32.store
    local.get $5
    local.set $15
    local.get $3
    local.set $12
    local.get $17
    local.set $14
    br $while-continue|2
   end
  end
  local.get $14
  local.set $4
  loop $for-loop|4
   local.get $4
   i32.const 0
   i32.ne
   local.set $18
   local.get $18
   if
    local.get $8
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $19
    local.get $19
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $19
     local.get $9
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $11
     local.get $10
     local.get $2
     call $~lib/util/sort/mergeRuns<u32>
    end
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    br $for-loop|4
   end
  end
  local.get $10
  call $~lib/rt/tlsf/__free
  local.get $8
  call $~lib/rt/tlsf/__free
 )
 (func $~lib/array/Array<u32>#sort (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/util/sort/SORT<u32>
  local.get $0
 )
 (func $~lib/util/sort/COMPARATOR<u32>~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.gt_u
  local.get $0
  local.get $1
  i32.lt_u
  i32.sub
 )
 (func $~lib/math/NativeMath.random (result f64)
  (local $0 i64)
  (local $1 i64)
  (local $2 i64)
  global.get $~lib/math/random_seeded
  i32.eqz
  if
   call $~lib/builtins/seed
   i64.reinterpret_f64
   call $~lib/math/NativeMath.seedRandom
  end
  global.get $~lib/math/random_state0_64
  local.set $0
  global.get $~lib/math/random_state1_64
  local.set $1
  local.get $1
  global.set $~lib/math/random_state0_64
  local.get $0
  local.get $0
  i64.const 23
  i64.shl
  i64.xor
  local.set $0
  local.get $0
  local.get $0
  i64.const 17
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
  local.get $1
  i64.xor
  local.set $0
  local.get $0
  local.get $1
  i64.const 26
  i64.shr_u
  i64.xor
  local.set $0
  local.get $0
  global.set $~lib/math/random_state1_64
  local.get $1
  i64.const 12
  i64.shr_u
  i64.const 4607182418800017408
  i64.or
  local.set $2
  local.get $2
  f64.reinterpret_i64
  f64.const 1
  f64.sub
 )
 (func $~lib/util/sort/COMPARATOR<i32>~anonymous|1 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.sub
 )
 (func $std/array/isSorted<i32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  i32.const 1
  local.set $2
  local.get $0
  call $~lib/array/Array<i32>#get:length
  local.set $3
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $0
    local.get $2
    i32.const 1
    i32.sub
    call $~lib/array/Array<i32>#__get
    local.get $0
    local.get $2
    call $~lib/array/Array<i32>#__get
    i32.const 2
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    if
     i32.const 0
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  i32.const 1
 )
 (func $std/array/assertStableSortedForComplexObjects~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load
  local.get $1
  i32.load
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<std/array/Dim> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.set $5
  local.get $1
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  local.get $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $3
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $2
   i32.le_s
   local.set $7
   local.get $7
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $8
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.tee $9
    i32.store offset=4
    local.get $9
    local.set $10
    local.get $8
    local.set $11
    local.get $8
    local.get $9
    i32.const 2
    global.set $~argumentsLength
    local.get $4
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $8
     local.set $10
     local.get $9
     local.set $11
    end
    local.get $6
    i32.const 1
    i32.sub
    local.set $12
    block $while-break|1
     loop $while-continue|1
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $8
       i32.store
       local.get $8
       local.get $11
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        i32.store offset=8
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $11
    i32.store offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $8
       i32.store
       local.get $8
       local.get $10
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        i32.store offset=4
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $10
    i32.store offset=4
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/mergeRuns<std/array/Dim> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $2
  i32.const 1
  i32.sub
  local.set $2
  local.get $3
  local.get $2
  i32.add
  local.set $8
  local.get $2
  i32.const 1
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $1
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load
    i32.store
    local.get $6
    i32.const 1
    i32.sub
    local.set $6
    br $for-loop|0
   end
  end
  local.get $2
  local.set $7
  loop $for-loop|1
   local.get $7
   local.get $3
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $8
    local.get $7
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    i32.store
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|1
   end
  end
  local.get $1
  local.set $9
  loop $for-loop|2
   local.get $9
   local.get $3
   i32.le_s
   local.set $10
   local.get $10
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $11
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $12
    i32.store offset=4
    local.get $11
    local.get $12
    i32.const 2
    global.set $~argumentsLength
    local.get $5
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $11
     i32.store
     local.get $7
     i32.const 1
     i32.sub
     local.set $7
    else
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $12
     i32.store
     local.get $6
     i32.const 1
     i32.add
     local.set $6
    end
    local.get $9
    i32.const 1
    i32.add
    local.set $9
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/SORT<std/array/Dim> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $1
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $4
     i32.store offset=4
     local.get $3
     local.get $4
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $5
     local.get $0
     local.get $4
     local.get $3
     local.get $5
     select
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     local.get $4
     local.get $5
     select
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $4
     i32.store offset=4
     local.get $3
     local.get $4
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $5
     local.get $0
     local.get $4
     local.get $3
     local.get $5
     select
     i32.store offset=4
     local.get $0
     local.get $3
     local.get $4
     local.get $5
     select
     i32.store offset=8
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $5
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $4
    i32.store offset=4
    local.get $5
    local.get $4
    i32.const 2
    global.set $~argumentsLength
    local.get $2
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $3
    local.get $0
    local.get $4
    local.get $5
    local.get $3
    select
    i32.store
    local.get $0
    local.get $5
    local.get $4
    local.get $3
    select
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   local.get $2
   call $~lib/util/sort/insertionSort<std/array/Dim>
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $1
  local.set $5
  i32.const 31
  local.get $5
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $6
  local.get $6
  i32.const 2
  i32.shl
  local.set $7
  local.get $7
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $8
  local.get $8
  local.get $7
  i32.add
  local.set $9
  i32.const 0
  local.set $5
  loop $for-loop|1
   local.get $5
   local.get $6
   i32.lt_u
   local.set $3
   local.get $3
   if
    local.get $8
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|1
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $10
  local.get $1
  i32.const 1
  i32.sub
  local.set $11
  local.get $0
  i32.const 0
  local.get $11
  local.get $2
  call $~lib/util/sort/extendRunRight<std/array/Dim>
  local.set $12
  local.get $12
  i32.const 1
  i32.add
  local.set $13
  local.get $13
  i32.const 32
  i32.lt_s
  if
   local.get $11
   local.tee $4
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   local.set $12
   local.get $0
   i32.const 0
   local.get $12
   local.get $13
   local.get $2
   call $~lib/util/sort/insertionSort<std/array/Dim>
  end
  i32.const 0
  local.set $14
  i32.const 0
  local.set $15
  loop $while-continue|2
   local.get $12
   local.get $11
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $12
    i32.const 1
    i32.add
    local.set $5
    local.get $0
    local.get $5
    local.get $11
    local.get $2
    call $~lib/util/sort/extendRunRight<std/array/Dim>
    local.set $3
    local.get $3
    local.get $5
    i32.sub
    i32.const 1
    i32.add
    local.set $16
    local.get $16
    i32.const 32
    i32.lt_s
    if
     local.get $11
     local.tee $17
     local.get $5
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $18
     local.get $17
     local.get $18
     i32.lt_s
     select
     local.set $3
     local.get $0
     local.get $5
     local.get $3
     local.get $16
     local.get $2
     call $~lib/util/sort/insertionSort<std/array/Dim>
    end
    i32.const 0
    local.get $11
    local.get $15
    local.get $5
    local.get $3
    call $~lib/util/sort/nodePower
    local.set $17
    local.get $14
    local.set $18
    loop $for-loop|3
     local.get $18
     local.get $17
     i32.gt_u
     local.set $19
     local.get $19
     if
      local.get $8
      local.get $18
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $20
      local.get $20
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $20
       local.get $9
       local.get $18
       i32.const 2
       i32.shl
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $12
       local.get $10
       local.get $2
       call $~lib/util/sort/mergeRuns<std/array/Dim>
       local.get $20
       local.set $15
       local.get $8
       local.get $18
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store
      end
      local.get $18
      i32.const 1
      i32.sub
      local.set $18
      br $for-loop|3
     end
    end
    local.get $8
    local.get $17
    i32.const 2
    i32.shl
    i32.add
    local.get $15
    i32.store
    local.get $9
    local.get $17
    i32.const 2
    i32.shl
    i32.add
    local.get $12
    i32.store
    local.get $5
    local.set $15
    local.get $3
    local.set $12
    local.get $17
    local.set $14
    br $while-continue|2
   end
  end
  local.get $14
  local.set $4
  loop $for-loop|4
   local.get $4
   i32.const 0
   i32.ne
   local.set $18
   local.get $18
   if
    local.get $8
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $19
    local.get $19
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $19
     local.get $9
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $11
     local.get $10
     local.get $2
     call $~lib/util/sort/mergeRuns<std/array/Dim>
    end
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    br $for-loop|4
   end
  end
  local.get $10
  call $~lib/rt/tlsf/__free
  local.get $8
  call $~lib/rt/tlsf/__free
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<std/array/Dim>#sort (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/util/sort/SORT<std/array/Dim>
  local.get $0
 )
 (func $~lib/array/Array<std/array/Dim>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $start:std/array~anonymous|47 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.sub
 )
 (func $start:std/array~anonymous|48 (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.sub
 )
 (func $start:std/array~anonymous|49 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  i32.sub
 )
 (func $start:std/array~anonymous|50 (param $0 i32) (param $1 i32) (result i32)
  local.get $1
  local.get $0
  i32.sub
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 1
  drop
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 320
    i32.const 80
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   call $~lib/array/Array<~lib/array/Array<i32>>#set:length_
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
 )
 (func $start:std/array~anonymous|51 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.const 0
  call $~lib/array/Array<i32>#__get
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<~lib/array/Array<i32>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.set $5
  local.get $1
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  local.get $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $3
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $2
   i32.le_s
   local.set $7
   local.get $7
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $8
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.tee $9
    i32.store offset=4
    local.get $9
    local.set $10
    local.get $8
    local.set $11
    local.get $8
    local.get $9
    i32.const 2
    global.set $~argumentsLength
    local.get $4
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $8
     local.set $10
     local.get $9
     local.set $11
    end
    local.get $6
    i32.const 1
    i32.sub
    local.set $12
    block $while-break|1
     loop $while-continue|1
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $8
       i32.store
       local.get $8
       local.get $11
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        i32.store offset=8
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $11
    i32.store offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $8
       i32.store
       local.get $8
       local.get $10
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        i32.store offset=4
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $10
    i32.store offset=4
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/mergeRuns<~lib/array/Array<i32>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $2
  i32.const 1
  i32.sub
  local.set $2
  local.get $3
  local.get $2
  i32.add
  local.set $8
  local.get $2
  i32.const 1
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $1
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load
    i32.store
    local.get $6
    i32.const 1
    i32.sub
    local.set $6
    br $for-loop|0
   end
  end
  local.get $2
  local.set $7
  loop $for-loop|1
   local.get $7
   local.get $3
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $8
    local.get $7
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    i32.store
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|1
   end
  end
  local.get $1
  local.set $9
  loop $for-loop|2
   local.get $9
   local.get $3
   i32.le_s
   local.set $10
   local.get $10
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $11
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $12
    i32.store offset=4
    local.get $11
    local.get $12
    i32.const 2
    global.set $~argumentsLength
    local.get $5
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $11
     i32.store
     local.get $7
     i32.const 1
     i32.sub
     local.set $7
    else
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $12
     i32.store
     local.get $6
     i32.const 1
     i32.add
     local.set $6
    end
    local.get $9
    i32.const 1
    i32.add
    local.set $9
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/SORT<~lib/array/Array<i32>> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $1
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $4
     i32.store offset=4
     local.get $3
     local.get $4
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $5
     local.get $0
     local.get $4
     local.get $3
     local.get $5
     select
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     local.get $4
     local.get $5
     select
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $4
     i32.store offset=4
     local.get $3
     local.get $4
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $5
     local.get $0
     local.get $4
     local.get $3
     local.get $5
     select
     i32.store offset=4
     local.get $0
     local.get $3
     local.get $4
     local.get $5
     select
     i32.store offset=8
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $5
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $4
    i32.store offset=4
    local.get $5
    local.get $4
    i32.const 2
    global.set $~argumentsLength
    local.get $2
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $3
    local.get $0
    local.get $4
    local.get $5
    local.get $3
    select
    i32.store
    local.get $0
    local.get $5
    local.get $4
    local.get $3
    select
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   local.get $2
   call $~lib/util/sort/insertionSort<~lib/array/Array<i32>>
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $1
  local.set $5
  i32.const 31
  local.get $5
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $6
  local.get $6
  i32.const 2
  i32.shl
  local.set $7
  local.get $7
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $8
  local.get $8
  local.get $7
  i32.add
  local.set $9
  i32.const 0
  local.set $5
  loop $for-loop|1
   local.get $5
   local.get $6
   i32.lt_u
   local.set $3
   local.get $3
   if
    local.get $8
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|1
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $10
  local.get $1
  i32.const 1
  i32.sub
  local.set $11
  local.get $0
  i32.const 0
  local.get $11
  local.get $2
  call $~lib/util/sort/extendRunRight<~lib/array/Array<i32>>
  local.set $12
  local.get $12
  i32.const 1
  i32.add
  local.set $13
  local.get $13
  i32.const 32
  i32.lt_s
  if
   local.get $11
   local.tee $4
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   local.set $12
   local.get $0
   i32.const 0
   local.get $12
   local.get $13
   local.get $2
   call $~lib/util/sort/insertionSort<~lib/array/Array<i32>>
  end
  i32.const 0
  local.set $14
  i32.const 0
  local.set $15
  loop $while-continue|2
   local.get $12
   local.get $11
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $12
    i32.const 1
    i32.add
    local.set $5
    local.get $0
    local.get $5
    local.get $11
    local.get $2
    call $~lib/util/sort/extendRunRight<~lib/array/Array<i32>>
    local.set $3
    local.get $3
    local.get $5
    i32.sub
    i32.const 1
    i32.add
    local.set $16
    local.get $16
    i32.const 32
    i32.lt_s
    if
     local.get $11
     local.tee $17
     local.get $5
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $18
     local.get $17
     local.get $18
     i32.lt_s
     select
     local.set $3
     local.get $0
     local.get $5
     local.get $3
     local.get $16
     local.get $2
     call $~lib/util/sort/insertionSort<~lib/array/Array<i32>>
    end
    i32.const 0
    local.get $11
    local.get $15
    local.get $5
    local.get $3
    call $~lib/util/sort/nodePower
    local.set $17
    local.get $14
    local.set $18
    loop $for-loop|3
     local.get $18
     local.get $17
     i32.gt_u
     local.set $19
     local.get $19
     if
      local.get $8
      local.get $18
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $20
      local.get $20
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $20
       local.get $9
       local.get $18
       i32.const 2
       i32.shl
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $12
       local.get $10
       local.get $2
       call $~lib/util/sort/mergeRuns<~lib/array/Array<i32>>
       local.get $20
       local.set $15
       local.get $8
       local.get $18
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store
      end
      local.get $18
      i32.const 1
      i32.sub
      local.set $18
      br $for-loop|3
     end
    end
    local.get $8
    local.get $17
    i32.const 2
    i32.shl
    i32.add
    local.get $15
    i32.store
    local.get $9
    local.get $17
    i32.const 2
    i32.shl
    i32.add
    local.get $12
    i32.store
    local.get $5
    local.set $15
    local.get $3
    local.set $12
    local.get $17
    local.set $14
    br $while-continue|2
   end
  end
  local.get $14
  local.set $4
  loop $for-loop|4
   local.get $4
   i32.const 0
   i32.ne
   local.set $18
   local.get $18
   if
    local.get $8
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $19
    local.get $19
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $19
     local.get $9
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $11
     local.get $10
     local.get $2
     call $~lib/util/sort/mergeRuns<~lib/array/Array<i32>>
    end
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    br $for-loop|4
   end
  end
  local.get $10
  call $~lib/rt/tlsf/__free
  local.get $8
  call $~lib/rt/tlsf/__free
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#sort (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/util/sort/SORT<~lib/array/Array<i32>>
  local.get $0
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $std/array/Proxy<i32>#set:x (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 1
  drop
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 320
    i32.const 80
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   call $~lib/array/Array<std/array/Proxy<i32>>#set:length_
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<std/array/Proxy<i32>>#__uset
 )
 (func $start:std/array~anonymous|52 (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load
  local.get $1
  i32.load
  i32.sub
 )
 (func $~lib/util/sort/insertionSort<std/array/Proxy<i32>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.set $5
  local.get $1
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  local.get $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $3
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $2
   i32.le_s
   local.set $7
   local.get $7
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $8
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.tee $9
    i32.store offset=4
    local.get $9
    local.set $10
    local.get $8
    local.set $11
    local.get $8
    local.get $9
    i32.const 2
    global.set $~argumentsLength
    local.get $4
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $8
     local.set $10
     local.get $9
     local.set $11
    end
    local.get $6
    i32.const 1
    i32.sub
    local.set $12
    block $while-break|1
     loop $while-continue|1
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $8
       i32.store
       local.get $8
       local.get $11
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        i32.store offset=8
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $11
    i32.store offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $8
       i32.store
       local.get $8
       local.get $10
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        i32.store offset=4
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $10
    i32.store offset=4
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/mergeRuns<std/array/Proxy<i32>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $2
  i32.const 1
  i32.sub
  local.set $2
  local.get $3
  local.get $2
  i32.add
  local.set $8
  local.get $2
  i32.const 1
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $1
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load
    i32.store
    local.get $6
    i32.const 1
    i32.sub
    local.set $6
    br $for-loop|0
   end
  end
  local.get $2
  local.set $7
  loop $for-loop|1
   local.get $7
   local.get $3
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $8
    local.get $7
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    i32.store
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|1
   end
  end
  local.get $1
  local.set $9
  loop $for-loop|2
   local.get $9
   local.get $3
   i32.le_s
   local.set $10
   local.get $10
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $11
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $12
    i32.store offset=4
    local.get $11
    local.get $12
    i32.const 2
    global.set $~argumentsLength
    local.get $5
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $11
     i32.store
     local.get $7
     i32.const 1
     i32.sub
     local.set $7
    else
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $12
     i32.store
     local.get $6
     i32.const 1
     i32.add
     local.set $6
    end
    local.get $9
    i32.const 1
    i32.add
    local.set $9
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/SORT<std/array/Proxy<i32>> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $1
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $4
     i32.store offset=4
     local.get $3
     local.get $4
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $5
     local.get $0
     local.get $4
     local.get $3
     local.get $5
     select
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     local.get $4
     local.get $5
     select
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $4
     i32.store offset=4
     local.get $3
     local.get $4
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $5
     local.get $0
     local.get $4
     local.get $3
     local.get $5
     select
     i32.store offset=4
     local.get $0
     local.get $3
     local.get $4
     local.get $5
     select
     i32.store offset=8
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $5
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $4
    i32.store offset=4
    local.get $5
    local.get $4
    i32.const 2
    global.set $~argumentsLength
    local.get $2
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $3
    local.get $0
    local.get $4
    local.get $5
    local.get $3
    select
    i32.store
    local.get $0
    local.get $5
    local.get $4
    local.get $3
    select
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   local.get $2
   call $~lib/util/sort/insertionSort<std/array/Proxy<i32>>
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $1
  local.set $5
  i32.const 31
  local.get $5
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $6
  local.get $6
  i32.const 2
  i32.shl
  local.set $7
  local.get $7
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $8
  local.get $8
  local.get $7
  i32.add
  local.set $9
  i32.const 0
  local.set $5
  loop $for-loop|1
   local.get $5
   local.get $6
   i32.lt_u
   local.set $3
   local.get $3
   if
    local.get $8
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|1
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $10
  local.get $1
  i32.const 1
  i32.sub
  local.set $11
  local.get $0
  i32.const 0
  local.get $11
  local.get $2
  call $~lib/util/sort/extendRunRight<std/array/Proxy<i32>>
  local.set $12
  local.get $12
  i32.const 1
  i32.add
  local.set $13
  local.get $13
  i32.const 32
  i32.lt_s
  if
   local.get $11
   local.tee $4
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   local.set $12
   local.get $0
   i32.const 0
   local.get $12
   local.get $13
   local.get $2
   call $~lib/util/sort/insertionSort<std/array/Proxy<i32>>
  end
  i32.const 0
  local.set $14
  i32.const 0
  local.set $15
  loop $while-continue|2
   local.get $12
   local.get $11
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $12
    i32.const 1
    i32.add
    local.set $5
    local.get $0
    local.get $5
    local.get $11
    local.get $2
    call $~lib/util/sort/extendRunRight<std/array/Proxy<i32>>
    local.set $3
    local.get $3
    local.get $5
    i32.sub
    i32.const 1
    i32.add
    local.set $16
    local.get $16
    i32.const 32
    i32.lt_s
    if
     local.get $11
     local.tee $17
     local.get $5
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $18
     local.get $17
     local.get $18
     i32.lt_s
     select
     local.set $3
     local.get $0
     local.get $5
     local.get $3
     local.get $16
     local.get $2
     call $~lib/util/sort/insertionSort<std/array/Proxy<i32>>
    end
    i32.const 0
    local.get $11
    local.get $15
    local.get $5
    local.get $3
    call $~lib/util/sort/nodePower
    local.set $17
    local.get $14
    local.set $18
    loop $for-loop|3
     local.get $18
     local.get $17
     i32.gt_u
     local.set $19
     local.get $19
     if
      local.get $8
      local.get $18
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $20
      local.get $20
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $20
       local.get $9
       local.get $18
       i32.const 2
       i32.shl
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $12
       local.get $10
       local.get $2
       call $~lib/util/sort/mergeRuns<std/array/Proxy<i32>>
       local.get $20
       local.set $15
       local.get $8
       local.get $18
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store
      end
      local.get $18
      i32.const 1
      i32.sub
      local.set $18
      br $for-loop|3
     end
    end
    local.get $8
    local.get $17
    i32.const 2
    i32.shl
    i32.add
    local.get $15
    i32.store
    local.get $9
    local.get $17
    i32.const 2
    i32.shl
    i32.add
    local.get $12
    i32.store
    local.get $5
    local.set $15
    local.get $3
    local.set $12
    local.get $17
    local.set $14
    br $while-continue|2
   end
  end
  local.get $14
  local.set $4
  loop $for-loop|4
   local.get $4
   i32.const 0
   i32.ne
   local.set $18
   local.get $18
   if
    local.get $8
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $19
    local.get $19
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $19
     local.get $9
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $11
     local.get $10
     local.get $2
     call $~lib/util/sort/mergeRuns<std/array/Proxy<i32>>
    end
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    br $for-loop|4
   end
  end
  local.get $10
  call $~lib/rt/tlsf/__free
  local.get $8
  call $~lib/rt/tlsf/__free
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#sort (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/util/sort/SORT<std/array/Proxy<i32>>
  local.get $0
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/util/sort/insertionSort<~lib/string/String|null> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.set $5
  local.get $1
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  local.get $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $3
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $2
   i32.le_s
   local.set $7
   local.get $7
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $8
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.tee $9
    i32.store offset=4
    local.get $9
    local.set $10
    local.get $8
    local.set $11
    local.get $8
    local.get $9
    i32.const 2
    global.set $~argumentsLength
    local.get $4
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $8
     local.set $10
     local.get $9
     local.set $11
    end
    local.get $6
    i32.const 1
    i32.sub
    local.set $12
    block $while-break|1
     loop $while-continue|1
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $8
       i32.store
       local.get $8
       local.get $11
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        i32.store offset=8
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $11
    i32.store offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $8
       i32.store
       local.get $8
       local.get $10
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        i32.store offset=4
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $10
    i32.store offset=4
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/mergeRuns<~lib/string/String|null> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $2
  i32.const 1
  i32.sub
  local.set $2
  local.get $3
  local.get $2
  i32.add
  local.set $8
  local.get $2
  i32.const 1
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $1
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load
    i32.store
    local.get $6
    i32.const 1
    i32.sub
    local.set $6
    br $for-loop|0
   end
  end
  local.get $2
  local.set $7
  loop $for-loop|1
   local.get $7
   local.get $3
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $8
    local.get $7
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    i32.store
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|1
   end
  end
  local.get $1
  local.set $9
  loop $for-loop|2
   local.get $9
   local.get $3
   i32.le_s
   local.set $10
   local.get $10
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $11
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $12
    i32.store offset=4
    local.get $11
    local.get $12
    i32.const 2
    global.set $~argumentsLength
    local.get $5
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $11
     i32.store
     local.get $7
     i32.const 1
     i32.sub
     local.set $7
    else
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $12
     i32.store
     local.get $6
     i32.const 1
     i32.add
     local.set $6
    end
    local.get $9
    i32.const 1
    i32.add
    local.set $9
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/SORT<~lib/string/String|null> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $1
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $4
     i32.store offset=4
     local.get $3
     local.get $4
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $5
     local.get $0
     local.get $4
     local.get $3
     local.get $5
     select
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     local.get $4
     local.get $5
     select
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $4
     i32.store offset=4
     local.get $3
     local.get $4
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $5
     local.get $0
     local.get $4
     local.get $3
     local.get $5
     select
     i32.store offset=4
     local.get $0
     local.get $3
     local.get $4
     local.get $5
     select
     i32.store offset=8
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $5
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $4
    i32.store offset=4
    local.get $5
    local.get $4
    i32.const 2
    global.set $~argumentsLength
    local.get $2
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $3
    local.get $0
    local.get $4
    local.get $5
    local.get $3
    select
    i32.store
    local.get $0
    local.get $5
    local.get $4
    local.get $3
    select
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   local.get $2
   call $~lib/util/sort/insertionSort<~lib/string/String|null>
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $1
  local.set $5
  i32.const 31
  local.get $5
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $6
  local.get $6
  i32.const 2
  i32.shl
  local.set $7
  local.get $7
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $8
  local.get $8
  local.get $7
  i32.add
  local.set $9
  i32.const 0
  local.set $5
  loop $for-loop|1
   local.get $5
   local.get $6
   i32.lt_u
   local.set $3
   local.get $3
   if
    local.get $8
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|1
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $10
  local.get $1
  i32.const 1
  i32.sub
  local.set $11
  local.get $0
  i32.const 0
  local.get $11
  local.get $2
  call $~lib/util/sort/extendRunRight<~lib/string/String|null>
  local.set $12
  local.get $12
  i32.const 1
  i32.add
  local.set $13
  local.get $13
  i32.const 32
  i32.lt_s
  if
   local.get $11
   local.tee $4
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   local.set $12
   local.get $0
   i32.const 0
   local.get $12
   local.get $13
   local.get $2
   call $~lib/util/sort/insertionSort<~lib/string/String|null>
  end
  i32.const 0
  local.set $14
  i32.const 0
  local.set $15
  loop $while-continue|2
   local.get $12
   local.get $11
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $12
    i32.const 1
    i32.add
    local.set $5
    local.get $0
    local.get $5
    local.get $11
    local.get $2
    call $~lib/util/sort/extendRunRight<~lib/string/String|null>
    local.set $3
    local.get $3
    local.get $5
    i32.sub
    i32.const 1
    i32.add
    local.set $16
    local.get $16
    i32.const 32
    i32.lt_s
    if
     local.get $11
     local.tee $17
     local.get $5
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $18
     local.get $17
     local.get $18
     i32.lt_s
     select
     local.set $3
     local.get $0
     local.get $5
     local.get $3
     local.get $16
     local.get $2
     call $~lib/util/sort/insertionSort<~lib/string/String|null>
    end
    i32.const 0
    local.get $11
    local.get $15
    local.get $5
    local.get $3
    call $~lib/util/sort/nodePower
    local.set $17
    local.get $14
    local.set $18
    loop $for-loop|3
     local.get $18
     local.get $17
     i32.gt_u
     local.set $19
     local.get $19
     if
      local.get $8
      local.get $18
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $20
      local.get $20
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $20
       local.get $9
       local.get $18
       i32.const 2
       i32.shl
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $12
       local.get $10
       local.get $2
       call $~lib/util/sort/mergeRuns<~lib/string/String|null>
       local.get $20
       local.set $15
       local.get $8
       local.get $18
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store
      end
      local.get $18
      i32.const 1
      i32.sub
      local.set $18
      br $for-loop|3
     end
    end
    local.get $8
    local.get $17
    i32.const 2
    i32.shl
    i32.add
    local.get $15
    i32.store
    local.get $9
    local.get $17
    i32.const 2
    i32.shl
    i32.add
    local.get $12
    i32.store
    local.get $5
    local.set $15
    local.get $3
    local.set $12
    local.get $17
    local.set $14
    br $while-continue|2
   end
  end
  local.get $14
  local.set $4
  loop $for-loop|4
   local.get $4
   i32.const 0
   i32.ne
   local.set $18
   local.get $18
   if
    local.get $8
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $19
    local.get $19
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $19
     local.get $9
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $11
     local.get $10
     local.get $2
     call $~lib/util/sort/mergeRuns<~lib/string/String|null>
    end
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    br $for-loop|4
   end
  end
  local.get $10
  call $~lib/rt/tlsf/__free
  local.get $8
  call $~lib/rt/tlsf/__free
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String|null>#sort (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/util/sort/SORT<~lib/string/String|null>
  local.get $0
 )
 (func $~lib/array/Array<~lib/string/String|null>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/string/String#get:length (param $0 i32) (result i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
 )
 (func $~lib/util/string/compareImpl (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (result i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  local.set $5
  local.get $2
  local.get $3
  i32.const 1
  i32.shl
  i32.add
  local.set $6
  i32.const 0
  i32.const 2
  i32.lt_s
  drop
  local.get $4
  i32.const 4
  i32.ge_u
  if (result i32)
   local.get $5
   i32.const 7
   i32.and
   local.get $6
   i32.const 7
   i32.and
   i32.or
   i32.eqz
  else
   i32.const 0
  end
  if
   block $do-break|0
    loop $do-loop|0
     local.get $5
     i64.load
     local.get $6
     i64.load
     i64.ne
     if
      br $do-break|0
     end
     local.get $5
     i32.const 8
     i32.add
     local.set $5
     local.get $6
     i32.const 8
     i32.add
     local.set $6
     local.get $4
     i32.const 4
     i32.sub
     local.set $4
     local.get $4
     i32.const 4
     i32.ge_u
     br_if $do-loop|0
    end
   end
  end
  loop $while-continue|1
   local.get $4
   local.tee $7
   i32.const 1
   i32.sub
   local.set $4
   local.get $7
   local.set $7
   local.get $7
   if
    local.get $5
    i32.load16_u
    local.set $8
    local.get $6
    i32.load16_u
    local.set $9
    local.get $8
    local.get $9
    i32.ne
    if
     local.get $8
     local.get $9
     i32.sub
     return
    end
    local.get $5
    i32.const 2
    i32.add
    local.set $5
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    br $while-continue|1
   end
  end
  i32.const 0
 )
 (func $~lib/util/sort/COMPARATOR<~lib/string/String|null>~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.get $1
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $0
   i32.const 0
   i32.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   return
  end
  local.get $0
  call $~lib/string/String#get:length
  local.set $2
  local.get $1
  call $~lib/string/String#get:length
  local.set $3
  local.get $2
  local.get $3
  i32.or
  i32.eqz
  if
   i32.const 0
   return
  end
  local.get $2
  i32.eqz
  if
   i32.const -1
   return
  end
  local.get $3
  i32.eqz
  if
   i32.const 1
   return
  end
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  local.get $2
  local.tee $4
  local.get $3
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  call $~lib/util/string/compareImpl
  local.set $4
  local.get $4
  if (result i32)
   local.get $4
  else
   local.get $2
   local.get $3
   i32.sub
  end
 )
 (func $std/array/assertSorted<~lib/string/String|null>@varargs (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<~lib/string/String|null>|inlined.0 (result i32)
    i32.const 0
    drop
    i32.const 0
    drop
    i32.const 1
    drop
    i32.const 8800
    br $~lib/util/sort/COMPARATOR<~lib/string/String|null>|inlined.0
   end
   local.tee $1
   i32.store
  end
  local.get $0
  local.get $1
  call $std/array/assertSorted<~lib/string/String|null>
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   return
  end
  local.get $0
  i32.const 0
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   return
  end
  local.get $0
  call $~lib/string/String#get:length
  local.set $2
  local.get $2
  local.get $1
  call $~lib/string/String#get:length
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  local.get $2
  call $~lib/util/string/compareImpl
  i32.eqz
 )
 (func $~lib/string/String.__ne (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/string/String.__eq
  i32.eqz
 )
 (func $~lib/array/Array<~lib/string/String>#set:buffer (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/string/String>#set:dataStart (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=4
 )
 (func $~lib/array/Array<~lib/string/String>#set:byteLength (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=8
 )
 (func $~lib/array/Array<~lib/string/String>#set:length_ (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  i32.store offset=12
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $1
  call $~lib/string/String#concat
 )
 (func $~lib/array/Array<~lib/string/String>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 1
  drop
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/string/String>#__set (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   local.get $1
   i32.const 0
   i32.lt_s
   if
    i32.const 320
    i32.const 80
    i32.const 130
    i32.const 22
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   i32.const 2
   i32.const 1
   call $~lib/array/ensureCapacity
   local.get $0
   local.get $1
   i32.const 1
   i32.add
   call $~lib/array/Array<~lib/string/String>#set:length_
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/array/Array<~lib/string/String>#__uset
 )
 (func $~lib/util/sort/insertionSort<~lib/string/String> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $2
  local.get $1
  i32.sub
  i32.const 1
  i32.add
  local.set $5
  local.get $1
  local.get $5
  i32.const 1
  i32.and
  local.get $3
  local.get $5
  local.get $3
  i32.sub
  i32.const 1
  i32.and
  i32.sub
  local.get $3
  i32.const 0
  i32.eq
  select
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $2
   i32.le_s
   local.set $7
   local.get $7
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $8
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.tee $9
    i32.store offset=4
    local.get $9
    local.set $10
    local.get $8
    local.set $11
    local.get $8
    local.get $9
    i32.const 2
    global.set $~argumentsLength
    local.get $4
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.le_s
    if
     local.get $8
     local.set $10
     local.get $9
     local.set $11
    end
    local.get $6
    i32.const 1
    i32.sub
    local.set $12
    block $while-break|1
     loop $while-continue|1
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $8
       i32.store
       local.get $8
       local.get $11
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        i32.store offset=8
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|1
       end
       br $while-continue|1
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $11
    i32.store offset=8
    block $while-break|2
     loop $while-continue|2
      local.get $12
      local.get $1
      i32.ge_s
      local.set $13
      local.get $13
      if
       global.get $~lib/memory/__stack_pointer
       local.get $0
       local.get $12
       i32.const 2
       i32.shl
       i32.add
       i32.load
       local.tee $8
       i32.store
       local.get $8
       local.get $10
       i32.const 2
       global.set $~argumentsLength
       local.get $4
       i32.load
       call_indirect $0 (type $i32_i32_=>_i32)
       i32.const 0
       i32.gt_s
       if
        local.get $0
        local.get $12
        i32.const 2
        i32.shl
        i32.add
        local.get $8
        i32.store offset=4
        local.get $12
        i32.const 1
        i32.sub
        local.set $12
       else
        br $while-break|2
       end
       br $while-continue|2
      end
     end
    end
    local.get $0
    local.get $12
    i32.const 2
    i32.shl
    i32.add
    local.get $10
    i32.store offset=4
    local.get $6
    i32.const 2
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/mergeRuns<~lib/string/String> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (param $4 i32) (param $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $2
  i32.const 1
  i32.sub
  local.set $2
  local.get $3
  local.get $2
  i32.add
  local.set $8
  local.get $2
  i32.const 1
  i32.add
  local.set $6
  loop $for-loop|0
   local.get $6
   local.get $1
   i32.gt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $6
    i32.const 1
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    i32.load
    i32.store
    local.get $6
    i32.const 1
    i32.sub
    local.set $6
    br $for-loop|0
   end
  end
  local.get $2
  local.set $7
  loop $for-loop|1
   local.get $7
   local.get $3
   i32.lt_s
   local.set $9
   local.get $9
   if
    local.get $4
    local.get $8
    local.get $7
    i32.sub
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    i32.store
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|1
   end
  end
  local.get $1
  local.set $9
  loop $for-loop|2
   local.get $9
   local.get $3
   i32.le_s
   local.set $10
   local.get $10
   if
    global.get $~lib/memory/__stack_pointer
    local.get $4
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $11
    i32.store
    global.get $~lib/memory/__stack_pointer
    local.get $4
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $12
    i32.store offset=4
    local.get $11
    local.get $12
    i32.const 2
    global.set $~argumentsLength
    local.get $5
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.lt_s
    if
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $11
     i32.store
     local.get $7
     i32.const 1
     i32.sub
     local.set $7
    else
     local.get $0
     local.get $9
     i32.const 2
     i32.shl
     i32.add
     local.get $12
     i32.store
     local.get $6
     i32.const 1
     i32.add
     local.set $6
    end
    local.get $9
    i32.const 1
    i32.add
    local.set $9
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/SORT<~lib/string/String> (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 48
  i32.le_s
  if
   local.get $1
   i32.const 1
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   i32.const 0
   i32.const 1
   i32.lt_s
   drop
   block $break|0
    block $case1|0
     block $case0|0
      local.get $1
      local.set $3
      local.get $3
      i32.const 3
      i32.eq
      br_if $case0|0
      local.get $3
      i32.const 2
      i32.eq
      br_if $case1|0
      br $break|0
     end
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=4
     local.tee $4
     i32.store offset=4
     local.get $3
     local.get $4
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $5
     local.get $0
     local.get $4
     local.get $3
     local.get $5
     select
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $3
     local.get $4
     local.get $5
     select
     local.tee $3
     i32.store
     global.get $~lib/memory/__stack_pointer
     local.get $0
     i32.load offset=8
     local.tee $4
     i32.store offset=4
     local.get $3
     local.get $4
     i32.const 2
     global.set $~argumentsLength
     local.get $2
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.gt_s
     local.set $5
     local.get $0
     local.get $4
     local.get $3
     local.get $5
     select
     i32.store offset=4
     local.get $0
     local.get $3
     local.get $4
     local.get $5
     select
     i32.store offset=8
    end
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load
    local.tee $5
    i32.store offset=8
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.tee $4
    i32.store offset=4
    local.get $5
    local.get $4
    i32.const 2
    global.set $~argumentsLength
    local.get $2
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    local.set $3
    local.get $0
    local.get $4
    local.get $5
    local.get $3
    select
    i32.store
    local.get $0
    local.get $5
    local.get $4
    local.get $3
    select
    i32.store offset=4
    global.get $~lib/memory/__stack_pointer
    i32.const 12
    i32.add
    global.set $~lib/memory/__stack_pointer
    return
   end
   local.get $0
   i32.const 0
   local.get $1
   i32.const 1
   i32.sub
   i32.const 0
   local.get $2
   call $~lib/util/sort/insertionSort<~lib/string/String>
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   return
  end
  local.get $1
  local.set $5
  i32.const 31
  local.get $5
  i32.clz
  i32.sub
  i32.const 2
  i32.add
  local.set $6
  local.get $6
  i32.const 2
  i32.shl
  local.set $7
  local.get $7
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $8
  local.get $8
  local.get $7
  i32.add
  local.set $9
  i32.const 0
  local.set $5
  loop $for-loop|1
   local.get $5
   local.get $6
   i32.lt_u
   local.set $3
   local.get $3
   if
    local.get $8
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.const -1
    i32.store
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|1
   end
  end
  local.get $1
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $10
  local.get $1
  i32.const 1
  i32.sub
  local.set $11
  local.get $0
  i32.const 0
  local.get $11
  local.get $2
  call $~lib/util/sort/extendRunRight<~lib/string/String>
  local.set $12
  local.get $12
  i32.const 1
  i32.add
  local.set $13
  local.get $13
  i32.const 32
  i32.lt_s
  if
   local.get $11
   local.tee $4
   i32.const 32
   i32.const 1
   i32.sub
   local.tee $5
   local.get $4
   local.get $5
   i32.lt_s
   select
   local.set $12
   local.get $0
   i32.const 0
   local.get $12
   local.get $13
   local.get $2
   call $~lib/util/sort/insertionSort<~lib/string/String>
  end
  i32.const 0
  local.set $14
  i32.const 0
  local.set $15
  loop $while-continue|2
   local.get $12
   local.get $11
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $12
    i32.const 1
    i32.add
    local.set $5
    local.get $0
    local.get $5
    local.get $11
    local.get $2
    call $~lib/util/sort/extendRunRight<~lib/string/String>
    local.set $3
    local.get $3
    local.get $5
    i32.sub
    i32.const 1
    i32.add
    local.set $16
    local.get $16
    i32.const 32
    i32.lt_s
    if
     local.get $11
     local.tee $17
     local.get $5
     i32.const 32
     i32.add
     i32.const 1
     i32.sub
     local.tee $18
     local.get $17
     local.get $18
     i32.lt_s
     select
     local.set $3
     local.get $0
     local.get $5
     local.get $3
     local.get $16
     local.get $2
     call $~lib/util/sort/insertionSort<~lib/string/String>
    end
    i32.const 0
    local.get $11
    local.get $15
    local.get $5
    local.get $3
    call $~lib/util/sort/nodePower
    local.set $17
    local.get $14
    local.set $18
    loop $for-loop|3
     local.get $18
     local.get $17
     i32.gt_u
     local.set $19
     local.get $19
     if
      local.get $8
      local.get $18
      i32.const 2
      i32.shl
      i32.add
      i32.load
      local.set $20
      local.get $20
      i32.const -1
      i32.ne
      if
       local.get $0
       local.get $20
       local.get $9
       local.get $18
       i32.const 2
       i32.shl
       i32.add
       i32.load
       i32.const 1
       i32.add
       local.get $12
       local.get $10
       local.get $2
       call $~lib/util/sort/mergeRuns<~lib/string/String>
       local.get $20
       local.set $15
       local.get $8
       local.get $18
       i32.const 2
       i32.shl
       i32.add
       i32.const -1
       i32.store
      end
      local.get $18
      i32.const 1
      i32.sub
      local.set $18
      br $for-loop|3
     end
    end
    local.get $8
    local.get $17
    i32.const 2
    i32.shl
    i32.add
    local.get $15
    i32.store
    local.get $9
    local.get $17
    i32.const 2
    i32.shl
    i32.add
    local.get $12
    i32.store
    local.get $5
    local.set $15
    local.get $3
    local.set $12
    local.get $17
    local.set $14
    br $while-continue|2
   end
  end
  local.get $14
  local.set $4
  loop $for-loop|4
   local.get $4
   i32.const 0
   i32.ne
   local.set $18
   local.get $18
   if
    local.get $8
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $19
    local.get $19
    i32.const -1
    i32.ne
    if
     local.get $0
     local.get $19
     local.get $9
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.const 1
     i32.add
     local.get $11
     local.get $10
     local.get $2
     call $~lib/util/sort/mergeRuns<~lib/string/String>
    end
    local.get $4
    i32.const 1
    i32.sub
    local.set $4
    br $for-loop|4
   end
  end
  local.get $10
  call $~lib/rt/tlsf/__free
  local.get $8
  call $~lib/rt/tlsf/__free
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<~lib/string/String>#sort (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  i32.load offset=4
  local.get $0
  i32.load offset=12
  local.get $1
  call $~lib/util/sort/SORT<~lib/string/String>
  local.get $0
 )
 (func $~lib/array/Array<~lib/string/String>#get:length (param $0 i32) (result i32)
  local.get $0
  i32.load offset=12
 )
 (func $~lib/util/sort/COMPARATOR<~lib/string/String>~anonymous|0 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $0
  local.get $1
  i32.eq
  if (result i32)
   i32.const 1
  else
   local.get $0
   i32.const 0
   i32.eq
  end
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 0
   i32.eq
  end
  if
   i32.const 0
   return
  end
  local.get $0
  call $~lib/string/String#get:length
  local.set $2
  local.get $1
  call $~lib/string/String#get:length
  local.set $3
  local.get $2
  local.get $3
  i32.or
  i32.eqz
  if
   i32.const 0
   return
  end
  local.get $2
  i32.eqz
  if
   i32.const -1
   return
  end
  local.get $3
  i32.eqz
  if
   i32.const 1
   return
  end
  local.get $0
  i32.const 0
  local.get $1
  i32.const 0
  local.get $2
  local.tee $4
  local.get $3
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  call $~lib/util/string/compareImpl
  local.set $4
  local.get $4
  if (result i32)
   local.get $4
  else
   local.get $2
   local.get $3
   i32.sub
  end
 )
 (func $std/array/assertSorted<~lib/string/String>@varargs (param $0 i32) (param $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     i32.const 1
     i32.sub
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<~lib/string/String>|inlined.0 (result i32)
    i32.const 0
    drop
    i32.const 0
    drop
    i32.const 1
    drop
    i32.const 8832
    br $~lib/util/sort/COMPARATOR<~lib/string/String>|inlined.0
   end
   local.tee $1
   i32.store
  end
  local.get $0
  local.get $1
  call $std/array/assertSorted<~lib/string/String>
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<bool>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinBooleanArray
  return
 )
 (func $~lib/util/number/decimalCount32 (param $0 i32) (result i32)
  local.get $0
  i32.const 100000
  i32.lt_u
  if
   local.get $0
   i32.const 100
   i32.lt_u
   if
    i32.const 1
    local.get $0
    i32.const 10
    i32.ge_u
    i32.add
    return
   else
    i32.const 3
    local.get $0
    i32.const 10000
    i32.ge_u
    i32.add
    local.get $0
    i32.const 1000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $0
   i32.const 10000000
   i32.lt_u
   if
    i32.const 6
    local.get $0
    i32.const 1000000
    i32.ge_u
    i32.add
    return
   else
    i32.const 8
    local.get $0
    i32.const 1000000000
    i32.ge_u
    i32.add
    local.get $0
    i32.const 100000000
    i32.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa32_dec_lut (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i32)
  (local $11 i32)
  loop $while-continue|0
   local.get $1
   i32.const 10000
   i32.ge_u
   local.set $3
   local.get $3
   if
    local.get $1
    i32.const 10000
    i32.div_u
    local.set $4
    local.get $1
    i32.const 10000
    i32.rem_u
    local.set $5
    local.get $4
    local.set $1
    local.get $5
    i32.const 100
    i32.div_u
    local.set $6
    local.get $5
    i32.const 100
    i32.rem_u
    local.set $7
    i32.const 9276
    local.get $6
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $8
    i32.const 9276
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $9
    local.get $2
    i32.const 4
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $8
    local.get $9
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $1
  i32.const 100
  i32.ge_u
  if
   local.get $1
   i32.const 100
   i32.div_u
   local.set $3
   local.get $1
   i32.const 100
   i32.rem_u
   local.set $10
   local.get $3
   local.set $1
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   i32.const 9276
   local.get $10
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $11
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $11
   i32.store
  end
  local.get $1
  i32.const 10
  i32.ge_u
  if
   local.get $2
   i32.const 2
   i32.sub
   local.set $2
   i32.const 9276
   local.get $1
   i32.const 2
   i32.shl
   i32.add
   i32.load
   local.set $11
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $11
   i32.store
  else
   local.get $2
   i32.const 1
   i32.sub
   local.set $2
   i32.const 48
   local.get $1
   i32.add
   local.set $11
   local.get $0
   local.get $2
   i32.const 1
   i32.shl
   i32.add
   local.get $11
   i32.store16
  end
 )
 (func $~lib/util/number/utoa_hex_lut (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  loop $while-continue|0
   local.get $2
   i32.const 2
   i32.ge_u
   local.set $3
   local.get $3
   if
    local.get $2
    i32.const 2
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    i32.const 9696
    local.get $1
    i32.wrap_i64
    i32.const 255
    i32.and
    i32.const 2
    i32.shl
    i32.add
    i32.load
    i32.store
    local.get $1
    i64.const 8
    i64.shr_u
    local.set $1
    br $while-continue|0
   end
  end
  local.get $2
  i32.const 1
  i32.and
  if
   local.get $0
   i32.const 9696
   local.get $1
   i32.wrap_i64
   i32.const 6
   i32.shl
   i32.add
   i32.load16_u
   i32.store16
  end
 )
 (func $~lib/util/number/ulog_base (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i64)
  (local $4 i64)
  (local $5 i32)
  local.get $1
  local.set $2
  local.get $2
  i32.popcnt
  i32.const 1
  i32.eq
  if
   i32.const 63
   local.get $0
   i64.clz
   i32.wrap_i64
   i32.sub
   i32.const 31
   local.get $1
   i32.clz
   i32.sub
   i32.div_u
   i32.const 1
   i32.add
   return
  end
  local.get $1
  i64.extend_i32_s
  local.set $3
  local.get $3
  local.set $4
  i32.const 1
  local.set $5
  loop $while-continue|0
   local.get $0
   local.get $4
   i64.ge_u
   local.set $2
   local.get $2
   if
    local.get $0
    local.get $4
    i64.div_u
    local.set $0
    local.get $4
    local.get $4
    i64.mul
    local.set $4
    local.get $5
    i32.const 1
    i32.shl
    local.set $5
    br $while-continue|0
   end
  end
  loop $while-continue|1
   local.get $0
   i64.const 1
   i64.ge_u
   local.set $2
   local.get $2
   if
    local.get $0
    local.get $3
    i64.div_u
    local.set $0
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $while-continue|1
   end
  end
  local.get $5
  i32.const 1
  i32.sub
 )
 (func $~lib/util/number/utoa64_any_core (param $0 i32) (param $1 i64) (param $2 i32) (param $3 i32)
  (local $4 i64)
  (local $5 i64)
  (local $6 i64)
  local.get $3
  i64.extend_i32_s
  local.set $4
  local.get $3
  local.get $3
  i32.const 1
  i32.sub
  i32.and
  i32.const 0
  i32.eq
  if
   local.get $3
   i32.ctz
   i32.const 7
   i32.and
   i64.extend_i32_s
   local.set $5
   local.get $4
   i64.const 1
   i64.sub
   local.set $6
   loop $do-loop|0
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    i32.const 10752
    local.get $1
    local.get $6
    i64.and
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    i32.store16
    local.get $1
    local.get $5
    i64.shr_u
    local.set $1
    local.get $1
    i64.const 0
    i64.ne
    br_if $do-loop|0
   end
  else
   loop $do-loop|1
    local.get $2
    i32.const 1
    i32.sub
    local.set $2
    local.get $1
    local.get $4
    i64.div_u
    local.set $6
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    i32.const 10752
    local.get $1
    local.get $6
    local.get $4
    i64.mul
    i64.sub
    i32.wrap_i64
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    i32.store16
    local.get $6
    local.set $1
    local.get $1
    i64.const 0
    i64.ne
    br_if $do-loop|1
   end
  end
 )
 (func $~lib/util/number/itoa_buffered<i32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  i32.const 0
  local.set $2
  i32.const 1
  drop
  local.get $1
  i32.const 0
  i32.lt_s
  local.set $2
  local.get $2
  if
   i32.const 4
   i32.const 1
   i32.eq
   drop
   i32.const 4
   i32.const 2
   i32.eq
   drop
   local.get $0
   i32.const 45
   i32.store16
   i32.const 0
   local.get $1
   i32.sub
   local.set $1
  end
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.set $3
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  i32.const 4
  i32.const 4
  i32.le_u
  drop
  local.get $1
  i32.const 10
  i32.lt_u
  if
   local.get $3
   local.get $1
   i32.const 48
   i32.or
   i32.store16
   i32.const 1
   local.get $2
   i32.add
   return
  end
  i32.const 0
  local.set $4
  i32.const 4
  i32.const 4
  i32.le_u
  drop
  local.get $1
  local.set $5
  local.get $5
  call $~lib/util/number/decimalCount32
  local.set $4
  local.get $3
  local.set $8
  local.get $5
  local.set $7
  local.get $4
  local.set $6
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $8
  local.get $7
  local.get $6
  call $~lib/util/number/utoa32_dec_lut
  local.get $2
  local.get $4
  i32.add
 )
 (func $~lib/array/Array<i32>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinIntegerArray<i32>
  return
 )
 (func $~lib/util/number/itoa_buffered<u32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  i32.const 0
  local.set $2
  i32.const 0
  drop
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.set $3
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  local.get $1
  i32.const 10
  i32.lt_u
  if
   local.get $0
   local.get $1
   i32.const 48
   i32.or
   i32.store16
   i32.const 1
   return
  end
  i32.const 0
  local.set $4
  i32.const 4
  i32.const 4
  i32.le_u
  drop
  local.get $1
  local.set $5
  local.get $5
  call $~lib/util/number/decimalCount32
  local.set $4
  local.get $3
  local.set $8
  local.get $5
  local.set $7
  local.get $4
  local.set $6
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $8
  local.get $7
  local.get $6
  call $~lib/util/number/utoa32_dec_lut
  local.get $2
  local.get $4
  i32.add
 )
 (func $~lib/array/Array<u32>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinIntegerArray<u32>
  return
 )
 (func $~lib/util/number/genDigits (param $0 i32) (param $1 i64) (param $2 i32) (param $3 i64) (param $4 i32) (param $5 i64) (param $6 i32) (result i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i64)
  (local $11 i32)
  (local $12 i64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i64)
  (local $19 i64)
  (local $20 i64)
  (local $21 i64)
  (local $22 i64)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i64)
  i32.const 0
  local.get $4
  i32.sub
  local.set $7
  i64.const 1
  local.get $7
  i64.extend_i32_s
  i64.shl
  local.set $8
  local.get $8
  i64.const 1
  i64.sub
  local.set $9
  local.get $3
  local.get $1
  i64.sub
  local.set $10
  local.get $3
  local.get $7
  i64.extend_i32_s
  i64.shr_u
  i32.wrap_i64
  local.set $11
  local.get $3
  local.get $9
  i64.and
  local.set $12
  local.get $11
  call $~lib/util/number/decimalCount32
  local.set $13
  local.get $6
  local.set $14
  loop $while-continue|0
   local.get $13
   i32.const 0
   i32.gt_s
   local.set $15
   local.get $15
   if
    block $break|1
     block $case10|1
      block $case9|1
       block $case8|1
        block $case7|1
         block $case6|1
          block $case5|1
           block $case4|1
            block $case3|1
             block $case2|1
              block $case1|1
               block $case0|1
                local.get $13
                local.set $17
                local.get $17
                i32.const 10
                i32.eq
                br_if $case0|1
                local.get $17
                i32.const 9
                i32.eq
                br_if $case1|1
                local.get $17
                i32.const 8
                i32.eq
                br_if $case2|1
                local.get $17
                i32.const 7
                i32.eq
                br_if $case3|1
                local.get $17
                i32.const 6
                i32.eq
                br_if $case4|1
                local.get $17
                i32.const 5
                i32.eq
                br_if $case5|1
                local.get $17
                i32.const 4
                i32.eq
                br_if $case6|1
                local.get $17
                i32.const 3
                i32.eq
                br_if $case7|1
                local.get $17
                i32.const 2
                i32.eq
                br_if $case8|1
                local.get $17
                i32.const 1
                i32.eq
                br_if $case9|1
                br $case10|1
               end
               local.get $11
               i32.const 1000000000
               i32.div_u
               local.set $16
               local.get $11
               i32.const 1000000000
               i32.rem_u
               local.set $11
               br $break|1
              end
              local.get $11
              i32.const 100000000
              i32.div_u
              local.set $16
              local.get $11
              i32.const 100000000
              i32.rem_u
              local.set $11
              br $break|1
             end
             local.get $11
             i32.const 10000000
             i32.div_u
             local.set $16
             local.get $11
             i32.const 10000000
             i32.rem_u
             local.set $11
             br $break|1
            end
            local.get $11
            i32.const 1000000
            i32.div_u
            local.set $16
            local.get $11
            i32.const 1000000
            i32.rem_u
            local.set $11
            br $break|1
           end
           local.get $11
           i32.const 100000
           i32.div_u
           local.set $16
           local.get $11
           i32.const 100000
           i32.rem_u
           local.set $11
           br $break|1
          end
          local.get $11
          i32.const 10000
          i32.div_u
          local.set $16
          local.get $11
          i32.const 10000
          i32.rem_u
          local.set $11
          br $break|1
         end
         local.get $11
         i32.const 1000
         i32.div_u
         local.set $16
         local.get $11
         i32.const 1000
         i32.rem_u
         local.set $11
         br $break|1
        end
        local.get $11
        i32.const 100
        i32.div_u
        local.set $16
        local.get $11
        i32.const 100
        i32.rem_u
        local.set $11
        br $break|1
       end
       local.get $11
       i32.const 10
       i32.div_u
       local.set $16
       local.get $11
       i32.const 10
       i32.rem_u
       local.set $11
       br $break|1
      end
      local.get $11
      local.set $16
      i32.const 0
      local.set $11
      br $break|1
     end
     i32.const 0
     local.set $16
     br $break|1
    end
    local.get $16
    local.get $14
    i32.or
    if
     local.get $0
     local.get $14
     local.tee $17
     i32.const 1
     i32.add
     local.set $14
     local.get $17
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $16
     i32.const 65535
     i32.and
     i32.add
     i32.store16
    end
    local.get $13
    i32.const 1
    i32.sub
    local.set $13
    local.get $11
    i64.extend_i32_u
    local.get $7
    i64.extend_i32_s
    i64.shl
    local.get $12
    i64.add
    local.set $18
    local.get $18
    local.get $5
    i64.le_u
    if
     global.get $~lib/util/number/_K
     local.get $13
     i32.add
     global.set $~lib/util/number/_K
     local.get $0
     local.set $23
     local.get $14
     local.set $17
     local.get $5
     local.set $22
     local.get $18
     local.set $21
     i32.const 12272
     local.get $13
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u
     local.get $7
     i64.extend_i32_s
     i64.shl
     local.set $20
     local.get $10
     local.set $19
     local.get $23
     local.get $17
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $24
     local.get $24
     i32.load16_u
     local.set $25
     loop $while-continue|3
      local.get $21
      local.get $19
      i64.lt_u
      if (result i32)
       local.get $22
       local.get $21
       i64.sub
       local.get $20
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $21
       local.get $20
       i64.add
       local.get $19
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $19
        local.get $21
        i64.sub
        local.get $21
        local.get $20
        i64.add
        local.get $19
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      local.set $26
      local.get $26
      if
       local.get $25
       i32.const 1
       i32.sub
       local.set $25
       local.get $21
       local.get $20
       i64.add
       local.set $21
       br $while-continue|3
      end
     end
     local.get $24
     local.get $25
     i32.store16
     local.get $14
     return
    end
    br $while-continue|0
   end
  end
  loop $while-continue|4
   i32.const 1
   local.set $15
   local.get $15
   if
    local.get $12
    i64.const 10
    i64.mul
    local.set $12
    local.get $5
    i64.const 10
    i64.mul
    local.set $5
    local.get $12
    local.get $7
    i64.extend_i32_s
    i64.shr_u
    local.set $22
    local.get $22
    local.get $14
    i64.extend_i32_s
    i64.or
    i64.const 0
    i64.ne
    if
     local.get $0
     local.get $14
     local.tee $25
     i32.const 1
     i32.add
     local.set $14
     local.get $25
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     local.get $22
     i32.wrap_i64
     i32.const 65535
     i32.and
     i32.add
     i32.store16
    end
    local.get $12
    local.get $9
    i64.and
    local.set $12
    local.get $13
    i32.const 1
    i32.sub
    local.set $13
    local.get $12
    local.get $5
    i64.lt_u
    if
     global.get $~lib/util/number/_K
     local.get $13
     i32.add
     global.set $~lib/util/number/_K
     local.get $10
     i32.const 12272
     i32.const 0
     local.get $13
     i32.sub
     i32.const 2
     i32.shl
     i32.add
     i64.load32_u
     i64.mul
     local.set $10
     local.get $0
     local.set $17
     local.get $14
     local.set $26
     local.get $5
     local.set $27
     local.get $12
     local.set $21
     local.get $8
     local.set $20
     local.get $10
     local.set $19
     local.get $17
     local.get $26
     i32.const 1
     i32.sub
     i32.const 1
     i32.shl
     i32.add
     local.set $25
     local.get $25
     i32.load16_u
     local.set $24
     loop $while-continue|6
      local.get $21
      local.get $19
      i64.lt_u
      if (result i32)
       local.get $27
       local.get $21
       i64.sub
       local.get $20
       i64.ge_u
      else
       i32.const 0
      end
      if (result i32)
       local.get $21
       local.get $20
       i64.add
       local.get $19
       i64.lt_u
       if (result i32)
        i32.const 1
       else
        local.get $19
        local.get $21
        i64.sub
        local.get $21
        local.get $20
        i64.add
        local.get $19
        i64.sub
        i64.gt_u
       end
      else
       i32.const 0
      end
      local.set $23
      local.get $23
      if
       local.get $24
       i32.const 1
       i32.sub
       local.set $24
       local.get $21
       local.get $20
       i64.add
       local.set $21
       br $while-continue|6
      end
     end
     local.get $25
     local.get $24
     i32.store16
     local.get $14
     return
    end
    br $while-continue|4
   end
  end
  unreachable
 )
 (func $~lib/util/number/prettify (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $2
  i32.eqz
  if
   local.get $0
   local.get $1
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store
   local.get $1
   i32.const 2
   i32.add
   return
  end
  local.get $1
  local.get $2
  i32.add
  local.set $3
  local.get $1
  local.get $3
  i32.le_s
  if (result i32)
   local.get $3
   i32.const 21
   i32.le_s
  else
   i32.const 0
  end
  if
   local.get $1
   local.set $4
   loop $for-loop|0
    local.get $4
    local.get $3
    i32.lt_s
    local.set $5
    local.get $5
    if
     local.get $0
     local.get $4
     i32.const 1
     i32.shl
     i32.add
     i32.const 48
     i32.store16
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $for-loop|0
    end
   end
   local.get $0
   local.get $3
   i32.const 1
   i32.shl
   i32.add
   i32.const 46
   i32.const 48
   i32.const 16
   i32.shl
   i32.or
   i32.store
   local.get $3
   i32.const 2
   i32.add
   return
  else
   local.get $3
   i32.const 0
   i32.gt_s
   if (result i32)
    local.get $3
    i32.const 21
    i32.le_s
   else
    i32.const 0
   end
   if
    local.get $0
    local.get $3
    i32.const 1
    i32.shl
    i32.add
    local.set $4
    local.get $4
    i32.const 2
    i32.add
    local.get $4
    i32.const 0
    local.get $2
    i32.sub
    i32.const 1
    i32.shl
    memory.copy
    local.get $0
    local.get $3
    i32.const 1
    i32.shl
    i32.add
    i32.const 46
    i32.store16
    local.get $1
    i32.const 1
    i32.add
    return
   else
    i32.const -6
    local.get $3
    i32.lt_s
    if (result i32)
     local.get $3
     i32.const 0
     i32.le_s
    else
     i32.const 0
    end
    if
     i32.const 2
     local.get $3
     i32.sub
     local.set $4
     local.get $0
     local.get $4
     i32.const 1
     i32.shl
     i32.add
     local.get $0
     local.get $1
     i32.const 1
     i32.shl
     memory.copy
     local.get $0
     i32.const 48
     i32.const 46
     i32.const 16
     i32.shl
     i32.or
     i32.store
     i32.const 2
     local.set $5
     loop $for-loop|1
      local.get $5
      local.get $4
      i32.lt_s
      local.set $6
      local.get $6
      if
       local.get $0
       local.get $5
       i32.const 1
       i32.shl
       i32.add
       i32.const 48
       i32.store16
       local.get $5
       i32.const 1
       i32.add
       local.set $5
       br $for-loop|1
      end
     end
     local.get $1
     local.get $4
     i32.add
     return
    else
     local.get $1
     i32.const 1
     i32.eq
     if
      local.get $0
      i32.const 101
      i32.store16 offset=2
      local.get $0
      i32.const 4
      i32.add
      local.set $5
      local.get $3
      i32.const 1
      i32.sub
      local.set $6
      local.get $6
      i32.const 0
      i32.lt_s
      local.set $4
      local.get $4
      if
       i32.const 0
       local.get $6
       i32.sub
       local.set $6
      end
      local.get $6
      call $~lib/util/number/decimalCount32
      i32.const 1
      i32.add
      local.set $7
      local.get $5
      local.set $10
      local.get $6
      local.set $9
      local.get $7
      local.set $8
      i32.const 0
      i32.const 1
      i32.ge_s
      drop
      local.get $10
      local.get $9
      local.get $8
      call $~lib/util/number/utoa32_dec_lut
      local.get $5
      i32.const 45
      i32.const 43
      local.get $4
      select
      i32.store16
      local.get $7
      local.set $1
      local.get $1
      i32.const 2
      i32.add
      return
     else
      local.get $1
      i32.const 1
      i32.shl
      local.set $7
      local.get $0
      i32.const 4
      i32.add
      local.get $0
      i32.const 2
      i32.add
      local.get $7
      i32.const 2
      i32.sub
      memory.copy
      local.get $0
      i32.const 46
      i32.store16 offset=2
      local.get $0
      local.get $7
      i32.add
      i32.const 101
      i32.store16 offset=2
      local.get $1
      local.get $0
      local.get $7
      i32.add
      i32.const 4
      i32.add
      local.set $9
      local.get $3
      i32.const 1
      i32.sub
      local.set $8
      local.get $8
      i32.const 0
      i32.lt_s
      local.set $4
      local.get $4
      if
       i32.const 0
       local.get $8
       i32.sub
       local.set $8
      end
      local.get $8
      call $~lib/util/number/decimalCount32
      i32.const 1
      i32.add
      local.set $5
      local.get $9
      local.set $11
      local.get $8
      local.set $6
      local.get $5
      local.set $10
      i32.const 0
      i32.const 1
      i32.ge_s
      drop
      local.get $11
      local.get $6
      local.get $10
      call $~lib/util/number/utoa32_dec_lut
      local.get $9
      i32.const 45
      i32.const 43
      local.get $4
      select
      i32.store16
      local.get $5
      i32.add
      local.set $1
      local.get $1
      i32.const 2
      i32.add
      return
     end
     unreachable
    end
    unreachable
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/dtoa_core (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 f64)
  (local $6 i64)
  (local $7 i32)
  (local $8 i64)
  (local $9 i64)
  (local $10 i32)
  (local $11 i64)
  (local $12 i64)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 f64)
  (local $17 i64)
  (local $18 i64)
  (local $19 i64)
  (local $20 i64)
  (local $21 i64)
  (local $22 i64)
  (local $23 i64)
  (local $24 i64)
  (local $25 i64)
  (local $26 i32)
  (local $27 i64)
  (local $28 i32)
  local.get $1
  f64.const 0
  f64.lt
  local.set $2
  local.get $2
  if
   local.get $1
   f64.neg
   local.set $1
   local.get $0
   i32.const 45
   i32.store16
  end
  local.get $1
  local.set $5
  local.get $0
  local.set $4
  local.get $2
  local.set $3
  local.get $5
  i64.reinterpret_f64
  local.set $6
  local.get $6
  i64.const 9218868437227405312
  i64.and
  i64.const 52
  i64.shr_u
  i32.wrap_i64
  local.set $7
  local.get $6
  i64.const 4503599627370495
  i64.and
  local.set $8
  local.get $7
  i32.const 0
  i32.ne
  i64.extend_i32_u
  i64.const 52
  i64.shl
  local.get $8
  i64.add
  local.set $9
  local.get $7
  i32.const 1
  local.get $7
  select
  i32.const 1023
  i32.const 52
  i32.add
  i32.sub
  local.set $7
  local.get $9
  local.set $11
  local.get $7
  local.set $10
  local.get $11
  i64.const 1
  i64.shl
  i64.const 1
  i64.add
  local.set $12
  local.get $10
  i32.const 1
  i32.sub
  local.set $13
  local.get $12
  i64.clz
  i32.wrap_i64
  local.set $14
  local.get $12
  local.get $14
  i64.extend_i32_s
  i64.shl
  local.set $12
  local.get $13
  local.get $14
  i32.sub
  local.set $13
  i32.const 1
  local.get $11
  i64.const 4503599627370496
  i64.eq
  i32.add
  local.set $15
  local.get $12
  global.set $~lib/util/number/_frc_plus
  local.get $11
  local.get $15
  i64.extend_i32_s
  i64.shl
  i64.const 1
  i64.sub
  local.get $10
  local.get $15
  i32.sub
  local.get $13
  i32.sub
  i64.extend_i32_s
  i64.shl
  global.set $~lib/util/number/_frc_minus
  local.get $13
  global.set $~lib/util/number/_exp
  global.get $~lib/util/number/_exp
  local.set $10
  i32.const -61
  local.get $10
  i32.sub
  f64.convert_i32_s
  f64.const 0.30102999566398114
  f64.mul
  f64.const 347
  f64.add
  local.set $16
  local.get $16
  i32.trunc_sat_f64_s
  local.set $15
  local.get $15
  local.get $15
  f64.convert_i32_s
  local.get $16
  f64.ne
  i32.add
  local.set $15
  local.get $15
  i32.const 3
  i32.shr_s
  i32.const 1
  i32.add
  local.set $14
  i32.const 348
  local.get $14
  i32.const 3
  i32.shl
  i32.sub
  global.set $~lib/util/number/_K
  i32.const 11400
  local.get $14
  i32.const 3
  i32.shl
  i32.add
  i64.load
  global.set $~lib/util/number/_frc_pow
  i32.const 12096
  local.get $14
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s
  global.set $~lib/util/number/_exp_pow
  local.get $9
  i64.clz
  i32.wrap_i64
  local.set $14
  local.get $9
  local.get $14
  i64.extend_i32_s
  i64.shl
  local.set $9
  local.get $7
  local.get $14
  i32.sub
  local.set $7
  global.get $~lib/util/number/_frc_pow
  local.set $12
  global.get $~lib/util/number/_exp_pow
  local.set $15
  local.get $9
  local.set $17
  local.get $12
  local.set $11
  local.get $17
  i64.const 4294967295
  i64.and
  local.set $18
  local.get $11
  i64.const 4294967295
  i64.and
  local.set $19
  local.get $17
  i64.const 32
  i64.shr_u
  local.set $20
  local.get $11
  i64.const 32
  i64.shr_u
  local.set $21
  local.get $18
  local.get $19
  i64.mul
  local.set $22
  local.get $20
  local.get $19
  i64.mul
  local.get $22
  i64.const 32
  i64.shr_u
  i64.add
  local.set $23
  local.get $18
  local.get $21
  i64.mul
  local.get $23
  i64.const 4294967295
  i64.and
  i64.add
  local.set $24
  local.get $24
  i64.const 2147483647
  i64.add
  local.set $24
  local.get $23
  i64.const 32
  i64.shr_u
  local.set $23
  local.get $24
  i64.const 32
  i64.shr_u
  local.set $24
  local.get $20
  local.get $21
  i64.mul
  local.get $23
  i64.add
  local.get $24
  i64.add
  local.set $24
  local.get $7
  local.set $10
  local.get $15
  local.set $13
  local.get $10
  local.get $13
  i32.add
  i32.const 64
  i32.add
  local.set $10
  global.get $~lib/util/number/_frc_plus
  local.set $17
  local.get $12
  local.set $11
  local.get $17
  i64.const 4294967295
  i64.and
  local.set $23
  local.get $11
  i64.const 4294967295
  i64.and
  local.set $22
  local.get $17
  i64.const 32
  i64.shr_u
  local.set $21
  local.get $11
  i64.const 32
  i64.shr_u
  local.set $20
  local.get $23
  local.get $22
  i64.mul
  local.set $19
  local.get $21
  local.get $22
  i64.mul
  local.get $19
  i64.const 32
  i64.shr_u
  i64.add
  local.set $18
  local.get $23
  local.get $20
  i64.mul
  local.get $18
  i64.const 4294967295
  i64.and
  i64.add
  local.set $25
  local.get $25
  i64.const 2147483647
  i64.add
  local.set $25
  local.get $18
  i64.const 32
  i64.shr_u
  local.set $18
  local.get $25
  i64.const 32
  i64.shr_u
  local.set $25
  local.get $21
  local.get $20
  i64.mul
  local.get $18
  i64.add
  local.get $25
  i64.add
  i64.const 1
  i64.sub
  local.set $25
  global.get $~lib/util/number/_exp
  local.set $26
  local.get $15
  local.set $13
  local.get $26
  local.get $13
  i32.add
  i32.const 64
  i32.add
  local.set $26
  global.get $~lib/util/number/_frc_minus
  local.set $17
  local.get $12
  local.set $11
  local.get $17
  i64.const 4294967295
  i64.and
  local.set $18
  local.get $11
  i64.const 4294967295
  i64.and
  local.set $19
  local.get $17
  i64.const 32
  i64.shr_u
  local.set $20
  local.get $11
  i64.const 32
  i64.shr_u
  local.set $21
  local.get $18
  local.get $19
  i64.mul
  local.set $22
  local.get $20
  local.get $19
  i64.mul
  local.get $22
  i64.const 32
  i64.shr_u
  i64.add
  local.set $23
  local.get $18
  local.get $21
  i64.mul
  local.get $23
  i64.const 4294967295
  i64.and
  i64.add
  local.set $27
  local.get $27
  i64.const 2147483647
  i64.add
  local.set $27
  local.get $23
  i64.const 32
  i64.shr_u
  local.set $23
  local.get $27
  i64.const 32
  i64.shr_u
  local.set $27
  local.get $20
  local.get $21
  i64.mul
  local.get $23
  i64.add
  local.get $27
  i64.add
  i64.const 1
  i64.add
  local.set $27
  local.get $25
  local.get $27
  i64.sub
  local.set $23
  local.get $4
  local.get $24
  local.get $10
  local.get $25
  local.get $26
  local.get $23
  local.get $3
  call $~lib/util/number/genDigits
  local.set $28
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.get $28
  local.get $2
  i32.sub
  global.get $~lib/util/number/_K
  call $~lib/util/number/prettify
  local.set $28
  local.get $28
  local.get $2
  i32.add
 )
 (func $~lib/util/number/dtoa_buffered (param $0 i32) (param $1 f64) (result i32)
  (local $2 i32)
  local.get $1
  f64.const 0
  f64.eq
  if
   local.get $0
   i32.const 48
   i32.store16
   local.get $0
   i32.const 46
   i32.store16 offset=2
   local.get $0
   i32.const 48
   i32.store16 offset=4
   i32.const 3
   return
  end
  local.get $1
  local.get $1
  f64.sub
  f64.const 0
  f64.eq
  i32.eqz
  if
   local.get $1
   local.get $1
   f64.ne
   if
    local.get $0
    i32.const 78
    i32.store16
    local.get $0
    i32.const 97
    i32.store16 offset=2
    local.get $0
    i32.const 78
    i32.store16 offset=4
    i32.const 3
    return
   else
    local.get $1
    f64.const 0
    f64.lt
    local.set $2
    local.get $2
    if
     local.get $0
     i32.const 45
     i32.store16
     local.get $0
     i32.const 2
     i32.add
     local.set $0
    end
    local.get $0
    i64.const 29555310648492105
    i64.store
    local.get $0
    i64.const 34058970405077102
    i64.store offset=8
    i32.const 8
    local.get $2
    i32.add
    return
   end
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/util/number/dtoa_core
 )
 (func $~lib/array/Array<f64>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinFloatArray<f64>
  return
 )
 (func $~lib/array/Array<~lib/string/String|null>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinStringArray
  return
 )
 (func $std/array/Ref#toString (param $0 i32) (result i32)
  i32.const 12512
 )
 (func $~lib/array/Array<std/array/Ref|null>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinReferenceArray<std/array/Ref|null>
  return
 )
 (func $~lib/array/Array<std/array/Ref>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinReferenceArray<std/array/Ref>
  return
 )
 (func $~lib/util/number/itoa_buffered<i8> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  i32.const 0
  local.set $2
  i32.const 1
  drop
  local.get $1
  i32.extend8_s
  i32.const 0
  i32.lt_s
  local.set $2
  local.get $2
  if
   i32.const 1
   i32.const 1
   i32.eq
   drop
   local.get $1
   i32.extend8_s
   i32.const -128
   i32.eq
   if
    local.get $0
    i32.const 45
    i64.extend_i32_s
    i32.const 48
    i32.const 1
    i32.add
    i64.extend_i32_s
    i64.const 16
    i64.shl
    i64.or
    i32.const 48
    i32.const 2
    i32.add
    i64.extend_i32_s
    i64.const 32
    i64.shl
    i64.or
    i32.const 48
    i32.const 8
    i32.add
    i64.extend_i32_s
    i64.const 48
    i64.shl
    i64.or
    i64.store
    i32.const 4
    return
   end
   i32.const 1
   i32.const 2
   i32.eq
   drop
   local.get $0
   i32.const 45
   i32.store16
   i32.const 0
   local.get $1
   i32.sub
   local.set $1
  end
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.set $3
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  i32.const 1
  i32.const 4
  i32.le_u
  drop
  local.get $1
  i32.extend8_s
  i32.const 10
  i32.lt_u
  if
   local.get $3
   local.get $1
   i32.extend8_s
   i32.const 48
   i32.or
   i32.store16
   i32.const 1
   local.get $2
   i32.add
   return
  end
  i32.const 0
  local.set $4
  i32.const 1
  i32.const 4
  i32.le_u
  drop
  local.get $1
  i32.extend8_s
  local.set $5
  local.get $5
  call $~lib/util/number/decimalCount32
  local.set $4
  local.get $3
  local.set $8
  local.get $5
  local.set $7
  local.get $4
  local.set $6
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $8
  local.get $7
  local.get $6
  call $~lib/util/number/utoa32_dec_lut
  local.get $2
  local.get $4
  i32.add
 )
 (func $~lib/array/Array<i8>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinIntegerArray<i8>
  return
 )
 (func $~lib/util/number/itoa_buffered<u16> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  i32.const 0
  local.set $2
  i32.const 0
  drop
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.set $3
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  local.get $1
  i32.const 65535
  i32.and
  i32.const 10
  i32.lt_u
  if
   local.get $0
   local.get $1
   i32.const 65535
   i32.and
   i32.const 48
   i32.or
   i32.store16
   i32.const 1
   return
  end
  i32.const 0
  local.set $4
  i32.const 2
  i32.const 4
  i32.le_u
  drop
  local.get $1
  i32.const 65535
  i32.and
  local.set $5
  local.get $5
  call $~lib/util/number/decimalCount32
  local.set $4
  local.get $3
  local.set $8
  local.get $5
  local.set $7
  local.get $4
  local.set $6
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $8
  local.get $7
  local.get $6
  call $~lib/util/number/utoa32_dec_lut
  local.get $2
  local.get $4
  i32.add
 )
 (func $~lib/array/Array<u16>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinIntegerArray<u16>
  return
 )
 (func $~lib/util/number/itoa_buffered<i16> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  i32.const 0
  local.set $2
  i32.const 1
  drop
  local.get $1
  i32.extend16_s
  i32.const 0
  i32.lt_s
  local.set $2
  local.get $2
  if
   i32.const 2
   i32.const 1
   i32.eq
   drop
   i32.const 2
   i32.const 2
   i32.eq
   drop
   local.get $1
   i32.extend16_s
   i32.const -32768
   i32.eq
   if
    local.get $0
    i32.const 45
    i64.extend_i32_s
    i32.const 48
    i32.const 3
    i32.add
    i64.extend_i32_s
    i64.const 16
    i64.shl
    i64.or
    i32.const 48
    i32.const 2
    i32.add
    i64.extend_i32_s
    i64.const 32
    i64.shl
    i64.or
    i32.const 48
    i32.const 7
    i32.add
    i64.extend_i32_s
    i64.const 48
    i64.shl
    i64.or
    i64.store
    local.get $0
    i32.const 8
    i32.add
    i32.const 48
    i32.const 6
    i32.add
    i32.const 0
    i32.shl
    i32.const 48
    i32.const 8
    i32.add
    i32.const 16
    i32.shl
    i32.or
    i32.store
    i32.const 6
    return
   end
   local.get $0
   i32.const 45
   i32.store16
   i32.const 0
   local.get $1
   i32.sub
   local.set $1
  end
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.set $3
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  i32.const 2
  i32.const 4
  i32.le_u
  drop
  local.get $1
  i32.extend16_s
  i32.const 10
  i32.lt_u
  if
   local.get $3
   local.get $1
   i32.extend16_s
   i32.const 48
   i32.or
   i32.store16
   i32.const 1
   local.get $2
   i32.add
   return
  end
  i32.const 0
  local.set $4
  i32.const 2
  i32.const 4
  i32.le_u
  drop
  local.get $1
  i32.extend16_s
  local.set $5
  local.get $5
  call $~lib/util/number/decimalCount32
  local.set $4
  local.get $3
  local.set $8
  local.get $5
  local.set $7
  local.get $4
  local.set $6
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $8
  local.get $7
  local.get $6
  call $~lib/util/number/utoa32_dec_lut
  local.get $2
  local.get $4
  i32.add
 )
 (func $~lib/array/Array<i16>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinIntegerArray<i16>
  return
 )
 (func $~lib/util/number/decimalCount64High (param $0 i64) (result i32)
  local.get $0
  i64.const 1000000000000000
  i64.lt_u
  if
   local.get $0
   i64.const 1000000000000
   i64.lt_u
   if
    i32.const 10
    local.get $0
    i64.const 100000000000
    i64.ge_u
    i32.add
    local.get $0
    i64.const 10000000000
    i64.ge_u
    i32.add
    return
   else
    i32.const 13
    local.get $0
    i64.const 100000000000000
    i64.ge_u
    i32.add
    local.get $0
    i64.const 10000000000000
    i64.ge_u
    i32.add
    return
   end
   unreachable
  else
   local.get $0
   i64.const 100000000000000000
   i64.lt_u
   if
    i32.const 16
    local.get $0
    i64.const 10000000000000000
    i64.ge_u
    i32.add
    return
   else
    i32.const 18
    local.get $0
    i64.const -8446744073709551616
    i64.ge_u
    i32.add
    local.get $0
    i64.const 1000000000000000000
    i64.ge_u
    i32.add
    return
   end
   unreachable
  end
  unreachable
 )
 (func $~lib/util/number/utoa64_dec_lut (param $0 i32) (param $1 i64) (param $2 i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i64)
  (local $13 i64)
  loop $while-continue|0
   local.get $1
   i64.const 100000000
   i64.ge_u
   local.set $3
   local.get $3
   if
    local.get $1
    i64.const 100000000
    i64.div_u
    local.set $4
    local.get $1
    local.get $4
    i64.const 100000000
    i64.mul
    i64.sub
    i32.wrap_i64
    local.set $5
    local.get $4
    local.set $1
    local.get $5
    i32.const 10000
    i32.div_u
    local.set $6
    local.get $5
    i32.const 10000
    i32.rem_u
    local.set $7
    local.get $6
    i32.const 100
    i32.div_u
    local.set $8
    local.get $6
    i32.const 100
    i32.rem_u
    local.set $9
    local.get $7
    i32.const 100
    i32.div_u
    local.set $10
    local.get $7
    i32.const 100
    i32.rem_u
    local.set $11
    i32.const 9276
    local.get $10
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $12
    i32.const 9276
    local.get $11
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $13
    local.get $2
    i32.const 4
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $12
    local.get $13
    i64.const 32
    i64.shl
    i64.or
    i64.store
    i32.const 9276
    local.get $8
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $12
    i32.const 9276
    local.get $9
    i32.const 2
    i32.shl
    i32.add
    i64.load32_u
    local.set $13
    local.get $2
    i32.const 4
    i32.sub
    local.set $2
    local.get $0
    local.get $2
    i32.const 1
    i32.shl
    i32.add
    local.get $12
    local.get $13
    i64.const 32
    i64.shl
    i64.or
    i64.store
    br $while-continue|0
   end
  end
  local.get $0
  local.get $1
  i32.wrap_i64
  local.get $2
  call $~lib/util/number/utoa32_dec_lut
 )
 (func $~lib/util/number/itoa_buffered<u64> (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i64)
  i32.const 0
  local.set $2
  i32.const 0
  drop
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.set $3
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  local.get $1
  i64.const 10
  i64.lt_u
  if
   local.get $0
   local.get $1
   i32.const 48
   i64.extend_i32_s
   i64.or
   i64.store16
   i32.const 1
   return
  end
  i32.const 0
  local.set $4
  i32.const 8
  i32.const 4
  i32.le_u
  drop
  local.get $1
  global.get $~lib/builtins/u32.MAX_VALUE
  i64.extend_i32_u
  i64.le_u
  if
   local.get $1
   i32.wrap_i64
   local.set $5
   local.get $5
   call $~lib/util/number/decimalCount32
   local.set $4
   local.get $3
   local.set $8
   local.get $5
   local.set $7
   local.get $4
   local.set $6
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $8
   local.get $7
   local.get $6
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $1
   local.set $9
   local.get $9
   call $~lib/util/number/decimalCount64High
   local.set $4
   local.get $3
   local.set $7
   local.get $9
   local.set $10
   local.get $4
   local.set $6
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $7
   local.get $10
   local.get $6
   call $~lib/util/number/utoa64_dec_lut
  end
  local.get $2
  local.get $4
  i32.add
 )
 (func $~lib/array/Array<u64>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinIntegerArray<u64>
  return
 )
 (func $~lib/util/number/itoa_buffered<i64> (param $0 i32) (param $1 i64) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i64)
  i32.const 0
  local.set $2
  i32.const 1
  drop
  local.get $1
  i64.const 0
  i64.lt_s
  local.set $2
  local.get $2
  if
   i32.const 8
   i32.const 1
   i32.eq
   drop
   i32.const 8
   i32.const 2
   i32.eq
   drop
   local.get $0
   i32.const 45
   i32.store16
   i64.const 0
   local.get $1
   i64.sub
   local.set $1
  end
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.set $3
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 1
  drop
  i32.const 8
  i32.const 4
  i32.le_u
  drop
  local.get $1
  i64.const 10
  i64.lt_u
  if
   local.get $3
   local.get $1
   i32.const 48
   i64.extend_i32_s
   i64.or
   i64.store16
   i32.const 1
   local.get $2
   i32.add
   return
  end
  i32.const 0
  local.set $4
  i32.const 8
  i32.const 4
  i32.le_u
  drop
  local.get $1
  global.get $~lib/builtins/u32.MAX_VALUE
  i64.extend_i32_u
  i64.le_u
  if
   local.get $1
   i32.wrap_i64
   local.set $5
   local.get $5
   call $~lib/util/number/decimalCount32
   local.set $4
   local.get $3
   local.set $8
   local.get $5
   local.set $7
   local.get $4
   local.set $6
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $8
   local.get $7
   local.get $6
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $1
   local.set $9
   local.get $9
   call $~lib/util/number/decimalCount64High
   local.set $4
   local.get $3
   local.set $7
   local.get $9
   local.set $10
   local.get $4
   local.set $6
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $7
   local.get $10
   local.get $6
   call $~lib/util/number/utoa64_dec_lut
  end
  local.get $2
  local.get $4
  i32.add
 )
 (func $~lib/array/Array<i64>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinIntegerArray<i64>
  return
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinReferenceArray<~lib/array/Array<i32>>
  return
 )
 (func $~lib/array/Array<~lib/array/Array<u8>>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 1
  drop
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/util/number/itoa_buffered<u8> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  i32.const 0
  local.set $2
  i32.const 0
  drop
  local.get $0
  local.get $2
  i32.const 1
  i32.shl
  i32.add
  local.set $3
  i32.const 0
  i32.const 1
  i32.le_s
  drop
  i32.const 0
  drop
  local.get $1
  i32.const 255
  i32.and
  i32.const 10
  i32.lt_u
  if
   local.get $0
   local.get $1
   i32.const 255
   i32.and
   i32.const 48
   i32.or
   i32.store16
   i32.const 1
   return
  end
  i32.const 0
  local.set $4
  i32.const 1
  i32.const 4
  i32.le_u
  drop
  local.get $1
  i32.const 255
  i32.and
  local.set $5
  local.get $5
  call $~lib/util/number/decimalCount32
  local.set $4
  local.get $3
  local.set $8
  local.get $5
  local.set $7
  local.get $4
  local.set $6
  i32.const 0
  i32.const 1
  i32.ge_s
  drop
  local.get $8
  local.get $7
  local.get $6
  call $~lib/util/number/utoa32_dec_lut
  local.get $2
  local.get $4
  i32.add
 )
 (func $~lib/array/Array<u8>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinIntegerArray<u8>
  return
 )
 (func $~lib/array/Array<~lib/array/Array<u8>>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinReferenceArray<~lib/array/Array<u8>>
  return
 )
 (func $~lib/array/Array<~lib/array/Array<u32>>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 1
  drop
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/array/Array<u32>>>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 1
  drop
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $~lib/array/Array<~lib/array/Array<u32>>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinReferenceArray<~lib/array/Array<u32>>
  return
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/array/Array<u32>>>#join (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $0
  i32.load offset=12
  local.set $3
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  drop
  i32.const 0
  i32.const 1
  i32.lt_s
  drop
  i32.const 0
  drop
  i32.const 1
  drop
  local.get $2
  local.get $3
  local.get $1
  call $~lib/util/string/joinReferenceArray<~lib/array/Array<~lib/array/Array<u32>>>
  return
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset (param $0 i32) (param $1 i32) (param $2 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.get $2
  i32.store
  i32.const 1
  drop
  local.get $0
  local.get $2
  i32.const 1
  call $~lib/rt/itcms/__link
 )
 (func $start:std/array~anonymous|53 (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  local.get $0
  call $~lib/array/Array<i32>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1265
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  local.get $0
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1267
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
 )
 (func $~lib/rt/itcms/__collect
  (local $0 i32)
  i32.const 0
  drop
  global.get $~lib/rt/itcms/state
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    global.get $~lib/rt/itcms/state
    i32.const 0
    i32.ne
    local.set $0
    local.get $0
    if
     call $~lib/rt/itcms/step
     drop
     br $while-continue|0
    end
   end
  end
  call $~lib/rt/itcms/step
  drop
  loop $while-continue|1
   global.get $~lib/rt/itcms/state
   i32.const 0
   i32.ne
   local.set $0
   local.get $0
   if
    call $~lib/rt/itcms/step
    drop
    br $while-continue|1
   end
  end
  global.get $~lib/rt/itcms/total
  i64.extend_i32_u
  i32.const 200
  i64.extend_i32_u
  i64.mul
  i64.const 100
  i64.div_u
  i32.wrap_i64
  i32.const 1024
  i32.add
  global.set $~lib/rt/itcms/threshold
  i32.const 0
  drop
  i32.const 0
  drop
 )
 (func $~lib/rt/__visit_globals (param $0 i32)
  (local $1 i32)
  global.get $std/array/arr
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/array/charset
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/array/inputStabArr
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  global.get $std/array/outputStabArr
  local.tee $1
  if
   local.get $1
   local.get $0
   call $~lib/rt/itcms/__visit
  end
  i32.const 320
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 32
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 1616
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 5392
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 128
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 9696
  local.get $0
  call $~lib/rt/itcms/__visit
  i32.const 10752
  local.get $0
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/arraybuffer/ArrayBufferView~visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  local.get $0
  i32.load
  local.tee $2
  if
   local.get $2
   local.get $1
   call $~lib/rt/itcms/__visit
  end
 )
 (func $~lib/array/Array<i32>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#__visit
 )
 (func $~lib/typedarray/Uint8Array~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView~visit
 )
 (func $~lib/array/Array<u8>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u8>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u8>#__visit
 )
 (func $~lib/array/Array<u32>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u32>#__visit
 )
 (func $~lib/array/Array<f32>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<f32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<f32>#__visit
 )
 (func $~lib/array/Array<std/array/Ref>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<std/array/Ref>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<std/array/Ref>#__visit
 )
 (func $~lib/array/Array<u16>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u16>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u16>#__visit
 )
 (func $~lib/array/Array<f64>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<f64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<f64>#__visit
 )
 (func $~lib/array/Array<std/array/Ref|null>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<std/array/Ref|null>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<std/array/Ref|null>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>bool>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>bool>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>void>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>void>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>void>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>f32>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>f32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>f32>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>i32>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>i32>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28bool%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>bool>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28bool%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28bool%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>bool>#__visit
 )
 (func $~lib/array/Array<std/array/Dim>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<std/array/Dim>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<std/array/Dim>#__visit
 )
 (func $~lib/function/Function<%28f32%2Cf32%29=>i32>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f32%2Cf32%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f32%2Cf32%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>i32>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28f64%2Cf64%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28f64%2Cf64%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%29=>i32>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28i32%2Ci32%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28i32%2Ci32%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28u32%2Cu32%29=>i32>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28u32%2Cu32%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28u32%2Cu32%29=>i32>#__visit
 )
 (func $~lib/function/Function<%28std/array/Dim%2Cstd/array/Dim%29=>i32>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28std/array/Dim%2Cstd/array/Dim%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28std/array/Dim%2Cstd/array/Dim%29=>i32>#__visit
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<i32>>#__visit
 )
 (func $~lib/function/Function<%28~lib/array/Array<i32>%2C~lib/array/Array<i32>%29=>i32>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/array/Array<i32>%2C~lib/array/Array<i32>%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/array/Array<i32>%2C~lib/array/Array<i32>%29=>i32>#__visit
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<std/array/Proxy<i32>>#__visit
 )
 (func $~lib/function/Function<%28std/array/Proxy<i32>%2Cstd/array/Proxy<i32>%29=>i32>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28std/array/Proxy<i32>%2Cstd/array/Proxy<i32>%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28std/array/Proxy<i32>%2Cstd/array/Proxy<i32>%29=>i32>#__visit
 )
 (func $~lib/array/Array<~lib/string/String|null>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/string/String|null>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String|null>#__visit
 )
 (func $~lib/function/Function<%28~lib/string/String|null%2C~lib/string/String|null%29=>i32>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/string/String|null%2C~lib/string/String|null%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/string/String|null%2C~lib/string/String|null%29=>i32>#__visit
 )
 (func $~lib/array/Array<~lib/string/String>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/string/String>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#__visit
 )
 (func $~lib/function/Function<%28~lib/string/String%2C~lib/string/String%29=>i32>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/string/String%2C~lib/string/String%29=>i32>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/string/String%2C~lib/string/String%29=>i32>#__visit
 )
 (func $~lib/array/Array<bool>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<bool>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<bool>#__visit
 )
 (func $~lib/array/Array<i8>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i8>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i8>#__visit
 )
 (func $~lib/array/Array<i16>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i16>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i16>#__visit
 )
 (func $~lib/array/Array<u64>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<u64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<u64>#__visit
 )
 (func $~lib/array/Array<i64>#__visit (param $0 i32) (param $1 i32)
  i32.const 0
  drop
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<i64>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<i64>#__visit
 )
 (func $~lib/array/Array<~lib/array/Array<u8>>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/array/Array<u8>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<u8>>#__visit
 )
 (func $~lib/array/Array<~lib/array/Array<u32>>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/array/Array<u32>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<u32>>#__visit
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/array/Array<u32>>>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/array/Array<u32>>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<~lib/array/Array<u32>>>#__visit
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__visit (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  i32.const 1
  drop
  local.get $0
  i32.load offset=4
  local.set $2
  local.get $2
  local.get $0
  i32.load offset=12
  i32.const 2
  i32.shl
  i32.add
  local.set $3
  loop $while-continue|0
   local.get $2
   local.get $3
   i32.lt_u
   local.set $4
   local.get $4
   if
    local.get $2
    i32.load
    local.set $5
    local.get $5
    if
     local.get $5
     local.get $1
     call $~lib/rt/itcms/__visit
    end
    local.get $2
    i32.const 4
    i32.add
    local.set $2
    br $while-continue|0
   end
  end
  local.get $0
  i32.load
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__visit
 )
 (func $~lib/function/Function<%28~lib/array/Array<i32>%2Ci32%2C~lib/array/Array<~lib/array/Array<i32>>%29=>~lib/array/Array<i32>>#__visit (param $0 i32) (param $1 i32)
  local.get $0
  i32.load offset=4
  local.get $1
  call $~lib/rt/itcms/__visit
 )
 (func $~lib/function/Function<%28~lib/array/Array<i32>%2Ci32%2C~lib/array/Array<~lib/array/Array<i32>>%29=>~lib/array/Array<i32>>~visit (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  call $~lib/function/Function<%28~lib/array/Array<i32>%2Ci32%2C~lib/array/Array<~lib/array/Array<i32>>%29=>~lib/array/Array<i32>>#__visit
 )
 (func $~lib/rt/__visit_members (param $0 i32) (param $1 i32)
  block $invalid
   block $~lib/function/Function<%28~lib/array/Array<i32>%2Ci32%2C~lib/array/Array<~lib/array/Array<i32>>%29=>~lib/array/Array<i32>>
    block $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>
     block $~lib/array/Array<~lib/array/Array<~lib/array/Array<u32>>>
      block $~lib/array/Array<~lib/array/Array<u32>>
       block $~lib/array/Array<~lib/array/Array<u8>>
        block $~lib/array/Array<i64>
         block $~lib/array/Array<u64>
          block $~lib/array/Array<i16>
           block $~lib/array/Array<i8>
            block $~lib/array/Array<bool>
             block $~lib/function/Function<%28~lib/string/String%2C~lib/string/String%29=>i32>
              block $~lib/array/Array<~lib/string/String>
               block $~lib/function/Function<%28~lib/string/String|null%2C~lib/string/String|null%29=>i32>
                block $~lib/array/Array<~lib/string/String|null>
                 block $~lib/function/Function<%28std/array/Proxy<i32>%2Cstd/array/Proxy<i32>%29=>i32>
                  block $~lib/array/Array<std/array/Proxy<i32>>
                   block $std/array/Proxy<i32>
                    block $~lib/function/Function<%28~lib/array/Array<i32>%2C~lib/array/Array<i32>%29=>i32>
                     block $~lib/array/Array<~lib/array/Array<i32>>
                      block $~lib/function/Function<%28std/array/Dim%2Cstd/array/Dim%29=>i32>
                       block $~lib/function/Function<%28u32%2Cu32%29=>i32>
                        block $~lib/function/Function<%28i32%2Ci32%29=>i32>
                         block $~lib/function/Function<%28f64%2Cf64%29=>i32>
                          block $~lib/function/Function<%28f32%2Cf32%29=>i32>
                           block $~lib/array/Array<std/array/Dim>
                            block $std/array/Dim
                             block $~lib/function/Function<%28bool%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>bool>
                              block $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>i32>
                               block $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>i32>
                                block $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>f32>
                                 block $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>void>
                                  block $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>bool>
                                   block $~lib/array/Array<std/array/Ref|null>
                                    block $~lib/array/Array<f64>
                                     block $~lib/array/Array<u16>
                                      block $~lib/array/Array<std/array/Ref>
                                       block $~lib/array/Array<f32>
                                        block $~lib/array/Array<u32>
                                         block $~lib/array/Array<u8>
                                          block $~lib/typedarray/Uint8Array
                                           block $std/array/Ref
                                            block $~lib/array/Array<i32>
                                             block $~lib/arraybuffer/ArrayBufferView
                                              block $~lib/string/String
                                               block $~lib/arraybuffer/ArrayBuffer
                                                local.get $0
                                                i32.const 8
                                                i32.sub
                                                i32.load
                                                br_table $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $~lib/array/Array<i32> $std/array/Ref $~lib/typedarray/Uint8Array $~lib/array/Array<u8> $~lib/array/Array<u32> $~lib/array/Array<f32> $~lib/array/Array<std/array/Ref> $~lib/array/Array<u16> $~lib/array/Array<f64> $~lib/array/Array<std/array/Ref|null> $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>bool> $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>void> $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>f32> $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>i32> $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>i32> $~lib/function/Function<%28bool%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>bool> $std/array/Dim $~lib/array/Array<std/array/Dim> $~lib/function/Function<%28f32%2Cf32%29=>i32> $~lib/function/Function<%28f64%2Cf64%29=>i32> $~lib/function/Function<%28i32%2Ci32%29=>i32> $~lib/function/Function<%28u32%2Cu32%29=>i32> $~lib/function/Function<%28std/array/Dim%2Cstd/array/Dim%29=>i32> $~lib/array/Array<~lib/array/Array<i32>> $~lib/function/Function<%28~lib/array/Array<i32>%2C~lib/array/Array<i32>%29=>i32> $std/array/Proxy<i32> $~lib/array/Array<std/array/Proxy<i32>> $~lib/function/Function<%28std/array/Proxy<i32>%2Cstd/array/Proxy<i32>%29=>i32> $~lib/array/Array<~lib/string/String|null> $~lib/function/Function<%28~lib/string/String|null%2C~lib/string/String|null%29=>i32> $~lib/array/Array<~lib/string/String> $~lib/function/Function<%28~lib/string/String%2C~lib/string/String%29=>i32> $~lib/array/Array<bool> $~lib/array/Array<i8> $~lib/array/Array<i16> $~lib/array/Array<u64> $~lib/array/Array<i64> $~lib/array/Array<~lib/array/Array<u8>> $~lib/array/Array<~lib/array/Array<u32>> $~lib/array/Array<~lib/array/Array<~lib/array/Array<u32>>> $~lib/array/Array<~lib/array/Array<~lib/string/String|null>> $~lib/function/Function<%28~lib/array/Array<i32>%2Ci32%2C~lib/array/Array<~lib/array/Array<i32>>%29=>~lib/array/Array<i32>> $invalid
                                               end
                                               return
                                              end
                                              return
                                             end
                                             local.get $0
                                             local.get $1
                                             call $~lib/arraybuffer/ArrayBufferView~visit
                                             return
                                            end
                                            local.get $0
                                            local.get $1
                                            call $~lib/array/Array<i32>~visit
                                            return
                                           end
                                           return
                                          end
                                          local.get $0
                                          local.get $1
                                          call $~lib/typedarray/Uint8Array~visit
                                          return
                                         end
                                         local.get $0
                                         local.get $1
                                         call $~lib/array/Array<u8>~visit
                                         return
                                        end
                                        local.get $0
                                        local.get $1
                                        call $~lib/array/Array<u32>~visit
                                        return
                                       end
                                       local.get $0
                                       local.get $1
                                       call $~lib/array/Array<f32>~visit
                                       return
                                      end
                                      local.get $0
                                      local.get $1
                                      call $~lib/array/Array<std/array/Ref>~visit
                                      return
                                     end
                                     local.get $0
                                     local.get $1
                                     call $~lib/array/Array<u16>~visit
                                     return
                                    end
                                    local.get $0
                                    local.get $1
                                    call $~lib/array/Array<f64>~visit
                                    return
                                   end
                                   local.get $0
                                   local.get $1
                                   call $~lib/array/Array<std/array/Ref|null>~visit
                                   return
                                  end
                                  local.get $0
                                  local.get $1
                                  call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>bool>~visit
                                  return
                                 end
                                 local.get $0
                                 local.get $1
                                 call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>void>~visit
                                 return
                                end
                                local.get $0
                                local.get $1
                                call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>f32>~visit
                                return
                               end
                               local.get $0
                               local.get $1
                               call $~lib/function/Function<%28i32%2Ci32%2C~lib/array/Array<i32>%29=>i32>~visit
                               return
                              end
                              local.get $0
                              local.get $1
                              call $~lib/function/Function<%28i32%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>i32>~visit
                              return
                             end
                             local.get $0
                             local.get $1
                             call $~lib/function/Function<%28bool%2Ci32%2Ci32%2C~lib/array/Array<i32>%29=>bool>~visit
                             return
                            end
                            return
                           end
                           local.get $0
                           local.get $1
                           call $~lib/array/Array<std/array/Dim>~visit
                           return
                          end
                          local.get $0
                          local.get $1
                          call $~lib/function/Function<%28f32%2Cf32%29=>i32>~visit
                          return
                         end
                         local.get $0
                         local.get $1
                         call $~lib/function/Function<%28f64%2Cf64%29=>i32>~visit
                         return
                        end
                        local.get $0
                        local.get $1
                        call $~lib/function/Function<%28i32%2Ci32%29=>i32>~visit
                        return
                       end
                       local.get $0
                       local.get $1
                       call $~lib/function/Function<%28u32%2Cu32%29=>i32>~visit
                       return
                      end
                      local.get $0
                      local.get $1
                      call $~lib/function/Function<%28std/array/Dim%2Cstd/array/Dim%29=>i32>~visit
                      return
                     end
                     local.get $0
                     local.get $1
                     call $~lib/array/Array<~lib/array/Array<i32>>~visit
                     return
                    end
                    local.get $0
                    local.get $1
                    call $~lib/function/Function<%28~lib/array/Array<i32>%2C~lib/array/Array<i32>%29=>i32>~visit
                    return
                   end
                   return
                  end
                  local.get $0
                  local.get $1
                  call $~lib/array/Array<std/array/Proxy<i32>>~visit
                  return
                 end
                 local.get $0
                 local.get $1
                 call $~lib/function/Function<%28std/array/Proxy<i32>%2Cstd/array/Proxy<i32>%29=>i32>~visit
                 return
                end
                local.get $0
                local.get $1
                call $~lib/array/Array<~lib/string/String|null>~visit
                return
               end
               local.get $0
               local.get $1
               call $~lib/function/Function<%28~lib/string/String|null%2C~lib/string/String|null%29=>i32>~visit
               return
              end
              local.get $0
              local.get $1
              call $~lib/array/Array<~lib/string/String>~visit
              return
             end
             local.get $0
             local.get $1
             call $~lib/function/Function<%28~lib/string/String%2C~lib/string/String%29=>i32>~visit
             return
            end
            local.get $0
            local.get $1
            call $~lib/array/Array<bool>~visit
            return
           end
           local.get $0
           local.get $1
           call $~lib/array/Array<i8>~visit
           return
          end
          local.get $0
          local.get $1
          call $~lib/array/Array<i16>~visit
          return
         end
         local.get $0
         local.get $1
         call $~lib/array/Array<u64>~visit
         return
        end
        local.get $0
        local.get $1
        call $~lib/array/Array<i64>~visit
        return
       end
       local.get $0
       local.get $1
       call $~lib/array/Array<~lib/array/Array<u8>>~visit
       return
      end
      local.get $0
      local.get $1
      call $~lib/array/Array<~lib/array/Array<u32>>~visit
      return
     end
     local.get $0
     local.get $1
     call $~lib/array/Array<~lib/array/Array<~lib/array/Array<u32>>>~visit
     return
    end
    local.get $0
    local.get $1
    call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>~visit
    return
   end
   local.get $0
   local.get $1
   call $~lib/function/Function<%28~lib/array/Array<i32>%2Ci32%2C~lib/array/Array<~lib/array/Array<i32>>%29=>~lib/array/Array<i32>>~visit
   return
  end
  unreachable
 )
 (func $~start
  global.get $~started
  if
   return
  end
  i32.const 1
  global.set $~started
  call $start:std/array
 )
 (func $~stack_check
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__data_end
  i32.lt_s
  if
   i32.const 31648
   i32.const 31696
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $std/array/assertSorted<i32> (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $1
  call $std/array/isSorted<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1078
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/array/assertSortedDefault<i32> (param $0 i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  block $~lib/util/sort/COMPARATOR<i32>|inlined.1 (result i32)
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   i32.const 8224
   br $~lib/util/sort/COMPARATOR<i32>|inlined.1
  end
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $std/array/assertSorted<i32>
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/extendRunRight<std/array/Dim> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  local.get $1
  local.set $4
  local.get $0
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $0
  local.get $4
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=4
  local.get $8
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  i32.load
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $5
   loop $while-continue|1
    local.get $1
    local.get $5
    i32.lt_s
    local.set $6
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $7
     i32.store offset=8
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store
     local.get $5
     i32.const 1
     i32.sub
     local.set $5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $std/array/assertStableSortedForComplexObjects
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 24
  memory.fill
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/inputStabArr
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=8
  local.get $7
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<std/array/Dim>#slice
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  i32.const 8320
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=4
  local.get $7
  call $~lib/array/Array<std/array/Dim>#sort
  local.tee $0
  i32.store offset=12
  i32.const 1
  local.set $1
  i32.const 0
  local.set $2
  global.get $std/array/inputStabArr
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  local.get $7
  call $~lib/array/Array<std/array/Dim>#get:length
  local.set $3
  block $for-break0
   loop $for-loop|0
    local.get $2
    local.get $3
    i32.lt_s
    local.set $4
    local.get $4
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $2
     call $~lib/array/Array<std/array/Dim>#__get
     local.tee $5
     i32.store offset=16
     global.get $~lib/memory/__stack_pointer
     global.get $std/array/outputStabArr
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store
     local.get $7
     local.get $2
     call $~lib/array/Array<std/array/Dim>#__get
     local.tee $6
     i32.store offset=20
     local.get $5
     i32.load
     local.get $6
     i32.load
     i32.ne
     if (result i32)
      i32.const 1
     else
      local.get $5
      i32.load offset=4
      local.get $6
      i32.load offset=4
      i32.ne
     end
     if
      i32.const 0
      local.set $1
      br $for-break0
     end
     local.get $2
     i32.const 1
     i32.add
     local.set $2
     br $for-loop|0
    end
   end
  end
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1074
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 24
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/extendRunRight<~lib/array/Array<i32>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  local.get $1
  local.set $4
  local.get $0
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $0
  local.get $4
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=4
  local.get $8
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  i32.load
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $5
   loop $while-continue|1
    local.get $1
    local.get $5
    i32.lt_s
    local.set $6
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $7
     i32.store offset=8
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store
     local.get $5
     i32.const 1
     i32.sub
     local.set $5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $std/array/isSorted<~lib/array/Array<i32>> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 1
  local.set $2
  local.get $0
  call $~lib/array/Array<~lib/array/Array<i32>>#get:length
  local.set $3
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $0
    local.get $2
    i32.const 1
    i32.sub
    call $~lib/array/Array<~lib/array/Array<i32>>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $0
    local.get $2
    call $~lib/array/Array<~lib/array/Array<i32>>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    i32.const 2
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    if
     i32.const 0
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  i32.const 1
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $std/array/assertSorted<~lib/array/Array<i32>> (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<i32>>#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $1
  call $std/array/isSorted<~lib/array/Array<i32>>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1078
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/array/createReverseOrderedElementsArray (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/array/Array<std/array/Proxy<i32>>#constructor
  local.tee $1
  i32.store
  i32.const 0
  local.set $2
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.lt_s
   local.set $3
   local.get $3
   if
    local.get $1
    local.get $2
    i32.const 0
    local.get $0
    i32.const 1
    i32.sub
    local.get $2
    i32.sub
    call $std/array/Proxy<i32>#constructor
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    call $~lib/array/Array<std/array/Proxy<i32>>#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $1
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/util/sort/extendRunRight<std/array/Proxy<i32>> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  local.get $1
  local.set $4
  local.get $0
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $0
  local.get $4
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=4
  local.get $8
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  i32.load
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $5
   loop $while-continue|1
    local.get $1
    local.get $5
    i32.lt_s
    local.set $6
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $7
     i32.store offset=8
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store
     local.get $5
     i32.const 1
     i32.sub
     local.set $5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $std/array/isSorted<std/array/Proxy<i32>> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 1
  local.set $2
  local.get $0
  call $~lib/array/Array<std/array/Proxy<i32>>#get:length
  local.set $3
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $0
    local.get $2
    i32.const 1
    i32.sub
    call $~lib/array/Array<std/array/Proxy<i32>>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $0
    local.get $2
    call $~lib/array/Array<std/array/Proxy<i32>>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    i32.const 2
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    if
     i32.const 0
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  i32.const 1
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $std/array/assertSorted<std/array/Proxy<i32>> (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  call $~lib/array/Array<std/array/Proxy<i32>>#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $1
  call $std/array/isSorted<std/array/Proxy<i32>>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1078
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/sort/extendRunRight<~lib/string/String|null> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  local.get $1
  local.set $4
  local.get $0
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $0
  local.get $4
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=4
  local.get $8
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  i32.load
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $5
   loop $while-continue|1
    local.get $1
    local.get $5
    i32.lt_s
    local.set $6
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $7
     i32.store offset=8
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store
     local.get $5
     i32.const 1
     i32.sub
     local.set $5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $std/array/isSorted<~lib/string/String|null> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 1
  local.set $2
  local.get $0
  call $~lib/array/Array<~lib/string/String|null>#get:length
  local.set $3
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $0
    local.get $2
    i32.const 1
    i32.sub
    call $~lib/array/Array<~lib/string/String|null>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $0
    local.get $2
    call $~lib/array/Array<~lib/string/String|null>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    i32.const 2
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    if
     i32.const 0
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  i32.const 1
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $std/array/assertSorted<~lib/string/String|null> (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String|null>#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $1
  call $std/array/isSorted<~lib/string/String|null>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1078
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $std/array/isArraysEqual<~lib/string/String|null> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $2
  i32.eqz
  if
   local.get $0
   call $~lib/array/Array<~lib/string/String|null>#get:length
   local.set $2
   local.get $2
   local.get $1
   call $~lib/array/Array<~lib/string/String|null>#get:length
   i32.ne
   if
    i32.const 0
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $5
    return
   end
   local.get $0
   local.get $1
   i32.eq
   if
    i32.const 1
    local.set $5
    global.get $~lib/memory/__stack_pointer
    i32.const 8
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $5
    return
   end
  end
  i32.const 0
  local.set $3
  loop $for-loop|0
   local.get $3
   local.get $2
   i32.lt_s
   local.set $4
   local.get $4
   if
    i32.const 0
    drop
    local.get $0
    local.get $3
    call $~lib/array/Array<~lib/string/String|null>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $1
    local.get $3
    call $~lib/array/Array<~lib/string/String|null>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $~lib/string/String.__ne
    if
     i32.const 0
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  i32.const 1
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $std/array/createRandomString (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 f64)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  global.get $~lib/memory/__stack_pointer
  i32.const 8672
  local.tee $1
  i32.store
  i32.const 0
  local.set $2
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.lt_s
   local.set $3
   local.get $3
   if
    global.get $~lib/memory/__stack_pointer
    local.get $1
    global.get $std/array/charset
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $~lib/math/NativeMath.random
    global.get $std/array/charset
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=8
    local.get $5
    call $~lib/string/String#get:length
    f64.convert_i32_s
    f64.mul
    local.set $4
    local.get $4
    f64.floor
    i32.trunc_sat_f64_s
    call $~lib/string/String#charAt
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    call $~lib/string/String.__concat
    local.tee $1
    i32.store
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $1
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $std/array/createRandomStringArray (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/array/Array<~lib/string/String>#constructor
  local.tee $1
  i32.store
  i32.const 0
  local.set $2
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.lt_s
   local.set $3
   local.get $3
   if
    local.get $1
    local.get $2
    call $~lib/math/NativeMath.random
    f64.const 32
    f64.mul
    i32.trunc_sat_f64_s
    call $std/array/createRandomString
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.store offset=4
    local.get $4
    call $~lib/array/Array<~lib/string/String>#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $1
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/util/sort/extendRunRight<~lib/string/String> (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  local.get $2
  i32.eq
  if
   local.get $1
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  local.get $1
  local.set $4
  local.get $0
  local.get $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store
  local.get $8
  local.get $0
  local.get $4
  i32.const 1
  i32.add
  local.tee $4
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $8
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.store offset=4
  local.get $8
  i32.const 2
  global.set $~argumentsLength
  local.get $3
  i32.load
  call_indirect $0 (type $i32_i32_=>_i32)
  i32.const 0
  i32.gt_s
  if
   loop $while-continue|0
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 31
     i32.shr_u
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|0
    end
   end
   local.get $4
   local.set $5
   loop $while-continue|1
    local.get $1
    local.get $5
    i32.lt_s
    local.set $6
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.tee $7
     i32.store offset=8
     local.get $0
     local.get $1
     i32.const 2
     i32.shl
     i32.add
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     i32.load
     i32.store
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     local.get $0
     local.get $5
     i32.const 2
     i32.shl
     i32.add
     local.get $7
     i32.store
     local.get $5
     i32.const 1
     i32.sub
     local.set $5
     br $while-continue|1
    end
   end
  else
   loop $while-continue|2
    local.get $4
    local.get $2
    i32.lt_s
    if (result i32)
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load offset=4
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store
     local.get $8
     local.get $0
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $8
     global.get $~lib/memory/__stack_pointer
     local.get $8
     i32.store offset=4
     local.get $8
     i32.const 2
     global.set $~argumentsLength
     local.get $3
     i32.load
     call_indirect $0 (type $i32_i32_=>_i32)
     i32.const 0
     i32.ge_s
    else
     i32.const 0
    end
    local.set $5
    local.get $5
    if
     local.get $4
     i32.const 1
     i32.add
     local.set $4
     br $while-continue|2
    end
   end
  end
  local.get $4
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $std/array/isSorted<~lib/string/String> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 1
  local.set $2
  local.get $0
  call $~lib/array/Array<~lib/string/String>#get:length
  local.set $3
  loop $for-loop|0
   local.get $2
   local.get $3
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $0
    local.get $2
    i32.const 1
    i32.sub
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store
    local.get $5
    local.get $0
    local.get $2
    call $~lib/array/Array<~lib/string/String>#__get
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.store offset=4
    local.get $5
    i32.const 2
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_=>_i32)
    i32.const 0
    i32.gt_s
    if
     i32.const 0
     local.set $5
     global.get $~lib/memory/__stack_pointer
     i32.const 8
     i32.add
     global.set $~lib/memory/__stack_pointer
     local.get $5
     return
    end
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  i32.const 1
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $std/array/assertSorted<~lib/string/String> (param $0 i32) (param $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.store
  local.get $2
  local.get $1
  call $std/array/isSorted<~lib/string/String>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1078
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/util/string/joinReferenceArray<std/array/Ref|null> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  local.get $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $4
   i32.store
   local.get $4
   i32.const 0
   i32.ne
   if (result i32)
    local.get $4
    call $std/array/Ref#toString
   else
    i32.const 8672
   end
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8672
  local.tee $5
  i32.store offset=4
  local.get $2
  call $~lib/string/String#get:length
  local.set $6
  i32.const 0
  local.set $7
  loop $for-loop|0
   local.get $7
   local.get $3
   i32.lt_s
   local.set $8
   local.get $8
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $4
    i32.store
    local.get $4
    i32.const 0
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $4
     call $std/array/Ref#toString
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=8
     local.get $9
     call $~lib/string/String.__concat
     local.tee $5
     i32.store offset=4
    end
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $2
     call $~lib/string/String.__concat
     local.tee $5
     i32.store offset=4
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $4
  i32.store
  local.get $4
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $5
   local.get $4
   call $std/array/Ref#toString
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $~lib/string/String.__concat
   local.tee $5
   i32.store offset=4
  end
  local.get $5
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/util/string/joinReferenceArray<std/array/Ref> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  local.get $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $4
   i32.store
   local.get $4
   i32.const 0
   i32.ne
   if (result i32)
    local.get $4
    call $std/array/Ref#toString
   else
    i32.const 8672
   end
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8672
  local.tee $5
  i32.store offset=4
  local.get $2
  call $~lib/string/String#get:length
  local.set $6
  i32.const 0
  local.set $7
  loop $for-loop|0
   local.get $7
   local.get $3
   i32.lt_s
   local.set $8
   local.get $8
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $4
    i32.store
    local.get $4
    i32.const 0
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $4
     call $std/array/Ref#toString
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=8
     local.get $9
     call $~lib/string/String.__concat
     local.tee $5
     i32.store offset=4
    end
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $2
     call $~lib/string/String.__concat
     local.tee $5
     i32.store offset=4
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $4
  i32.store
  local.get $4
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $5
   local.get $4
   call $std/array/Ref#toString
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $~lib/string/String.__concat
   local.tee $5
   i32.store offset=4
  end
  local.get $5
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/array/Array<i32>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 8960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<i32>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<i8>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 8960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<i8>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<u16>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 8960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<u16>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<i16>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 8960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<i16>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<u64>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 8960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<u64>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<i64>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 8960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<i64>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<~lib/string/String|null>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 8960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<~lib/string/String|null>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/util/string/joinReferenceArray<~lib/array/Array<i32>> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  local.get $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $4
   i32.store
   local.get $4
   i32.const 0
   i32.ne
   if (result i32)
    local.get $4
    call $~lib/array/Array<i32>#toString
   else
    i32.const 8672
   end
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8672
  local.tee $5
  i32.store offset=4
  local.get $2
  call $~lib/string/String#get:length
  local.set $6
  i32.const 0
  local.set $7
  loop $for-loop|0
   local.get $7
   local.get $3
   i32.lt_s
   local.set $8
   local.get $8
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $4
    i32.store
    local.get $4
    i32.const 0
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $4
     call $~lib/array/Array<i32>#toString
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=8
     local.get $9
     call $~lib/string/String.__concat
     local.tee $5
     i32.store offset=4
    end
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $2
     call $~lib/string/String.__concat
     local.tee $5
     i32.store offset=4
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $4
  i32.store
  local.get $4
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $5
   local.get $4
   call $~lib/array/Array<i32>#toString
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $~lib/string/String.__concat
   local.tee $5
   i32.store offset=4
  end
  local.get $5
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 8960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<~lib/array/Array<i32>>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<u8>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 8960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<u8>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/util/string/joinReferenceArray<~lib/array/Array<u8>> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  local.get $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $4
   i32.store
   local.get $4
   i32.const 0
   i32.ne
   if (result i32)
    local.get $4
    call $~lib/array/Array<u8>#toString
   else
    i32.const 8672
   end
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8672
  local.tee $5
  i32.store offset=4
  local.get $2
  call $~lib/string/String#get:length
  local.set $6
  i32.const 0
  local.set $7
  loop $for-loop|0
   local.get $7
   local.get $3
   i32.lt_s
   local.set $8
   local.get $8
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $4
    i32.store
    local.get $4
    i32.const 0
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $4
     call $~lib/array/Array<u8>#toString
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=8
     local.get $9
     call $~lib/string/String.__concat
     local.tee $5
     i32.store offset=4
    end
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $2
     call $~lib/string/String.__concat
     local.tee $5
     i32.store offset=4
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $4
  i32.store
  local.get $4
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $5
   local.get $4
   call $~lib/array/Array<u8>#toString
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $~lib/string/String.__concat
   local.tee $5
   i32.store offset=4
  end
  local.get $5
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/array/Array<~lib/array/Array<u8>>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 8960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<~lib/array/Array<u8>>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<u32>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 8960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<u32>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/util/string/joinReferenceArray<~lib/array/Array<u32>> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  local.get $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $4
   i32.store
   local.get $4
   i32.const 0
   i32.ne
   if (result i32)
    local.get $4
    call $~lib/array/Array<u32>#toString
   else
    i32.const 8672
   end
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8672
  local.tee $5
  i32.store offset=4
  local.get $2
  call $~lib/string/String#get:length
  local.set $6
  i32.const 0
  local.set $7
  loop $for-loop|0
   local.get $7
   local.get $3
   i32.lt_s
   local.set $8
   local.get $8
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $4
    i32.store
    local.get $4
    i32.const 0
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $4
     call $~lib/array/Array<u32>#toString
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=8
     local.get $9
     call $~lib/string/String.__concat
     local.tee $5
     i32.store offset=4
    end
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $2
     call $~lib/string/String.__concat
     local.tee $5
     i32.store offset=4
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $4
  i32.store
  local.get $4
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $5
   local.get $4
   call $~lib/array/Array<u32>#toString
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $~lib/string/String.__concat
   local.tee $5
   i32.store offset=4
  end
  local.get $5
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/array/Array<~lib/array/Array<u32>>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 8960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<~lib/array/Array<u32>>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/util/string/joinReferenceArray<~lib/array/Array<~lib/array/Array<u32>>> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  local.get $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $4
   i32.store
   local.get $4
   i32.const 0
   i32.ne
   if (result i32)
    local.get $4
    call $~lib/array/Array<~lib/array/Array<u32>>#toString
   else
    i32.const 8672
   end
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8672
  local.tee $5
  i32.store offset=4
  local.get $2
  call $~lib/string/String#get:length
  local.set $6
  i32.const 0
  local.set $7
  loop $for-loop|0
   local.get $7
   local.get $3
   i32.lt_s
   local.set $8
   local.get $8
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $7
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $4
    i32.store
    local.get $4
    i32.const 0
    i32.ne
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $4
     call $~lib/array/Array<~lib/array/Array<u32>>#toString
     local.set $9
     global.get $~lib/memory/__stack_pointer
     local.get $9
     i32.store offset=8
     local.get $9
     call $~lib/string/String.__concat
     local.tee $5
     i32.store offset=4
    end
    local.get $6
    if
     global.get $~lib/memory/__stack_pointer
     local.get $5
     local.get $2
     call $~lib/string/String.__concat
     local.tee $5
     i32.store offset=4
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $4
  i32.store
  local.get $4
  i32.const 0
  i32.ne
  if
   global.get $~lib/memory/__stack_pointer
   local.get $5
   local.get $4
   call $~lib/array/Array<~lib/array/Array<u32>>#toString
   local.set $9
   global.get $~lib/memory/__stack_pointer
   local.get $9
   i32.store offset=8
   local.get $9
   call $~lib/string/String.__concat
   local.tee $5
   i32.store offset=4
  end
  local.get $5
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/array/Array<u32>>>#toString (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 8960
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.store
  local.get $1
  call $~lib/array/Array<~lib/array/Array<~lib/array/Array<u32>>>#join
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#map<~lib/array/Array<i32>> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $0
  i32.load offset=12
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  i32.const 26
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store
  local.get $3
  i32.load offset=4
  local.set $4
  i32.const 0
  local.set $5
  loop $for-loop|0
   local.get $5
   local.get $2
   local.tee $6
   local.get $0
   i32.load offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $6
   local.get $6
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    i32.load offset=4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $8
    global.get $~lib/memory/__stack_pointer
    local.get $8
    i32.store offset=4
    local.get $8
    local.get $5
    local.get $0
    i32.const 3
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.tee $7
    i32.store offset=8
    local.get $4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    local.get $7
    i32.store
    i32.const 1
    drop
    local.get $3
    local.get $7
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $3
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $start:std/array
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 172
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 172
  memory.fill
  i32.const 0
  i32.const 0
  i32.eq
  drop
  i32.const 4
  i32.const 4
  i32.eq
  drop
  i32.const 8
  i32.const 8
  i32.eq
  drop
  memory.size
  i32.const 16
  i32.shl
  global.get $~lib/memory/__heap_base
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 240
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 272
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 416
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
  i32.const 0
  i32.const 0
  call $~lib/array/Array<i32>#constructor
  global.set $std/array/arr
  i32.const 0
  call $~lib/array/Array.isArray<~lib/array/Array<i32>|null>
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 47
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  i32.const 0
  call $std/array/Ref#constructor
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array.isArray<std/array/Ref>
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 48
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  i32.const 1
  call $~lib/typedarray/Uint8Array#constructor
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array.isArray<~lib/typedarray/Uint8Array>
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 49
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  call $~lib/array/Array.isArray<i32>
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 50
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 640
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array.isArray<~lib/string/String>
  i32.eqz
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 51
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array.isArray<~lib/array/Array<i32>>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 53
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 0
  i32.const 6
  i32.const 672
  call $~lib/rt/__newArray
  local.tee $1
  i32.store offset=4
  local.get $1
  i32.const 1
  i32.const 1
  i32.const 3
  call $~lib/array/Array<u8>#fill
  drop
  local.get $1
  i32.const 5
  i32.const 0
  i32.const 6
  i32.const 704
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<u8>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 61
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u8>#fill
  drop
  local.get $1
  i32.const 5
  i32.const 0
  i32.const 6
  i32.const 736
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<u8>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 64
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 1
  i32.const 0
  i32.const -3
  call $~lib/array/Array<u8>#fill
  drop
  local.get $1
  i32.const 5
  i32.const 0
  i32.const 6
  i32.const 768
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<u8>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 67
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u8>#fill
  drop
  local.get $1
  i32.const 5
  i32.const 0
  i32.const 6
  i32.const 800
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<u8>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 70
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 0
  i32.const 1
  i32.const 0
  call $~lib/array/Array<u8>#fill
  drop
  local.get $1
  i32.const 5
  i32.const 0
  i32.const 6
  i32.const 832
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<u8>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 73
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const -1
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u8>#fill
  drop
  local.get $1
  i32.const 5
  i32.const 0
  i32.const 6
  i32.const 864
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<u8>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 76
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 7
  i32.const 896
  call $~lib/rt/__newArray
  local.tee $0
  i32.store offset=12
  local.get $0
  i32.const 1
  i32.const 1
  i32.const 3
  call $~lib/array/Array<u32>#fill
  drop
  local.get $0
  i32.const 5
  i32.const 2
  i32.const 7
  i32.const 944
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<u32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 83
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u32>#fill
  drop
  local.get $0
  i32.const 5
  i32.const 2
  i32.const 7
  i32.const 992
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<u32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 86
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 1
  i32.const 0
  i32.const -3
  call $~lib/array/Array<u32>#fill
  drop
  local.get $0
  i32.const 5
  i32.const 2
  i32.const 7
  i32.const 1040
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<u32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 89
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u32>#fill
  drop
  local.get $0
  i32.const 5
  i32.const 2
  i32.const 7
  i32.const 1088
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<u32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 92
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 0
  i32.const 1
  i32.const 0
  call $~lib/array/Array<u32>#fill
  drop
  local.get $0
  i32.const 5
  i32.const 2
  i32.const 7
  i32.const 1136
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<u32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 95
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const -1
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<u32>#fill
  drop
  local.get $0
  i32.const 5
  i32.const 2
  i32.const 7
  i32.const 1184
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<u32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 98
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 8
  i32.const 1232
  call $~lib/rt/__newArray
  local.tee $1
  i32.store offset=4
  local.get $1
  f32.const 1
  i32.const 1
  i32.const 3
  call $~lib/array/Array<f32>#fill
  drop
  local.get $1
  i32.const 5
  i32.const 2
  i32.const 8
  i32.const 1280
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<f32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 105
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  f32.const 0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<f32>#fill
  drop
  local.get $1
  i32.const 5
  i32.const 2
  i32.const 8
  i32.const 1328
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<f32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 108
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  f32.const 1
  i32.const 0
  i32.const -3
  call $~lib/array/Array<f32>#fill
  drop
  local.get $1
  i32.const 5
  i32.const 2
  i32.const 8
  i32.const 1376
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<f32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 111
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  f32.const 2
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<f32>#fill
  drop
  local.get $1
  i32.const 5
  i32.const 2
  i32.const 8
  i32.const 1424
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<f32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 114
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  f32.const 0
  i32.const 1
  i32.const 0
  call $~lib/array/Array<f32>#fill
  drop
  local.get $1
  i32.const 5
  i32.const 2
  i32.const 8
  i32.const 1472
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<f32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 117
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  f32.const -1
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<f32>#fill
  drop
  local.get $1
  i32.const 5
  i32.const 2
  i32.const 8
  i32.const 1520
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<f32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 120
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  f32.const -0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<f32>#fill
  drop
  local.get $1
  i32.const 5
  i32.const 2
  i32.const 8
  i32.const 1568
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<f32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 123
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 129
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 130
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 42
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 134
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 135
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 136
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  local.set $1
  local.get $1
  i32.const 42
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 140
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 141
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 142
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 146
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 147
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 148
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 44
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 152
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 153
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 154
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 155
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 45
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 159
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 160
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 161
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 162
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 163
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $2
  i32.store offset=16
  local.get $1
  i32.const 0
  i32.const 0
  i32.const 0
  call $std/array/Ref#constructor
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $1
  i32.const 1
  i32.const 0
  i32.const 0
  call $std/array/Ref#constructor
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $1
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 0
  call $~lib/array/Array<std/array/Ref>#set:length
  local.get $2
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 171
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 1664
  call $~lib/rt/__newArray
  local.tee $1
  i32.store offset=4
  local.get $1
  i32.const 0
  call $~lib/array/Array<i32>#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 179
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 3
  call $~lib/array/Array<i32>#at
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 180
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const -1
  call $~lib/array/Array<i32>#at
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 181
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const -4
  call $~lib/array/Array<i32>#at
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 182
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 0
  call $~lib/array/Array<i32>#constructor
  local.tee $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  local.get $1
  call $~lib/array/Array<i32>#concat
  local.tee $2
  i32.store offset=16
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 191
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 192
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 193
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 1712
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#concat
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 196
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 198
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 199
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 200
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 46
  call $~lib/array/Array<i32>#push
  drop
  local.get $1
  i32.const 47
  call $~lib/array/Array<i32>#push
  drop
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  local.get $1
  call $~lib/array/Array<i32>#concat
  local.tee $2
  i32.store offset=16
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 207
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 208
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  call $~lib/array/Array<i32>#get:length
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 209
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 210
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 211
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 212
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 46
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 213
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 4
  call $~lib/array/Array<i32>#__get
  i32.const 47
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 214
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  call $~lib/array/Array<i32>#pop
  drop
  local.get $2
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 217
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 1744
  call $~lib/rt/__newArray
  local.tee $0
  i32.store offset=12
  local.get $0
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 225
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#concat
  local.tee $2
  i32.store offset=16
  local.get $2
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 227
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 228
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1776
  call $~lib/rt/__newArray
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 0
  i32.const 3
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#copyWithin
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1824
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 235
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1872
  call $~lib/rt/__newArray
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 1
  i32.const 3
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#copyWithin
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1920
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 237
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 1968
  call $~lib/rt/__newArray
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 1
  i32.const 2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#copyWithin
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2016
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 239
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2064
  call $~lib/rt/__newArray
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 2
  i32.const 2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#copyWithin
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2112
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 241
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2160
  call $~lib/rt/__newArray
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 0
  i32.const 3
  i32.const 4
  call $~lib/array/Array<i32>#copyWithin
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2208
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 243
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2256
  call $~lib/rt/__newArray
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 1
  i32.const 3
  i32.const 4
  call $~lib/array/Array<i32>#copyWithin
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2304
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 245
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2352
  call $~lib/rt/__newArray
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 1
  i32.const 2
  i32.const 4
  call $~lib/array/Array<i32>#copyWithin
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2400
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 247
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2448
  call $~lib/rt/__newArray
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 0
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#copyWithin
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2496
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 249
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2544
  call $~lib/rt/__newArray
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 0
  i32.const -2
  i32.const -1
  call $~lib/array/Array<i32>#copyWithin
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2592
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 251
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2640
  call $~lib/rt/__newArray
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const -4
  i32.const -3
  i32.const -2
  call $~lib/array/Array<i32>#copyWithin
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2688
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 253
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2736
  call $~lib/rt/__newArray
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const -4
  i32.const -3
  i32.const -1
  call $~lib/array/Array<i32>#copyWithin
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2784
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 255
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2832
  call $~lib/rt/__newArray
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const -4
  i32.const -3
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#copyWithin
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2880
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 257
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 42
  call $~lib/array/Array<i32>#unshift
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 265
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 266
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 267
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 268
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 269
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 270
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 41
  call $~lib/array/Array<i32>#unshift
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 274
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 275
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 41
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 276
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 277
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 278
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 279
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 4
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 280
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#shift
  global.set $std/array/i
  global.get $std/array/i
  i32.const 41
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 289
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 290
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 291
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 292
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 293
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 294
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 45
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 295
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  global.set $std/array/i
  global.get $std/array/i
  i32.const 45
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 299
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 300
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 301
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 302
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 303
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 304
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 2928
  call $~lib/rt/__newArray
  local.tee $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#slice
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 3
  i32.const 2
  i32.const 3
  i32.const 2976
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 314
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 2
  i32.const 4
  call $~lib/array/Array<i32>#slice
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 3008
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 317
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 1
  i32.const 5
  call $~lib/array/Array<i32>#slice
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 3040
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 320
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#slice
  local.tee $2
  i32.store offset=16
  local.get $2
  local.get $0
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 323
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#slice
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 3088
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 326
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 2
  i32.const -1
  call $~lib/array/Array<i32>#slice
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 3120
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 329
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const -3
  i32.const -1
  call $~lib/array/Array<i32>#slice
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 3152
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 332
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const -1
  i32.const -3
  call $~lib/array/Array<i32>#slice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 334
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 10
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#slice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 335
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#reverse
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 343
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 344
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 345
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 43
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 346
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 347
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 44
  call $~lib/array/Array<i32>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 0
  i32.const 6
  i32.const 3184
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<u8>#reverse
  local.tee $2
  i32.store offset=16
  i32.const 0
  local.set $0
  local.get $2
  call $~lib/array/Array<u8>#get:length
  local.set $1
  loop $for-loop|0
   local.get $0
   local.get $1
   i32.lt_s
   local.set $3
   local.get $3
   if
    local.get $2
    local.get $0
    call $~lib/array/Array<u8>#__get
    local.get $2
    call $~lib/array/Array<u8>#get:length
    local.get $0
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 528
     i32.const 354
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 0
  i32.const 6
  i32.const 3216
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<u8>#reverse
  local.tee $0
  i32.store offset=12
  i32.const 0
  local.set $1
  local.get $0
  call $~lib/array/Array<u8>#get:length
  local.set $3
  loop $for-loop|1
   local.get $1
   local.get $3
   i32.lt_s
   local.set $4
   local.get $4
   if
    local.get $0
    local.get $1
    call $~lib/array/Array<u8>#__get
    local.get $0
    call $~lib/array/Array<u8>#get:length
    local.get $1
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 528
     i32.const 359
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17
  i32.const 0
  i32.const 6
  i32.const 3248
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<u8>#reverse
  local.tee $1
  i32.store offset=4
  i32.const 0
  local.set $3
  local.get $1
  call $~lib/array/Array<u8>#get:length
  local.set $4
  loop $for-loop|2
   local.get $3
   local.get $4
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $1
    local.get $3
    call $~lib/array/Array<u8>#__get
    local.get $1
    call $~lib/array/Array<u8>#get:length
    local.get $3
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 528
     i32.const 364
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|2
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 7
  i32.const 1
  i32.const 10
  i32.const 3296
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<u16>#reverse
  local.tee $3
  i32.store offset=20
  i32.const 0
  local.set $4
  local.get $3
  call $~lib/array/Array<u16>#get:length
  local.set $5
  loop $for-loop|3
   local.get $4
   local.get $5
   i32.lt_s
   local.set $6
   local.get $6
   if
    local.get $3
    local.get $4
    call $~lib/array/Array<u16>#__get
    local.get $3
    call $~lib/array/Array<u16>#get:length
    local.get $4
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 528
     i32.const 369
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|3
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 1
  i32.const 10
  i32.const 3344
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<u16>#reverse
  local.tee $4
  i32.store offset=24
  i32.const 0
  local.set $5
  local.get $4
  call $~lib/array/Array<u16>#get:length
  local.set $6
  loop $for-loop|4
   local.get $5
   local.get $6
   i32.lt_s
   local.set $7
   local.get $7
   if
    local.get $4
    local.get $5
    call $~lib/array/Array<u16>#__get
    local.get $4
    call $~lib/array/Array<u16>#get:length
    local.get $5
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 528
     i32.const 374
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|4
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 9
  i32.const 1
  i32.const 10
  i32.const 3392
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<u16>#reverse
  local.tee $5
  i32.store offset=28
  i32.const 0
  local.set $6
  local.get $5
  call $~lib/array/Array<u16>#get:length
  local.set $7
  loop $for-loop|5
   local.get $6
   local.get $7
   i32.lt_s
   local.set $8
   local.get $8
   if
    local.get $5
    local.get $6
    call $~lib/array/Array<u16>#__get
    local.get $5
    call $~lib/array/Array<u16>#get:length
    local.get $6
    i32.sub
    i32.const 1
    i32.sub
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 528
     i32.const 379
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|5
   end
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 44
  i32.const 0
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 387
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 42
  i32.const 0
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 390
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 45
  i32.const 0
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 393
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  i32.const 100
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 396
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  i32.const -100
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 399
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  i32.const -2
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 402
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  i32.const -4
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 405
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  i32.const 0
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 408
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  i32.const 1
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 411
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  i32.const 2
  call $~lib/array/Array<i32>#indexOf
  global.set $std/array/i
  global.get $std/array/i
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 414
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  i32.const 2
  i32.const 8
  i32.const 3440
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  f32.const nan:0x400000
  i32.const 0
  call $~lib/array/Array<f32>#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 416
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  i32.const 3
  i32.const 11
  i32.const 3472
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  f64.const nan:0x8000000000000
  i32.const 0
  call $~lib/array/Array<f64>#indexOf
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 417
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 3504
  call $~lib/rt/__newArray
  local.tee $4
  i32.store offset=24
  local.get $4
  i32.const 2
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<i32>#lastIndexOf@varargs
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 424
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 7
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<i32>#lastIndexOf@varargs
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 425
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 2
  i32.const 3
  call $~lib/array/Array<i32>#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 426
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 2
  i32.const 2
  call $~lib/array/Array<i32>#lastIndexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 427
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 2
  i32.const -2
  call $~lib/array/Array<i32>#lastIndexOf
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 428
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 2
  i32.const -1
  call $~lib/array/Array<i32>#lastIndexOf
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 429
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 44
  i32.const 0
  call $~lib/array/Array<i32>#includes
  local.set $4
  local.get $4
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 437
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 42
  i32.const 0
  call $~lib/array/Array<i32>#includes
  local.set $4
  local.get $4
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 440
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 45
  i32.const 0
  call $~lib/array/Array<i32>#includes
  local.set $4
  local.get $4
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 443
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  i32.const 100
  call $~lib/array/Array<i32>#includes
  local.set $4
  local.get $4
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 446
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  i32.const -100
  call $~lib/array/Array<i32>#includes
  local.set $4
  local.get $4
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 449
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  i32.const -2
  call $~lib/array/Array<i32>#includes
  local.set $4
  local.get $4
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 452
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  i32.const -4
  call $~lib/array/Array<i32>#includes
  local.set $4
  local.get $4
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 455
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  i32.const 0
  call $~lib/array/Array<i32>#includes
  local.set $4
  local.get $4
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 458
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  i32.const 1
  call $~lib/array/Array<i32>#includes
  local.set $4
  local.get $4
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 461
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 43
  i32.const 2
  call $~lib/array/Array<i32>#includes
  local.set $4
  local.get $4
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 464
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  i32.const 2
  i32.const 8
  i32.const 3552
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  f32.const nan:0x400000
  i32.const 0
  call $~lib/array/Array<f32>#includes
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 466
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1
  i32.const 3
  i32.const 11
  i32.const 3584
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  f64.const nan:0x8000000000000
  i32.const 0
  call $~lib/array/Array<f64>#includes
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 467
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  i32.const 1
  call $~lib/array/Array<i32>#splice
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 471
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $std/array/internalCapacity<i32>
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 472
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 44
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 473
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 42
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 474
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3616
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const 0
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#splice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3664
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 481
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 3712
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 482
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3744
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const 0
  i32.const 0
  call $~lib/array/Array<i32>#splice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 3792
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 485
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3824
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 486
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3872
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const 2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#splice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 3
  i32.const 2
  i32.const 3
  i32.const 3920
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 489
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 3952
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 490
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 3984
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const 2
  i32.const 2
  call $~lib/array/Array<i32>#splice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 4032
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 493
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 3
  i32.const 2
  i32.const 3
  i32.const 4064
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 494
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4096
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const 0
  i32.const 1
  call $~lib/array/Array<i32>#splice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 4144
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 497
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 4176
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 498
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4224
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const -1
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#splice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 4272
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 501
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 4304
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 502
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4352
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const -2
  global.get $~lib/builtins/i32.MAX_VALUE
  call $~lib/array/Array<i32>#splice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 4400
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 505
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 3
  i32.const 2
  i32.const 3
  i32.const 4432
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 506
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4464
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const -2
  i32.const 1
  call $~lib/array/Array<i32>#splice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 4512
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 509
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 4544
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 510
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4592
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const -7
  i32.const 1
  call $~lib/array/Array<i32>#splice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 4640
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 513
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 4672
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 514
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4720
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const -2
  i32.const -1
  call $~lib/array/Array<i32>#splice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 4768
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 517
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4800
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 518
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4848
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const 1
  i32.const -2
  call $~lib/array/Array<i32>#splice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 4896
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 521
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4928
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 522
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 4976
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const 4
  i32.const 0
  call $~lib/array/Array<i32>#splice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 5024
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 525
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 5056
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 526
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 5104
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const 7
  i32.const 0
  call $~lib/array/Array<i32>#splice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 5152
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 529
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 5184
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 530
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 5232
  call $~lib/rt/__newArray
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const 7
  i32.const 5
  call $~lib/array/Array<i32>#splice
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 5280
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 533
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 5312
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 534
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 9
  i32.const 5360
  call $~lib/rt/__newArray
  local.tee $4
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 1
  i32.const 2
  call $~lib/array/Array<std/array/Ref>#splice
  local.tee $3
  i32.store offset=20
  local.get $3
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 538
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 539
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 9
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $0
  i32.store offset=12
  local.get $1
  i32.const 0
  i32.const 0
  i32.const 1
  call $std/array/Ref#constructor
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $1
  i32.const 1
  i32.const 0
  i32.const 2
  call $std/array/Ref#constructor
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $1
  i32.const 2
  i32.const 0
  i32.const 3
  call $std/array/Ref#constructor
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $1
  i32.const 3
  i32.const 0
  i32.const 4
  call $std/array/Ref#constructor
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $1
  i32.const 4
  i32.const 0
  i32.const 5
  call $std/array/Ref#constructor
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $1
  local.tee $4
  i32.store offset=24
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 2
  i32.const 2
  call $~lib/array/Array<std/array/Ref>#splice
  local.tee $3
  i32.store offset=20
  local.get $3
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 544
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const 0
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 545
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const 1
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 546
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  call $~lib/array/Array<std/array/Ref>#get:length
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 548
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 0
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 549
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 1
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 550
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 2
  call $~lib/array/Array<std/array/Ref>#__get
  i32.load
  i32.const 5
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 551
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 3
  i32.const 2
  i32.const 12
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $1
  i32.store offset=4
  local.get $0
  i32.const 0
  i32.const 0
  i32.const 1
  call $std/array/Ref#constructor
  call $~lib/array/Array<std/array/Ref|null>#__uset
  local.get $0
  i32.const 1
  i32.const 0
  call $~lib/array/Array<std/array/Ref|null>#__uset
  local.get $0
  i32.const 2
  i32.const 0
  i32.const 2
  call $std/array/Ref#constructor
  call $~lib/array/Array<std/array/Ref|null>#__uset
  local.get $0
  local.tee $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 0
  i32.const 1
  call $~lib/array/Array<std/array/Ref|null>#splice
  local.tee $0
  i32.store offset=12
  local.get $0
  call $~lib/array/Array<std/array/Ref|null>#get:length
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 556
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.const 0
  call $~lib/array/Array<std/array/Ref|null>#__get
  local.tee $2
  i32.store offset=16
  local.get $2
  if (result i32)
   local.get $2
  else
   i32.const 5520
   i32.const 528
   i32.const 557
   i32.const 10
   call $~lib/builtins/abort
   unreachable
  end
  i32.load
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 557
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  call $~lib/array/Array<std/array/Ref|null>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 559
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 0
  call $~lib/array/Array<std/array/Ref|null>#__get
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 560
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 1
  call $~lib/array/Array<std/array/Ref|null>#__get
  local.tee $2
  i32.store offset=16
  local.get $2
  if (result i32)
   local.get $2
  else
   i32.const 5520
   i32.const 528
   i32.const 561
   i32.const 10
   call $~lib/builtins/abort
   unreachable
  end
  i32.load
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 561
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  i32.const 0
  call $~lib/array/Array<i32>#__set
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  i32.const 1
  call $~lib/array/Array<i32>#__set
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  i32.const 2
  call $~lib/array/Array<i32>#__set
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 3
  i32.const 3
  call $~lib/array/Array<i32>#__set
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5584
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 574
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5616
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 577
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5648
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 580
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5680
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 588
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 589
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5712
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.ne
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 591
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5744
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#findIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 604
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 605
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 5776
  call $~lib/rt/__newArray
  local.tee $1
  i32.store offset=4
  local.get $1
  i32.const 5824
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#findLastIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 618
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 5856
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#findLastIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 621
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 5888
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#findLastIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 624
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 5920
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#findLastIndex
  global.set $std/array/i
  global.get $std/array/i
  i32.const -1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 633
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5952
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#every
  local.set $1
  local.get $1
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 640
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 5984
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#every
  local.set $1
  local.get $1
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 643
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6016
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#every
  local.set $1
  local.get $1
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 651
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 652
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6048
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#every
  local.set $1
  local.get $1
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 654
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6080
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#every
  local.set $1
  local.get $1
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 667
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 668
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6112
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#some
  local.set $1
  local.get $1
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 678
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6144
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#some
  local.set $1
  local.get $1
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 681
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6176
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#some
  local.set $1
  local.get $1
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 689
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 690
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6208
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#some
  local.set $1
  local.get $1
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 692
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6240
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#some
  local.set $1
  local.get $1
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 705
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 706
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6272
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 717
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6304
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 726
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 727
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6336
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/i
  i32.const 406
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 730
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6368
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 744
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 745
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6400
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#forEach
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 100
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 770
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $1
  loop $for-loop|6
   local.get $1
   i32.const 100
   i32.lt_s
   local.set $0
   local.get $0
   if
    global.get $std/array/arr
    local.set $41
    global.get $~lib/memory/__stack_pointer
    local.get $41
    i32.store
    local.get $41
    call $~lib/array/Array<i32>#pop
    drop
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|6
   end
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6432
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#map<f32>
  local.tee $1
  i32.store offset=4
  local.get $1
  call $~lib/array/Array<f32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 784
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 0
  call $~lib/array/Array<f32>#__get
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#__get
  f32.convert_i32_s
  f32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 785
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6464
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#map<i32>
  drop
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 794
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 795
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6496
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#map<i32>
  drop
  global.get $std/array/i
  i32.const 406
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 802
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6528
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#map<i32>
  drop
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 817
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 818
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $~lib/memory/__stack_pointer
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6560
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#filter
  local.tee $1
  i32.store offset=4
  local.get $1
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 828
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6592
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#filter
  drop
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 837
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 838
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6624
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#filter
  drop
  global.get $std/array/i
  i32.const 406
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 845
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  i32.const 0
  global.set $std/array/i
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6656
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/array/Array<i32>#filter
  drop
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 860
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 861
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6688
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 871
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6720
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 4
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 875
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6752
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#reduce<bool>
  local.set $1
  local.get $1
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 878
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6784
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#reduce<bool>
  local.set $1
  local.get $1
  i32.const 0
  i32.ne
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 881
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6816
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 889
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 890
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6848
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 892
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6880
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#reduce<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 905
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 906
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6912
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 916
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6944
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 4
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 920
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 6976
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<bool>
  local.set $1
  local.get $1
  i32.const 0
  i32.ne
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 923
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 7008
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<bool>
  local.set $1
  local.get $1
  i32.const 0
  i32.ne
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 926
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 7040
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 934
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 935
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 7072
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 10
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 937
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#pop
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 7104
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#reduceRight<i32>
  global.set $std/array/i
  global.get $std/array/i
  i32.const 6
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 950
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 951
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 0
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 1
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 2
  call $~lib/array/Array<i32>#push
  drop
  global.get $std/array/arr
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 3
  call $~lib/array/Array<i32>#push
  drop
  call $~lib/bindings/dom/Math.random
  i64.reinterpret_f64
  call $~lib/math/NativeMath.seedRandom
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 2
  i32.const 20
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $1
  i32.store offset=4
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.load offset=4
  local.tee $0
  i32.store offset=12
  local.get $1
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $3
  i32.store offset=20
  local.get $3
  i32.const 100
  call $std/array/Dim#set:height
  local.get $3
  i32.const 80
  call $std/array/Dim#set:width
  local.get $3
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $1
  i32.const 1
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $4
  i32.store offset=24
  local.get $4
  i32.const 90
  call $std/array/Dim#set:height
  local.get $4
  i32.const 90
  call $std/array/Dim#set:width
  local.get $4
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $1
  i32.const 2
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $5
  i32.store offset=28
  local.get $5
  i32.const 70
  call $std/array/Dim#set:height
  local.get $5
  i32.const 95
  call $std/array/Dim#set:width
  local.get $5
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $1
  i32.const 3
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $2
  i32.store offset=16
  local.get $2
  i32.const 100
  call $std/array/Dim#set:height
  local.get $2
  i32.const 100
  call $std/array/Dim#set:width
  local.get $2
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $1
  i32.const 4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $7
  i32.store offset=32
  local.get $7
  i32.const 80
  call $std/array/Dim#set:height
  local.get $7
  i32.const 110
  call $std/array/Dim#set:width
  local.get $7
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $1
  i32.const 5
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $6
  i32.store offset=36
  local.get $6
  i32.const 110
  call $std/array/Dim#set:height
  local.get $6
  i32.const 115
  call $std/array/Dim#set:width
  local.get $6
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $1
  i32.const 6
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $8
  i32.store offset=40
  local.get $8
  i32.const 100
  call $std/array/Dim#set:height
  local.get $8
  i32.const 120
  call $std/array/Dim#set:width
  local.get $8
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $1
  i32.const 7
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $9
  i32.store offset=44
  local.get $9
  i32.const 70
  call $std/array/Dim#set:height
  local.get $9
  i32.const 125
  call $std/array/Dim#set:width
  local.get $9
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $1
  i32.const 8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $10
  i32.store offset=48
  local.get $10
  i32.const 70
  call $std/array/Dim#set:height
  local.get $10
  i32.const 130
  call $std/array/Dim#set:width
  local.get $10
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $1
  i32.const 9
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $11
  i32.store offset=52
  local.get $11
  i32.const 100
  call $std/array/Dim#set:height
  local.get $11
  i32.const 135
  call $std/array/Dim#set:width
  local.get $11
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $1
  i32.const 10
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $12
  i32.store offset=56
  local.get $12
  i32.const 75
  call $std/array/Dim#set:height
  local.get $12
  i32.const 140
  call $std/array/Dim#set:width
  local.get $12
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $1
  i32.const 11
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $13
  i32.store offset=60
  local.get $13
  i32.const 70
  call $std/array/Dim#set:height
  local.get $13
  i32.const 140
  call $std/array/Dim#set:width
  local.get $13
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $1
  global.set $std/array/inputStabArr
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.const 2
  i32.const 20
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $0
  i32.store offset=12
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.tee $1
  i32.store offset=4
  local.get $0
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $14
  i32.store offset=64
  local.get $14
  i32.const 70
  call $std/array/Dim#set:height
  local.get $14
  i32.const 95
  call $std/array/Dim#set:width
  local.get $14
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $0
  i32.const 1
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $15
  i32.store offset=68
  local.get $15
  i32.const 70
  call $std/array/Dim#set:height
  local.get $15
  i32.const 125
  call $std/array/Dim#set:width
  local.get $15
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $0
  i32.const 2
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $16
  i32.store offset=72
  local.get $16
  i32.const 70
  call $std/array/Dim#set:height
  local.get $16
  i32.const 130
  call $std/array/Dim#set:width
  local.get $16
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $0
  i32.const 3
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $17
  i32.store offset=76
  local.get $17
  i32.const 70
  call $std/array/Dim#set:height
  local.get $17
  i32.const 140
  call $std/array/Dim#set:width
  local.get $17
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $0
  i32.const 4
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $18
  i32.store offset=80
  local.get $18
  i32.const 75
  call $std/array/Dim#set:height
  local.get $18
  i32.const 140
  call $std/array/Dim#set:width
  local.get $18
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $0
  i32.const 5
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $19
  i32.store offset=84
  local.get $19
  i32.const 80
  call $std/array/Dim#set:height
  local.get $19
  i32.const 110
  call $std/array/Dim#set:width
  local.get $19
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $0
  i32.const 6
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $20
  i32.store offset=88
  local.get $20
  i32.const 90
  call $std/array/Dim#set:height
  local.get $20
  i32.const 90
  call $std/array/Dim#set:width
  local.get $20
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $0
  i32.const 7
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $21
  i32.store offset=92
  local.get $21
  i32.const 100
  call $std/array/Dim#set:height
  local.get $21
  i32.const 80
  call $std/array/Dim#set:width
  local.get $21
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $0
  i32.const 8
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $22
  i32.store offset=96
  local.get $22
  i32.const 100
  call $std/array/Dim#set:height
  local.get $22
  i32.const 100
  call $std/array/Dim#set:width
  local.get $22
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $0
  i32.const 9
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $23
  i32.store offset=100
  local.get $23
  i32.const 100
  call $std/array/Dim#set:height
  local.get $23
  i32.const 120
  call $std/array/Dim#set:width
  local.get $23
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $0
  i32.const 10
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $24
  i32.store offset=104
  local.get $24
  i32.const 100
  call $std/array/Dim#set:height
  local.get $24
  i32.const 135
  call $std/array/Dim#set:width
  local.get $24
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $0
  i32.const 11
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  call $std/array/Dim#constructor
  local.tee $25
  i32.store offset=108
  local.get $25
  i32.const 110
  call $std/array/Dim#set:height
  local.get $25
  i32.const 115
  call $std/array/Dim#set:width
  local.get $25
  call $~lib/array/Array<std/array/Dim>#__uset
  local.get $0
  global.set $std/array/outputStabArr
  global.get $~lib/memory/__stack_pointer
  i32.const 3
  i32.const 2
  i32.const 8
  i32.const 7328
  call $~lib/rt/__newArray
  local.tee $0
  i32.store offset=12
  local.get $0
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<f32>#sort@varargs
  drop
  local.get $0
  i32.const 3
  i32.const 2
  i32.const 8
  i32.const 7392
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<f32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1089
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 2
  i32.const 8
  i32.const 7424
  call $~lib/rt/__newArray
  local.tee $1
  i32.store offset=4
  local.get $1
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<f32>#sort@varargs
  drop
  local.get $1
  i32.const 8
  i32.const 2
  i32.const 8
  i32.const 7488
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<f32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1093
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 3
  i32.const 11
  i32.const 7552
  call $~lib/rt/__newArray
  local.tee $26
  i32.store offset=112
  local.get $26
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<f64>#sort@varargs
  drop
  local.get $26
  i32.const 8
  i32.const 3
  i32.const 11
  i32.const 7680
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<f64>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1097
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 7776
  call $~lib/rt/__newArray
  local.tee $27
  i32.store offset=116
  local.get $27
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<i32>#sort@varargs
  drop
  local.get $27
  i32.const 5
  i32.const 2
  i32.const 3
  i32.const 7856
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1101
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 5
  i32.const 2
  i32.const 7
  i32.const 7904
  call $~lib/rt/__newArray
  local.tee $28
  i32.store offset=120
  local.get $28
  i32.const 0
  global.set $~argumentsLength
  i32.const 0
  call $~lib/array/Array<u32>#sort@varargs
  drop
  local.get $28
  i32.const 5
  i32.const 2
  i32.const 7
  i32.const 7984
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<u32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1105
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 8032
  call $~lib/rt/__newArray
  local.tee $29
  i32.store offset=124
  global.get $~lib/memory/__stack_pointer
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 8064
  call $~lib/rt/__newArray
  local.tee $31
  i32.store offset=128
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 8096
  call $~lib/rt/__newArray
  local.tee $32
  i32.store offset=132
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 8128
  call $~lib/rt/__newArray
  local.tee $33
  i32.store offset=136
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 8176
  call $~lib/rt/__newArray
  local.tee $34
  i32.store offset=140
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  call $std/array/createReverseOrderedArray
  local.tee $30
  i32.store offset=144
  global.get $~lib/memory/__stack_pointer
  i32.const 128
  call $std/array/createReverseOrderedArray
  local.tee $35
  i32.store offset=148
  global.get $~lib/memory/__stack_pointer
  i32.const 1024
  call $std/array/createReverseOrderedArray
  local.tee $36
  i32.store offset=152
  global.get $~lib/memory/__stack_pointer
  i32.const 10000
  call $std/array/createReverseOrderedArray
  local.tee $37
  i32.store offset=156
  global.get $~lib/memory/__stack_pointer
  i32.const 512
  call $std/array/createRandomOrderedArray
  local.tee $38
  i32.store offset=160
  local.get $29
  call $std/array/assertSortedDefault<i32>
  local.get $31
  call $std/array/assertSortedDefault<i32>
  local.get $31
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 8256
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1125
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $32
  call $std/array/assertSortedDefault<i32>
  local.get $32
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 8288
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1128
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $33
  call $std/array/assertSortedDefault<i32>
  local.get $33
  local.get $34
  i32.const 0
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1131
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $30
  call $std/array/assertSortedDefault<i32>
  local.get $30
  local.get $34
  i32.const 4
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1134
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $35
  call $std/array/assertSortedDefault<i32>
  local.get $35
  local.get $34
  i32.const 4
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1137
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $36
  call $std/array/assertSortedDefault<i32>
  local.get $36
  local.get $34
  i32.const 4
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1140
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $37
  call $std/array/assertSortedDefault<i32>
  local.get $37
  local.get $34
  i32.const 4
  call $std/array/isArraysEqual<i32>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1143
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $38
  call $std/array/assertSortedDefault<i32>
  call $std/array/assertStableSortedForComplexObjects
  global.get $~lib/memory/__stack_pointer
  i32.const 64
  call $std/array/createRandomOrderedArray
  local.tee $38
  i32.store offset=160
  global.get $~lib/memory/__stack_pointer
  i32.const 257
  call $std/array/createRandomOrderedArray
  local.tee $37
  i32.store offset=156
  local.get $38
  i32.const 8352
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $std/array/assertSorted<i32>
  local.get $38
  i32.const 8384
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $std/array/assertSorted<i32>
  local.get $37
  i32.const 8416
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $std/array/assertSorted<i32>
  local.get $37
  i32.const 8448
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $std/array/assertSorted<i32>
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  call $std/array/createReverseOrderedNestedArray
  local.tee $37
  i32.store offset=156
  local.get $37
  i32.const 8480
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $std/array/assertSorted<~lib/array/Array<i32>>
  global.get $~lib/memory/__stack_pointer
  i32.const 512
  call $std/array/createReverseOrderedElementsArray
  local.tee $37
  i32.store offset=156
  local.get $37
  i32.const 8512
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $std/array/assertSorted<std/array/Proxy<i32>>
  global.get $~lib/memory/__stack_pointer
  i32.const 7
  i32.const 2
  i32.const 31
  i32.const 8704
  call $~lib/rt/__newArray
  local.tee $38
  i32.store offset=160
  global.get $~lib/memory/__stack_pointer
  i32.const 7
  i32.const 2
  i32.const 31
  i32.const 8752
  call $~lib/rt/__newArray
  local.tee $36
  i32.store offset=152
  local.get $38
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $std/array/assertSorted<~lib/string/String|null>@varargs
  local.get $38
  local.get $36
  i32.const 0
  call $std/array/isArraysEqual<~lib/string/String|null>
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1182
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 400
  call $std/array/createRandomStringArray
  local.tee $37
  i32.store offset=156
  local.get $37
  i32.const 1
  global.set $~argumentsLength
  i32.const 0
  call $std/array/assertSorted<~lib/string/String>@varargs
  i32.const 2
  i32.const 0
  i32.const 35
  i32.const 8864
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  i32.const 8960
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=168
  local.get $41
  call $~lib/array/Array<bool>#join
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 8992
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1191
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 3
  i32.const 2
  i32.const 3
  i32.const 9040
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  i32.const 8672
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=168
  local.get $41
  call $~lib/array/Array<i32>#join
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 10848
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1192
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 3
  i32.const 2
  i32.const 7
  i32.const 10880
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  i32.const 10912
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=168
  local.get $41
  call $~lib/array/Array<u32>#join
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 10848
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1193
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 10944
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  i32.const 10976
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=168
  local.get $41
  call $~lib/array/Array<i32>#join
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 11008
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1194
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 6
  i32.const 3
  i32.const 11
  i32.const 11088
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  i32.const 11168
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=168
  local.get $41
  call $~lib/array/Array<f64>#join
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 12336
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1195
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 3
  i32.const 2
  i32.const 31
  i32.const 12480
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  i32.const 8672
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=168
  local.get $41
  call $~lib/array/Array<~lib/string/String|null>#join
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 12448
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1196
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 3
  i32.const 2
  i32.const 12
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $37
  i32.store offset=156
  global.get $~lib/memory/__stack_pointer
  local.get $37
  i32.load offset=4
  local.tee $36
  i32.store offset=152
  local.get $37
  i32.const 0
  i32.const 0
  i32.const 0
  call $std/array/Ref#constructor
  call $~lib/array/Array<std/array/Ref|null>#__uset
  local.get $37
  i32.const 1
  i32.const 0
  call $~lib/array/Array<std/array/Ref|null>#__uset
  local.get $37
  i32.const 2
  i32.const 0
  i32.const 0
  call $std/array/Ref#constructor
  call $~lib/array/Array<std/array/Ref|null>#__uset
  local.get $37
  local.tee $36
  i32.store offset=152
  local.get $36
  i32.const 8960
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=168
  local.get $41
  call $~lib/array/Array<std/array/Ref|null>#join
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 12576
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1198
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 9
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $37
  i32.store offset=156
  global.get $~lib/memory/__stack_pointer
  local.get $37
  i32.load offset=4
  local.tee $38
  i32.store offset=160
  local.get $37
  i32.const 0
  i32.const 0
  i32.const 0
  call $std/array/Ref#constructor
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $37
  i32.const 1
  i32.const 0
  i32.const 0
  call $std/array/Ref#constructor
  call $~lib/array/Array<std/array/Ref>#__uset
  local.get $37
  local.tee $38
  i32.store offset=160
  local.get $38
  i32.const 8960
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=168
  local.get $41
  call $~lib/array/Array<std/array/Ref>#join
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 12672
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1201
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 12768
  call $~lib/rt/__newArray
  local.tee $36
  i32.store offset=152
  global.get $~lib/memory/__stack_pointer
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 12800
  call $~lib/rt/__newArray
  local.tee $37
  i32.store offset=156
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 12832
  call $~lib/rt/__newArray
  local.tee $35
  i32.store offset=148
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 3
  i32.const 12864
  call $~lib/rt/__newArray
  local.tee $30
  i32.store offset=144
  local.get $36
  call $~lib/array/Array<i32>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 8672
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1211
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $37
  call $~lib/array/Array<i32>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 12448
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1212
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $35
  call $~lib/array/Array<i32>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 12912
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1213
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $30
  call $~lib/array/Array<i32>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 12944
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1214
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 3
  i32.const 0
  i32.const 36
  i32.const 12992
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  call $~lib/array/Array<i8>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 13024
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1216
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 3
  i32.const 0
  i32.const 36
  i32.const 13056
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  call $~lib/array/Array<i8>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 13088
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1217
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 3
  i32.const 1
  i32.const 10
  i32.const 13136
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  call $~lib/array/Array<u16>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 13168
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1218
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 2
  i32.const 1
  i32.const 37
  i32.const 13216
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  call $~lib/array/Array<i16>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 13248
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1219
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 13296
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  call $~lib/array/Array<i32>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 13328
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1220
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 3
  i32.const 3
  i32.const 38
  i32.const 13392
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  call $~lib/array/Array<u64>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 13440
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1221
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 5
  i32.const 3
  i32.const 39
  i32.const 13520
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  call $~lib/array/Array<i64>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 13584
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1222
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 7
  i32.const 2
  i32.const 31
  i32.const 13744
  call $~lib/rt/__newArray
  local.tee $38
  i32.store offset=160
  local.get $38
  call $~lib/array/Array<~lib/string/String|null>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 13792
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1229
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 4
  i32.const 2
  i32.const 31
  i32.const 13904
  call $~lib/rt/__newArray
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  call $~lib/array/Array<~lib/string/String|null>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 13952
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1230
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 26
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $33
  i32.store offset=136
  global.get $~lib/memory/__stack_pointer
  local.get $33
  i32.load offset=4
  local.tee $34
  i32.store offset=140
  local.get $33
  i32.const 0
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 13984
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $33
  i32.const 1
  i32.const 2
  i32.const 2
  i32.const 3
  i32.const 14016
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $33
  local.tee $34
  i32.store offset=140
  local.get $34
  call $~lib/array/Array<~lib/array/Array<i32>>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 14048
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1233
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 40
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $33
  i32.store offset=136
  global.get $~lib/memory/__stack_pointer
  local.get $33
  i32.load offset=4
  local.tee $32
  i32.store offset=132
  local.get $33
  i32.const 0
  i32.const 2
  i32.const 0
  i32.const 6
  i32.const 14096
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<u8>>#__uset
  local.get $33
  i32.const 1
  i32.const 2
  i32.const 0
  i32.const 6
  i32.const 14128
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<u8>>#__uset
  local.get $33
  local.tee $32
  i32.store offset=132
  local.get $32
  call $~lib/array/Array<~lib/array/Array<u8>>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 14048
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1236
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 1
  i32.const 2
  i32.const 42
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $33
  i32.store offset=136
  global.get $~lib/memory/__stack_pointer
  local.get $33
  i32.load offset=4
  local.tee $31
  i32.store offset=128
  local.get $33
  i32.const 0
  global.get $~lib/memory/__stack_pointer
  i32.const 1
  i32.const 2
  i32.const 41
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $29
  i32.store offset=124
  global.get $~lib/memory/__stack_pointer
  local.get $29
  i32.load offset=4
  local.tee $28
  i32.store offset=120
  local.get $29
  i32.const 0
  i32.const 1
  i32.const 2
  i32.const 7
  i32.const 14160
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<u32>>#__uset
  local.get $29
  call $~lib/array/Array<~lib/array/Array<~lib/array/Array<u32>>>#__uset
  local.get $33
  local.tee $31
  i32.store offset=128
  local.get $31
  call $~lib/array/Array<~lib/array/Array<~lib/array/Array<u32>>>#toString
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  i32.const 12448
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=8
  local.get $41
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1239
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 26
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $31
  i32.store offset=128
  global.get $~lib/memory/__stack_pointer
  local.get $31
  i32.load offset=4
  local.tee $32
  i32.store offset=132
  local.get $31
  i32.const 0
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 14192
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $31
  i32.const 1
  i32.const 3
  i32.const 2
  i32.const 3
  i32.const 14224
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $31
  i32.const 2
  i32.const 3
  i32.const 2
  i32.const 3
  i32.const 14256
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $31
  i32.const 3
  i32.const 3
  i32.const 2
  i32.const 3
  i32.const 14288
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $31
  local.tee $32
  i32.store offset=132
  global.get $~lib/memory/__stack_pointer
  local.get $32
  call $~lib/array/Array<~lib/array/Array<i32>>#flat
  local.tee $31
  i32.store offset=128
  local.get $31
  call $~lib/array/Array<i32>#get:length
  i32.const 10
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1246
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $34
  loop $for-loop|7
   local.get $34
   i32.const 10
   i32.lt_s
   local.set $38
   local.get $38
   if
    local.get $31
    local.get $34
    call $~lib/array/Array<i32>#__get
    local.get $34
    i32.eq
    i32.eqz
    if
     i32.const 0
     i32.const 528
     i32.const 1248
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $34
    i32.const 1
    i32.add
    local.set $34
    br $for-loop|7
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.const 2
  i32.const 43
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $34
  i32.store offset=140
  global.get $~lib/memory/__stack_pointer
  local.get $34
  i32.load offset=4
  local.tee $38
  i32.store offset=160
  local.get $34
  i32.const 0
  i32.const 1
  i32.const 2
  i32.const 31
  i32.const 14352
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset
  local.get $34
  i32.const 1
  i32.const 3
  i32.const 2
  i32.const 31
  i32.const 14448
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset
  local.get $34
  i32.const 2
  i32.const 3
  i32.const 2
  i32.const 31
  i32.const 14576
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset
  local.get $34
  i32.const 3
  i32.const 1
  i32.const 2
  i32.const 31
  i32.const 14640
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#__uset
  local.get $34
  local.tee $38
  i32.store offset=160
  global.get $~lib/memory/__stack_pointer
  local.get $38
  call $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#flat
  local.tee $34
  i32.store offset=140
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.const 2
  i32.const 31
  i32.const 14672
  call $~lib/rt/__newArray
  local.tee $35
  i32.store offset=148
  local.get $34
  call $~lib/array/Array<~lib/string/String|null>#get:length
  i32.const 8
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1254
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  local.set $30
  loop $for-loop|8
   local.get $30
   local.get $35
   call $~lib/array/Array<~lib/string/String|null>#get:length
   i32.lt_s
   local.set $37
   local.get $37
   if
    local.get $34
    local.get $30
    call $~lib/array/Array<~lib/string/String|null>#__get
    local.set $41
    global.get $~lib/memory/__stack_pointer
    local.get $41
    i32.store
    local.get $41
    local.get $35
    local.get $30
    call $~lib/array/Array<~lib/string/String|null>#__get
    local.set $41
    global.get $~lib/memory/__stack_pointer
    local.get $41
    i32.store offset=8
    local.get $41
    call $~lib/string/String.__eq
    i32.eqz
    if
     i32.const 0
     i32.const 528
     i32.const 1256
     i32.const 5
     call $~lib/builtins/abort
     unreachable
    end
    local.get $30
    i32.const 1
    i32.add
    local.set $30
    br $for-loop|8
   end
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 26
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $30
  i32.store offset=144
  global.get $~lib/memory/__stack_pointer
  local.get $30
  i32.load offset=4
  local.tee $37
  i32.store offset=156
  local.get $30
  i32.const 0
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 14736
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $30
  i32.const 1
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 14768
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $30
  local.tee $37
  i32.store offset=156
  local.get $37
  call $~lib/array/Array<~lib/array/Array<i32>>#flat
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<i32>#get:length
  i32.const 0
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1260
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 2
  i32.const 26
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $30
  i32.store offset=144
  global.get $~lib/memory/__stack_pointer
  local.get $30
  i32.load offset=4
  local.tee $36
  i32.store offset=152
  local.get $30
  i32.const 0
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 14800
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $30
  i32.const 1
  i32.const 1
  i32.const 2
  i32.const 3
  i32.const 14832
  call $~lib/rt/__newArray
  call $~lib/array/Array<~lib/array/Array<i32>>#__uset
  local.get $30
  local.tee $36
  i32.store offset=152
  global.get $~lib/memory/__stack_pointer
  local.get $36
  i32.const 14864
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store offset=164
  local.get $41
  call $~lib/array/Array<~lib/array/Array<i32>>#map<~lib/array/Array<i32>>
  local.set $41
  global.get $~lib/memory/__stack_pointer
  local.get $41
  i32.store
  local.get $41
  call $~lib/array/Array<~lib/array/Array<i32>>#flat
  local.tee $30
  i32.store offset=144
  local.get $30
  call $~lib/array/Array<i32>#get:length
  i32.const 4
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1270
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $30
  i32.const 0
  call $~lib/array/Array<i32>#__get
  i32.const 1
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1271
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $30
  i32.const 1
  call $~lib/array/Array<i32>#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1272
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $30
  i32.const 2
  call $~lib/array/Array<i32>#__get
  i32.const 2
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1273
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  local.get $30
  i32.const 3
  call $~lib/array/Array<i32>#__get
  i32.const 3
  i32.eq
  i32.eqz
  if
   i32.const 0
   i32.const 528
   i32.const 1274
   i32.const 3
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 0
  global.set $std/array/arr
  i32.const 0
  global.set $std/array/inputStabArr
  i32.const 0
  global.set $std/array/outputStabArr
  global.get $~lib/memory/__heap_base
  global.set $~lib/memory/__stack_pointer
  call $~lib/rt/itcms/__collect
  global.get $~lib/memory/__stack_pointer
  i32.const 172
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/array/Array<i32>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 3
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<i32>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<i32>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<i32>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<i32>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 32
   i32.const 80
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store offset=4
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $0
  local.get $5
  call $~lib/array/Array<i32>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<i32>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<i32>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#set:length_
  local.get $0
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $std/array/Ref#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 4
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  local.get $1
  call $std/array/Ref#set:v
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/arraybuffer/ArrayBufferView#constructor (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 2
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $0
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $1
  i32.const 1073741820
  local.get $2
  i32.shr_u
  i32.gt_u
  if
   i32.const 32
   i32.const 576
   i32.const 19
   i32.const 57
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $1
  local.get $2
  i32.shl
  local.tee $1
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $3
  i32.store offset=4
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $0
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#set:buffer
  local.get $0
  local.get $3
  call $~lib/arraybuffer/ArrayBufferView#set:dataStart
  local.get $0
  local.get $1
  call $~lib/arraybuffer/ArrayBufferView#set:byteLength
  local.get $0
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/typedarray/Uint8Array#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.const 5
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $1
  i32.const 0
  call $~lib/arraybuffer/ArrayBufferView#constructor
  local.tee $0
  i32.store
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/rt/__newArray (param $0 i32) (param $1 i32) (param $2 i32) (param $3 i32) (result i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  local.get $1
  i32.shl
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 0
  local.get $3
  call $~lib/rt/__newBuffer
  local.tee $5
  i32.store
  i32.const 16
  local.get $2
  call $~lib/rt/itcms/__new
  local.set $6
  local.get $6
  local.get $5
  i32.store
  local.get $6
  local.get $5
  i32.const 0
  call $~lib/rt/itcms/__link
  local.get $6
  local.get $5
  i32.store offset=4
  local.get $6
  local.get $4
  i32.store offset=8
  local.get $6
  local.get $0
  i32.store offset=12
  local.get $6
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $std/array/internalCapacity<i32> (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load
  local.tee $1
  i32.store
  local.get $1
  call $~lib/arraybuffer/ArrayBuffer#get:byteLength
  i32.const 2
  i32.shr_s
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<i32>#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $2
  local.get $1
  i32.load offset=12
  local.set $3
  local.get $2
  local.get $3
  i32.add
  local.set $4
  local.get $4
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 32
   i32.const 80
   i32.const 272
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $5
  i32.store
  local.get $5
  i32.load offset=4
  local.set $6
  local.get $2
  i32.const 2
  i32.shl
  local.set $7
  i32.const 0
  drop
  local.get $6
  local.get $0
  i32.load offset=4
  local.get $7
  memory.copy
  local.get $6
  local.get $7
  i32.add
  local.get $1
  i32.load offset=4
  local.get $3
  i32.const 2
  i32.shl
  memory.copy
  local.get $5
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $~lib/array/Array<i32>#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $1
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $2
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $2
  local.get $2
  local.get $1
  i32.sub
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $6
  i32.store
  local.get $6
  i32.load offset=4
  local.set $7
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.set $8
  i32.const 0
  drop
  local.get $7
  local.get $8
  local.get $3
  i32.const 2
  i32.shl
  memory.copy
  local.get $6
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/array/Array<i32>#splice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $3
   local.get $1
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $1
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  local.tee $4
  local.get $3
  local.get $1
  i32.sub
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  local.tee $5
  i32.const 0
  local.tee $4
  local.get $5
  local.get $4
  i32.gt_s
  select
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $6
  i32.store
  local.get $6
  i32.load offset=4
  local.set $7
  local.get $0
  i32.load offset=4
  local.set $8
  local.get $8
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.set $9
  local.get $7
  local.get $9
  local.get $2
  i32.const 2
  i32.shl
  memory.copy
  local.get $1
  local.get $2
  i32.add
  local.set $10
  local.get $3
  local.get $10
  i32.ne
  if
   local.get $9
   local.get $8
   local.get $10
   i32.const 2
   i32.shl
   i32.add
   local.get $3
   local.get $10
   i32.sub
   i32.const 2
   i32.shl
   memory.copy
  end
  local.get $0
  local.get $3
  local.get $2
  i32.sub
  call $~lib/array/Array<i32>#set:length_
  local.get $6
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/array/Array<std/array/Ref>#splice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $3
   local.get $1
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $1
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  local.tee $4
  local.get $3
  local.get $1
  i32.sub
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  local.tee $5
  i32.const 0
  local.tee $4
  local.get $5
  local.get $4
  i32.gt_s
  select
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  i32.const 9
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $6
  i32.store
  local.get $6
  i32.load offset=4
  local.set $7
  local.get $0
  i32.load offset=4
  local.set $8
  local.get $8
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.set $9
  local.get $7
  local.get $9
  local.get $2
  i32.const 2
  i32.shl
  memory.copy
  local.get $1
  local.get $2
  i32.add
  local.set $10
  local.get $3
  local.get $10
  i32.ne
  if
   local.get $9
   local.get $8
   local.get $10
   i32.const 2
   i32.shl
   i32.add
   local.get $3
   local.get $10
   i32.sub
   i32.const 2
   i32.shl
   memory.copy
  end
  local.get $0
  local.get $3
  local.get $2
  i32.sub
  call $~lib/array/Array<std/array/Ref>#set:length_
  local.get $6
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/array/Array<std/array/Ref>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 320
   i32.const 80
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $2
  i32.store
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $2
  i32.eqz
  if
   i32.const 5392
   i32.const 80
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<std/array/Ref|null>#splice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $3
   local.get $1
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $1
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  local.tee $4
  local.get $3
  local.get $1
  i32.sub
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  local.tee $5
  i32.const 0
  local.tee $4
  local.get $5
  local.get $4
  i32.gt_s
  select
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  i32.const 12
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $6
  i32.store
  local.get $6
  i32.load offset=4
  local.set $7
  local.get $0
  i32.load offset=4
  local.set $8
  local.get $8
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.set $9
  local.get $7
  local.get $9
  local.get $2
  i32.const 2
  i32.shl
  memory.copy
  local.get $1
  local.get $2
  i32.add
  local.set $10
  local.get $3
  local.get $10
  i32.ne
  if
   local.get $9
   local.get $8
   local.get $10
   i32.const 2
   i32.shl
   i32.add
   local.get $3
   local.get $10
   i32.sub
   i32.const 2
   i32.shl
   memory.copy
  end
  local.get $0
  local.get $3
  local.get $2
  i32.sub
  call $~lib/array/Array<std/array/Ref|null>#set:length_
  local.get $6
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/array/Array<std/array/Ref|null>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 320
   i32.const 80
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $2
  i32.store
  i32.const 1
  drop
  i32.const 1
  i32.eqz
  drop
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<i32>#map<f32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f32)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  i32.const 8
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store
  local.get $3
  i32.load offset=4
  local.set $4
  i32.const 0
  local.set $5
  loop $for-loop|0
   local.get $5
   local.get $2
   local.tee $6
   local.get $0
   i32.load offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $6
   local.get $6
   if
    local.get $0
    i32.load offset=4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $5
    local.get $0
    i32.const 3
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_f32)
    local.set $8
    local.get $4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    local.get $8
    f32.store
    i32.const 0
    drop
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $3
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/array/Array<i32>#map<i32> (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $2
  global.get $~lib/memory/__stack_pointer
  local.get $2
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $3
  i32.store
  local.get $3
  i32.load offset=4
  local.set $4
  i32.const 0
  local.set $5
  loop $for-loop|0
   local.get $5
   local.get $2
   local.tee $6
   local.get $0
   i32.load offset=12
   local.tee $7
   local.get $6
   local.get $7
   i32.lt_s
   select
   i32.lt_s
   local.set $6
   local.get $6
   if
    local.get $0
    i32.load offset=4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.get $5
    local.get $0
    i32.const 3
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    local.set $7
    local.get $4
    local.get $5
    i32.const 2
    i32.shl
    i32.add
    local.get $7
    i32.store
    i32.const 0
    drop
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $3
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $~lib/array/Array<i32>#filter (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.const 2
  i32.const 3
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $2
  i32.store
  i32.const 0
  local.set $3
  local.get $0
  i32.load offset=12
  local.set $4
  loop $for-loop|0
   local.get $3
   local.get $4
   local.tee $5
   local.get $0
   i32.load offset=12
   local.tee $6
   local.get $5
   local.get $6
   i32.lt_s
   select
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $0
    i32.load offset=4
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $6
    local.get $6
    local.get $3
    local.get $0
    i32.const 3
    global.set $~argumentsLength
    local.get $1
    i32.load
    call_indirect $0 (type $i32_i32_i32_=>_i32)
    if
     local.get $2
     local.get $6
     call $~lib/array/Array<i32>#push
     drop
    end
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  local.get $2
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $std/array/Dim#constructor (param $0 i32) (result i32)
  (local $1 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.const 19
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  i32.const 0
  call $std/array/Dim#set:height
  local.get $0
  i32.const 0
  call $std/array/Dim#set:width
  local.get $0
  local.set $1
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/array/Array<f32>#sort@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<f32>|inlined.0 (result i32)
    i32.const 0
    drop
    i32.const 1
    drop
    i32.const 4
    i32.const 4
    i32.eq
    drop
    i32.const 7360
    br $~lib/util/sort/COMPARATOR<f32>|inlined.0
   end
   local.tee $1
   i32.store
  end
  local.get $0
  local.get $1
  call $~lib/array/Array<f32>#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<f64>#sort@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<f64>|inlined.0 (result i32)
    i32.const 0
    drop
    i32.const 1
    drop
    i32.const 8
    i32.const 4
    i32.eq
    drop
    i32.const 7648
    br $~lib/util/sort/COMPARATOR<f64>|inlined.0
   end
   local.tee $1
   i32.store
  end
  local.get $0
  local.get $1
  call $~lib/array/Array<f64>#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<i32>#sort@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<i32>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 4
    i32.const 4
    i32.le_u
    drop
    i32.const 7824
    br $~lib/util/sort/COMPARATOR<i32>|inlined.0
   end
   local.tee $1
   i32.store
  end
  local.get $0
  local.get $1
  call $~lib/array/Array<i32>#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<u32>#sort@varargs (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $1of1
   block $0of1
    block $outOfRange
     global.get $~argumentsLength
     br_table $0of1 $1of1 $outOfRange
    end
    unreachable
   end
   global.get $~lib/memory/__stack_pointer
   block $~lib/util/sort/COMPARATOR<u32>|inlined.0 (result i32)
    i32.const 1
    drop
    i32.const 0
    drop
    i32.const 7952
    br $~lib/util/sort/COMPARATOR<u32>|inlined.0
   end
   local.tee $1
   i32.store
  end
  local.get $0
  local.get $1
  call $~lib/array/Array<u32>#sort
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $std/array/createReverseOrderedArray (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/array/Array<i32>#constructor
  local.tee $1
  i32.store
  i32.const 0
  local.set $2
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.lt_s
   local.set $3
   local.get $3
   if
    local.get $1
    local.get $2
    local.get $0
    i32.const 1
    i32.sub
    local.get $2
    i32.sub
    call $~lib/array/Array<i32>#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $1
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $std/array/createRandomOrderedArray (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/array/Array<i32>#constructor
  local.tee $1
  i32.store
  i32.const 0
  local.set $2
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.lt_s
   local.set $3
   local.get $3
   if
    local.get $1
    local.get $2
    call $~lib/math/NativeMath.random
    local.get $0
    f64.convert_i32_s
    f64.mul
    i32.trunc_sat_f64_s
    call $~lib/array/Array<i32>#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $1
  local.set $4
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $4
 )
 (func $~lib/array/Array<std/array/Dim>#slice (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.load offset=12
  local.set $3
  local.get $1
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $1
   local.get $3
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $1
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $1
  local.get $2
  i32.const 0
  i32.lt_s
  if (result i32)
   local.get $2
   local.get $3
   i32.add
   local.tee $4
   i32.const 0
   local.tee $5
   local.get $4
   local.get $5
   i32.gt_s
   select
  else
   local.get $2
   local.tee $5
   local.get $3
   local.tee $4
   local.get $5
   local.get $4
   i32.lt_s
   select
  end
  local.set $2
  local.get $2
  local.get $1
  i32.sub
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.set $3
  global.get $~lib/memory/__stack_pointer
  local.get $3
  i32.const 2
  i32.const 20
  i32.const 0
  call $~lib/rt/__newArray
  local.tee $6
  i32.store
  local.get $6
  i32.load offset=4
  local.set $7
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  local.set $8
  i32.const 1
  drop
  i32.const 0
  local.set $4
  local.get $3
  i32.const 2
  i32.shl
  local.set $5
  loop $while-continue|0
   local.get $4
   local.get $5
   i32.lt_u
   local.set $9
   local.get $9
   if
    local.get $8
    local.get $4
    i32.add
    i32.load
    local.set $10
    local.get $7
    local.get $4
    i32.add
    local.get $10
    i32.store
    local.get $6
    local.get $10
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $4
    i32.const 4
    i32.add
    local.set $4
    br $while-continue|0
   end
  end
  local.get $6
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/array/Array<std/array/Dim>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 320
   i32.const 80
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $2
  i32.store
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $2
  i32.eqz
  if
   i32.const 5392
   i32.const 80
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 26
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<i32>>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<i32>>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<i32>>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/array/Array<i32>>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 32
   i32.const 80
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store offset=4
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $0
  local.get $5
  call $~lib/array/Array<~lib/array/Array<i32>>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<~lib/array/Array<i32>>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<~lib/array/Array<i32>>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/array/Array<i32>>#set:length_
  local.get $0
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $std/array/createReverseOrderedNestedArray (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  local.get $0
  call $~lib/array/Array<~lib/array/Array<i32>>#constructor
  local.tee $1
  i32.store
  i32.const 0
  local.set $2
  loop $for-loop|0
   local.get $2
   local.get $0
   i32.lt_s
   local.set $3
   local.get $3
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 0
    i32.const 1
    call $~lib/array/Array<i32>#constructor
    local.tee $4
    i32.store offset=4
    local.get $4
    i32.const 0
    local.get $0
    i32.const 1
    i32.sub
    local.get $2
    i32.sub
    call $~lib/array/Array<i32>#__set
    local.get $1
    local.get $2
    local.get $4
    call $~lib/array/Array<~lib/array/Array<i32>>#__set
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $1
  local.set $5
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $5
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 320
   i32.const 80
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $2
  i32.store
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $2
  i32.eqz
  if
   i32.const 5392
   i32.const 80
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 29
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<std/array/Proxy<i32>>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<std/array/Proxy<i32>>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<std/array/Proxy<i32>>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<std/array/Proxy<i32>>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 32
   i32.const 80
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store offset=4
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $0
  local.get $5
  call $~lib/array/Array<std/array/Proxy<i32>>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<std/array/Proxy<i32>>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<std/array/Proxy<i32>>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<std/array/Proxy<i32>>#set:length_
  local.get $0
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $std/array/Proxy<i32>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.const 28
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  local.get $1
  call $std/array/Proxy<i32>#set:x
  local.get $0
  local.set $2
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $2
 )
 (func $~lib/array/Array<std/array/Proxy<i32>>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 320
   i32.const 80
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $2
  i32.store
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $2
  i32.eqz
  if
   i32.const 5392
   i32.const 80
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<~lib/string/String|null>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 320
   i32.const 80
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $2
  i32.store
  i32.const 1
  drop
  i32.const 1
  i32.eqz
  drop
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/array/Array<~lib/string/String>#constructor (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $0
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 16
   i32.const 33
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
  end
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#set:buffer
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#set:dataStart
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#set:byteLength
  local.get $0
  i32.const 0
  call $~lib/array/Array<~lib/string/String>#set:length_
  local.get $1
  i32.const 1073741820
  i32.const 2
  i32.shr_u
  i32.gt_u
  if
   i32.const 32
   i32.const 80
   i32.const 70
   i32.const 60
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  local.tee $2
  i32.const 8
  local.tee $3
  local.get $2
  local.get $3
  i32.gt_u
  select
  i32.const 2
  i32.shl
  local.set $4
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store offset=4
  i32.const 2
  global.get $~lib/shared/runtime/Runtime.Incremental
  i32.ne
  drop
  local.get $0
  local.get $5
  call $~lib/array/Array<~lib/string/String>#set:buffer
  local.get $0
  local.get $5
  call $~lib/array/Array<~lib/string/String>#set:dataStart
  local.get $0
  local.get $4
  call $~lib/array/Array<~lib/string/String>#set:byteLength
  local.get $0
  local.get $1
  call $~lib/array/Array<~lib/string/String>#set:length_
  local.get $0
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/string/String#charAt (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  call $~lib/string/String#get:length
  i32.ge_u
  if
   i32.const 8672
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
  i32.store16
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/string/String#concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $2
  local.get $1
  call $~lib/string/String#get:length
  i32.const 1
  i32.shl
  local.set $3
  local.get $2
  local.get $3
  i32.add
  local.set $4
  local.get $4
  i32.const 0
  i32.eq
  if
   i32.const 8672
   local.set $6
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $6
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $4
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $5
  i32.store
  local.get $5
  local.get $0
  local.get $2
  memory.copy
  local.get $5
  local.get $2
  i32.add
  local.get $1
  local.get $3
  memory.copy
  local.get $5
  local.set $6
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $6
 )
 (func $~lib/array/Array<~lib/string/String>#__get (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  local.get $0
  i32.load offset=12
  i32.ge_u
  if
   i32.const 320
   i32.const 80
   i32.const 114
   i32.const 42
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  i32.load offset=4
  local.get $1
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $2
  i32.store
  i32.const 1
  drop
  i32.const 0
  i32.eqz
  drop
  local.get $2
  i32.eqz
  if
   i32.const 5392
   i32.const 80
   i32.const 118
   i32.const 40
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/string/String#substring (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  call $~lib/string/String#get:length
  local.set $3
  local.get $1
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.tee $5
  local.get $3
  local.tee $4
  local.get $5
  local.get $4
  i32.lt_s
  select
  local.set $6
  local.get $2
  local.tee $4
  i32.const 0
  local.tee $5
  local.get $4
  local.get $5
  i32.gt_s
  select
  local.tee $5
  local.get $3
  local.tee $4
  local.get $5
  local.get $4
  i32.lt_s
  select
  local.set $7
  local.get $6
  local.tee $4
  local.get $7
  local.tee $5
  local.get $4
  local.get $5
  i32.lt_s
  select
  i32.const 1
  i32.shl
  local.set $8
  local.get $6
  local.tee $5
  local.get $7
  local.tee $4
  local.get $5
  local.get $4
  i32.gt_s
  select
  i32.const 1
  i32.shl
  local.set $9
  local.get $9
  local.get $8
  i32.sub
  local.set $10
  local.get $10
  i32.eqz
  if
   i32.const 8672
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $8
  i32.eqz
  if (result i32)
   local.get $9
   local.get $3
   i32.const 1
   i32.shl
   i32.eq
  else
   i32.const 0
  end
  if
   local.get $0
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $10
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $11
  i32.store
  local.get $11
  local.get $0
  local.get $8
  i32.add
  local.get $10
  memory.copy
  local.get $11
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
 )
 (func $~lib/util/string/joinBooleanArray (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  local.get $3
  i32.eqz
  if
   i32.const 8896
   i32.const 8928
   local.get $0
   i32.load8_u
   select
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  local.get $2
  call $~lib/string/String#get:length
  local.set $4
  i32.const 5
  local.set $5
  local.get $5
  local.get $4
  i32.add
  local.get $3
  i32.mul
  local.get $5
  i32.add
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $7
  i32.store
  i32.const 0
  local.set $8
  i32.const 0
  local.set $10
  loop $for-loop|1
   local.get $10
   local.get $3
   i32.lt_s
   local.set $12
   local.get $12
   if
    local.get $0
    local.get $10
    i32.add
    i32.load8_u
    local.set $9
    i32.const 4
    local.get $9
    i32.eqz
    i32.add
    local.set $5
    local.get $7
    local.get $8
    i32.const 1
    i32.shl
    i32.add
    i32.const 8896
    i32.const 8928
    local.get $9
    select
    local.get $5
    i32.const 1
    i32.shl
    memory.copy
    local.get $8
    local.get $5
    i32.add
    local.set $8
    local.get $4
    if
     local.get $7
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $4
     i32.const 1
     i32.shl
     memory.copy
     local.get $8
     local.get $4
     i32.add
     local.set $8
    end
    local.get $10
    i32.const 1
    i32.add
    local.set $10
    br $for-loop|1
   end
  end
  local.get $0
  local.get $3
  i32.add
  i32.load8_u
  local.set $9
  i32.const 4
  local.get $9
  i32.eqz
  i32.add
  local.set $5
  local.get $7
  local.get $8
  i32.const 1
  i32.shl
  i32.add
  i32.const 8896
  i32.const 8928
  local.get $9
  select
  local.get $5
  i32.const 1
  i32.shl
  memory.copy
  local.get $8
  local.get $5
  i32.add
  local.set $8
  local.get $6
  local.get $8
  i32.gt_s
  if
   local.get $7
   i32.const 0
   local.get $8
   call $~lib/string/String#substring
   local.set $13
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $13
   return
  end
  local.get $7
  local.set $13
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $13
 )
 (func $~lib/util/number/itoa32 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 9072
   i32.const 9200
   i32.const 373
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.eqz
  if
   i32.const 9264
   local.set $8
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $8
   return
  end
  local.get $0
  i32.const 31
  i32.shr_u
  i32.const 1
  i32.shl
  local.set $2
  local.get $2
  if
   i32.const 0
   local.get $0
   i32.sub
   local.set $0
  end
  local.get $1
  i32.const 10
  i32.eq
  if
   local.get $0
   call $~lib/util/number/decimalCount32
   local.set $4
   global.get $~lib/memory/__stack_pointer
   local.get $4
   i32.const 1
   i32.shl
   local.get $2
   i32.add
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store
   local.get $3
   local.get $2
   i32.add
   local.set $7
   local.get $0
   local.set $6
   local.get $4
   local.set $5
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $7
   local.get $6
   local.get $5
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $1
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $0
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.const 1
    i32.shl
    local.get $2
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.store
    local.get $3
    local.get $2
    i32.add
    local.set $7
    local.get $0
    local.set $6
    local.get $4
    local.set $5
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $7
    local.get $6
    i64.extend_i32_u
    local.get $5
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $0
    local.set $4
    local.get $4
    i64.extend_i32_u
    local.get $1
    call $~lib/util/number/ulog_base
    local.set $7
    global.get $~lib/memory/__stack_pointer
    local.get $7
    i32.const 1
    i32.shl
    local.get $2
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.store
    local.get $3
    local.get $2
    i32.add
    local.get $4
    i64.extend_i32_u
    local.get $7
    local.get $1
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $2
  if
   local.get $3
   i32.const 45
   i32.store16
  end
  local.get $3
  local.set $8
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $8
 )
 (func $~lib/util/string/joinIntegerArray<i32> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $3
  i32.eqz
  if
   local.get $0
   i32.load
   local.set $4
   i32.const 1
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   local.get $4
   i32.const 10
   call $~lib/util/number/itoa32
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $2
  call $~lib/string/String#get:length
  local.set $5
  i32.const 11
  local.get $5
  i32.add
  local.get $3
  i32.mul
  i32.const 11
  i32.add
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $7
  i32.store
  i32.const 0
  local.set $8
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $3
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $9
    local.get $8
    local.get $7
    local.get $8
    i32.const 1
    i32.shl
    i32.add
    local.get $9
    call $~lib/util/number/itoa_buffered<i32>
    i32.add
    local.set $8
    local.get $5
    if
     local.get $7
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $5
     i32.const 1
     i32.shl
     memory.copy
     local.get $8
     local.get $5
     i32.add
     local.set $8
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $0
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $9
  local.get $8
  local.get $7
  local.get $8
  i32.const 1
  i32.shl
  i32.add
  local.get $9
  call $~lib/util/number/itoa_buffered<i32>
  i32.add
  local.set $8
  local.get $6
  local.get $8
  i32.gt_s
  if
   local.get $7
   i32.const 0
   local.get $8
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/util/number/utoa32 (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 9072
   i32.const 9200
   i32.const 350
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.eqz
  if
   i32.const 9264
   local.set $7
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $7
   return
  end
  local.get $1
  i32.const 10
  i32.eq
  if
   local.get $0
   call $~lib/util/number/decimalCount32
   local.set $3
   global.get $~lib/memory/__stack_pointer
   local.get $3
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $2
   i32.store
   local.get $2
   local.set $6
   local.get $0
   local.set $5
   local.get $3
   local.set $4
   i32.const 0
   i32.const 1
   i32.ge_s
   drop
   local.get $6
   local.get $5
   local.get $4
   call $~lib/util/number/utoa32_dec_lut
  else
   local.get $1
   i32.const 16
   i32.eq
   if
    i32.const 31
    local.get $0
    i32.clz
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store
    local.get $2
    local.set $6
    local.get $0
    local.set $5
    local.get $3
    local.set $4
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $6
    local.get $5
    i64.extend_i32_u
    local.get $4
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $0
    i64.extend_i32_u
    local.get $1
    call $~lib/util/number/ulog_base
    local.set $3
    global.get $~lib/memory/__stack_pointer
    local.get $3
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store
    local.get $2
    local.get $0
    i64.extend_i32_u
    local.get $3
    local.get $1
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $2
  local.set $7
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $7
 )
 (func $~lib/util/string/joinIntegerArray<u32> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $3
  i32.eqz
  if
   local.get $0
   i32.load
   local.set $4
   i32.const 0
   drop
   i32.const 4
   i32.const 4
   i32.le_u
   drop
   local.get $4
   i32.const 10
   call $~lib/util/number/utoa32
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $2
  call $~lib/string/String#get:length
  local.set $5
  i32.const 10
  local.get $5
  i32.add
  local.get $3
  i32.mul
  i32.const 10
  i32.add
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $7
  i32.store
  i32.const 0
  local.set $8
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $3
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $9
    local.get $8
    local.get $7
    local.get $8
    i32.const 1
    i32.shl
    i32.add
    local.get $9
    call $~lib/util/number/itoa_buffered<u32>
    i32.add
    local.set $8
    local.get $5
    if
     local.get $7
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $5
     i32.const 1
     i32.shl
     memory.copy
     local.get $8
     local.get $5
     i32.add
     local.set $8
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $0
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.set $9
  local.get $8
  local.get $7
  local.get $8
  i32.const 1
  i32.shl
  i32.add
  local.get $9
  call $~lib/util/number/itoa_buffered<u32>
  i32.add
  local.set $8
  local.get $6
  local.get $8
  i32.gt_s
  if
   local.get $7
   i32.const 0
   local.get $8
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/util/number/dtoa (param $0 f64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  f64.const 0
  f64.eq
  if
   i32.const 11200
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  local.get $0
  local.get $0
  f64.sub
  f64.const 0
  f64.eq
  i32.eqz
  if
   local.get $0
   local.get $0
   f64.ne
   if
    i32.const 11232
    local.set $3
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    local.get $3
    return
   end
   i32.const 11264
   i32.const 11312
   local.get $0
   f64.const 0
   f64.lt
   select
   local.set $3
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $3
   return
  end
  i32.const 11344
  local.get $0
  call $~lib/util/number/dtoa_core
  i32.const 1
  i32.shl
  local.set $1
  global.get $~lib/memory/__stack_pointer
  local.get $1
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $2
  i32.store
  local.get $2
  i32.const 11344
  local.get $1
  memory.copy
  local.get $2
  local.set $3
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
 (func $~lib/util/string/joinFloatArray<f64> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 f64)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $3
  i32.eqz
  if
   local.get $0
   f64.load
   call $~lib/util/number/dtoa
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $2
  call $~lib/string/String#get:length
  local.set $4
  i32.const 28
  local.get $4
  i32.add
  local.get $3
  i32.mul
  i32.const 28
  i32.add
  local.set $5
  global.get $~lib/memory/__stack_pointer
  local.get $5
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store
  i32.const 0
  local.set $7
  i32.const 0
  local.set $9
  loop $for-loop|0
   local.get $9
   local.get $3
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $0
    local.get $9
    i32.const 3
    i32.shl
    i32.add
    f64.load
    local.set $8
    local.get $7
    local.get $6
    local.get $7
    i32.const 1
    i32.shl
    i32.add
    local.get $8
    call $~lib/util/number/dtoa_buffered
    i32.add
    local.set $7
    local.get $4
    if
     local.get $6
     local.get $7
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $4
     i32.const 1
     i32.shl
     memory.copy
     local.get $7
     local.get $4
     i32.add
     local.set $7
    end
    local.get $9
    i32.const 1
    i32.add
    local.set $9
    br $for-loop|0
   end
  end
  local.get $0
  local.get $3
  i32.const 3
  i32.shl
  i32.add
  f64.load
  local.set $8
  local.get $7
  local.get $6
  local.get $7
  i32.const 1
  i32.shl
  i32.add
  local.get $8
  call $~lib/util/number/dtoa_buffered
  i32.add
  local.set $7
  local.get $5
  local.get $7
  i32.gt_s
  if
   local.get $6
   i32.const 0
   local.get $7
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $6
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/util/string/joinStringArray (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=8
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $3
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.load
   local.tee $4
   i32.store
   local.get $4
   if (result i32)
    local.get $4
   else
    i32.const 8672
   end
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 12
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  i32.const 0
  local.set $5
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $1
   i32.lt_s
   local.set $7
   local.get $7
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $6
    i32.store offset=4
    local.get $6
    i32.const 0
    i32.ne
    if
     local.get $5
     local.get $6
     call $~lib/string/String#get:length
     i32.add
     local.set $5
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  i32.const 0
  local.set $8
  local.get $2
  call $~lib/string/String#get:length
  local.set $9
  global.get $~lib/memory/__stack_pointer
  local.get $5
  local.get $9
  local.get $3
  i32.mul
  i32.add
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $10
  i32.store offset=8
  i32.const 0
  local.set $4
  loop $for-loop|1
   local.get $4
   local.get $3
   i32.lt_s
   local.set $7
   local.get $7
   if
    global.get $~lib/memory/__stack_pointer
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.tee $6
    i32.store offset=4
    local.get $6
    i32.const 0
    i32.ne
    if
     local.get $6
     call $~lib/string/String#get:length
     local.set $11
     local.get $10
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $6
     local.get $11
     i32.const 1
     i32.shl
     memory.copy
     local.get $8
     local.get $11
     i32.add
     local.set $8
    end
    local.get $9
    if
     local.get $10
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $9
     i32.const 1
     i32.shl
     memory.copy
     local.get $8
     local.get $9
     i32.add
     local.set $8
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|1
   end
  end
  global.get $~lib/memory/__stack_pointer
  local.get $0
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.load
  local.tee $6
  i32.store offset=4
  local.get $6
  i32.const 0
  i32.ne
  if
   local.get $10
   local.get $8
   i32.const 1
   i32.shl
   i32.add
   local.get $6
   local.get $6
   call $~lib/string/String#get:length
   i32.const 1
   i32.shl
   memory.copy
  end
  local.get $10
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 12
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
 )
 (func $~lib/util/string/joinIntegerArray<i8> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $3
  i32.eqz
  if
   local.get $0
   i32.load8_s
   local.set $4
   i32.const 1
   drop
   i32.const 1
   i32.const 4
   i32.le_u
   drop
   local.get $4
   i32.const 10
   call $~lib/util/number/itoa32
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $2
  call $~lib/string/String#get:length
  local.set $5
  i32.const 11
  local.get $5
  i32.add
  local.get $3
  i32.mul
  i32.const 11
  i32.add
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $7
  i32.store
  i32.const 0
  local.set $8
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $3
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $0
    local.get $4
    i32.const 0
    i32.shl
    i32.add
    i32.load8_s
    local.set $9
    local.get $8
    local.get $7
    local.get $8
    i32.const 1
    i32.shl
    i32.add
    local.get $9
    call $~lib/util/number/itoa_buffered<i8>
    i32.add
    local.set $8
    local.get $5
    if
     local.get $7
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $5
     i32.const 1
     i32.shl
     memory.copy
     local.get $8
     local.get $5
     i32.add
     local.set $8
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $0
  local.get $3
  i32.const 0
  i32.shl
  i32.add
  i32.load8_s
  local.set $9
  local.get $8
  local.get $7
  local.get $8
  i32.const 1
  i32.shl
  i32.add
  local.get $9
  call $~lib/util/number/itoa_buffered<i8>
  i32.add
  local.set $8
  local.get $6
  local.get $8
  i32.gt_s
  if
   local.get $7
   i32.const 0
   local.get $8
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/util/string/joinIntegerArray<u16> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $3
  i32.eqz
  if
   local.get $0
   i32.load16_u
   local.set $4
   i32.const 0
   drop
   i32.const 2
   i32.const 4
   i32.le_u
   drop
   local.get $4
   i32.const 10
   call $~lib/util/number/utoa32
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $2
  call $~lib/string/String#get:length
  local.set $5
  i32.const 10
  local.get $5
  i32.add
  local.get $3
  i32.mul
  i32.const 10
  i32.add
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $7
  i32.store
  i32.const 0
  local.set $8
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $3
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $0
    local.get $4
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    local.set $9
    local.get $8
    local.get $7
    local.get $8
    i32.const 1
    i32.shl
    i32.add
    local.get $9
    call $~lib/util/number/itoa_buffered<u16>
    i32.add
    local.set $8
    local.get $5
    if
     local.get $7
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $5
     i32.const 1
     i32.shl
     memory.copy
     local.get $8
     local.get $5
     i32.add
     local.set $8
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $0
  local.get $3
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
  local.set $9
  local.get $8
  local.get $7
  local.get $8
  i32.const 1
  i32.shl
  i32.add
  local.get $9
  call $~lib/util/number/itoa_buffered<u16>
  i32.add
  local.set $8
  local.get $6
  local.get $8
  i32.gt_s
  if
   local.get $7
   i32.const 0
   local.get $8
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/util/string/joinIntegerArray<i16> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $3
  i32.eqz
  if
   local.get $0
   i32.load16_s
   local.set $4
   i32.const 1
   drop
   i32.const 2
   i32.const 4
   i32.le_u
   drop
   local.get $4
   i32.const 10
   call $~lib/util/number/itoa32
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $2
  call $~lib/string/String#get:length
  local.set $5
  i32.const 11
  local.get $5
  i32.add
  local.get $3
  i32.mul
  i32.const 11
  i32.add
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $7
  i32.store
  i32.const 0
  local.set $8
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $3
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $0
    local.get $4
    i32.const 1
    i32.shl
    i32.add
    i32.load16_s
    local.set $9
    local.get $8
    local.get $7
    local.get $8
    i32.const 1
    i32.shl
    i32.add
    local.get $9
    call $~lib/util/number/itoa_buffered<i16>
    i32.add
    local.set $8
    local.get $5
    if
     local.get $7
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $5
     i32.const 1
     i32.shl
     memory.copy
     local.get $8
     local.get $5
     i32.add
     local.set $8
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $0
  local.get $3
  i32.const 1
  i32.shl
  i32.add
  i32.load16_s
  local.set $9
  local.get $8
  local.get $7
  local.get $8
  i32.const 1
  i32.shl
  i32.add
  local.get $9
  call $~lib/util/number/itoa_buffered<i16>
  i32.add
  local.set $8
  local.get $6
  local.get $8
  i32.gt_s
  if
   local.get $7
   i32.const 0
   local.get $8
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/util/number/utoa64 (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i64)
  (local $9 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 9072
   i32.const 9200
   i32.const 401
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i64.const 0
  i64.ne
  i32.eqz
  if
   i32.const 9264
   local.set $9
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $9
   return
  end
  local.get $1
  i32.const 10
  i32.eq
  if
   local.get $0
   global.get $~lib/builtins/u32.MAX_VALUE
   i64.extend_i32_u
   i64.le_u
   if
    local.get $0
    i32.wrap_i64
    local.set $3
    local.get $3
    call $~lib/util/number/decimalCount32
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store
    local.get $2
    local.set $7
    local.get $3
    local.set $6
    local.get $4
    local.set $5
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $7
    local.get $6
    local.get $5
    call $~lib/util/number/utoa32_dec_lut
   else
    local.get $0
    call $~lib/util/number/decimalCount64High
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store
    local.get $2
    local.set $6
    local.get $0
    local.set $8
    local.get $4
    local.set $5
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $6
    local.get $8
    local.get $5
    call $~lib/util/number/utoa64_dec_lut
   end
  else
   local.get $1
   i32.const 16
   i32.eq
   if
    i32.const 63
    local.get $0
    i64.clz
    i32.wrap_i64
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store
    local.get $2
    local.set $3
    local.get $0
    local.set $8
    local.get $4
    local.set $7
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $3
    local.get $8
    local.get $7
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $0
    local.get $1
    call $~lib/util/number/ulog_base
    local.set $4
    global.get $~lib/memory/__stack_pointer
    local.get $4
    i32.const 1
    i32.shl
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $2
    i32.store
    local.get $2
    local.get $0
    local.get $4
    local.get $1
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $2
  local.set $9
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $9
 )
 (func $~lib/util/string/joinIntegerArray<u64> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $3
  i32.eqz
  if
   local.get $0
   i64.load
   local.set $4
   i32.const 0
   drop
   i32.const 8
   i32.const 4
   i32.le_u
   drop
   local.get $4
   i32.const 10
   call $~lib/util/number/utoa64
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $2
  call $~lib/string/String#get:length
  local.set $5
  i32.const 20
  local.get $5
  i32.add
  local.get $3
  i32.mul
  i32.const 20
  i32.add
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $7
  i32.store
  i32.const 0
  local.set $8
  i32.const 0
  local.set $10
  loop $for-loop|0
   local.get $10
   local.get $3
   i32.lt_s
   local.set $11
   local.get $11
   if
    local.get $0
    local.get $10
    i32.const 3
    i32.shl
    i32.add
    i64.load
    local.set $9
    local.get $8
    local.get $7
    local.get $8
    i32.const 1
    i32.shl
    i32.add
    local.get $9
    call $~lib/util/number/itoa_buffered<u64>
    i32.add
    local.set $8
    local.get $5
    if
     local.get $7
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $5
     i32.const 1
     i32.shl
     memory.copy
     local.get $8
     local.get $5
     i32.add
     local.set $8
    end
    local.get $10
    i32.const 1
    i32.add
    local.set $10
    br $for-loop|0
   end
  end
  local.get $0
  local.get $3
  i32.const 3
  i32.shl
  i32.add
  i64.load
  local.set $9
  local.get $8
  local.get $7
  local.get $8
  i32.const 1
  i32.shl
  i32.add
  local.get $9
  call $~lib/util/number/itoa_buffered<u64>
  i32.add
  local.set $8
  local.get $6
  local.get $8
  i32.gt_s
  if
   local.get $7
   i32.const 0
   local.get $8
   call $~lib/string/String#substring
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $7
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
 )
 (func $~lib/util/number/itoa64 (param $0 i64) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 2
  i32.lt_s
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 36
   i32.gt_s
  end
  if
   i32.const 9072
   i32.const 9200
   i32.const 431
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i64.const 0
  i64.ne
  i32.eqz
  if
   i32.const 9264
   local.set $10
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $10
   return
  end
  local.get $0
  i64.const 63
  i64.shr_u
  i32.wrap_i64
  i32.const 1
  i32.shl
  local.set $2
  local.get $2
  if
   i64.const 0
   local.get $0
   i64.sub
   local.set $0
  end
  local.get $1
  i32.const 10
  i32.eq
  if
   local.get $0
   global.get $~lib/builtins/u32.MAX_VALUE
   i64.extend_i32_u
   i64.le_u
   if
    local.get $0
    i32.wrap_i64
    local.set $4
    local.get $4
    call $~lib/util/number/decimalCount32
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.const 1
    i32.shl
    local.get $2
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.store
    local.get $3
    local.get $2
    i32.add
    local.set $8
    local.get $4
    local.set $7
    local.get $5
    local.set $6
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $8
    local.get $7
    local.get $6
    call $~lib/util/number/utoa32_dec_lut
   else
    local.get $0
    call $~lib/util/number/decimalCount64High
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.const 1
    i32.shl
    local.get $2
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.store
    local.get $3
    local.get $2
    i32.add
    local.set $7
    local.get $0
    local.set $9
    local.get $5
    local.set $6
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $7
    local.get $9
    local.get $6
    call $~lib/util/number/utoa64_dec_lut
   end
  else
   local.get $1
   i32.const 16
   i32.eq
   if
    i32.const 63
    local.get $0
    i64.clz
    i32.wrap_i64
    i32.sub
    i32.const 2
    i32.shr_s
    i32.const 1
    i32.add
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.const 1
    i32.shl
    local.get $2
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.store
    local.get $3
    local.get $2
    i32.add
    local.set $4
    local.get $0
    local.set $9
    local.get $5
    local.set $8
    i32.const 0
    i32.const 1
    i32.ge_s
    drop
    local.get $4
    local.get $9
    local.get $8
    call $~lib/util/number/utoa_hex_lut
   else
    local.get $0
    local.get $1
    call $~lib/util/number/ulog_base
    local.set $5
    global.get $~lib/memory/__stack_pointer
    local.get $5
    i32.const 1
    i32.shl
    local.get $2
    i32.add
    i32.const 1
    call $~lib/rt/itcms/__new
    local.tee $3
    i32.store
    local.get $3
    local.get $2
    i32.add
    local.get $0
    local.get $5
    local.get $1
    call $~lib/util/number/utoa64_any_core
   end
  end
  local.get $2
  if
   local.get $3
   i32.const 45
   i32.store16
  end
  local.get $3
  local.set $10
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $10
 )
 (func $~lib/util/string/joinIntegerArray<i64> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i64)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $3
  i32.eqz
  if
   local.get $0
   i64.load
   local.set $4
   i32.const 1
   drop
   i32.const 8
   i32.const 4
   i32.le_u
   drop
   local.get $4
   i32.wrap_i64
   i64.extend_i32_s
   i32.const 10
   call $~lib/util/number/itoa64
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $2
  call $~lib/string/String#get:length
  local.set $5
  i32.const 21
  local.get $5
  i32.add
  local.get $3
  i32.mul
  i32.const 21
  i32.add
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $7
  i32.store
  i32.const 0
  local.set $8
  i32.const 0
  local.set $10
  loop $for-loop|0
   local.get $10
   local.get $3
   i32.lt_s
   local.set $11
   local.get $11
   if
    local.get $0
    local.get $10
    i32.const 3
    i32.shl
    i32.add
    i64.load
    local.set $9
    local.get $8
    local.get $7
    local.get $8
    i32.const 1
    i32.shl
    i32.add
    local.get $9
    call $~lib/util/number/itoa_buffered<i64>
    i32.add
    local.set $8
    local.get $5
    if
     local.get $7
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $5
     i32.const 1
     i32.shl
     memory.copy
     local.get $8
     local.get $5
     i32.add
     local.set $8
    end
    local.get $10
    i32.const 1
    i32.add
    local.set $10
    br $for-loop|0
   end
  end
  local.get $0
  local.get $3
  i32.const 3
  i32.shl
  i32.add
  i64.load
  local.set $9
  local.get $8
  local.get $7
  local.get $8
  i32.const 1
  i32.shl
  i32.add
  local.get $9
  call $~lib/util/number/itoa_buffered<i64>
  i32.add
  local.set $8
  local.get $6
  local.get $8
  i32.gt_s
  if
   local.get $7
   i32.const 0
   local.get $8
   call $~lib/string/String#substring
   local.set $12
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $12
   return
  end
  local.get $7
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
 )
 (func $~lib/util/string/joinIntegerArray<u8> (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $1
  i32.const 1
  i32.sub
  local.set $3
  local.get $3
  i32.const 0
  i32.lt_s
  if
   i32.const 8672
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $3
  i32.eqz
  if
   local.get $0
   i32.load8_u
   local.set $4
   i32.const 0
   drop
   i32.const 1
   i32.const 4
   i32.le_u
   drop
   local.get $4
   i32.const 10
   call $~lib/util/number/utoa32
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $2
  call $~lib/string/String#get:length
  local.set $5
  i32.const 10
  local.get $5
  i32.add
  local.get $3
  i32.mul
  i32.const 10
  i32.add
  local.set $6
  global.get $~lib/memory/__stack_pointer
  local.get $6
  i32.const 1
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $7
  i32.store
  i32.const 0
  local.set $8
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $3
   i32.lt_s
   local.set $10
   local.get $10
   if
    local.get $0
    local.get $4
    i32.const 0
    i32.shl
    i32.add
    i32.load8_u
    local.set $9
    local.get $8
    local.get $7
    local.get $8
    i32.const 1
    i32.shl
    i32.add
    local.get $9
    call $~lib/util/number/itoa_buffered<u8>
    i32.add
    local.set $8
    local.get $5
    if
     local.get $7
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $5
     i32.const 1
     i32.shl
     memory.copy
     local.get $8
     local.get $5
     i32.add
     local.set $8
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $0
  local.get $3
  i32.const 0
  i32.shl
  i32.add
  i32.load8_u
  local.set $9
  local.get $8
  local.get $7
  local.get $8
  i32.const 1
  i32.shl
  i32.add
  local.get $9
  call $~lib/util/number/itoa_buffered<u8>
  i32.add
  local.set $8
  local.get $6
  local.get $8
  i32.gt_s
  if
   local.get $7
   i32.const 0
   local.get $8
   call $~lib/string/String#substring
   local.set $11
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $11
   return
  end
  local.get $7
  local.set $11
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $11
 )
 (func $~lib/array/Array<~lib/array/Array<i32>>#flat (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 1
  i32.eqz
  drop
  local.get $0
  i32.load offset=4
  local.set $1
  local.get $0
  i32.load offset=12
  local.set $2
  i32.const 0
  local.set $3
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $2
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $1
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $6
    local.get $3
    local.get $6
    i32.const 0
    i32.eq
    if (result i32)
     i32.const 0
    else
     local.get $6
     i32.load offset=12
    end
    i32.add
    local.set $3
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $3
  i32.const 2
  i32.shl
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $8
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 3
  call $~lib/rt/itcms/__new
  local.tee $9
  i32.store offset=4
  local.get $9
  local.get $3
  i32.store offset=12
  local.get $9
  local.get $7
  i32.store offset=8
  local.get $9
  local.get $8
  i32.store offset=4
  local.get $9
  local.get $8
  i32.store
  local.get $9
  local.get $8
  i32.const 0
  call $~lib/rt/itcms/__link
  i32.const 0
  local.set $10
  i32.const 0
  local.set $4
  loop $for-loop|1
   local.get $4
   local.get $2
   i32.lt_s
   local.set $5
   local.get $5
   if
    block $for-continue|1
     local.get $1
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $6
     local.get $6
     i32.eqz
     if
      br $for-continue|1
     end
     local.get $6
     i32.load offset=12
     i32.const 2
     i32.shl
     local.set $11
     local.get $8
     local.get $10
     i32.add
     local.get $6
     i32.load offset=4
     local.get $11
     memory.copy
     local.get $10
     local.get $11
     i32.add
     local.set $10
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|1
   end
  end
  i32.const 0
  drop
  local.get $9
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
 )
 (func $~lib/array/Array<~lib/array/Array<~lib/string/String|null>>#flat (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  i32.const 1
  i32.eqz
  drop
  local.get $0
  i32.load offset=4
  local.set $1
  local.get $0
  i32.load offset=12
  local.set $2
  i32.const 0
  local.set $3
  i32.const 0
  local.set $4
  loop $for-loop|0
   local.get $4
   local.get $2
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $1
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $6
    local.get $3
    local.get $6
    i32.const 0
    i32.eq
    if (result i32)
     i32.const 0
    else
     local.get $6
     i32.load offset=12
    end
    i32.add
    local.set $3
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|0
   end
  end
  local.get $3
  i32.const 2
  i32.shl
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.const 0
  call $~lib/rt/itcms/__new
  local.tee $8
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16
  i32.const 31
  call $~lib/rt/itcms/__new
  local.tee $9
  i32.store offset=4
  local.get $9
  local.get $3
  i32.store offset=12
  local.get $9
  local.get $7
  i32.store offset=8
  local.get $9
  local.get $8
  i32.store offset=4
  local.get $9
  local.get $8
  i32.store
  local.get $9
  local.get $8
  i32.const 0
  call $~lib/rt/itcms/__link
  i32.const 0
  local.set $10
  i32.const 0
  local.set $4
  loop $for-loop|1
   local.get $4
   local.get $2
   i32.lt_s
   local.set $5
   local.get $5
   if
    block $for-continue|1
     local.get $1
     local.get $4
     i32.const 2
     i32.shl
     i32.add
     i32.load
     local.set $6
     local.get $6
     i32.eqz
     if
      br $for-continue|1
     end
     local.get $6
     i32.load offset=12
     i32.const 2
     i32.shl
     local.set $11
     local.get $8
     local.get $10
     i32.add
     local.get $6
     i32.load offset=4
     local.get $11
     memory.copy
     local.get $10
     local.get $11
     i32.add
     local.set $10
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|1
   end
  end
  i32.const 1
  drop
  i32.const 0
  local.set $4
  loop $for-loop|2
   local.get $4
   local.get $3
   i32.lt_s
   local.set $5
   local.get $5
   if
    local.get $8
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    i32.load
    local.set $11
    local.get $8
    local.get $11
    i32.const 1
    call $~lib/rt/itcms/__link
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    br $for-loop|2
   end
  end
  local.get $9
  local.set $12
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $12
 )
)

(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i32_i32_f64_f64_f64_f64_f64_=>_none (func (param i32 i32 f64 f64 f64 f64 f64)))
 (type $none_=>_i32 (func (result i32)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "rtrace" "onincrement" (func $~lib/rt/rtrace/onincrement (param i32)))
 (import "rtrace" "onalloc" (func $~lib/rt/rtrace/onalloc (param i32)))
 (import "rtrace" "onrealloc" (func $~lib/rt/rtrace/onrealloc (param i32 i32)))
 (import "rtrace" "onfree" (func $~lib/rt/rtrace/onfree (param i32)))
 (import "string_casemapping" "toLowerCaseFromIndex" (func $std/string-casemapping/toLowerCaseFromIndex (param i32 i32) (result i32)))
 (import "string_casemapping" "toUpperCaseFromIndex" (func $std/string-casemapping/toUpperCaseFromIndex (param i32 i32) (result i32)))
 (import "env" "trace" (func $~lib/builtins/trace (param i32 i32 f64 f64 f64 f64 f64)))
 (import "rtrace" "ondecrement" (func $~lib/rt/rtrace/ondecrement (param i32)))
 (memory $0 1)
 (data (i32.const 1028) "\01\00\00\00\01")
 (data (i32.const 1040) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00p\00u\00r\00e\00.\00t\00s")
 (data (i32.const 1088) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s")
 (data (i32.const 1136) "(\00\00\00\01\00\00\00\01\00\00\00(\00\00\00a\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e")
 (data (i32.const 1200) "0\03\00\00\01\00\00\00\03\00\00\000\03\00\00\df\00S\00S\00\00\00I\01\bc\02N\00\00\00\f0\01J\00\0c\03\00\00\90\03\99\03\08\03\01\03\b0\03\a5\03\08\03\01\03\87\055\05R\05\00\00\96\1eH\001\03\00\00\97\1eT\00\08\03\00\00\98\1eW\00\n\03\00\00\99\1eY\00\n\03\00\00\9a\1eA\00\be\02\00\00P\1f\a5\03\13\03\00\00R\1f\a5\03\13\03\00\03T\1f\a5\03\13\03\01\03V\1f\a5\03\13\03B\03\80\1f\08\1f\99\03\00\00\81\1f\t\1f\99\03\00\00\82\1f\n\1f\99\03\00\00\83\1f\0b\1f\99\03\00\00\84\1f\0c\1f\99\03\00\00\85\1f\0d\1f\99\03\00\00\86\1f\0e\1f\99\03\00\00\87\1f\0f\1f\99\03\00\00\88\1f\08\1f\99\03\00\00\89\1f\t\1f\99\03\00\00\8a\1f\n\1f\99\03\00\00\8b\1f\0b\1f\99\03\00\00\8c\1f\0c\1f\99\03\00\00\8d\1f\0d\1f\99\03\00\00\8e\1f\0e\1f\99\03\00\00\8f\1f\0f\1f\99\03\00\00\90\1f(\1f\99\03\00\00\91\1f)\1f\99\03\00\00\92\1f*\1f\99\03\00\00\93\1f+\1f\99\03\00\00\94\1f,\1f\99\03\00\00\95\1f-\1f\99\03\00\00\96\1f.\1f\99\03\00\00\97\1f/\1f\99\03\00\00\98\1f(\1f\99\03\00\00\99\1f)\1f\99\03\00\00\9a\1f*\1f\99\03\00\00\9b\1f+\1f\99\03\00\00\9c\1f,\1f\99\03\00\00\9d\1f-\1f\99\03\00\00\9e\1f.\1f\99\03\00\00\9f\1f/\1f\99\03\00\00\a0\1fh\1f\99\03\00\00\a1\1fi\1f\99\03\00\00\a2\1fj\1f\99\03\00\00\a3\1fk\1f\99\03\00\00\a4\1fl\1f\99\03\00\00\a5\1fm\1f\99\03\00\00\a6\1fn\1f\99\03\00\00\a7\1fo\1f\99\03\00\00\a8\1fh\1f\99\03\00\00\a9\1fi\1f\99\03\00\00\aa\1fj\1f\99\03\00\00\ab\1fk\1f\99\03\00\00\ac\1fl\1f\99\03\00\00\ad\1fm\1f\99\03\00\00\ae\1fn\1f\99\03\00\00\af\1fo\1f\99\03\00\00\b2\1f\ba\1f\99\03\00\00\b3\1f\91\03\99\03\00\00\b4\1f\86\03\99\03\00\00\b6\1f\91\03B\03\00\00\b7\1f\91\03B\03\99\03\bc\1f\91\03\99\03\00\00\c2\1f\ca\1f\99\03\00\00\c3\1f\97\03\99\03\00\00\c4\1f\89\03\99\03\00\00\c6\1f\97\03B\03\00\00\c7\1f\97\03B\03\99\03\cc\1f\97\03\99\03\00\00\d2\1f\99\03\08\03\00\03\d3\1f\99\03\08\03\01\03\d6\1f\99\03B\03\00\00\d7\1f\99\03\08\03B\03\e2\1f\a5\03\08\03\00\03\e3\1f\a5\03\08\03\01\03\e4\1f\a1\03\13\03\00\00\e6\1f\a5\03B\03\00\00\e7\1f\a5\03\08\03B\03\f2\1f\fa\1f\99\03\00\00\f3\1f\a9\03\99\03\00\00\f4\1f\8f\03\99\03\00\00\f6\1f\a9\03B\03\00\00\f7\1f\a9\03B\03\99\03\fc\1f\a9\03\99\03\00\00\00\fbF\00F\00\00\00\01\fbF\00I\00\00\00\02\fbF\00L\00\00\00\03\fbF\00F\00I\00\04\fbF\00F\00L\00\05\fbS\00T\00\00\00\06\fbS\00T\00\00\00\13\fbD\05F\05\00\00\14\fbD\055\05\00\00\15\fbD\05;\05\00\00\16\fbN\05F\05\00\00\17\fbD\05=\05")
 (data (i32.const 2032) "j\n\00\00\01\00\00\00\04\00\00\00j\n\00\00\07\08\t\n\0b\0c\06\06\06\06\06\06\06\06\06\06\0d\06\06\0e\06\06\06\06\06\06\06\06\0fa\06\06\06\06\06\06\06\1b\06\06\06\06\06\06\06\06\06\06\06\1c\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1d\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1e\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06")
 (data (i32.const 2671) "$++++++++\01\00TVVVVVVVV")
 (data (i32.const 2710) "\18\00\00\00+++++++\07++[VVVVVVVJVV\051P1P1P1P1P1P1P1P$Py1P1P18P1P1P1P1P1P1P1PN1\02N\0d\0dN\03N\00$n\00N1&nQN$PN9\14\81\1b\1d\1dS1P1P\0d1P1P1P\1bS$P1\02\\{\\{\\{\\{\\{\14y\\{\\{\\-+I\03H\03x\\{\14\00\96\n\01+(\06\06\00*\06**+\07\bb\b5+\1e\00+\07+++\01++++++++++++++++++++++++++++++++\01+++++++++++++++++++++++*+++++++++++++\cdF\cd+\00%+\07\01\06\01UVVVVVUVV\02$\81\81\81\81\81\15\81\81\81\00\00+\00\b2\d1\b2\d1\b2\d1\b2\d1\00\00\cd\cc\01\00\d7\d7\d7\d7\d7\83\81\81\81\81\81\81\81\81\81\81\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\1c\00\00\00\00\001P1P1P1P1P1\02\00\001P1P1P1P1P1P1P1P1PN1P1PN1P1P1P1P1P1P1P1\02\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6*++++++++++++\00\00\00TVVVVVVVVVVVV")
 (data (i32.const 3219) "TVVVVVVVVVVVV\0c\00\0c*+++++++++++++\07*\01")
 (data (i32.const 3305) "*++++++++++++++++++++++++++VVl\81\15\00++++++++++++++++++++++++++++++++++++++++++\07l\03A++VVVVVVVVVVVVVV,V+++++++++++++++++++++\01")
 (data (i32.const 3464) "\0cl\00\00\00\00\00\06")
 (data (i32.const 3510) "\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%Vz\9e&\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06\01++OVV,+\7fVV9++UVV++OVV,+\7fVV\817u[{\\++OVV\02\ac\04\00\009++UVV++OVV,++VV2\13\81W\00o\81~\c9\d7~-\81\81\0e~9\7foW\00\81\81~\15\00~\03++++++++++++\07+$+\97+++++++++*+++++VVVVV\80\81\81\81\819\bb*++++++++++++++++++++++++++++++++++++++++\01\81\81\81\81\81\81\81\81\81\81\81\81\81\81\81\c9\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\d0\0d\00N1\02\b4\c1\c1\d7\d7$P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P\d7\d7S\c1G\d4\d7\d7\d7\05++++++++++++\07\01\00\01")
 (data (i32.const 3961) "N1P1P1P1P1P1P1P\0d\00\00\00\00\00$P1P1P1P1P")
 (data (i32.const 4026) "+++++++++++y\\{\\{O{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\-++y\14\\{\\-y*\\\'\\{\\{\\{\a4\00\n\b4\\{\\{O\03*++++++++++++++++++\01")
 (data (i32.const 4139) "H")
 (data (i32.const 4149) "*++++++++++++++++++++++++++")
 (data (i32.const 4209) "++++++++\07\00HVVVVVVVV\02")
 (data (i32.const 4284) "+++++++++++++UVVVVVVVVVVVV\0e")
 (data (i32.const 4342) "$+++++++++++\07\00VVVVVVVVVVVV")
 (data (i32.const 4412) "$++++++++++++++++\07\00\00\00\00VVVVVVVVVVVVVVVVV")
 (data (i32.const 4509) "*++++++++++VVVVVVVVVV\0e")
 (data (i32.const 4563) "*++++++++++VVVVVVVVVV\0e")
 (data (i32.const 4628) "+++++++++++UVVVVVVVVVV\0e")
 (data (i32.const 4720) "\0c\00\00\00\01\00\00\00\05\00\00\00\0c\00\00\00\00\08\00\00V\01\00\009")
 (data (i32.const 4752) "\c0\03\00\00\01\00\00\00\05\00\00\00\c0\03\00\00\00\00\00\00\01 \00\00\00\e0\ff\ff\00\bf\1d\00\00\e7\02\00\00y\00\00\02$\00\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\01\02\00\00\00\fe\ff\ff\019\ff\ff\00\18\ff\ff\01\87\ff\ff\00\d4\fe\ff\00\c3\00\00\01\d2\00\00\01\ce\00\00\01\cd\00\00\01O\00\00\01\ca\00\00\01\cb\00\00\01\cf\00\00\00a\00\00\01\d3\00\00\01\d1\00\00\00\a3\00\00\01\d5\00\00\00\82\00\00\01\d6\00\00\01\da\00\00\01\d9\00\00\01\db\00\00\008\00\00\03\00\00\00\00\b1\ff\ff\01\9f\ff\ff\01\c8\ff\ff\02($\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\003\ff\ff\00&\ff\ff\01~\ff\ff\01+*\00\01]\ff\ff\01(*\00\00?*\00\01=\ff\ff\01E\00\00\01G\00\00\00\1f*\00\00\1c*\00\00\1e*\00\00.\ff\ff\002\ff\ff\006\ff\ff\005\ff\ff\00O\a5\00\00K\a5\00\001\ff\ff\00(\a5\00\00D\a5\00\00/\ff\ff\00-\ff\ff\00\f7)\00\00A\a5\00\00\fd)\00\00+\ff\ff\00*\ff\ff\00\e7)\00\00C\a5\00\00*\a5\00\00\bb\ff\ff\00\'\ff\ff\00\b9\ff\ff\00%\ff\ff\00\15\a5\00\00\12\a5\00\02$L\00\00\00\00\00\01 \00\00\00\e0\ff\ff\01\01\00\00\00\ff\ff\ff\00T\00\00\01t\00\00\01&\00\00\01%\00\00\01@\00\00\01?\00\00\00\da\ff\ff\00\db\ff\ff\00\e1\ff\ff\00\c0\ff\ff\00\c1\ff\ff\01\08\00\00\00\c2\ff\ff\00\c7\ff\ff\00\d1\ff\ff\00\ca\ff\ff\00\f8\ff\ff\00\aa\ff\ff\00\b0\ff\ff\00\07\00\00\00\8c\ff\ff\01\c4\ff\ff\00\a0\ff\ff\01\f9\ff\ff\02\1ap\00\01\01\00\00\00\ff\ff\ff\01 \00\00\00\e0\ff\ff\01P\00\00\01\0f\00\00\00\f1\ff\ff\00\00\00\00\010\00\00\00\d0\ff\ff\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c0\0b\00\01`\1c\00\00\00\00\00\01\d0\97\00\01\08\00\00\00\f8\ff\ff\02\05\8a\00\00\00\00\00\01@\f4\ff\00\9e\e7\ff\00\c2\89\00\00\db\e7\ff\00\92\e7\ff\00\93\e7\ff\00\9c\e7\ff\00\9d\e7\ff\00\a4\e7\ff\00\00\00\00\008\8a\00\00\04\8a\00\00\e6\0e\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c5\ff\ff\01A\e2\ff\02\1d\8f\00\00\08\00\00\01\f8\ff\ff\00\00\00\00\00V\00\00\01\aa\ff\ff\00J\00\00\00d\00\00\00\80\00\00\00p\00\00\00~\00\00\00\t\00\00\01\b6\ff\ff\01\f7\ff\ff\00\db\e3\ff\01\9c\ff\ff\01\90\ff\ff\01\80\ff\ff\01\82\ff\ff\02\05\ac\00\00\00\00\00\01\10\00\00\00\f0\ff\ff\01\1c\00\00\01\01\00\00\01\a3\e2\ff\01A\df\ff\01\ba\df\ff\00\e4\ff\ff\02\0b\b1\00\01\01\00\00\00\ff\ff\ff\010\00\00\00\d0\ff\ff\00\00\00\00\01\t\d6\ff\01\1a\f1\ff\01\19\d6\ff\00\d5\d5\ff\00\d8\d5\ff\01\e4\d5\ff\01\03\d6\ff\01\e1\d5\ff\01\e2\d5\ff\01\c1\d5\ff\00\00\00\00\00\a0\e3\ff\00\00\00\00\01\01\00\00\00\ff\ff\ff\02\0c\bc\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\01\bcZ\ff\01\a0\03\00\01\fcu\ff\01\d8Z\ff\000\00\00\01\b1Z\ff\01\b5Z\ff\01\bfZ\ff\01\eeZ\ff\01\d6Z\ff\01\ebZ\ff\01\d0\ff\ff\01\bdZ\ff\01\c8u\ff\00\00\00\00\000h\ff\00`\fc\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01(\00\00\00\d8\ff\ff\00\00\00\00\01@\00\00\00\c0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01\"\00\00\00\de\ff\ff")
 (data (i32.const 5729) "\02\00\00\01\00\00\00\04\00\00\00\00\02\00\00\00\06\'Qow")
 (data (i32.const 5760) "|\00\00\7f\00\00\00\00\00\00\00\00\83\8e\92\97\00\aa")
 (data (i32.const 5788) "\b4\c4")
 (data (i32.const 5910) "\c6\c9\00\00\00\db")
 (data (i32.const 5999) "\de\00\00\00\00\e1\00\00\00\00\00\00\00\e4")
 (data (i32.const 6024) "\e7")
 (data (i32.const 6110) "\ea")
 (data (i32.const 6233) "\ed")
 (data (i32.const 6256) "\90\01\00\00\01\00\00\00\04\00\00\00\90\01\00\000\0c1\0dx\0e\7f\0f\80\10\81\11\86\12\89\13\8a\13\8e\14\8f\15\90\16\93\13\94\17\95\18\96\19\97\1a\9a\1b\9c\19\9d\1c\9e\1d\9f\1e\a6\1f\a9\1f\ae\1f\b1 \b2 \b7!\bf\"\c5#\c8#\cb#\dd$\f2#\f6%\f7& -:.=/>0?1@1C2D3E4P5Q6R7S8T9Y:[;\\<a=c>e?f@hAiBj@kClDoBqErFuG}H\82I\87J\89K\8aL\8bL\8cM\92N\9dO\9ePEW{\1d|\1d}\1d\7fX\86Y\88Z\89Z\8aZ\8c[\8e\\\8f\\\ac]\ad^\ae^\af^\c2_\cc`\cda\cea\cfb\d0c\d1d\d5e\d6f\d7g\f0h\f1i\f2j\f3k\f4l\f5m\f9n\fd-\fe-\ff-PiQiRiSiTiUiViWiXiYiZi[i\\i]i^i_i\82\00\83\00\84\00\85\00\86\00\87\00\88\00\89\00\c0u\cfv\80\89\81\8a\82\8b\85\8c\86\8dp\9dq\9dv\9ew\9ex\9fy\9fz\a0{\a0|\a1}\a1\b3\a2\ba\a3\bb\a3\bc\a4\be\a5\c3\a2\cc\a4\da\a6\db\a6\e5j\ea\a7\eb\a7\ecn\f3\a2\f8\a8\f9\a8\fa\a9\fb\a9\fc\a4&\b0*\b1+\b2N\b3\84\08b\bac\bbd\bce\bdf\bem\bfn\c0o\c1p\c2~\c3\7f\c3}\cf\8d\d0\94\d1\ab\d2\ac\d3\ad\d4\b0\d5\b1\d6\b2\d7\c4\d8\c5\d9\c6\da")
 (data (i32.const 6672) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00s\00t\00d\00/\00s\00t\00r\00i\00n\00g\00-\00c\00a\00s\00e\00m\00a\00p\00p\00i\00n\00g\00.\00t\00s")
 (data (i32.const 6752) "\a0\0b\00\00\01\00\00\00\04\00\00\00\a0\0b\00\00\12\10\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f
 (data (i32.const 7312) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\80@\00\04\00\00\00@\01\00\00\00\00\00\00\00\00\a1\90\01")
 (data (i32.const 7398) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff0\04\b0")
 (data (i32.const 7456) "\f8\03")
 (data (i32.const 7483) "\02\00\00\00\00\00\00\fe\ff\ff\ff\ff\bf\b6\00\00\00\00\00\10\00?\00\ff\17\00\00\00\00\01\f8\ff\ff\00\00\01")
 (data (i32.const 7530) "\c0\bf\ff=\00\00\00\80\02\00\00\00\ff\ff\ff\07")
 (data (i32.const 7556) "\c0\ff\01\00\00\00\00\00\00\f8?$\00\00\c0\ff\ff?\00\00\00\00\00\0e")
 (data (i32.const 7594) "\f8\ff\ff\ff\ff\ff\07\00\00\00\00\00\00\14\fe!\fe\00\0c\00\02\00\02\00\00\00\00\00\00\10\1e \00\00\0c\00\00@\06\00\00\00\00\00\00\10\869\02\00\00\00#\00\06\00\00\00\00\00\00\10\be!\00\00\0c\00\00\fc\02\00\00\00\00\00\00\90\1e @\00\0c\00\00\00\04\00\00\00\00\00\00\00\01 \00\00\00\00\00\00\11\00\00\00\00\00\00\c0\c1=`\00\0c\00\00\00\02\00\00\00\00\00\00\90@0\00\00\0c\00\00\00\03\00\00\00\00\00\00\18\1e \00\00\0c")
 (data (i32.const 7753) "\04\\")
 (data (i32.const 7766) "\f2\07\c0\7f")
 (data (i32.const 7782) "\f2\1f@?")
 (data (i32.const 7795) "\03\00\00\a0\02\00\00\00\00\00\00\fe\7f\df\e0\ff\fe\ff\ff\ff\1f@")
 (data (i32.const 7829) "\e0\fdf\00\00\00\c3\01\00\1e\00d \00 ")
 (data (i32.const 7855) "\10")
 (data (i32.const 7867) "\e0")
 (data (i32.const 7890) "\1c\00\00\00\1c\00\00\00\0c\00\00\00\0c\00\00\00\00\00\00\00\b0?@\fe\8f \00\00\00\00\00x\00\00\00\00\00\00\08\00\00\00\00\00\00\00`\00\00\00\00\02")
 (data (i32.const 7956) "\87\01\04\0e")
 (data (i32.const 7986) "\80\t\00\00\00\00\00\00@\7f\e5\1f\f8\9f\00\00\00\00\80\00\ff\7f\00\00\00\00\00\00\00\00\0f\00\00\00\00\00\d0\17\04\00\00\00\00\f8\0f\00\03\00\00\00<;\00\00\00\00\00\00@\a3\03\00\00\00\00\00\00\f0\cf\00\00\00\00\00\00\00\00?")
 (data (i32.const 8074) "\f7\ff\fd!\10\03\00\00\00\00\00\f0\ff\ff\ff\ff\ff\ff\ff\07\00\01\00\00\00\f8\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fb")
 (data (i32.const 8135) "\a0\03\e0\00\e0\00\e0\00`\00\f8\00\03\90|\00\00\00\00\00\00\df\ff\02\80\00\00\ff\1f\00\00\00\00\00\00\ff\ff\ff\ff\01")
 (data (i32.const 8191) "0")
 (data (i32.const 8205) "\80\03")
 (data (i32.const 8221) "\80\00\80")
 (data (i32.const 8236) "\ff\ff\ff\ff\00\00\00\00\00\80")
 (data (i32.const 8272) " \00\00\00\00<>\08")
 (data (i32.const 8291) "~")
 (data (i32.const 8303) "p\00\00 ")
 (data (i32.const 8367) "?\00\10")
 (data (i32.const 8381) "\80\f7\bf\00\00\00\f0")
 (data (i32.const 8398) "\03\00\ff\ff\ff\ff\03")
 (data (i32.const 8414) "\01\00\00\07")
 (data (i32.const 8431) "\03D\08\00\00`")
 (data (i32.const 8456) "0\00\00\00\ff\ff\03\80\00\00\00\00\c0?\00\00\80\ff\03\00\00\00\00\00\07\00\00\00\00\00\c83\00\80\00\00`\00\00\00\00\00\00\00\00~f\00\08\10\00\00\00\00\01\10\00\00\00\00\00\00\9d\c1\02\00\00 \000X")
 (data (i32.const 8539) "\f8")
 (data (i32.const 8556) " !\00\00\00\00\00@")
 (data (i32.const 8582) "\fc\ff\03\00\00\00\00\00\00\00\ff\ff\08\00\ff\ff\00\00\00\00$")
 (data (i32.const 8623) "\80\80@\00\04\00\00\00@\01\00\00\00\00\00\01\00\00\00\00\c0\00\00\00\00\00\00\00\00\08\00\00\0e")
 (data (i32.const 8687) " ")
 (data (i32.const 8716) "\01")
 (data (i32.const 8734) "\c0\07")
 (data (i32.const 8752) "n\f0\00\00\00\00\00\87")
 (data (i32.const 8780) "`\00\00\00\00\00\00\00\f0")
 (data (i32.const 8824) "\c0\ff\01")
 (data (i32.const 8848) "\02\00\00\00\00\00\00\ff\7f\00\00\00\00\00\00\80\03\00\00\00\00\00x&\00 \00\00\00\00\00\00\07\00\00\00\80\ef\1f\00\00\00\00\00\00\00\08\00\03\00\00\00\00\00\c0\7f\00\1e")
 (data (i32.const 8917) "\80\d3@")
 (data (i32.const 8939) "\80\f8\07\00\00\03\00\00\00\00\00\00\18\01\00\00\00\c0\1f\1f")
 (data (i32.const 8983) "\ff\\\00\00@")
 (data (i32.const 8998) "\f8\85\0d")
 (data (i32.const 9030) "<\b0\01\00\000")
 (data (i32.const 9046) "\f8\a7\01")
 (data (i32.const 9061) "(\bf")
 (data (i32.const 9075) "\e0\bc\0f")
 (data (i32.const 9109) "\80\ff\06")
 (data (i32.const 9162) "\f0\0c\01\00\00\00\fe\07\00\00\00\00\f8y\80\00~\0e\00\00\00\00\00\fc\7f\03")
 (data (i32.const 9206) "\7f\bf")
 (data (i32.const 9218) "\fc\ff\ff\fcm")
 (data (i32.const 9238) "~\b4\bf")
 (data (i32.const 9250) "\a3")
 (data (i32.const 9294) "\18\00\00\00\00\00\00\00\ff\01")
 (data (i32.const 9358) "\1f\00\00\00\00\00\00\00\7f\00\0f")
 (data (i32.const 9401) "\80\00\00\00\00\00\00\00\80\ff\ff\00\00\00\00\00\00\00\00\0b")
 (data (i32.const 9443) "`\0f")
 (data (i32.const 9468) "\80\03\f8\ff\e7\0f\00\00\00<")
 (data (i32.const 9496) "\1c")
 (data (i32.const 9520) "\ff\ff\ff\ff\ff\ff\7f\f8\ff\ff\ff\ff\ff\1f \00\10\00\00\f8\fe\ff")
 (data (i32.const 9552) "\7f\ff\ff\f9\db\07")
 (data (i32.const 9590) "\ff?")
 (data (i32.const 9645) "\f0")
 (data (i32.const 9674) "\7f")
 (data (i32.const 9688) "\f0\0f")
 (data (i32.const 9743) "\f8")
 (data (i32.const 9744) " \06\00\00\01\00\00\00\04\00\00\00 \06\00\00\12\13\14\15\16\17\10\10\10\10\10\10\10\10\10\10\18\10\10\19\10\10\10\10\10\10\10\10\1a\1b\11\1c\1d\1e\10\10\1f\10\10\10\10\10\10\10 !\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\"#\10\10\10$\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10%\10\10\10&\10\10\10\10\'\10\10\10\10\10\10\10(\10\10\10\10\10\10\10\10\10\10\10)\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10*\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10+,-.\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10/\10\10\10\10\10\10\100\10\10\10\10\10\10\10\10\10\10\10\10\10\10")
 (data (i32.const 10304) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\fe\ff\ff\07\fe\ff\ff\07\00\00\00\00\00\04 \04\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\f7\f0\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ef\ff\ff\ff\ff\01\03\00\00\00\1f")
 (data (i32.const 10440) " \00\00\00\00\00\cf\bc@\d7\ff\ff\fb\ff\ff\ff\ff\ff\ff\ff\ff\ff\bf\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\03\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fe\ff\ff\ff\7f\00\ff\ff\ff\ff\ff\01")
 (data (i32.const 10548) "\ff\ff\ff\ff\bf \ff\ff\ff\ff\ff\e7")
 (data (i32.const 10580) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff??")
 (data (i32.const 10608) "\ff\01\ff\ff\ff\ff\ff\e7\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\ff\ff??\ff\ff\ff\ff??\ff\aa\ff\ff\ff?\ff\ff\ff\ff\ff\ff\df_\dc\1f\cf\0f\ff\1f\dc\1f")
 (data (i32.const 10702) "\02\80\00\00\ff\1f")
 (data (i32.const 10720) "\84\fc/>P\bd\1f\f2\e0C\00\00\ff\ff\ff\ff\18")
 (data (i32.const 10774) "\c0\ff\ff\ff\ff\ff\ff\03\00\00\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\1fx\0c\00\ff\ff\ff\ff\bf ")
 (data (i32.const 10856) "\ff\ff\ff\ff\ff?\00\00\ff\ff\ff?")
 (data (i32.const 10884) "\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ffx\ff\ff\ff\ff\ff\ff|\00\00\00\00\00\00\07\00\00\00\00\00\00\ff\ff\ff\ff\ff\f7\ff\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\7f\00\f8")
 (data (i32.const 10980) "\fe\ff\ff\07\fe\ff\ff\07")
 (data (i32.const 11008) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 11030) "\ff\ff\ff\ff\0f\ff\ff\ff\ff\0f")
 (data (i32.const 11056) "\ff\ff\ff\ff\ff\ff\07\00\ff\ff\ff\ff\ff\ff\07")
 (data (i32.const 11092) "\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 11112) "\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 11136) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\df\ff\ff\ff\ff\ff\ff\ff\ff\dfd\de\ff\eb\ef\ff\ff\ff\ff\ff\ff\ff\bf\e7\df\df\ff\ff\ff{_\fc\fd\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff?\ff\ff\ff\fd\ff\ff\f7\ff\ff\ff\f7\ff\ff\df\ff\ff\ff\df\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\fd\ff\ff\ff\fd\ff\ff\f7\0f\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\0f")
 (data (i32.const 11302) "\ff\ff\ff\03\ff\ff\ff\03\ff\ff\ff\03")
 (data (i32.const 11328) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\000\009\00_\00A\00Z\00 \00a\00z\00.\00!\00\n")
 (data (i32.const 11376) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\000\009\00_\00A\00Z\00 \00A\00Z\00.\00!\00\n")
 (data (i32.const 11424) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\000\009\00_\00A\00Z\00 \00a\00z\00.\00!\00\t")
 (data (i32.const 11472) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\000\009\00_\00a\00z\00 \00a\00z\00.\00!\00\t")
 (data (i32.const 11520) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00D\00e\00r\00 \00W\00e\00c\00h\00s\00e\00l\00 \00a\00l\00l\00e\00i\00n\00 \00i\00s\00t\00 \00d\00a\00s\00 \00B\00e\00s\00t\00\e4\00n\00d\00i\00g\00e")
 (data (i32.const 11616) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00D\00E\00R\00 \00W\00E\00C\00H\00S\00E\00L\00 \00A\00L\00L\00E\00I\00N\00 \00I\00S\00T\00 \00D\00A\00S\00 \00B\00E\00S\00T\00\c4\00N\00D\00I\00G\00E")
 (data (i32.const 11712) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00d\00e\00r\00 \00w\00e\00c\00h\00s\00e\00l\00 \00a\00l\00l\00e\00i\00n\00 \00i\00s\00t\00 \00d\00a\00s\00 \00b\00e\00s\00t\00\e4\00n\00d\00i\00g\00e")
 (data (i32.const 11808) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00@\00 \00\14  \00\14\04@\04C\043\04 \00G\045\04;\04>\042\045\04:\040\04!")
 (data (i32.const 11872) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00@\00 \00\14  \00\14\04 \04#\04\13\04 \00\'\04\15\04\1b\04\1e\04\12\04\15\04\1a\04\10\04!")
 (data (i32.const 11936) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00@\00 \00\14  \004\04@\04C\043\04 \00G\045\04;\04>\042\045\04:\040\04!")
 (data (i32.const 12000) "D\00\00\00\01\00\00\00\01\00\00\00D\00\00\00.\" \00E\00\c5\"d\00a\00 \00=\00 \00Q\00,\00 \00n\00 \00\92! \00\1e\",\00 \00\11\" \00f\00(\00i\00)\00 \00=\00 \00\0f\" \00g\00(\00i\00)")
 (data (i32.const 12096) "D\00\00\00\01\00\00\00\01\00\00\00D\00\00\00.\" \00E\00\c5\"D\00A\00 \00=\00 \00Q\00,\00 \00N\00 \00\92! \00\1e\",\00 \00\11\" \00F\00(\00I\00)\00 \00=\00 \00\0f\" \00G\00(\00I\00)")
 (data (i32.const 12192) "D\00\00\00\01\00\00\00\01\00\00\00D\00\00\00.\" \00e\00\c5\"d\00a\00 \00=\00 \00q\00,\00 \00n\00 \00\92! \00\1e\",\00 \00\11\" \00f\00(\00i\00)\00 \00=\00 \00\0f\" \00g\00(\00i\00)")
 (data (i32.const 12288) "H\00\00\00\01\00\00\00\01\00\00\00H\00\00\00\f0\00i\00 \001\01n\00t\00Y\02\c8\02n\00\e6\00\83\02Y\02n\00Y\02l\00 \00f\00Y\02\c8\02n\00[\02t\001\01k\00 \00Y\02s\00o\00\8a\02s\00i\00\c8\02e\001\01\83\02n")
 (data (i32.const 12384) "H\00\00\00\01\00\00\00\01\00\00\00H\00\00\00\d0\00I\00 \00I\00N\00T\00\8f\01\c8\02N\00\c6\00\a9\01\8f\01N\00\8f\01L\00 \00F\00\8f\01\c8\02N\00\90\01T\00I\00K\00 \00\8f\01S\00O\00\b1\01S\00I\00\c8\02E\00I\00\a9\01N")
 (data (i32.const 12480) "H\00\00\00\01\00\00\00\01\00\00\00H\00\00\00\f0\00i\00 \00i\00n\00t\00Y\02\c8\02n\00\e6\00\83\02Y\02n\00Y\02l\00 \00f\00Y\02\c8\02n\00[\02t\00i\00k\00 \00Y\02s\00o\00\8a\02s\00i\00\c8\02e\00i\00\83\02n")
 (data (i32.const 12576) ".\00\00\00\01\00\00\00\01\00\00\00.\00\00\00\a3\03r\1f \00\b3\03\bd\03\c9\03\c1\03\af\03\b6\03\c9\03 \00\00\1f\c0\03x\1f \00\c4\03t\1f\bd\03 \00\ba\03\cc\03\c8\03\b7\03")
 (data (i32.const 12640) ".\00\00\00\01\00\00\00\01\00\00\00.\00\00\00\a3\03\c8\1f \00\93\03\9d\03\a9\03\a1\03\8a\03\96\03\a9\03 \00\08\1f\a0\03\f8\1f \00\a4\03\ca\1f\9d\03 \00\9a\03\8c\03\a8\03\97\03")
 (data (i32.const 12704) "0\00\00\00\01\00\00\00\01\00\00\000\00\00\00\c4\03\bf\03\e6\1f \00\c3\03\c0\03\b1\03\b8\03\b9\03\bf\03\e6\1f \00\c4\03t\1f\bd\03 \00\c4\03\c1\03\bf\03\bc\03\b5\03\c1\03\ae\03,")
 (data (i32.const 12768) "4\00\00\00\01\00\00\00\01\00\00\004\00\00\00\a4\03\9f\03\a5\03B\03 \00\a3\03\a0\03\91\03\98\03\99\03\9f\03\a5\03B\03 \00\a4\03\ca\1f\9d\03 \00\a4\03\a1\03\9f\03\9c\03\95\03\a1\03\89\03,")
 (data (i32.const 12848) ",\00\00\00\01\00\00\00\01\00\00\00,\00\00\00\c3\03r\1f \00\b3\03\bd\03\c9\03\c1\03\af\03\b6\03\c9\03 \00\00\1f\c0\03x\1f \00\c4\03t\1f\bd\03 \00D\1f\c8\03\b7\03")
 (data (i32.const 12912) ",\00\00\00\01\00\00\00\01\00\00\00,\00\00\00\a3\03\c8\1f \00\93\03\9d\03\a9\03\a1\03\8a\03\96\03\a9\03 \00\08\1f\a0\03\f8\1f \00\a4\03\ca\1f\9d\03 \00L\1f\a8\03\97\03")
 (data (i32.const 12976) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00\c0\03\bf\03z\1f \00\bc\03r\1f \00\b2\03\af\03\b1\03 \00\bc\03\b5\03\c4\03\c1\03\ac\03\b5\03\b9\03 \00\c4\03t\1f \00\b3\03\c6\1f.")
 (data (i32.const 13056) "4\00\00\00\01\00\00\00\01\00\00\004\00\00\00\a0\03\9f\03\ea\1f \00\9c\03\c8\1f \00\92\03\8a\03\91\03 \00\9c\03\95\03\a4\03\a1\03\86\03\95\03\99\03 \00\a4\03\ca\1f \00\93\03\97\03B\03.")
 (data (i32.const 13136) ".\00\00\00\01\00\00\00\01\00\00\00.\00\00\00\91\03\c0\03\bf\1f \00\c4\03p\1f \00\ba\03\cc\03\ba\03\ba\03\b1\03\bb\03\b1\03 \00\b2\03\b3\03\b1\03\bb\03\bc\03\ad\03\bd\03\b7\03")
 (data (i32.const 13200) ".\00\00\00\01\00\00\00\01\00\00\00.\00\00\00\91\03\a0\03\bf\1f \00\a4\03\ba\1f \00\9a\03\8c\03\9a\03\9a\03\91\03\9b\03\91\03 \00\92\03\93\03\91\03\9b\03\9c\03\88\03\9d\03\97\03")
 (data (i32.const 13264) "(\00\00\00\01\00\00\00\01\00\00\00(\00\00\00\c4\03\f6\1f\bd\03 \00\fe\1f\95\03\bb\03\bb\03\ae\03\bd\03\c9\03\bd\03 \00\c4\03p\1f \001\1f\b5\03\c1\03\ac\03")
 (data (i32.const 13328) "*\00\00\00\01\00\00\00\01\00\00\00*\00\00\00\a4\03\a9\03B\03\9d\03 \00\fe\1f\95\03\9b\03\9b\03\89\03\9d\03\a9\03\9d\03 \00\a4\03\ba\1f \009\1f\95\03\a1\03\86\03")
 (data (i32.const 13392) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00\ba\03\b1\03v\1f \00\c3\03p\1f\bd\03 \00\c0\03\c1\03\f6\1f\c4\03\b1\03 \00\00\1f\bd\03\b4\03\c1\03\b5\03\b9\03\c9\03\bc\03\ad\03\bd\03\b7\03")
 (data (i32.const 13472) "4\00\00\00\01\00\00\00\01\00\00\004\00\00\00\9a\03\91\03\da\1f \00\a3\03\ba\1f\9d\03 \00\a0\03\a1\03\a9\03B\03\a4\03\91\03 \00\08\1f\9d\03\94\03\a1\03\95\03\99\03\a9\03\9c\03\88\03\9d\03\97\03")
 (data (i32.const 13552) "6\00\00\00\01\00\00\00\01\00\00\006\00\00\00\c7\03\b1\03\d6\1f\c1\03\b5\03,\00 \00f\1f \00\c7\03\b1\03\d6\1f\c1\03\b5\03,\00 \00\bf\1f\95\03\bb\03\b5\03\c5\03\b8\03\b5\03\c1\03\b9\03\ac\03!")
 (data (i32.const 13632) ":\00\00\00\01\00\00\00\01\00\00\00:\00\00\00\a7\03\91\03\99\03B\03\a1\03\95\03,\00 \00n\1f \00\a7\03\91\03\99\03B\03\a1\03\95\03,\00 \00\bf\1f\95\03\9b\03\95\03\a5\03\98\03\95\03\a1\03\99\03\86\03!")
 (data (i32.const 13712) "\80\00\00\00\01\00\00\00\01\00\00\00\80\00\00\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z\00 \00/\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data (i32.const 13856) "\80\00\00\00\01\00\00\00\01\00\00\00\80\00\00\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z\00 \00/\000\001\002\003\004\005\006\007\008\009\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z")
 (data (i32.const 14000) "\80\00\00\00\01\00\00\00\01\00\00\00\80\00\00\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00 \00/\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data (i32.const 14144) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\df")
 (data (i32.const 14176) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00S\00S")
 (data (i32.const 14208) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\000\01")
 (data (i32.const 14240) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00i\00\07\03")
 (data (i32.const 14272) "\ae\00\00\00\01\00\00\00\01\00\00\00\ae\00\00\00\a3\00\a9\00\b5\00\c0\00\c6\00\d6\00\de\00\df\00\e9\00\f6\00\ff\00\13 \14 \18 \1c \1d \1e   \" & 0 \"!S\01`\01x\01~\01\ac  \00\91\03\92\03\93\03\94\03\a9\03\b1\03\b2\03\b3\03\b4\03\c9\03 \00\10\04\11\04\12\04\13\04\14\040\041\042\043\044\04\00\"\02\"\08\"\1d!\'\"*\"a\"\1e\" \00\91!\97!\a8!\bb!\e3! \00\10%<%T%X%\91%\ba%:&@& \00\01\fb\fd\ff@$\82  \1f\02\1e\e5\04\84\1eP\02\d0\02N#\d0\051\05\d0\10")
 (data (i32.const 14464) "\b2\00\00\00\01\00\00\00\01\00\00\00\b2\00\00\00\a3\00\a9\00\9c\03\c0\00\c6\00\d6\00\de\00S\00S\00\c9\00\d6\00x\01\13 \14 \18 \1c \1d \1e   \" & 0 \"!R\01`\01x\01}\01\ac  \00\91\03\92\03\93\03\94\03\a9\03\91\03\92\03\93\03\94\03\a9\03 \00\10\04\11\04\12\04\13\04\14\04\10\04\11\04\12\04\13\04\14\04\00\"\02\"\08\"\1d!\'\"*\"a\"\1e\" \00\91!\97!\a8!\bb!\e3! \00\10%<%T%X%\91%\ba%:&@& \00F\00I\00\fd\ff@$\82 (\1f\02\1e\e4\04\84\1eo,\d0\02N#\d0\051\05\90\1c")
 (data (i32.const 14672) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00s\00s")
 (data (i32.const 14704) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\01\fb")
 (data (i32.const 14736) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00f\00i")
 (data (i32.const 14768) "\b8\00\00\00\01\00\00\00\01\00\00\00\b8\00\00\00A\d8\0e\df \00A\d81\df \00A\d8y\df \00C\d8S\dc \00C\d8x\dc \00C\d8\96\dc \00C\d8\cf\dc \00C\d8\d5\dc \00C\d8\15\dd \00C\d8|\dd \00C\d8\7f\dd \00C\d8\0e\de \00C\d8\0f\de \00C\d8w\de \00C\d8\9d\de \00C\d8\a2\de \00C\d8\d7\de \00C\d8\f9\de \00C\d8\fa\de \00C\d8-\df \00C\d8.\df \00C\d8L\df \00C\d8\b4\df \00C\d8\bc\df \00C\d8\ea\df \00D\d8\\\dc \00D\d8o\dc \00D\d8u\dc \00D\d8v\dc \00D\d8{\dc \00D\d8\c1\dc")
 (data (i32.const 14976) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s")
 (data (i32.const 15024) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\00\d8\00\dc")
 (data (i32.const 15056) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\88\1f")
 (data (i32.const 15088) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\80\1f")
 (data (i32.const 15120) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\8f\1f")
 (data (i32.const 15152) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\87\1f")
 (data (i32.const 15184) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\fc\1f")
 (data (i32.const 15216) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\f3\1f")
 (data (i32.const 15248) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\a3\03")
 (data (i32.const 15280) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\c3\03")
 (data (i32.const 15312) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00 \00\a3\03")
 (data (i32.const 15344) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00 \00\c3\03")
 (data (i32.const 15376) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\a3\03 ")
 (data (i32.const 15408) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\c3\03 ")
 (data (i32.const 15440) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00 \00\a3\03 ")
 (data (i32.const 15472) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00 \00\c3\03 ")
 (data (i32.const 15504) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\a3\03 ")
 (data (i32.const 15536) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\c2\03 ")
 (data (i32.const 15568) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\a3\03\n")
 (data (i32.const 15600) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\c2\03\n")
 (data (i32.const 15632) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00a\00\a3\03")
 (data (i32.const 15664) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00a\00\c2\03")
 (data (i32.const 15696) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\a3\03b")
 (data (i32.const 15728) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\c3\03b")
 (data (i32.const 15760) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\a3\03\a3\03 ")
 (data (i32.const 15792) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\c3\03\c2\03 ")
 (data (i32.const 15824) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\001\00\a3\03 ")
 (data (i32.const 15856) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\001\00\c3\03 ")
 (data (i32.const 15888) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00;\00\a3\03 ")
 (data (i32.const 15920) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00;\00\c3\03 ")
 (data (i32.const 15952) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\01\03\a3\03 ")
 (data (i32.const 15984) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\01\03\c3\03 ")
 (data (i32.const 16016) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00\a3\03\01\03\a3\03\01\03 ")
 (data (i32.const 16048) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00\c3\03\01\03\c2\03\01\03 ")
 (data (i32.const 16080) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\a3\03\a3\03-")
 (data (i32.const 16112) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\c3\03\c2\03-")
 (data (i32.const 16144) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00\a3\03\01\03\a3\03\01\03-")
 (data (i32.const 16176) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00\c3\03\01\03\c2\03\01\03-")
 (data (i32.const 16208) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00\a3\03\01\03\a3\03\01\03*s")
 (data (i32.const 16240) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00\c3\03\01\03\c2\03\01\03*s")
 (data (i32.const 16272) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\005\d8\a2\dc\a3\03")
 (data (i32.const 16304) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\005\d8\a2\dc\c2\03")
 (data (i32.const 16336) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00A\00.\00\a3\03")
 (data (i32.const 16368) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00.\00\c2\03")
 (data (i32.const 16400) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00A\00\ad\00\a3\03")
 (data (i32.const 16432) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\ad\00\c2\03")
 (data (i32.const 16464) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\004\d8B\de\a3\03")
 (data (i32.const 16496) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\004\d8B\de\c2\03")
 (data (i32.const 16528) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00E\03\a3\03")
 (data (i32.const 16560) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00E\03\c3\03")
 (data (i32.const 16592) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\91\03E\03\a3\03")
 (data (i32.const 16624) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\b1\03E\03\c2\03")
 (data (i32.const 16656) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00A\00\a3\03B")
 (data (i32.const 16688) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\00\a3\035\d8\a2\dc")
 (data (i32.const 16720) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\00\c3\035\d8\a2\dc")
 (data (i32.const 16752) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\00\a3\03.\00b")
 (data (i32.const 16784) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\00\c3\03.\00b")
 (data (i32.const 16816) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\00\a3\03\ad\00B")
 (data (i32.const 16848) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\00\c3\03\ad\00b")
 (data (i32.const 16880) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00A\00\a3\034\d8B\deB")
 (data (i32.const 16912) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00a\00\c3\034\d8B\deb")
 (data (i32.const 16944) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00A\00\a3\03E\03")
 (data (i32.const 16976) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\c2\03E\03")
 (data (i32.const 17008) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\00\a3\03E\03\91\03")
 (data (i32.const 17040) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\00\c3\03E\03\b1\03")
 (data (i32.const 17072) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00A\00\0e\18\a3\03")
 (data (i32.const 17104) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\0e\18\c2\03")
 (data (i32.const 17136) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\00\0e\18\a3\03B")
 (data (i32.const 17168) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\00\0e\18\c3\03b")
 (data (i32.const 17200) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00A\00\a3\03\0e\18")
 (data (i32.const 17232) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\c2\03\0e\18")
 (data (i32.const 17264) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\00\a3\03\0e\18B")
 (data (i32.const 17296) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\00\c3\03\0e\18b")
 (data (i32.const 17328) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\00\0e\18\a3\03\0e\18")
 (data (i32.const 17360) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\00\0e\18\c2\03\0e\18")
 (data (i32.const 17392) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00A\00\0e\18\a3\03\0e\18B")
 (data (i32.const 17424) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00a\00\0e\18\c3\03\0e\18b")
 (data (i32.const 17456) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\00\fb")
 (data (i32.const 17488) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00F\00F")
 (data (i32.const 17520) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00F\00I")
 (data (i32.const 17552) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\02\fb")
 (data (i32.const 17584) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00F\00L")
 (data (i32.const 17616) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\03\fb")
 (data (i32.const 17648) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00F\00F\00I")
 (data (i32.const 17680) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\04\fb")
 (data (i32.const 17712) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00F\00F\00L")
 (data (i32.const 17744) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\05\fb")
 (data (i32.const 17776) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00S\00T")
 (data (i32.const 17808) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\06\fb")
 (data (i32.const 17840) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\f0\01")
 (data (i32.const 17872) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00J\00\0c\03")
 (data (i32.const 17904) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\96\1e")
 (data (i32.const 17936) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00H\001\03")
 (data (i32.const 17968) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\97\1e")
 (data (i32.const 18000) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00T\00\08\03")
 (data (i32.const 18032) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\98\1e")
 (data (i32.const 18064) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00W\00\n\03")
 (data (i32.const 18096) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\99\1e")
 (data (i32.const 18128) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00Y\00\n\03")
 (data (i32.const 18160) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\9a\1e")
 (data (i32.const 18192) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00A\00\be\02")
 (data (i32.const 18224) "@\00\00\00\01\00\00\00\01\00\00\00@\00\00\00o\00r\00i\00g\00L\00o\00w\00e\00r\00C\00o\00d\00e\00 \00!\00=\00 \00e\00x\00p\00e\00c\00t\00L\00o\00w\00e\00r\00C\00o\00d\00e")
 (data (i32.const 18304) "@\00\00\00\01\00\00\00\01\00\00\00@\00\00\00o\00r\00i\00g\00U\00p\00p\00e\00r\00C\00o\00d\00e\00 \00!\00=\00 \00e\00x\00p\00e\00c\00t\00U\00p\00p\00e\00r\00C\00o\00d\00e")
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/collectLock (mut i32) (i32.const 0))
 (global $~started (mut i32) (i32.const 0))
 (export "_start" (func $~start))
 (export "memory" (memory $0))
 (func $~lib/string/String#get:length (; 9 ;) (param $0 i32) (result i32)
  local.get $0
  i32.const 16
  i32.sub
  i32.load offset=12
  i32.const 1
  i32.shr_u
 )
 (func $~lib/rt/pure/__retain (; 10 ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.const 18384
  i32.gt_u
  if
   local.get $0
   i32.const 16
   i32.sub
   local.tee $1
   i32.load offset=4
   local.tee $2
   i32.const -268435456
   i32.and
   local.get $2
   i32.const 1
   i32.add
   i32.const -268435456
   i32.and
   i32.ne
   if
    i32.const 0
    i32.const 1056
    i32.const 109
    i32.const 2
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   local.get $2
   i32.const 1
   i32.add
   i32.store offset=4
   local.get $1
   call $~lib/rt/rtrace/onincrement
   local.get $1
   i32.load
   i32.const 1
   i32.and
   if
    i32.const 0
    i32.const 1056
    i32.const 112
    i32.const 13
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $0
 )
 (func $~lib/rt/tlsf/removeBlock (; 11 ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1104
   i32.const 277
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const -4
  i32.and
  local.tee $2
  i32.const 16
  i32.ge_u
  if (result i32)
   local.get $2
   i32.const 1073741808
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 1104
   i32.const 279
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 256
  i32.lt_u
  if
   local.get $2
   i32.const 4
   i32.shr_u
   local.set $2
  else
   local.get $2
   i32.const 31
   local.get $2
   i32.clz
   i32.sub
   local.tee $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $2
   local.get $4
   i32.const 7
   i32.sub
   local.set $4
  end
  local.get $2
  i32.const 16
  i32.lt_u
  i32.const 0
  local.get $4
  i32.const 23
  i32.lt_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 1104
   i32.const 292
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=20
  local.set $3
  local.get $1
  i32.load offset=16
  local.tee $5
  if
   local.get $5
   local.get $3
   i32.store offset=20
  end
  local.get $3
  if
   local.get $3
   local.get $5
   i32.store offset=16
  end
  local.get $1
  local.get $0
  local.get $2
  local.get $4
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  i32.eq
  if
   local.get $0
   local.get $2
   local.get $4
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $3
   i32.store offset=96
   local.get $3
   i32.eqz
   if
    local.get $0
    local.get $4
    i32.const 2
    i32.shl
    i32.add
    local.tee $3
    i32.load offset=4
    i32.const 1
    local.get $2
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.set $1
    local.get $3
    local.get $1
    i32.store offset=4
    local.get $1
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load
     i32.const 1
     local.get $4
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     i32.store
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (; 12 ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 1104
   i32.const 205
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1104
   i32.const 207
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 16
  i32.add
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.add
  local.tee $4
  i32.load
  local.tee $5
  i32.const 1
  i32.and
  if
   local.get $3
   i32.const -4
   i32.and
   i32.const 16
   i32.add
   local.get $5
   i32.const -4
   i32.and
   i32.add
   local.tee $2
   i32.const 1073741808
   i32.lt_u
   if
    local.get $0
    local.get $4
    call $~lib/rt/tlsf/removeBlock
    local.get $1
    local.get $2
    local.get $3
    i32.const 3
    i32.and
    i32.or
    local.tee $3
    i32.store
    local.get $1
    i32.const 16
    i32.add
    local.get $1
    i32.load
    i32.const -4
    i32.and
    i32.add
    local.tee $4
    i32.load
    local.set $5
   end
  end
  local.get $3
  i32.const 2
  i32.and
  if
   local.get $1
   i32.const 4
   i32.sub
   i32.load
   local.tee $2
   i32.load
   local.tee $7
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 1104
    i32.const 228
    i32.const 15
    call $~lib/builtins/abort
    unreachable
   end
   local.get $7
   i32.const -4
   i32.and
   i32.const 16
   i32.add
   local.get $3
   i32.const -4
   i32.and
   i32.add
   local.tee $8
   i32.const 1073741808
   i32.lt_u
   if
    local.get $0
    local.get $2
    call $~lib/rt/tlsf/removeBlock
    local.get $2
    local.get $8
    local.get $7
    i32.const 3
    i32.and
    i32.or
    local.tee $3
    i32.store
    local.get $2
    local.set $1
   end
  end
  local.get $4
  local.get $5
  i32.const 2
  i32.or
  i32.store
  local.get $3
  i32.const -4
  i32.and
  local.tee $2
  i32.const 16
  i32.ge_u
  if (result i32)
   local.get $2
   i32.const 1073741808
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 1104
   i32.const 243
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.get $1
  i32.const 16
  i32.add
  i32.add
  local.get $4
  i32.ne
  if
   i32.const 0
   i32.const 1104
   i32.const 244
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store
  local.get $2
  i32.const 256
  i32.lt_u
  if
   local.get $2
   i32.const 4
   i32.shr_u
   local.set $2
  else
   local.get $2
   i32.const 31
   local.get $2
   i32.clz
   i32.sub
   local.tee $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $2
   local.get $3
   i32.const 7
   i32.sub
   local.set $6
  end
  local.get $2
  i32.const 16
  i32.lt_u
  i32.const 0
  local.get $6
  i32.const 23
  i32.lt_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 1104
   i32.const 260
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  local.get $6
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  local.set $3
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $1
  local.get $3
  i32.store offset=20
  local.get $3
  if
   local.get $3
   local.get $1
   i32.store offset=16
  end
  local.get $0
  local.get $2
  local.get $6
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store offset=96
  local.get $0
  local.get $0
  i32.load
  i32.const 1
  local.get $6
  i32.shl
  i32.or
  i32.store
  local.get $0
  local.get $6
  i32.const 2
  i32.shl
  i32.add
  local.tee $0
  local.get $0
  i32.load offset=4
  i32.const 1
  local.get $2
  i32.shl
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (; 13 ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  i32.const 15
  i32.and
  i32.eqz
  i32.const 0
  local.get $1
  i32.const 15
  i32.and
  i32.eqz
  i32.const 0
  local.get $1
  local.get $2
  i32.le_u
  select
  select
  i32.eqz
  if
   i32.const 0
   i32.const 1104
   i32.const 386
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=1568
  local.tee $3
  if
   local.get $1
   local.get $3
   i32.const 16
   i32.add
   i32.lt_u
   if
    i32.const 0
    i32.const 1104
    i32.const 396
    i32.const 15
    call $~lib/builtins/abort
    unreachable
   end
   local.get $3
   local.get $1
   i32.const 16
   i32.sub
   i32.eq
   if
    local.get $3
    i32.load
    local.set $4
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
   end
  else
   local.get $1
   local.get $0
   i32.const 1572
   i32.add
   i32.lt_u
   if
    i32.const 0
    i32.const 1104
    i32.const 408
    i32.const 4
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  local.get $1
  i32.sub
  local.tee $2
  i32.const 48
  i32.lt_u
  if
   return
  end
  local.get $1
  local.get $4
  i32.const 2
  i32.and
  local.get $2
  i32.const 32
  i32.sub
  i32.const 1
  i32.or
  i32.or
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $1
  i32.const 0
  i32.store offset=20
  local.get $1
  local.get $2
  i32.add
  i32.const 16
  i32.sub
  local.tee $2
  i32.const 2
  i32.store
  local.get $0
  local.get $2
  i32.store offset=1568
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/maybeInitialize (; 14 ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/rt/tlsf/ROOT
  local.tee $0
  i32.eqz
  if
   i32.const 1
   memory.size
   local.tee $0
   i32.gt_s
   if (result i32)
    i32.const 1
    local.get $0
    i32.sub
    memory.grow
    i32.const 0
    i32.lt_s
   else
    i32.const 0
   end
   if
    unreachable
   end
   i32.const 18384
   local.tee $0
   i32.const 0
   i32.store
   i32.const 19952
   i32.const 0
   i32.store
   loop $for-loop|0
    local.get $1
    i32.const 23
    i32.lt_u
    if
     local.get $1
     i32.const 2
     i32.shl
     i32.const 18384
     i32.add
     i32.const 0
     i32.store offset=4
     i32.const 0
     local.set $2
     loop $for-loop|1
      local.get $2
      i32.const 16
      i32.lt_u
      if
       local.get $2
       local.get $1
       i32.const 4
       i32.shl
       i32.add
       i32.const 2
       i32.shl
       i32.const 18384
       i32.add
       i32.const 0
       i32.store offset=96
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   i32.const 18384
   i32.const 19968
   memory.size
   i32.const 16
   i32.shl
   call $~lib/rt/tlsf/addMemory
   i32.const 18384
   global.set $~lib/rt/tlsf/ROOT
  end
  local.get $0
 )
 (func $~lib/rt/tlsf/prepareSize (; 15 ;) (param $0 i32) (result i32)
  local.get $0
  i32.const 1073741808
  i32.ge_u
  if
   i32.const 1152
   i32.const 1104
   i32.const 457
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  local.tee $0
  i32.const 16
  local.get $0
  i32.const 16
  i32.gt_u
  select
 )
 (func $~lib/rt/tlsf/searchBlock (; 16 ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if
   local.get $1
   i32.const 4
   i32.shr_u
   local.set $1
  else
   local.get $1
   i32.const 536870904
   i32.lt_u
   if
    local.get $1
    i32.const 1
    i32.const 27
    local.get $1
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
    local.set $1
   end
   local.get $1
   i32.const 31
   local.get $1
   i32.clz
   i32.sub
   local.tee $2
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $1
   local.get $2
   i32.const 7
   i32.sub
   local.set $2
  end
  local.get $1
  i32.const 16
  i32.lt_u
  i32.const 0
  local.get $2
  i32.const 23
  i32.lt_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 1104
   i32.const 338
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const -1
  local.get $1
  i32.shl
  i32.and
  local.tee $1
  if (result i32)
   local.get $0
   local.get $1
   i32.ctz
   local.get $2
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
  else
   local.get $0
   i32.load
   i32.const -1
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.tee $1
   if (result i32)
    local.get $0
    local.get $1
    i32.ctz
    local.tee $1
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.tee $2
    i32.eqz
    if
     i32.const 0
     i32.const 1104
     i32.const 351
     i32.const 17
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.ctz
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=96
   else
    i32.const 0
   end
  end
 )
 (func $~lib/rt/tlsf/prepareBlock (; 17 ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i32.load
  local.set $3
  local.get $2
  i32.const 15
  i32.and
  if
   i32.const 0
   i32.const 1104
   i32.const 365
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const -4
  i32.and
  local.get $2
  i32.sub
  local.tee $4
  i32.const 32
  i32.ge_u
  if
   local.get $1
   local.get $2
   local.get $3
   i32.const 2
   i32.and
   i32.or
   i32.store
   local.get $2
   local.get $1
   i32.const 16
   i32.add
   i32.add
   local.tee $1
   local.get $4
   i32.const 16
   i32.sub
   i32.const 1
   i32.or
   i32.store
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $1
   local.get $3
   i32.const -2
   i32.and
   i32.store
   local.get $1
   i32.const 16
   i32.add
   local.tee $0
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.get $0
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   i32.load
   i32.const -3
   i32.and
   i32.store
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (; 18 ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  global.get $~lib/rt/tlsf/collectLock
  if
   i32.const 0
   i32.const 1104
   i32.const 490
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/prepareSize
  local.tee $4
  call $~lib/rt/tlsf/searchBlock
  local.tee $3
  i32.eqz
  if
   i32.const 1
   global.set $~lib/rt/tlsf/collectLock
   i32.const 0
   global.set $~lib/rt/tlsf/collectLock
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/searchBlock
   local.tee $3
   i32.eqz
   if
    i32.const 16
    memory.size
    local.tee $3
    i32.const 16
    i32.shl
    i32.const 16
    i32.sub
    local.get $0
    i32.load offset=1568
    i32.ne
    i32.shl
    local.get $4
    i32.const 1
    i32.const 27
    local.get $4
    i32.clz
    i32.sub
    i32.shl
    i32.const 1
    i32.sub
    i32.add
    local.get $4
    local.get $4
    i32.const 536870904
    i32.lt_u
    select
    i32.add
    i32.const 65535
    i32.add
    i32.const -65536
    i32.and
    i32.const 16
    i32.shr_u
    local.set $5
    local.get $3
    local.get $5
    local.get $3
    local.get $5
    i32.gt_s
    select
    memory.grow
    i32.const 0
    i32.lt_s
    if
     local.get $5
     memory.grow
     i32.const 0
     i32.lt_s
     if
      unreachable
     end
    end
    local.get $0
    local.get $3
    i32.const 16
    i32.shl
    memory.size
    i32.const 16
    i32.shl
    call $~lib/rt/tlsf/addMemory
    local.get $0
    local.get $4
    call $~lib/rt/tlsf/searchBlock
    local.tee $3
    i32.eqz
    if
     i32.const 0
     i32.const 1104
     i32.const 502
     i32.const 19
     call $~lib/builtins/abort
     unreachable
    end
   end
  end
  local.get $3
  i32.load
  i32.const -4
  i32.and
  local.get $4
  i32.lt_u
  if
   i32.const 0
   i32.const 1104
   i32.const 510
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const 0
  i32.store offset=4
  local.get $3
  local.get $2
  i32.store offset=8
  local.get $3
  local.get $1
  i32.store offset=12
  local.get $0
  local.get $3
  call $~lib/rt/tlsf/removeBlock
  local.get $0
  local.get $3
  local.get $4
  call $~lib/rt/tlsf/prepareBlock
  local.get $3
  call $~lib/rt/rtrace/onalloc
  local.get $3
 )
 (func $~lib/rt/tlsf/__alloc (; 19 ;) (param $0 i32) (result i32)
  call $~lib/rt/tlsf/maybeInitialize
  local.get $0
  i32.const 1
  call $~lib/rt/tlsf/allocateBlock
  i32.const 16
  i32.add
 )
 (func $~lib/util/casemap/casemap (; 20 ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.const 8
  i32.shr_u
  local.tee $2
  i32.const 5744
  i32.add
  i32.load8_u
  local.get $2
  i32.const 2048
  i32.add
  i32.load8_u
  i32.const 86
  i32.mul
  i32.const 2048
  i32.add
  local.get $0
  i32.const 255
  i32.and
  local.tee $5
  i32.const 3
  i32.div_u
  i32.add
  i32.load8_u
  local.get $5
  i32.const 3
  i32.rem_u
  i32.const 2
  i32.shl
  i32.const 4736
  i32.add
  i32.load
  i32.mul
  i32.const 11
  i32.shr_u
  i32.const 6
  i32.rem_u
  i32.add
  i32.const 2
  i32.shl
  i32.const 4768
  i32.add
  i32.load
  local.tee $2
  i32.const 8
  i32.shr_s
  local.set $3
  block $folding-inner0
   local.get $2
   i32.const 255
   i32.and
   local.tee $2
   i32.const 2
   i32.lt_u
   br_if $folding-inner0
   local.get $3
   i32.const 255
   i32.and
   local.set $2
   local.get $3
   i32.const 8
   i32.shr_u
   local.set $4
   loop $while-continue|0
    local.get $2
    if
     local.get $5
     local.get $4
     local.get $2
     i32.const 1
     i32.shr_u
     local.tee $3
     i32.add
     i32.const 1
     i32.shl
     i32.const 6272
     i32.add
     i32.load8_u
     local.tee $6
     i32.eq
     if (result i32)
      local.get $3
      local.get $4
      i32.add
      i32.const 1
      i32.shl
      i32.const 6272
      i32.add
      i32.load8_u offset=1
      i32.const 2
      i32.shl
      i32.const 4768
      i32.add
      i32.load
      local.tee $2
      i32.const 8
      i32.shr_s
      local.set $3
      local.get $2
      i32.const 255
      i32.and
      local.tee $2
      i32.const 2
      i32.lt_u
      br_if $folding-inner0
      local.get $0
      i32.const 1
      i32.add
      local.get $1
      i32.const 1
      i32.shl
      i32.sub
      return
     else
      local.get $6
      local.get $5
      i32.gt_u
      if (result i32)
       local.get $3
      else
       local.get $3
       local.get $4
       i32.add
       local.set $4
       local.get $2
       local.get $3
       i32.sub
      end
     end
     local.set $2
     br $while-continue|0
    end
   end
   local.get $0
   return
  end
  local.get $0
  local.get $3
  i32.const 0
  local.get $1
  local.get $2
  i32.xor
  i32.sub
  i32.and
  i32.add
 )
 (func $~lib/memory/memory.copy (; 21 ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  block $~lib/util/memory/memmove|inlined.0
   local.get $2
   local.set $4
   local.get $0
   local.get $1
   i32.eq
   br_if $~lib/util/memory/memmove|inlined.0
   local.get $0
   local.get $1
   i32.lt_u
   if
    local.get $1
    i32.const 7
    i32.and
    local.get $0
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|0
      local.get $0
      i32.const 7
      i32.and
      if
       local.get $4
       i32.eqz
       br_if $~lib/util/memory/memmove|inlined.0
       local.get $4
       i32.const 1
       i32.sub
       local.set $4
       local.get $0
       local.tee $2
       i32.const 1
       i32.add
       local.set $0
       local.get $1
       local.tee $3
       i32.const 1
       i32.add
       local.set $1
       local.get $2
       local.get $3
       i32.load8_u
       i32.store8
       br $while-continue|0
      end
     end
     loop $while-continue|1
      local.get $4
      i32.const 8
      i32.ge_u
      if
       local.get $0
       local.get $1
       i64.load
       i64.store
       local.get $4
       i32.const 8
       i32.sub
       local.set $4
       local.get $0
       i32.const 8
       i32.add
       local.set $0
       local.get $1
       i32.const 8
       i32.add
       local.set $1
       br $while-continue|1
      end
     end
    end
    loop $while-continue|2
     local.get $4
     if
      local.get $0
      local.tee $2
      i32.const 1
      i32.add
      local.set $0
      local.get $1
      local.tee $3
      i32.const 1
      i32.add
      local.set $1
      local.get $2
      local.get $3
      i32.load8_u
      i32.store8
      local.get $4
      i32.const 1
      i32.sub
      local.set $4
      br $while-continue|2
     end
    end
   else
    local.get $1
    i32.const 7
    i32.and
    local.get $0
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|3
      local.get $0
      local.get $4
      i32.add
      i32.const 7
      i32.and
      if
       local.get $4
       i32.eqz
       br_if $~lib/util/memory/memmove|inlined.0
       local.get $4
       i32.const 1
       i32.sub
       local.tee $4
       local.get $0
       i32.add
       local.get $1
       local.get $4
       i32.add
       i32.load8_u
       i32.store8
       br $while-continue|3
      end
     end
     loop $while-continue|4
      local.get $4
      i32.const 8
      i32.ge_u
      if
       local.get $4
       i32.const 8
       i32.sub
       local.tee $4
       local.get $0
       i32.add
       local.get $1
       local.get $4
       i32.add
       i64.load
       i64.store
       br $while-continue|4
      end
     end
    end
    loop $while-continue|5
     local.get $4
     if
      local.get $4
      i32.const 1
      i32.sub
      local.tee $4
      local.get $0
      i32.add
      local.get $1
      local.get $4
      i32.add
      i32.load8_u
      i32.store8
      br $while-continue|5
     end
    end
   end
  end
 )
 (func $~lib/rt/tlsf/freeBlock (; 22 ;) (param $0 i32) (param $1 i32)
  local.get $1
  local.get $1
  i32.load
  i32.const 1
  i32.or
  i32.store
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
  local.get $1
  call $~lib/rt/rtrace/onfree
 )
 (func $~lib/rt/tlsf/reallocateBlock (; 23 ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $2
  call $~lib/rt/tlsf/prepareSize
  local.tee $3
  local.get $1
  i32.load
  local.tee $5
  i32.const -4
  i32.and
  i32.le_u
  if
   local.get $0
   local.get $1
   local.get $3
   call $~lib/rt/tlsf/prepareBlock
   local.get $1
   local.get $2
   i32.store offset=12
   local.get $1
   return
  end
  local.get $1
  i32.const 16
  i32.add
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.add
  local.tee $6
  i32.load
  local.tee $4
  i32.const 1
  i32.and
  if
   local.get $5
   i32.const -4
   i32.and
   i32.const 16
   i32.add
   local.get $4
   i32.const -4
   i32.and
   i32.add
   local.tee $4
   local.get $3
   i32.ge_u
   if
    local.get $0
    local.get $6
    call $~lib/rt/tlsf/removeBlock
    local.get $1
    local.get $4
    local.get $5
    i32.const 3
    i32.and
    i32.or
    i32.store
    local.get $1
    local.get $2
    i32.store offset=12
    local.get $0
    local.get $1
    local.get $3
    call $~lib/rt/tlsf/prepareBlock
    local.get $1
    return
   end
  end
  local.get $0
  local.get $2
  local.get $1
  i32.load offset=8
  call $~lib/rt/tlsf/allocateBlock
  local.tee $3
  local.get $1
  i32.load offset=4
  i32.store offset=4
  local.get $3
  i32.const 16
  i32.add
  local.get $1
  i32.const 16
  i32.add
  local.get $2
  call $~lib/memory/memory.copy
  local.get $1
  i32.const 18384
  i32.ge_u
  if
   local.get $1
   local.get $3
   call $~lib/rt/rtrace/onrealloc
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/freeBlock
  end
  local.get $3
 )
 (func $~lib/rt/tlsf/__realloc (; 24 ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  call $~lib/rt/tlsf/maybeInitialize
  local.get $0
  i32.const 16
  i32.sub
  local.set $2
  local.get $0
  i32.const 15
  i32.and
  i32.eqz
  i32.const 0
  local.get $0
  select
  if (result i32)
   local.get $2
   i32.load
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $2
   i32.load offset=4
   i32.const -268435456
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 1104
   i32.const 570
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.get $1
  call $~lib/rt/tlsf/reallocateBlock
  i32.const 16
  i32.add
 )
 (func $~lib/string/String#toUpperCase (; 25 ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $0
  call $~lib/string/String#get:length
  local.tee $6
  i32.eqz
  if
   local.get $0
   call $~lib/rt/pure/__retain
   return
  end
  local.get $6
  i32.const 3
  i32.mul
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $8
  i32.const 1216
  call $~lib/string/String#get:length
  local.set $3
  loop $for-loop|0
   local.get $7
   local.get $6
   i32.lt_u
   if
    local.get $0
    local.get $7
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    local.tee $2
    i32.const 7
    i32.shr_u
    if
     block $for-continue|0
      local.get $7
      local.get $6
      i32.const 1
      i32.sub
      i32.lt_u
      i32.const 0
      local.get $2
      i32.const 55295
      i32.sub
      i32.const 1025
      i32.lt_u
      select
      if
       local.get $0
       local.get $7
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u offset=2
       local.tee $9
       i32.const 56319
       i32.sub
       i32.const 1025
       i32.lt_u
       if
        local.get $7
        i32.const 1
        i32.add
        local.set $7
        local.get $9
        i32.const 1023
        i32.and
        local.get $2
        local.tee $1
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.or
        i32.const 65536
        i32.add
        local.tee $2
        i32.const 131072
        i32.ge_u
        if
         local.get $8
         local.get $10
         i32.const 1
         i32.shl
         i32.add
         local.get $1
         local.get $9
         i32.const 16
         i32.shl
         i32.or
         i32.store
         local.get $10
         i32.const 1
         i32.add
         local.set $10
         br $for-continue|0
        end
       end
      end
      local.get $2
      i32.const 9424
      i32.sub
      i32.const 25
      i32.le_u
      if
       local.get $8
       local.get $10
       i32.const 1
       i32.shl
       i32.add
       local.get $2
       i32.const 26
       i32.sub
       i32.store16
      else
       i32.const -1
       local.set $1
       local.get $2
       i32.const 223
       i32.sub
       i32.const 64056
       i32.le_u
       if
        block $~lib/util/casemap/bsearch|inlined.0 (result i32)
         local.get $3
         local.set $1
         i32.const 0
         local.set $5
         loop $while-continue|1
          local.get $5
          local.get $1
          i32.le_s
          if
           local.get $1
           local.get $5
           i32.add
           i32.const 3
           i32.shr_u
           i32.const 2
           i32.shl
           local.tee $9
           i32.const 1
           i32.shl
           i32.const 1216
           i32.add
           i32.load16_u
           local.get $2
           i32.sub
           local.tee $4
           if
            local.get $4
            i32.const 31
            i32.shr_u
            if
             local.get $9
             i32.const 4
             i32.add
             local.set $5
            else
             local.get $9
             i32.const 4
             i32.sub
             local.set $1
            end
           else
            local.get $9
            br $~lib/util/casemap/bsearch|inlined.0
           end
           br $while-continue|1
          end
         end
         i32.const -1
        end
        local.set $1
       end
       local.get $1
       i32.const -1
       i32.xor
       if
        local.get $1
        i32.const 1
        i32.shl
        i32.const 1216
        i32.add
        local.tee $1
        i32.load16_u offset=6
        local.set $2
        local.get $8
        local.get $10
        i32.const 1
        i32.shl
        i32.add
        local.tee $9
        local.get $1
        i32.load offset=2
        i32.store
        local.get $9
        local.get $2
        i32.store16 offset=4
        local.get $10
        local.get $2
        i32.const 0
        i32.ne
        i32.const 1
        i32.add
        i32.add
        local.set $10
       else
        local.get $2
        i32.const 1
        call $~lib/util/casemap/casemap
        i32.const 2097151
        i32.and
        local.tee $2
        i32.const 65536
        i32.lt_s
        if
         local.get $8
         local.get $10
         i32.const 1
         i32.shl
         i32.add
         local.get $2
         i32.store16
        else
         local.get $8
         local.get $10
         i32.const 1
         i32.shl
         i32.add
         local.get $2
         i32.const 65536
         i32.sub
         local.tee $2
         i32.const 10
         i32.shr_u
         i32.const 55296
         i32.or
         local.get $2
         i32.const 1023
         i32.and
         i32.const 56320
         i32.or
         i32.const 16
         i32.shl
         i32.or
         i32.store
         local.get $10
         i32.const 1
         i32.add
         local.set $10
        end
       end
      end
     end
    else
     local.get $8
     local.get $10
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $2
     i32.const 97
     i32.sub
     i32.const 26
     i32.lt_u
     i32.const 0
     i32.ne
     i32.const 5
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     i32.store16
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    local.get $10
    i32.const 1
    i32.add
    local.set $10
    br $for-loop|0
   end
  end
  local.get $8
  local.get $10
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__realloc
  call $~lib/rt/pure/__retain
 )
 (func $~lib/rt/pure/__release (; 26 ;) (param $0 i32)
  local.get $0
  i32.const 18384
  i32.gt_u
  if
   local.get $0
   i32.const 16
   i32.sub
   call $~lib/rt/pure/decrement
  end
 )
 (func $~lib/util/string/compareImpl (; 27 ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.const 7
  i32.and
  local.get $1
  i32.const 7
  i32.and
  i32.or
  i32.eqz
  i32.const 0
  local.get $2
  i32.const 4
  i32.ge_u
  select
  if
   loop $do-continue|0
    local.get $0
    i64.load
    local.get $1
    i64.load
    i64.eq
    if
     local.get $0
     i32.const 8
     i32.add
     local.set $0
     local.get $1
     i32.const 8
     i32.add
     local.set $1
     local.get $2
     i32.const 4
     i32.sub
     local.tee $2
     i32.const 4
     i32.ge_u
     br_if $do-continue|0
    end
   end
  end
  loop $while-continue|1
   local.get $2
   local.tee $3
   i32.const 1
   i32.sub
   local.set $2
   local.get $3
   if
    local.get $0
    i32.load16_u
    local.tee $3
    local.get $1
    i32.load16_u
    local.tee $4
    i32.ne
    if
     local.get $3
     local.get $4
     i32.sub
     return
    end
    local.get $0
    i32.const 2
    i32.add
    local.set $0
    local.get $1
    i32.const 2
    i32.add
    local.set $1
    br $while-continue|1
   end
  end
  i32.const 0
 )
 (func $~lib/string/String.__eq (; 28 ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   return
  end
  local.get $1
  i32.eqz
  i32.const 1
  local.get $0
  select
  if
   i32.const 0
   return
  end
  local.get $0
  call $~lib/string/String#get:length
  local.tee $2
  local.get $1
  call $~lib/string/String#get:length
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/util/string/compareImpl
  i32.eqz
 )
 (func $~lib/util/string/stagedBinaryLookup (; 29 ;) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $0
  local.get $1
  i32.const 8
  i32.shr_u
  i32.add
  i32.load8_u
  i32.const 5
  i32.shl
  i32.add
  local.get $1
  i32.const 255
  i32.and
  i32.const 3
  i32.shr_u
  i32.add
  i32.load8_u
  local.get $1
  i32.const 7
  i32.and
  i32.shr_u
  i32.const 1
  i32.and
 )
 (func $~lib/string/String#toLowerCase (; 30 ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $0
  call $~lib/string/String#get:length
  local.tee $7
  i32.eqz
  if
   local.get $0
   call $~lib/rt/pure/__retain
   return
  end
  local.get $7
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $9
  loop $for-loop|0
   local.get $6
   local.get $7
   i32.lt_u
   if
    local.get $0
    local.get $6
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    local.tee $2
    i32.const 7
    i32.shr_u
    if
     block $for-continue|0
      local.get $6
      local.get $7
      i32.const 1
      i32.sub
      i32.lt_u
      i32.const 0
      local.get $2
      i32.const 55295
      i32.sub
      i32.const 1025
      i32.lt_u
      select
      if
       local.get $0
       local.get $6
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u offset=2
       local.tee $4
       i32.const 56319
       i32.sub
       i32.const 1025
       i32.lt_u
       if
        local.get $6
        i32.const 1
        i32.add
        local.set $6
        local.get $4
        i32.const 1023
        i32.and
        local.get $2
        local.tee $1
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.or
        i32.const 65536
        i32.add
        local.tee $2
        i32.const 131072
        i32.ge_u
        if
         local.get $9
         local.get $8
         i32.const 1
         i32.shl
         i32.add
         local.get $1
         local.get $4
         i32.const 16
         i32.shl
         i32.or
         i32.store
         local.get $8
         i32.const 1
         i32.add
         local.set $8
         br $for-continue|0
        end
       end
      end
      local.get $2
      i32.const 304
      i32.eq
      if
       local.get $9
       local.get $8
       i32.const 1
       i32.shl
       i32.add
       i32.const 50790505
       i32.store
       local.get $8
       i32.const 1
       i32.add
       local.set $8
      else
       local.get $2
       i32.const 931
       i32.eq
       if
        local.get $9
        local.get $8
        i32.const 1
        i32.shl
        i32.add
        local.get $7
        i32.const 1
        i32.gt_u
        if (result i32)
         block $~lib/util/string/isFinalSigma|inlined.0 (result i32)
          local.get $0
          local.set $4
          i32.const 0
          local.set $10
          local.get $6
          i32.const 0
          local.get $6
          local.tee $2
          i32.const 30
          i32.sub
          local.tee $1
          i32.const 0
          local.get $1
          i32.gt_s
          select
          local.set $11
          loop $while-continue|1
           local.get $2
           local.get $11
           i32.gt_s
           if
            block $~lib/util/string/codePointBefore|inlined.0 (result i32)
             local.get $2
             local.set $1
             i32.const -1
             local.get $2
             i32.const 0
             i32.le_s
             br_if $~lib/util/string/codePointBefore|inlined.0
             drop
             local.get $0
             local.get $1
             i32.const 1
             i32.sub
             i32.const 1
             i32.shl
             i32.add
             i32.load16_u
             local.tee $3
             i32.const 64512
             i32.and
             i32.const 56320
             i32.eq
             local.get $1
             i32.const 2
             i32.sub
             i32.const 0
             i32.ge_s
             i32.and
             if
              local.get $0
              local.get $1
              i32.const 2
              i32.sub
              i32.const 1
              i32.shl
              i32.add
              i32.load16_u
              local.tee $1
              i32.const 64512
              i32.and
              i32.const 55296
              i32.eq
              if
               local.get $3
               i32.const 1023
               i32.and
               local.get $1
               i32.const 1023
               i32.and
               i32.const 10
               i32.shl
               i32.add
               i32.const 65536
               i32.add
               br $~lib/util/string/codePointBefore|inlined.0
              end
             end
             i32.const 65533
             local.get $3
             local.get $3
             i32.const 63488
             i32.and
             i32.const 55296
             i32.eq
             select
            end
            local.tee $1
            local.set $3
            local.get $1
            i32.const 918000
            i32.lt_u
            if (result i32)
             i32.const 6768
             local.get $3
             call $~lib/util/string/stagedBinaryLookup
            else
             i32.const 0
            end
            i32.eqz
            if
             i32.const 0
             local.get $1
             i32.const 127370
             i32.lt_u
             if (result i32)
              i32.const 9760
              local.get $1
              call $~lib/util/string/stagedBinaryLookup
             else
              i32.const 0
             end
             i32.eqz
             br_if $~lib/util/string/isFinalSigma|inlined.0
             drop
             i32.const 1
             local.set $10
            end
            local.get $2
            local.get $1
            i32.const 65536
            i32.ge_s
            i32.const 1
            i32.add
            i32.sub
            local.set $2
            br $while-continue|1
           end
          end
          i32.const 0
          local.get $10
          i32.eqz
          br_if $~lib/util/string/isFinalSigma|inlined.0
          drop
          i32.const 1
          i32.add
          local.tee $2
          i32.const 30
          i32.add
          local.tee $1
          local.get $7
          local.get $1
          local.get $7
          i32.lt_s
          select
          local.set $5
          loop $while-continue|2
           local.get $2
           local.get $5
           i32.lt_s
           if
            local.get $0
            local.get $2
            i32.const 1
            i32.shl
            i32.add
            i32.load16_u
            local.tee $1
            i32.const 64512
            i32.and
            i32.const 55296
            i32.eq
            local.get $7
            local.get $2
            i32.const 1
            i32.add
            i32.ne
            i32.and
            if
             local.get $0
             local.get $2
             i32.const 1
             i32.shl
             i32.add
             i32.load16_u offset=2
             local.tee $3
             i32.const 64512
             i32.and
             i32.const 56320
             i32.eq
             if
              local.get $1
              i32.const 10
              i32.shl
              local.get $3
              i32.add
              i32.const -56613888
              i32.add
              local.set $1
             end
            end
            local.get $1
            local.tee $3
            i32.const 918000
            i32.lt_u
            if (result i32)
             i32.const 6768
             local.get $3
             call $~lib/util/string/stagedBinaryLookup
            else
             i32.const 0
            end
            i32.eqz
            if
             local.get $3
             local.tee $2
             i32.const 127370
             i32.lt_u
             if (result i32)
              i32.const 9760
              local.get $2
              call $~lib/util/string/stagedBinaryLookup
             else
              i32.const 0
             end
             i32.eqz
             br $~lib/util/string/isFinalSigma|inlined.0
            end
            local.get $2
            local.get $3
            i32.const 65536
            i32.ge_u
            i32.const 1
            i32.add
            i32.add
            local.set $2
            br $while-continue|2
           end
          end
          i32.const 1
         end
        else
         i32.const 0
        end
        if (result i32)
         i32.const 962
        else
         i32.const 963
        end
        i32.store16
       else
        local.get $2
        i32.const 9398
        i32.sub
        i32.const 25
        i32.le_u
        if
         local.get $9
         local.get $8
         i32.const 1
         i32.shl
         i32.add
         local.get $2
         i32.const 26
         i32.add
         i32.store16
        else
         local.get $2
         i32.const 0
         call $~lib/util/casemap/casemap
         i32.const 2097151
         i32.and
         local.tee $2
         i32.const 65536
         i32.lt_s
         if
          local.get $9
          local.get $8
          i32.const 1
          i32.shl
          i32.add
          local.get $2
          i32.store16
         else
          local.get $9
          local.get $8
          i32.const 1
          i32.shl
          i32.add
          local.get $2
          i32.const 65536
          i32.sub
          local.tee $2
          i32.const 10
          i32.shr_u
          i32.const 55296
          i32.or
          local.get $2
          i32.const 1023
          i32.and
          i32.const 56320
          i32.or
          i32.const 16
          i32.shl
          i32.or
          i32.store
          local.get $8
          i32.const 1
          i32.add
          local.set $8
         end
        end
       end
      end
     end
    else
     local.get $9
     local.get $8
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $2
     i32.const 65
     i32.sub
     i32.const 26
     i32.lt_u
     i32.const 0
     i32.ne
     i32.const 5
     i32.shl
     i32.or
     i32.store16
    end
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    local.get $8
    i32.const 1
    i32.add
    local.set $8
    br $for-loop|0
   end
  end
  local.get $9
  local.get $8
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__realloc
  call $~lib/rt/pure/__retain
 )
 (func $~lib/string/String.fromCodePoint (; 31 ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.const 1114111
  i32.gt_u
  if
   i32.const 0
   i32.const 14992
   i32.const 33
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 2
  local.get $0
  i32.const 65535
  i32.gt_s
  local.tee $2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $1
  local.get $2
  if
   local.get $1
   local.get $0
   i32.const 65536
   i32.sub
   local.tee $0
   i32.const 10
   i32.shr_u
   i32.const 55296
   i32.or
   local.get $0
   i32.const 1023
   i32.and
   i32.const 56320
   i32.or
   i32.const 16
   i32.shl
   i32.or
   i32.store
  else
   local.get $1
   local.get $0
   i32.store16
  end
  local.get $1
  call $~lib/rt/pure/__retain
 )
 (func $~lib/string/String#codePointAt (; 32 ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  local.get $0
  call $~lib/string/String#get:length
  local.tee $3
  i32.ge_u
  if
   i32.const -1
   return
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
  local.tee $2
  i32.const 64512
  i32.and
  i32.const 55296
  i32.ne
  if (result i32)
   i32.const 1
  else
   local.get $3
   local.get $1
   i32.const 1
   i32.add
   i32.eq
  end
  if
   local.get $2
   return
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u offset=2
  local.tee $0
  i32.const 64512
  i32.and
  i32.const 56320
  i32.ne
  if
   local.get $2
   return
  end
  local.get $2
  i32.const 10
  i32.shl
  local.get $0
  i32.add
  i32.const -56613888
  i32.add
 )
 (func $start:std/string-casemapping (; 33 ;)
  (local $0 i64)
  (local $1 i64)
  (local $2 i64)
  (local $3 i32)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $73 i32)
  (local $74 i32)
  (local $75 i32)
  (local $76 i32)
  (local $77 i32)
  (local $78 i32)
  (local $79 i32)
  (local $80 i32)
  (local $81 i32)
  (local $82 i32)
  (local $83 i32)
  (local $84 i32)
  (local $85 i32)
  (local $86 i32)
  (local $87 i32)
  (local $88 i32)
  (local $89 i32)
  (local $90 i32)
  (local $91 i32)
  (local $92 i32)
  (local $93 i32)
  (local $94 i32)
  i32.const 1040
  call $~lib/string/String#toUpperCase
  local.tee $9
  i32.const 1040
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 8
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 1040
  call $~lib/string/String#toLowerCase
  local.tee $10
  i32.const 1040
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 9
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 11344
  call $~lib/string/String#toUpperCase
  local.tee $11
  i32.const 11392
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 10
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 11440
  call $~lib/string/String#toLowerCase
  local.tee $12
  i32.const 11488
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 11
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 11536
  call $~lib/string/String#toUpperCase
  local.tee $13
  i32.const 11632
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 12
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 11632
  call $~lib/string/String#toLowerCase
  local.tee $14
  i32.const 11728
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 13
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 11824
  call $~lib/string/String#toUpperCase
  local.tee $15
  i32.const 11888
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 14
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 11888
  call $~lib/string/String#toLowerCase
  local.tee $16
  i32.const 11952
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 15
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12016
  call $~lib/string/String#toUpperCase
  local.tee $17
  i32.const 12112
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 16
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12112
  call $~lib/string/String#toLowerCase
  local.tee $18
  i32.const 12208
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 17
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12304
  call $~lib/string/String#toUpperCase
  local.tee $19
  i32.const 12400
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 18
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12400
  call $~lib/string/String#toLowerCase
  local.tee $20
  i32.const 12496
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 19
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12592
  call $~lib/string/String#toUpperCase
  local.tee $21
  i32.const 12656
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 20
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12720
  call $~lib/string/String#toUpperCase
  local.tee $22
  i32.const 12784
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 21
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12864
  call $~lib/string/String#toUpperCase
  local.tee $23
  i32.const 12928
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 22
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12992
  call $~lib/string/String#toUpperCase
  local.tee $24
  i32.const 13072
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 23
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 13152
  call $~lib/string/String#toUpperCase
  local.tee $25
  i32.const 13216
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 24
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 13280
  call $~lib/string/String#toUpperCase
  local.tee $26
  i32.const 13344
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 25
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 13408
  call $~lib/string/String#toUpperCase
  local.tee $27
  i32.const 13488
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 26
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 13568
  call $~lib/string/String#toUpperCase
  local.tee $28
  i32.const 13648
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 27
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 13728
  call $~lib/string/String#toUpperCase
  local.tee $29
  i32.const 13872
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 28
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 13728
  call $~lib/string/String#toLowerCase
  local.tee $30
  i32.const 14016
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 32
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14160
  call $~lib/string/String#toUpperCase
  local.tee $31
  i32.const 14192
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 36
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14224
  call $~lib/string/String#toLowerCase
  local.tee $32
  i32.const 14256
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 37
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14288
  call $~lib/string/String#toUpperCase
  local.tee $33
  i32.const 14480
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 38
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14160
  call $~lib/string/String#toUpperCase
  local.tee $34
  call $~lib/string/String#toLowerCase
  local.tee $35
  i32.const 14688
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 42
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14720
  call $~lib/string/String#toUpperCase
  local.tee $36
  call $~lib/string/String#toLowerCase
  local.tee $37
  i32.const 14752
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 43
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14784
  call $~lib/string/String#toUpperCase
  local.tee $38
  call $~lib/string/String#toLowerCase
  local.tee $39
  i32.const 14784
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 44
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 65536
  call $~lib/string/String.fromCodePoint
  local.tee $40
  call $~lib/string/String#toLowerCase
  local.tee $41
  i32.const 15040
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 50
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 65536
  call $~lib/string/String.fromCodePoint
  local.tee $42
  call $~lib/string/String#toUpperCase
  local.tee $43
  i32.const 15040
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 51
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15072
  call $~lib/string/String#toLowerCase
  local.tee $44
  i32.const 15104
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 54
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15136
  call $~lib/string/String#toLowerCase
  local.tee $45
  i32.const 15168
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 55
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15200
  call $~lib/string/String#toLowerCase
  local.tee $46
  i32.const 15232
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 56
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15264
  call $~lib/string/String#toLowerCase
  local.tee $47
  i32.const 15296
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 59
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15328
  call $~lib/string/String#toLowerCase
  local.tee $48
  i32.const 15360
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 60
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15392
  call $~lib/string/String#toLowerCase
  local.tee $49
  i32.const 15424
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 61
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15456
  call $~lib/string/String#toLowerCase
  local.tee $50
  i32.const 15488
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 62
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15520
  call $~lib/string/String#toLowerCase
  local.tee $51
  i32.const 15552
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 63
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15584
  call $~lib/string/String#toLowerCase
  local.tee $52
  i32.const 15616
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 64
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15648
  call $~lib/string/String#toLowerCase
  local.tee $53
  i32.const 15680
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 65
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15712
  call $~lib/string/String#toLowerCase
  local.tee $54
  i32.const 15744
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 66
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15776
  call $~lib/string/String#toLowerCase
  local.tee $55
  i32.const 15808
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 67
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15840
  call $~lib/string/String#toLowerCase
  local.tee $56
  i32.const 15872
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 68
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15904
  call $~lib/string/String#toLowerCase
  local.tee $57
  i32.const 15936
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 69
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15968
  call $~lib/string/String#toLowerCase
  local.tee $58
  i32.const 16000
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 70
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16032
  call $~lib/string/String#toLowerCase
  local.tee $59
  i32.const 16064
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 72
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16096
  call $~lib/string/String#toLowerCase
  local.tee $60
  i32.const 16128
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 73
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16160
  call $~lib/string/String#toLowerCase
  local.tee $61
  i32.const 16192
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 74
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16224
  call $~lib/string/String#toLowerCase
  local.tee $62
  i32.const 16256
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 75
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16288
  call $~lib/string/String#toLowerCase
  local.tee $63
  i32.const 16320
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 78
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16352
  call $~lib/string/String#toLowerCase
  local.tee $64
  i32.const 16384
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 79
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16416
  call $~lib/string/String#toLowerCase
  local.tee $65
  i32.const 16448
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 80
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16480
  call $~lib/string/String#toLowerCase
  local.tee $66
  i32.const 16512
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 81
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16544
  call $~lib/string/String#toLowerCase
  local.tee $67
  i32.const 16576
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 82
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16608
  call $~lib/string/String#toLowerCase
  local.tee $68
  i32.const 16640
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 83
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16672
  call $~lib/string/String#toLowerCase
  local.tee $69
  i32.const 15744
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 84
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16704
  call $~lib/string/String#toLowerCase
  local.tee $70
  i32.const 16736
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 85
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16768
  call $~lib/string/String#toLowerCase
  local.tee $71
  i32.const 16800
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 86
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16832
  call $~lib/string/String#toLowerCase
  local.tee $72
  i32.const 16864
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 87
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16896
  call $~lib/string/String#toLowerCase
  local.tee $73
  i32.const 16928
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 88
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16960
  call $~lib/string/String#toLowerCase
  local.tee $74
  i32.const 16992
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 89
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17024
  call $~lib/string/String#toLowerCase
  local.tee $75
  i32.const 17056
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 90
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17088
  call $~lib/string/String#toLowerCase
  local.tee $76
  i32.const 17120
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 91
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17152
  call $~lib/string/String#toLowerCase
  local.tee $77
  i32.const 17184
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 92
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17216
  call $~lib/string/String#toLowerCase
  local.tee $78
  i32.const 17248
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 93
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17280
  call $~lib/string/String#toLowerCase
  local.tee $79
  i32.const 17312
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 94
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17344
  call $~lib/string/String#toLowerCase
  local.tee $80
  i32.const 17376
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 95
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17408
  call $~lib/string/String#toLowerCase
  local.tee $81
  i32.const 17440
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 96
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17472
  call $~lib/string/String#toUpperCase
  local.tee $82
  i32.const 17504
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 99
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14720
  call $~lib/string/String#toUpperCase
  local.tee $83
  i32.const 17536
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 100
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17568
  call $~lib/string/String#toUpperCase
  local.tee $84
  i32.const 17600
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 101
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17632
  call $~lib/string/String#toUpperCase
  local.tee $85
  i32.const 17664
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 102
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17696
  call $~lib/string/String#toUpperCase
  local.tee $86
  i32.const 17728
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 103
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17760
  call $~lib/string/String#toUpperCase
  local.tee $87
  i32.const 17792
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 104
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17824
  call $~lib/string/String#toUpperCase
  local.tee $88
  i32.const 17792
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 105
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17856
  call $~lib/string/String#toUpperCase
  local.tee $89
  i32.const 17888
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 106
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17920
  call $~lib/string/String#toUpperCase
  local.tee $90
  i32.const 17952
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 107
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17984
  call $~lib/string/String#toUpperCase
  local.tee $91
  i32.const 18016
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 108
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 18048
  call $~lib/string/String#toUpperCase
  local.tee $92
  i32.const 18080
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 109
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 18112
  call $~lib/string/String#toUpperCase
  local.tee $93
  i32.const 18144
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 110
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 18176
  call $~lib/string/String#toUpperCase
  local.tee $94
  i32.const 18208
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6688
   i32.const 111
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  loop $for-loop|0
   local.get $3
   i32.const 1114111
   i32.le_s
   if
    local.get $3
    call $~lib/string/String.fromCodePoint
    local.tee $8
    call $~lib/string/String#toLowerCase
    local.set $5
    local.get $8
    call $~lib/string/String#toUpperCase
    local.set $6
    local.get $5
    i32.const 0
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.set $4
    local.get $5
    i32.const 1
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.tee $0
    i64.const 0
    i64.ge_u
    if
     local.get $4
     local.get $0
     i64.const 16
     i64.shl
     i64.add
     local.set $4
    end
    local.get $5
    i32.const 2
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.tee $0
    i64.const 0
    i64.ge_u
    if
     local.get $4
     local.get $0
     i64.const 32
     i64.shl
     i64.add
     local.set $4
    end
    local.get $6
    i32.const 0
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.set $0
    local.get $6
    i32.const 1
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.tee $1
    i64.const 0
    i64.ge_u
    if
     local.get $0
     local.get $1
     i64.const 16
     i64.shl
     i64.add
     local.set $0
    end
    local.get $6
    i32.const 2
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.tee $1
    i64.const 0
    i64.ge_u
    if
     local.get $0
     local.get $1
     i64.const 32
     i64.shl
     i64.add
     local.set $0
    end
    local.get $3
    i32.const 0
    call $std/string-casemapping/toLowerCaseFromIndex
    i64.extend_i32_s
    local.set $1
    local.get $3
    i32.const 1
    call $std/string-casemapping/toLowerCaseFromIndex
    i64.extend_i32_s
    local.tee $2
    i64.const 0
    i64.ge_u
    if
     local.get $1
     local.get $2
     i64.const 16
     i64.shl
     i64.add
     local.set $1
    end
    local.get $3
    i32.const 2
    call $std/string-casemapping/toLowerCaseFromIndex
    i64.extend_i32_s
    local.tee $2
    i64.const 0
    i64.ge_u
    if
     local.get $1
     local.get $2
     i64.const 32
     i64.shl
     i64.add
     local.set $1
    end
    local.get $3
    i32.const 0
    call $std/string-casemapping/toUpperCaseFromIndex
    i64.extend_i32_s
    local.set $2
    local.get $3
    i32.const 1
    call $std/string-casemapping/toUpperCaseFromIndex
    i64.extend_i32_s
    local.tee $7
    i64.const 0
    i64.ge_u
    if
     local.get $2
     local.get $7
     i64.const 16
     i64.shl
     i64.add
     local.set $2
    end
    local.get $3
    i32.const 2
    call $std/string-casemapping/toUpperCaseFromIndex
    i64.extend_i32_s
    local.tee $7
    i64.const 0
    i64.ge_u
    if
     local.get $2
     local.get $7
     i64.const 32
     i64.shl
     i64.add
     local.set $2
    end
    local.get $1
    local.get $4
    i64.ne
    if
     i32.const 18240
     i32.const 3
     local.get $3
     f64.convert_i32_s
     local.get $4
     f64.convert_i64_u
     local.get $1
     f64.convert_i64_u
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
    end
    local.get $0
    local.get $2
    i64.ne
    if
     i32.const 18320
     i32.const 3
     local.get $3
     f64.convert_i32_s
     local.get $0
     f64.convert_i64_u
     local.get $2
     f64.convert_i64_u
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
    end
    local.get $1
    local.get $4
    i64.ne
    if
     i32.const 0
     i32.const 6688
     i32.const 148
     i32.const 2
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i64.ne
    if
     i32.const 0
     i32.const 6688
     i32.const 149
     i32.const 2
     call $~lib/builtins/abort
     unreachable
    end
    local.get $8
    call $~lib/rt/pure/__release
    local.get $5
    call $~lib/rt/pure/__release
    local.get $6
    call $~lib/rt/pure/__release
    local.get $3
    i32.const 1
    i32.add
    local.set $3
    br $for-loop|0
   end
  end
  local.get $9
  call $~lib/rt/pure/__release
  local.get $10
  call $~lib/rt/pure/__release
  local.get $11
  call $~lib/rt/pure/__release
  local.get $12
  call $~lib/rt/pure/__release
  local.get $13
  call $~lib/rt/pure/__release
  local.get $14
  call $~lib/rt/pure/__release
  local.get $15
  call $~lib/rt/pure/__release
  local.get $16
  call $~lib/rt/pure/__release
  local.get $17
  call $~lib/rt/pure/__release
  local.get $18
  call $~lib/rt/pure/__release
  local.get $19
  call $~lib/rt/pure/__release
  local.get $20
  call $~lib/rt/pure/__release
  local.get $21
  call $~lib/rt/pure/__release
  local.get $22
  call $~lib/rt/pure/__release
  local.get $23
  call $~lib/rt/pure/__release
  local.get $24
  call $~lib/rt/pure/__release
  local.get $25
  call $~lib/rt/pure/__release
  local.get $26
  call $~lib/rt/pure/__release
  local.get $27
  call $~lib/rt/pure/__release
  local.get $28
  call $~lib/rt/pure/__release
  local.get $29
  call $~lib/rt/pure/__release
  local.get $30
  call $~lib/rt/pure/__release
  local.get $31
  call $~lib/rt/pure/__release
  local.get $32
  call $~lib/rt/pure/__release
  local.get $33
  call $~lib/rt/pure/__release
  local.get $34
  call $~lib/rt/pure/__release
  local.get $35
  call $~lib/rt/pure/__release
  local.get $36
  call $~lib/rt/pure/__release
  local.get $37
  call $~lib/rt/pure/__release
  local.get $38
  call $~lib/rt/pure/__release
  local.get $39
  call $~lib/rt/pure/__release
  local.get $40
  call $~lib/rt/pure/__release
  local.get $41
  call $~lib/rt/pure/__release
  local.get $42
  call $~lib/rt/pure/__release
  local.get $43
  call $~lib/rt/pure/__release
  local.get $44
  call $~lib/rt/pure/__release
  local.get $45
  call $~lib/rt/pure/__release
  local.get $46
  call $~lib/rt/pure/__release
  local.get $47
  call $~lib/rt/pure/__release
  local.get $48
  call $~lib/rt/pure/__release
  local.get $49
  call $~lib/rt/pure/__release
  local.get $50
  call $~lib/rt/pure/__release
  local.get $51
  call $~lib/rt/pure/__release
  local.get $52
  call $~lib/rt/pure/__release
  local.get $53
  call $~lib/rt/pure/__release
  local.get $54
  call $~lib/rt/pure/__release
  local.get $55
  call $~lib/rt/pure/__release
  local.get $56
  call $~lib/rt/pure/__release
  local.get $57
  call $~lib/rt/pure/__release
  local.get $58
  call $~lib/rt/pure/__release
  local.get $59
  call $~lib/rt/pure/__release
  local.get $60
  call $~lib/rt/pure/__release
  local.get $61
  call $~lib/rt/pure/__release
  local.get $62
  call $~lib/rt/pure/__release
  local.get $63
  call $~lib/rt/pure/__release
  local.get $64
  call $~lib/rt/pure/__release
  local.get $65
  call $~lib/rt/pure/__release
  local.get $66
  call $~lib/rt/pure/__release
  local.get $67
  call $~lib/rt/pure/__release
  local.get $68
  call $~lib/rt/pure/__release
  local.get $69
  call $~lib/rt/pure/__release
  local.get $70
  call $~lib/rt/pure/__release
  local.get $71
  call $~lib/rt/pure/__release
  local.get $72
  call $~lib/rt/pure/__release
  local.get $73
  call $~lib/rt/pure/__release
  local.get $74
  call $~lib/rt/pure/__release
  local.get $75
  call $~lib/rt/pure/__release
  local.get $76
  call $~lib/rt/pure/__release
  local.get $77
  call $~lib/rt/pure/__release
  local.get $78
  call $~lib/rt/pure/__release
  local.get $79
  call $~lib/rt/pure/__release
  local.get $80
  call $~lib/rt/pure/__release
  local.get $81
  call $~lib/rt/pure/__release
  local.get $82
  call $~lib/rt/pure/__release
  local.get $83
  call $~lib/rt/pure/__release
  local.get $84
  call $~lib/rt/pure/__release
  local.get $85
  call $~lib/rt/pure/__release
  local.get $86
  call $~lib/rt/pure/__release
  local.get $87
  call $~lib/rt/pure/__release
  local.get $88
  call $~lib/rt/pure/__release
  local.get $89
  call $~lib/rt/pure/__release
  local.get $90
  call $~lib/rt/pure/__release
  local.get $91
  call $~lib/rt/pure/__release
  local.get $92
  call $~lib/rt/pure/__release
  local.get $93
  call $~lib/rt/pure/__release
  local.get $94
  call $~lib/rt/pure/__release
 )
 (func $~start (; 34 ;)
  global.get $~started
  if
   return
  else
   i32.const 1
   global.set $~started
  end
  call $start:std/string-casemapping
 )
 (func $~lib/rt/pure/decrement (; 35 ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.const 268435455
  i32.and
  local.set $1
  local.get $0
  call $~lib/rt/rtrace/ondecrement
  local.get $0
  i32.load
  i32.const 1
  i32.and
  if
   i32.const 0
   i32.const 1056
   i32.const 122
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 1
  i32.eq
  if
   block $__inlined_func$~lib/rt/__visit_members
    block $switch$1$default
     block $switch$1$case$4
      local.get $0
      i32.const 16
      i32.add
      local.tee $1
      i32.const 8
      i32.sub
      i32.load
      br_table $__inlined_func$~lib/rt/__visit_members $__inlined_func$~lib/rt/__visit_members $switch$1$case$4 $__inlined_func$~lib/rt/__visit_members $__inlined_func$~lib/rt/__visit_members $__inlined_func$~lib/rt/__visit_members $switch$1$default
     end
     local.get $1
     i32.load
     local.tee $1
     if
      local.get $1
      i32.const 18384
      i32.ge_u
      if
       local.get $1
       i32.const 16
       i32.sub
       call $~lib/rt/pure/decrement
      end
     end
     br $__inlined_func$~lib/rt/__visit_members
    end
    unreachable
   end
   local.get $2
   i32.const -2147483648
   i32.and
   if
    i32.const 0
    i32.const 1056
    i32.const 126
    i32.const 17
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/rt/tlsf/ROOT
   local.get $0
   call $~lib/rt/tlsf/freeBlock
  else
   local.get $1
   i32.const 0
   i32.le_u
   if
    i32.const 0
    i32.const 1056
    i32.const 136
    i32.const 15
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.sub
   local.get $2
   i32.const -268435456
   i32.and
   i32.or
   i32.store offset=4
  end
 )
)

(module
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_=>_none (func (param i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i32_i32_f64_f64_f64_f64_f64_=>_none (func (param i32 i32 f64 f64 f64 f64 f64)))
 (type $none_=>_i32 (func (result i32)))
 (type $i64_=>_i32 (func (param i64) (result i32)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "string_casemapping" "toLowerCaseFromIndex" (func $std/string-casemapping/toLowerCaseFromIndex (param i32 i32) (result i32)))
 (import "string_casemapping" "toUpperCaseFromIndex" (func $std/string-casemapping/toUpperCaseFromIndex (param i32 i32) (result i32)))
 (import "env" "trace" (func $~lib/builtins/trace (param i32 i32 f64 f64 f64 f64 f64)))
 (memory $0 1)
 (data (i32.const 1036) "\1c")
 (data (i32.const 1048) "\01")
 (data (i32.const 1068) "<")
 (data (i32.const 1080) "\01\00\00\00(\00\00\00A\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e")
 (data (i32.const 1132) "<")
 (data (i32.const 1144) "\01\00\00\00 \00\00\00~\00l\00i\00b\00/\00r\00t\00/\00i\00t\00c\00m\00s\00.\00t\00s")
 (data (i32.const 1260) "<")
 (data (i32.const 1272) "\01\00\00\00$\00\00\00I\00n\00d\00e\00x\00 \00o\00u\00t\00 \00o\00f\00 \00r\00a\00n\00g\00e")
 (data (i32.const 1324) ",")
 (data (i32.const 1336) "\01\00\00\00\14\00\00\00~\00l\00i\00b\00/\00r\00t\00.\00t\00s")
 (data (i32.const 1404) "<")
 (data (i32.const 1416) "\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s")
 (data (i32.const 1468) "L\03")
 (data (i32.const 1480) "\03\00\00\000\03\00\00\df\00S\00S\00\00\00I\01\bc\02N\00\00\00\f0\01J\00\0c\03\00\00\90\03\99\03\08\03\01\03\b0\03\a5\03\08\03\01\03\87\055\05R\05\00\00\96\1eH\001\03\00\00\97\1eT\00\08\03\00\00\98\1eW\00\n\03\00\00\99\1eY\00\n\03\00\00\9a\1eA\00\be\02\00\00P\1f\a5\03\13\03\00\00R\1f\a5\03\13\03\00\03T\1f\a5\03\13\03\01\03V\1f\a5\03\13\03B\03\80\1f\08\1f\99\03\00\00\81\1f\t\1f\99\03\00\00\82\1f\n\1f\99\03\00\00\83\1f\0b\1f\99\03\00\00\84\1f\0c\1f\99\03\00\00\85\1f\0d\1f\99\03\00\00\86\1f\0e\1f\99\03\00\00\87\1f\0f\1f\99\03\00\00\88\1f\08\1f\99\03\00\00\89\1f\t\1f\99\03\00\00\8a\1f\n\1f\99\03\00\00\8b\1f\0b\1f\99\03\00\00\8c\1f\0c\1f\99\03\00\00\8d\1f\0d\1f\99\03\00\00\8e\1f\0e\1f\99\03\00\00\8f\1f\0f\1f\99\03\00\00\90\1f(\1f\99\03\00\00\91\1f)\1f\99\03\00\00\92\1f*\1f\99\03\00\00\93\1f+\1f\99\03\00\00\94\1f,\1f\99\03\00\00\95\1f-\1f\99\03\00\00\96\1f.\1f\99\03\00\00\97\1f/\1f\99\03\00\00\98\1f(\1f\99\03\00\00\99\1f)\1f\99\03\00\00\9a\1f*\1f\99\03\00\00\9b\1f+\1f\99\03\00\00\9c\1f,\1f\99\03\00\00\9d\1f-\1f\99\03\00\00\9e\1f.\1f\99\03\00\00\9f\1f/\1f\99\03\00\00\a0\1fh\1f\99\03\00\00\a1\1fi\1f\99\03\00\00\a2\1fj\1f\99\03\00\00\a3\1fk\1f\99\03\00\00\a4\1fl\1f\99\03\00\00\a5\1fm\1f\99\03\00\00\a6\1fn\1f\99\03\00\00\a7\1fo\1f\99\03\00\00\a8\1fh\1f\99\03\00\00\a9\1fi\1f\99\03\00\00\aa\1fj\1f\99\03\00\00\ab\1fk\1f\99\03\00\00\ac\1fl\1f\99\03\00\00\ad\1fm\1f\99\03\00\00\ae\1fn\1f\99\03\00\00\af\1fo\1f\99\03\00\00\b2\1f\ba\1f\99\03\00\00\b3\1f\91\03\99\03\00\00\b4\1f\86\03\99\03\00\00\b6\1f\91\03B\03\00\00\b7\1f\91\03B\03\99\03\bc\1f\91\03\99\03\00\00\c2\1f\ca\1f\99\03\00\00\c3\1f\97\03\99\03\00\00\c4\1f\89\03\99\03\00\00\c6\1f\97\03B\03\00\00\c7\1f\97\03B\03\99\03\cc\1f\97\03\99\03\00\00\d2\1f\99\03\08\03\00\03\d3\1f\99\03\08\03\01\03\d6\1f\99\03B\03\00\00\d7\1f\99\03\08\03B\03\e2\1f\a5\03\08\03\00\03\e3\1f\a5\03\08\03\01\03\e4\1f\a1\03\13\03\00\00\e6\1f\a5\03B\03\00\00\e7\1f\a5\03\08\03B\03\f2\1f\fa\1f\99\03\00\00\f3\1f\a9\03\99\03\00\00\f4\1f\8f\03\99\03\00\00\f6\1f\a9\03B\03\00\00\f7\1f\a9\03B\03\99\03\fc\1f\a9\03\99\03\00\00\00\fbF\00F\00\00\00\01\fbF\00I\00\00\00\02\fbF\00L\00\00\00\03\fbF\00F\00I\00\04\fbF\00F\00L\00\05\fbS\00T\00\00\00\06\fbS\00T\00\00\00\13\fbD\05F\05\00\00\14\fbD\055\05\00\00\15\fbD\05;\05\00\00\16\fbN\05F\05\00\00\17\fbD\05=\05")
 (data (i32.const 2316) "\07\08\t\n\0b\0c\06\06\06\06\06\06\06\06\06\06\0d\06\06\0e\06\06\06\06\06\06\06\06\0fa\06\06\06\06\06\06\06\1b\06\06\06\06\06\06\06\06\06\06\06\1c\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1d\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1e\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06")
 (data (i32.const 2939) "$++++++++\01\00TVVVVVVVV")
 (data (i32.const 2978) "\18\00\00\00+++++++\07++[VVVVVVVJVV\051P1P1P1P1P1P1P1P$Py1P1P18P1P1P1P1P1P1P1PN1\02N\0d\0dN\03N\00$n\00N1&nQN$PN9\14\81\1b\1d\1dS1P1P\0d1P1P1P\1bS$P1\02\\{\\{\\{\\{\\{\14y\\{\\{\\-+I\03H\03x\\{\14\00\96\n\01+(\06\06\00*\06**+\07\bb\b5+\1e\00+\07+++\01++++++++++++++++++++++++++++++++\01+++++++++++++++++++++++*+++++++++++++\cdF\cd+\00%+\07\01\06\01UVVVVVUVV\02$\81\81\81\81\81\15\81\81\81\00\00+\00\b2\d1\b2\d1\b2\d1\b2\d1\00\00\cd\cc\01\00\d7\d7\d7\d7\d7\83\81\81\81\81\81\81\81\81\81\81\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\1c\00\00\00\00\001P1P1P1P1P1\02\00\001P1P1P1P1P1P1P1P1PN1P1PN1P1P1P1P1P1P1P1\02\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6*++++++++++++\00\00\00TVVVVVVVVVVVV")
 (data (i32.const 3487) "TVVVVVVVVVVVV\0c\00\0c*+++++++++++++\07*\01")
 (data (i32.const 3573) "*++++++++++++++++++++++++++VVl\81\15\00++++++++++++++++++++++++++++++++++++++++++\07l\03A++VVVVVVVVVVVVVV,V+++++++++++++++++++++\01")
 (data (i32.const 3732) "\0cl\00\00\00\00\00\06")
 (data (i32.const 3778) "\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%Vz\9e&\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06\01++OVV,+\7fVV9++UVV++OVV,+\7fVV\817u[{\\++OVV\02\ac\04\00\009++UVV++OVV,++VV2\13\81W\00o\81~\c9\d7~-\81\81\0e~9\7foW\00\81\81~\15\00~\03++++++++++++\07+$+\97+++++++++*+++++VVVVV\80\81\81\81\819\bb*++++++++++++++++++++++++++++++++++++++++\01\81\81\81\81\81\81\81\81\81\81\81\81\81\81\81\c9\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\d0\0d\00N1\02\b4\c1\c1\d7\d7$P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P\d7\d7S\c1G\d4\d7\d7\d7\05++++++++++++\07\01\00\01")
 (data (i32.const 4229) "N1P1P1P1P1P1P1P\0d\00\00\00\00\00$P1P1P1P1P")
 (data (i32.const 4294) "+++++++++++y\\{\\{O{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\-++y\14\\{\\-y*\\\'\\{\\{\\{\a4\00\n\b4\\{\\{O\03x8+++++++++++++O-++\01")
 (data (i32.const 4407) "H")
 (data (i32.const 4417) "*++++++++++++++++++++++++++")
 (data (i32.const 4477) "++++++++\07\00HVVVVVVVV\02")
 (data (i32.const 4552) "+++++++++++++UVVVVVVVVVVVV\0e")
 (data (i32.const 4610) "$+++++++++++\07\00VVVVVVVVVVVV")
 (data (i32.const 4680) "$++++++++++++++++\07\00\00\00\00VVVVVVVVVVVVVVVVV")
 (data (i32.const 4777) "*++++++++++VVVVVVVVVV\0e")
 (data (i32.const 4831) "*++++++++++VVVVVVVVVV\0e")
 (data (i32.const 4896) "+++++++++++UVVVVVVVVVV\0e")
 (data (i32.const 4985) "\08\00\00V\01\00\009")
 (data (i32.const 5000) "\01 \00\00\00\e0\ff\ff\00\bf\1d\00\00\e7\02\00\00y\00\00\02$\00\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\01\02\00\00\00\fe\ff\ff\019\ff\ff\00\18\ff\ff\01\87\ff\ff\00\d4\fe\ff\00\c3\00\00\01\d2\00\00\01\ce\00\00\01\cd\00\00\01O\00\00\01\ca\00\00\01\cb\00\00\01\cf\00\00\00a\00\00\01\d3\00\00\01\d1\00\00\00\a3\00\00\01\d5\00\00\00\82\00\00\01\d6\00\00\01\da\00\00\01\d9\00\00\01\db\00\00\008\00\00\03\00\00\00\00\b1\ff\ff\01\9f\ff\ff\01\c8\ff\ff\02($\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\003\ff\ff\00&\ff\ff\01~\ff\ff\01+*\00\01]\ff\ff\01(*\00\00?*\00\01=\ff\ff\01E\00\00\01G\00\00\00\1f*\00\00\1c*\00\00\1e*\00\00.\ff\ff\002\ff\ff\006\ff\ff\005\ff\ff\00O\a5\00\00K\a5\00\001\ff\ff\00(\a5\00\00D\a5\00\00/\ff\ff\00-\ff\ff\00\f7)\00\00A\a5\00\00\fd)\00\00+\ff\ff\00*\ff\ff\00\e7)\00\00C\a5\00\00*\a5\00\00\bb\ff\ff\00\'\ff\ff\00\b9\ff\ff\00%\ff\ff\00\15\a5\00\00\12\a5\00\02$L\00\00\00\00\00\01 \00\00\00\e0\ff\ff\01\01\00\00\00\ff\ff\ff\00T\00\00\01t\00\00\01&\00\00\01%\00\00\01@\00\00\01?\00\00\00\da\ff\ff\00\db\ff\ff\00\e1\ff\ff\00\c0\ff\ff\00\c1\ff\ff\01\08\00\00\00\c2\ff\ff\00\c7\ff\ff\00\d1\ff\ff\00\ca\ff\ff\00\f8\ff\ff\00\aa\ff\ff\00\b0\ff\ff\00\07\00\00\00\8c\ff\ff\01\c4\ff\ff\00\a0\ff\ff\01\f9\ff\ff\02\1ap\00\01\01\00\00\00\ff\ff\ff\01 \00\00\00\e0\ff\ff\01P\00\00\01\0f\00\00\00\f1\ff\ff\00\00\00\00\010\00\00\00\d0\ff\ff\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c0\0b\00\01`\1c\00\00\00\00\00\01\d0\97\00\01\08\00\00\00\f8\ff\ff\02\05\8a\00\00\00\00\00\01@\f4\ff\00\9e\e7\ff\00\c2\89\00\00\db\e7\ff\00\92\e7\ff\00\93\e7\ff\00\9c\e7\ff\00\9d\e7\ff\00\a4\e7\ff\00\00\00\00\008\8a\00\00\04\8a\00\00\e6\0e\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c5\ff\ff\01A\e2\ff\02\1d\8f\00\00\08\00\00\01\f8\ff\ff\00\00\00\00\00V\00\00\01\aa\ff\ff\00J\00\00\00d\00\00\00\80\00\00\00p\00\00\00~\00\00\00\t\00\00\01\b6\ff\ff\01\f7\ff\ff\00\db\e3\ff\01\9c\ff\ff\01\90\ff\ff\01\80\ff\ff\01\82\ff\ff\02\05\ac\00\00\00\00\00\01\10\00\00\00\f0\ff\ff\01\1c\00\00\01\01\00\00\01\a3\e2\ff\01A\df\ff\01\ba\df\ff\00\e4\ff\ff\02\0b\b1\00\01\01\00\00\00\ff\ff\ff\010\00\00\00\d0\ff\ff\00\00\00\00\01\t\d6\ff\01\1a\f1\ff\01\19\d6\ff\00\d5\d5\ff\00\d8\d5\ff\01\e4\d5\ff\01\03\d6\ff\01\e1\d5\ff\01\e2\d5\ff\01\c1\d5\ff\00\00\00\00\00\a0\e3\ff\00\00\00\00\01\01\00\00\00\ff\ff\ff\02\0c\bc\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\01\bcZ\ff\01\a0\03\00\01\fcu\ff\01\d8Z\ff\000\00\00\01\b1Z\ff\01\b5Z\ff\01\bfZ\ff\01\eeZ\ff\01\d6Z\ff\01\ebZ\ff\01\d0\ff\ff\01\bdZ\ff\01\c8u\ff\00\00\00\00\000h\ff\00`\fc\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01(\00\00\00\d8\ff\ff\00\00\00\00\01@\00\00\00\c0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01\"\00\00\00\de\ff\ff")
 (data (i32.const 5957) "\06\'Qow")
 (data (i32.const 5972) "|\00\00\7f\00\00\00\00\00\00\00\00\83\8e\92\97\00\aa")
 (data (i32.const 6000) "\b4\c4")
 (data (i32.const 6122) "\c6\c9\00\00\00\db")
 (data (i32.const 6211) "\de\00\00\00\00\e1\00\00\00\00\00\00\00\e4")
 (data (i32.const 6236) "\e7")
 (data (i32.const 6322) "\ea")
 (data (i32.const 6445) "\ed")
 (data (i32.const 6468) "0\0c1\0dx\0e\7f\0f\80\10\81\11\86\12\89\13\8a\13\8e\14\8f\15\90\16\93\13\94\17\95\18\96\19\97\1a\9a\1b\9c\19\9d\1c\9e\1d\9f\1e\a6\1f\a9\1f\ae\1f\b1 \b2 \b7!\bf\"\c5#\c8#\cb#\dd$\f2#\f6%\f7& -:.=/>0?1@1C2D3E4P5Q6R7S8T9Y:[;\\<a=c>e?f@hAiBj@kClDoBqErFuG}H\82I\87J\89K\8aL\8bL\8cM\92N\9dO\9ePEW{\1d|\1d}\1d\7fX\86Y\88Z\89Z\8aZ\8c[\8e\\\8f\\\ac]\ad^\ae^\af^\c2_\cc`\cda\cea\cfb\d0c\d1d\d5e\d6f\d7g\f0h\f1i\f2j\f3k\f4l\f5m\f9n\fd-\fe-\ff-PiQiRiSiTiUiViWiXiYiZi[i\\i]i^i_i\82\00\83\00\84\00\85\00\86\00\87\00\88\00\89\00\c0u\cfv\80\89\81\8a\82\8b\85\8c\86\8dp\9dq\9dv\9ew\9ex\9fy\9fz\a0{\a0|\a1}\a1\b3\a2\ba\a3\bb\a3\bc\a4\be\a5\c3\a2\cc\a4\da\a6\db\a6\e5j\ea\a7\eb\a7\ecn\f3\a2\f8\a8\f9\a8\fa\a9\fb\a9\fc\a4&\b0*\b1+\b2N\b3\84\08b\bac\bbd\bce\bdf\bem\bfn\c0o\c1p\c2~\c3\7f\c3}\cf\8d\d0\94\d1\ab\d2\ac\d3\ad\d4\b0\d5\b1\d6\b2\d7\c4\d8\c5\d9\c6\da")
 (data (i32.const 6876) "L")
 (data (i32.const 6888) "\01\00\00\002\00\00\00s\00t\00d\00/\00s\00t\00r\00i\00n\00g\00-\00c\00a\00s\00e\00m\00a\00p\00p\00i\00n\00g\00.\00t\00s")
 (data (i32.const 6956) "\12\10\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f
 (data (i32.const 7500) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\80@\00\04\00\00\00@\01\00\00\00\00\00\00\00\00\a1\90\01")
 (data (i32.const 7586) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff0\04\b0")
 (data (i32.const 7644) "\f8\03")
 (data (i32.const 7671) "\82\00\00\00\00\00\00\fe\ff\ff\ff\ff\bf\b6\00\00\00\00\00\10\00?\00\ff\17\00\00\00\00\01\f8\ff\ff\00\00\01")
 (data (i32.const 7718) "\c0\bf\ff=\00\00\00\80\02\00\00\00\ff\ff\ff\07")
 (data (i32.const 7744) "\c0\ff\01\00\00\00\00\00\00\f8?$\00\00\c0\ff\ff?\00\00\00\00\00\0e")
 (data (i32.const 7782) "\f8\ff\ff\ff\ff\ff\07\00\00\00\00\00\00\14\fe!\fe\00\0c\00\02\00\02\00\00\00\00\00\00\10\1e \00\00\0c\00\00@\06\00\00\00\00\00\00\10\869\02\00\00\00#\00\06\00\00\00\00\00\00\10\be!\00\00\0c\00\00\fc\02\00\00\00\00\00\00\90\1e `\00\0c\00\00\00\04\00\00\00\00\00\00\00\01 \00\00\00\00\00\00\11\00\00\00\00\00\00\c0\c1=`\00\0c\00\00\00\02\00\00\00\00\00\00\90@0\00\00\0c\00\00\00\03\00\00\00\00\00\00\18\1e \00\00\0c\00\00\00\02\00\00\00\00\00\00\00\00\04\\")
 (data (i32.const 7954) "\f2\07\c0\7f")
 (data (i32.const 7970) "\f2\1f@?")
 (data (i32.const 7983) "\03\00\00\a0\02\00\00\00\00\00\00\fe\7f\df\e0\ff\fe\ff\ff\ff\1f@")
 (data (i32.const 8017) "\e0\fdf\00\00\00\c3\01\00\1e\00d \00 ")
 (data (i32.const 8043) "\10")
 (data (i32.const 8055) "\e0")
 (data (i32.const 8078) "\1c\00\00\00\1c\00\00\00\0c\00\00\00\0c\00\00\00\00\00\00\00\b0?@\fe\8f \00\00\00\00\00x\00\00\00\00\00\00\08\00\00\00\00\00\00\00`\00\00\00\00\02")
 (data (i32.const 8144) "\87\01\04\0e")
 (data (i32.const 8174) "\80\t\00\00\00\00\00\00@\7f\e5\1f\f8\9f\00\00\00\00\80\00\ff\ff\01\00\00\00\00\00\00\00\0f\00\00\00\00\00\d0\17\04\00\00\00\00\f8\0f\00\03\00\00\00<;\00\00\00\00\00\00@\a3\03\00\00\00\00\00\00\f0\cf\00\00\00\00\00\00\00\00?")
 (data (i32.const 8262) "\f7\ff\fd!\10\03\00\00\00\00\00\f0\ff\ff\ff\ff\ff\ff\ff\07\00\01\00\00\00\f8\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fb")
 (data (i32.const 8323) "\a0\03\e0\00\e0\00\e0\00`\00\f8\00\03\90|\00\00\00\00\00\00\df\ff\02\80\00\00\ff\1f\00\00\00\00\00\00\ff\ff\ff\ff\01")
 (data (i32.const 8379) "0")
 (data (i32.const 8393) "\80\03")
 (data (i32.const 8409) "\80\00\80")
 (data (i32.const 8424) "\ff\ff\ff\ff\00\00\00\00\00\80")
 (data (i32.const 8460) " \00\00\00\00<>\08")
 (data (i32.const 8479) "~")
 (data (i32.const 8491) "p\00\00 ")
 (data (i32.const 8555) "?\00\10")
 (data (i32.const 8569) "\80\f7\bf\00\00\00\f0")
 (data (i32.const 8586) "\03\00\ff\ff\ff\ff\03")
 (data (i32.const 8602) "\01\00\00\07")
 (data (i32.const 8619) "\03D\08\00\00`\10")
 (data (i32.const 8644) "0\00\00\00\ff\ff\03\80\00\00\00\00\c0?\00\00\80\ff\03\00\00\00\00\00\07\00\00\00\00\00\c83\00\80\00\00`\00\00\00\00\00\00\00\00~f\00\08\10\00\00\00\00\01\10\00\00\00\00\00\00\9d\c1\02\00\00 \000X")
 (data (i32.const 8727) "\f8\00\0e")
 (data (i32.const 8744) " !\00\00\00\00\00@")
 (data (i32.const 8770) "\fc\ff\03\00\00\00\00\00\00\00\ff\ff\08\00\ff\ff\00\00\00\00$")
 (data (i32.const 8811) "\80\80@\00\04\00\00\00@\01\00\00\00\00\00\01\00\00\00\00\c0\00\00\00\00\00\00\00\00\08\00\00\0e")
 (data (i32.const 8875) " ")
 (data (i32.const 8904) "\01")
 (data (i32.const 8922) "\c0\07")
 (data (i32.const 8940) "n\f0\00\00\00\00\00\87")
 (data (i32.const 8968) "`\00\00\00\00\00\00\00\f0")
 (data (i32.const 9025) "\18")
 (data (i32.const 9044) "\c0\ff\01")
 (data (i32.const 9068) "\02\00\00\00\00\00\00\ff\7f\00\00\00\00\00\00\80\03\00\00\00\00\00x&\00 \00\00\00\00\00\00\07\00\00\00\80\ef\1f\00\00\00\00\00\00\00\08\00\03\00\00\00\00\00\c0\7f\00\9e")
 (data (i32.const 9137) "\80\d3@")
 (data (i32.const 9159) "\80\f8\07\00\00\03\00\00\00\00\00\00\18\01\00\00\00\c0\1f\1f")
 (data (i32.const 9203) "\ff\\\00\00@")
 (data (i32.const 9218) "\f8\85\0d")
 (data (i32.const 9250) "<\b0\01\00\000")
 (data (i32.const 9266) "\f8\a7\01")
 (data (i32.const 9281) "(\bf")
 (data (i32.const 9295) "\e0\bc\0f")
 (data (i32.const 9329) "\80\ff\06")
 (data (i32.const 9363) "X\08")
 (data (i32.const 9382) "\f0\0c\01\00\00\00\fe\07\00\00\00\00\f8y\80\00~\0e\00\00\00\00\00\fc\7f\03")
 (data (i32.const 9426) "\7f\bf")
 (data (i32.const 9438) "\fc\ff\ff\fcm")
 (data (i32.const 9458) "~\b4\bf")
 (data (i32.const 9470) "\a3")
 (data (i32.const 9514) "\18\00\00\00\00\00\00\00\ff\01")
 (data (i32.const 9578) "\1f\00\00\00\00\00\00\00\7f\00\0f")
 (data (i32.const 9621) "\80\00\00\00\00\00\00\00\80\ff\ff\00\00\00\00\00\00\00\00\1b")
 (data (i32.const 9663) "`\0f")
 (data (i32.const 9688) "\80\03\f8\ff\e7\0f\00\00\00<")
 (data (i32.const 9716) "\1c")
 (data (i32.const 9740) "\ff\ff\ff\ff\ff\ff\7f\f8\ff\ff\ff\ff\ff\1f \00\10\00\00\f8\fe\ff")
 (data (i32.const 9772) "\7f\ff\ff\f9\db\07")
 (data (i32.const 9810) "\ff?")
 (data (i32.const 9865) "\f0")
 (data (i32.const 9894) "\7f")
 (data (i32.const 9908) "\f0\0f")
 (data (i32.const 9963) "\f8")
 (data (i32.const 9964) "\12\13\14\15\16\17\10\10\10\10\10\10\10\10\10\10\18\10\10\19\10\10\10\10\10\10\10\10\1a\1b\11\1c\1d\1e\10\10\1f
 (data (i32.const 10508) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\fe\ff\ff\07\fe\ff\ff\07\00\00\00\00\00\04 \04\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\f7\f0\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ef\ff\ff\ff\ff\01\03\00\00\00\1f")
 (data (i32.const 10644) " \00\00\00\00\00\cf\bc@\d7\ff\ff\fb\ff\ff\ff\ff\ff\ff\ff\ff\ff\bf\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\03\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fe\ff\ff\ff\7f\00\ff\ff\ff\ff\ff\01")
 (data (i32.const 10752) "\ff\ff\ff\ff\bf \ff\ff\ff\ff\ff\e7")
 (data (i32.const 10784) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff??")
 (data (i32.const 10812) "\ff\01\ff\ff\ff\ff\ff\e7\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\ff\ff??\ff\ff\ff\ff??\ff\aa\ff\ff\ff?\ff\ff\ff\ff\ff\ff\df_\dc\1f\cf\0f\ff\1f\dc\1f")
 (data (i32.const 10906) "\02\80\00\00\ff\1f")
 (data (i32.const 10924) "\84\fc/>P\bd\1f\f2\e0C\00\00\ff\ff\ff\ff\18")
 (data (i32.const 10978) "\c0\ff\ff\ff\ff\ff\ff\03\00\00\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\1fx\0c\00\ff\ff\ff\ff\bf ")
 (data (i32.const 11060) "\ff\ff\ff\ff\ff?\00\00\ff\ff\ff?")
 (data (i32.const 11088) "\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ffx\ff\ff\ff\ff\ff\ff\fc\07\00\00\00\00`\07\00\00\00\00\00\00\ff\ff\ff\ff\ff\f7\ff\01\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\7f\00\f8")
 (data (i32.const 11184) "\fe\ff\ff\07\fe\ff\ff\07")
 (data (i32.const 11212) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 11234) "\ff\ff\ff\ff\0f\ff\ff\ff\ff\0f")
 (data (i32.const 11260) "\ff\ff\ff\ff\ff\ff\07\00\ff\ff\ff\ff\ff\ff\07")
 (data (i32.const 11296) "\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 11316) "\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 11340) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\df\ff\ff\ff\ff\ff\ff\ff\ff\dfd\de\ff\eb\ef\ff\ff\ff\ff\ff\ff\ff\bf\e7\df\df\ff\ff\ff{_\fc\fd\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff?\ff\ff\ff\fd\ff\ff\f7\ff\ff\ff\f7\ff\ff\df\ff\ff\ff\df\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\fd\ff\ff\ff\fd\ff\ff\f7\0f\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\0f")
 (data (i32.const 11506) "\ff\ff\ff\03\ff\ff\ff\03\ff\ff\ff\03")
 (data (i32.const 11532) ",")
 (data (i32.const 11544) "\01\00\00\00\16\00\00\000\009\00_\00A\00Z\00 \00a\00z\00.\00!\00\n")
 (data (i32.const 11580) ",")
 (data (i32.const 11592) "\01\00\00\00\16\00\00\000\009\00_\00A\00Z\00 \00A\00Z\00.\00!\00\n")
 (data (i32.const 11628) ",")
 (data (i32.const 11640) "\01\00\00\00\16\00\00\000\009\00_\00A\00Z\00 \00a\00z\00.\00!\00\t")
 (data (i32.const 11676) ",")
 (data (i32.const 11688) "\01\00\00\00\16\00\00\000\009\00_\00a\00z\00 \00a\00z\00.\00!\00\t")
 (data (i32.const 11724) "\\")
 (data (i32.const 11736) "\01\00\00\00J\00\00\00D\00e\00r\00 \00W\00e\00c\00h\00s\00e\00l\00 \00a\00l\00l\00e\00i\00n\00 \00i\00s\00t\00 \00d\00a\00s\00 \00B\00e\00s\00t\00\e4\00n\00d\00i\00g\00e")
 (data (i32.const 11820) "\\")
 (data (i32.const 11832) "\01\00\00\00J\00\00\00D\00E\00R\00 \00W\00E\00C\00H\00S\00E\00L\00 \00A\00L\00L\00E\00I\00N\00 \00I\00S\00T\00 \00D\00A\00S\00 \00B\00E\00S\00T\00\c4\00N\00D\00I\00G\00E")
 (data (i32.const 11916) "\\")
 (data (i32.const 11928) "\01\00\00\00J\00\00\00d\00e\00r\00 \00w\00e\00c\00h\00s\00e\00l\00 \00a\00l\00l\00e\00i\00n\00 \00i\00s\00t\00 \00d\00a\00s\00 \00b\00e\00s\00t\00\e4\00n\00d\00i\00g\00e")
 (data (i32.const 12012) "<")
 (data (i32.const 12024) "\01\00\00\00$\00\00\00@\00 \00\14  \00\14\04@\04C\043\04 \00G\045\04;\04>\042\045\04:\040\04!")
 (data (i32.const 12076) "<")
 (data (i32.const 12088) "\01\00\00\00$\00\00\00@\00 \00\14  \00\14\04 \04#\04\13\04 \00\'\04\15\04\1b\04\1e\04\12\04\15\04\1a\04\10\04!")
 (data (i32.const 12140) "<")
 (data (i32.const 12152) "\01\00\00\00$\00\00\00@\00 \00\14  \004\04@\04C\043\04 \00G\045\04;\04>\042\045\04:\040\04!")
 (data (i32.const 12204) "\\")
 (data (i32.const 12216) "\01\00\00\00D\00\00\00.\" \00E\00\c5\"d\00a\00 \00=\00 \00Q\00,\00 \00n\00 \00\92! \00\1e\",\00 \00\11\" \00f\00(\00i\00)\00 \00=\00 \00\0f\" \00g\00(\00i\00)")
 (data (i32.const 12300) "\\")
 (data (i32.const 12312) "\01\00\00\00D\00\00\00.\" \00E\00\c5\"D\00A\00 \00=\00 \00Q\00,\00 \00N\00 \00\92! \00\1e\",\00 \00\11\" \00F\00(\00I\00)\00 \00=\00 \00\0f\" \00G\00(\00I\00)")
 (data (i32.const 12396) "\\")
 (data (i32.const 12408) "\01\00\00\00D\00\00\00.\" \00e\00\c5\"d\00a\00 \00=\00 \00q\00,\00 \00n\00 \00\92! \00\1e\",\00 \00\11\" \00f\00(\00i\00)\00 \00=\00 \00\0f\" \00g\00(\00i\00)")
 (data (i32.const 12492) "\\")
 (data (i32.const 12504) "\01\00\00\00H\00\00\00\f0\00i\00 \001\01n\00t\00Y\02\c8\02n\00\e6\00\83\02Y\02n\00Y\02l\00 \00f\00Y\02\c8\02n\00[\02t\001\01k\00 \00Y\02s\00o\00\8a\02s\00i\00\c8\02e\001\01\83\02n")
 (data (i32.const 12588) "\\")
 (data (i32.const 12600) "\01\00\00\00H\00\00\00\d0\00I\00 \00I\00N\00T\00\8f\01\c8\02N\00\c6\00\a9\01\8f\01N\00\8f\01L\00 \00F\00\8f\01\c8\02N\00\90\01T\00I\00K\00 \00\8f\01S\00O\00\b1\01S\00I\00\c8\02E\00I\00\a9\01N")
 (data (i32.const 12684) "\\")
 (data (i32.const 12696) "\01\00\00\00H\00\00\00\f0\00i\00 \00i\00n\00t\00Y\02\c8\02n\00\e6\00\83\02Y\02n\00Y\02l\00 \00f\00Y\02\c8\02n\00[\02t\00i\00k\00 \00Y\02s\00o\00\8a\02s\00i\00\c8\02e\00i\00\83\02n")
 (data (i32.const 12780) "L")
 (data (i32.const 12792) "\01\00\00\00.\00\00\00\a3\03r\1f \00\b3\03\bd\03\c9\03\c1\03\af\03\b6\03\c9\03 \00\00\1f\c0\03x\1f \00\c4\03t\1f\bd\03 \00\ba\03\cc\03\c8\03\b7\03")
 (data (i32.const 12860) "L")
 (data (i32.const 12872) "\01\00\00\00.\00\00\00\a3\03\c8\1f \00\93\03\9d\03\a9\03\a1\03\8a\03\96\03\a9\03 \00\08\1f\a0\03\f8\1f \00\a4\03\ca\1f\9d\03 \00\9a\03\8c\03\a8\03\97\03")
 (data (i32.const 12940) "L")
 (data (i32.const 12952) "\01\00\00\000\00\00\00\c4\03\bf\03\e6\1f \00\c3\03\c0\03\b1\03\b8\03\b9\03\bf\03\e6\1f \00\c4\03t\1f\bd\03 \00\c4\03\c1\03\bf\03\bc\03\b5\03\c1\03\ae\03,")
 (data (i32.const 13020) "L")
 (data (i32.const 13032) "\01\00\00\004\00\00\00\a4\03\9f\03\a5\03B\03 \00\a3\03\a0\03\91\03\98\03\99\03\9f\03\a5\03B\03 \00\a4\03\ca\1f\9d\03 \00\a4\03\a1\03\9f\03\9c\03\95\03\a1\03\89\03,")
 (data (i32.const 13100) "<")
 (data (i32.const 13112) "\01\00\00\00,\00\00\00\c3\03r\1f \00\b3\03\bd\03\c9\03\c1\03\af\03\b6\03\c9\03 \00\00\1f\c0\03x\1f \00\c4\03t\1f\bd\03 \00D\1f\c8\03\b7\03")
 (data (i32.const 13164) "<")
 (data (i32.const 13176) "\01\00\00\00,\00\00\00\a3\03\c8\1f \00\93\03\9d\03\a9\03\a1\03\8a\03\96\03\a9\03 \00\08\1f\a0\03\f8\1f \00\a4\03\ca\1f\9d\03 \00L\1f\a8\03\97\03")
 (data (i32.const 13228) "L")
 (data (i32.const 13240) "\01\00\00\002\00\00\00\c0\03\bf\03z\1f \00\bc\03r\1f \00\b2\03\af\03\b1\03 \00\bc\03\b5\03\c4\03\c1\03\ac\03\b5\03\b9\03 \00\c4\03t\1f \00\b3\03\c6\1f.")
 (data (i32.const 13308) "L")
 (data (i32.const 13320) "\01\00\00\004\00\00\00\a0\03\9f\03\ea\1f \00\9c\03\c8\1f \00\92\03\8a\03\91\03 \00\9c\03\95\03\a4\03\a1\03\86\03\95\03\99\03 \00\a4\03\ca\1f \00\93\03\97\03B\03.")
 (data (i32.const 13388) "L")
 (data (i32.const 13400) "\01\00\00\00.\00\00\00\91\03\c0\03\bf\1f \00\c4\03p\1f \00\ba\03\cc\03\ba\03\ba\03\b1\03\bb\03\b1\03 \00\b2\03\b3\03\b1\03\bb\03\bc\03\ad\03\bd\03\b7\03")
 (data (i32.const 13468) "L")
 (data (i32.const 13480) "\01\00\00\00.\00\00\00\91\03\a0\03\bf\1f \00\a4\03\ba\1f \00\9a\03\8c\03\9a\03\9a\03\91\03\9b\03\91\03 \00\92\03\93\03\91\03\9b\03\9c\03\88\03\9d\03\97\03")
 (data (i32.const 13548) "<")
 (data (i32.const 13560) "\01\00\00\00(\00\00\00\c4\03\f6\1f\bd\03 \00\fe\1f\95\03\bb\03\bb\03\ae\03\bd\03\c9\03\bd\03 \00\c4\03p\1f \001\1f\b5\03\c1\03\ac\03")
 (data (i32.const 13612) "<")
 (data (i32.const 13624) "\01\00\00\00*\00\00\00\a4\03\a9\03B\03\9d\03 \00\fe\1f\95\03\9b\03\9b\03\89\03\9d\03\a9\03\9d\03 \00\a4\03\ba\1f \009\1f\95\03\a1\03\86\03")
 (data (i32.const 13676) "L")
 (data (i32.const 13688) "\01\00\00\002\00\00\00\ba\03\b1\03v\1f \00\c3\03p\1f\bd\03 \00\c0\03\c1\03\f6\1f\c4\03\b1\03 \00\00\1f\bd\03\b4\03\c1\03\b5\03\b9\03\c9\03\bc\03\ad\03\bd\03\b7\03")
 (data (i32.const 13756) "L")
 (data (i32.const 13768) "\01\00\00\004\00\00\00\9a\03\91\03\da\1f \00\a3\03\ba\1f\9d\03 \00\a0\03\a1\03\a9\03B\03\a4\03\91\03 \00\08\1f\9d\03\94\03\a1\03\95\03\99\03\a9\03\9c\03\88\03\9d\03\97\03")
 (data (i32.const 13836) "L")
 (data (i32.const 13848) "\01\00\00\006\00\00\00\c7\03\b1\03\d6\1f\c1\03\b5\03,\00 \00f\1f \00\c7\03\b1\03\d6\1f\c1\03\b5\03,\00 \00\bf\1f\95\03\bb\03\b5\03\c5\03\b8\03\b5\03\c1\03\b9\03\ac\03!")
 (data (i32.const 13916) "L")
 (data (i32.const 13928) "\01\00\00\00:\00\00\00\a7\03\91\03\99\03B\03\a1\03\95\03,\00 \00n\1f \00\a7\03\91\03\99\03B\03\a1\03\95\03,\00 \00\bf\1f\95\03\9b\03\95\03\a5\03\98\03\95\03\a1\03\99\03\86\03!")
 (data (i32.const 13996) "\9c")
 (data (i32.const 14008) "\01\00\00\00\80\00\00\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z\00 \00/\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data (i32.const 14156) "\9c")
 (data (i32.const 14168) "\01\00\00\00\80\00\00\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z\00 \00/\000\001\002\003\004\005\006\007\008\009\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z")
 (data (i32.const 14316) "\9c")
 (data (i32.const 14328) "\01\00\00\00\80\00\00\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00 \00/\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data (i32.const 14476) "\1c")
 (data (i32.const 14488) "\01\00\00\00\02\00\00\00\df")
 (data (i32.const 14508) "\1c")
 (data (i32.const 14520) "\01\00\00\00\04\00\00\00S\00S")
 (data (i32.const 14540) "\1c")
 (data (i32.const 14552) "\01\00\00\00\02\00\00\000\01")
 (data (i32.const 14572) "\1c")
 (data (i32.const 14584) "\01\00\00\00\04\00\00\00i\00\07\03")
 (data (i32.const 14604) "\cc")
 (data (i32.const 14616) "\01\00\00\00\ae\00\00\00\a3\00\a9\00\b5\00\c0\00\c6\00\d6\00\de\00\df\00\e9\00\f6\00\ff\00\13 \14 \18 \1c \1d \1e   \" & 0 \"!S\01`\01x\01~\01\ac  \00\91\03\92\03\93\03\94\03\a9\03\b1\03\b2\03\b3\03\b4\03\c9\03 \00\10\04\11\04\12\04\13\04\14\040\041\042\043\044\04\00\"\02\"\08\"\1d!\'\"*\"a\"\1e\" \00\91!\97!\a8!\bb!\e3! \00\10%<%T%X%\91%\ba%:&@& \00\01\fb\fd\ff@$\82  \1f\02\1e\e5\04\84\1eP\02\d0\02N#\d0\051\05\d0\10")
 (data (i32.const 14812) "\cc")
 (data (i32.const 14824) "\01\00\00\00\b2\00\00\00\a3\00\a9\00\9c\03\c0\00\c6\00\d6\00\de\00S\00S\00\c9\00\d6\00x\01\13 \14 \18 \1c \1d \1e   \" & 0 \"!R\01`\01x\01}\01\ac  \00\91\03\92\03\93\03\94\03\a9\03\91\03\92\03\93\03\94\03\a9\03 \00\10\04\11\04\12\04\13\04\14\04\10\04\11\04\12\04\13\04\14\04\00\"\02\"\08\"\1d!\'\"*\"a\"\1e\" \00\91!\97!\a8!\bb!\e3! \00\10%<%T%X%\91%\ba%:&@& \00F\00I\00\fd\ff@$\82 (\1f\02\1e\e4\04\84\1eo,\d0\02N#\d0\051\05\90\1c")
 (data (i32.const 15020) "\1c")
 (data (i32.const 15032) "\01\00\00\00\04\00\00\00s\00s")
 (data (i32.const 15052) "\1c")
 (data (i32.const 15064) "\01\00\00\00\02\00\00\00\01\fb")
 (data (i32.const 15084) "\1c")
 (data (i32.const 15096) "\01\00\00\00\04\00\00\00f\00i")
 (data (i32.const 15116) "\cc")
 (data (i32.const 15128) "\01\00\00\00\b8\00\00\00A\d8\0e\df \00A\d81\df \00A\d8y\df \00C\d8S\dc \00C\d8x\dc \00C\d8\96\dc \00C\d8\cf\dc \00C\d8\d5\dc \00C\d8\15\dd \00C\d8|\dd \00C\d8\7f\dd \00C\d8\0e\de \00C\d8\0f\de \00C\d8w\de \00C\d8\9d\de \00C\d8\a2\de \00C\d8\d7\de \00C\d8\f9\de \00C\d8\fa\de \00C\d8-\df \00C\d8.\df \00C\d8L\df \00C\d8\b4\df \00C\d8\bc\df \00C\d8\ea\df \00D\d8\\\dc \00D\d8o\dc \00D\d8u\dc \00D\d8v\dc \00D\d8{\dc \00D\d8\c1\dc")
 (data (i32.const 15324) ",")
 (data (i32.const 15336) "\01\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s")
 (data (i32.const 15372) "\1c")
 (data (i32.const 15384) "\01\00\00\00\04\00\00\00\00\d8\00\dc")
 (data (i32.const 15404) "\1c")
 (data (i32.const 15416) "\01\00\00\00\02\00\00\00\88\1f")
 (data (i32.const 15436) "\1c")
 (data (i32.const 15448) "\01\00\00\00\02\00\00\00\80\1f")
 (data (i32.const 15468) "\1c")
 (data (i32.const 15480) "\01\00\00\00\02\00\00\00\8f\1f")
 (data (i32.const 15500) "\1c")
 (data (i32.const 15512) "\01\00\00\00\02\00\00\00\87\1f")
 (data (i32.const 15532) "\1c")
 (data (i32.const 15544) "\01\00\00\00\02\00\00\00\fc\1f")
 (data (i32.const 15564) "\1c")
 (data (i32.const 15576) "\01\00\00\00\02\00\00\00\f3\1f")
 (data (i32.const 15596) "\1c")
 (data (i32.const 15608) "\01\00\00\00\02\00\00\00\a3\03")
 (data (i32.const 15628) "\1c")
 (data (i32.const 15640) "\01\00\00\00\02\00\00\00\c3\03")
 (data (i32.const 15660) "\1c")
 (data (i32.const 15672) "\01\00\00\00\04\00\00\00 \00\a3\03")
 (data (i32.const 15692) "\1c")
 (data (i32.const 15704) "\01\00\00\00\04\00\00\00 \00\c3\03")
 (data (i32.const 15724) "\1c")
 (data (i32.const 15736) "\01\00\00\00\04\00\00\00\a3\03 ")
 (data (i32.const 15756) "\1c")
 (data (i32.const 15768) "\01\00\00\00\04\00\00\00\c3\03 ")
 (data (i32.const 15788) "\1c")
 (data (i32.const 15800) "\01\00\00\00\06\00\00\00 \00\a3\03 ")
 (data (i32.const 15820) "\1c")
 (data (i32.const 15832) "\01\00\00\00\06\00\00\00 \00\c3\03 ")
 (data (i32.const 15852) "\1c")
 (data (i32.const 15864) "\01\00\00\00\06\00\00\00a\00\a3\03 ")
 (data (i32.const 15884) "\1c")
 (data (i32.const 15896) "\01\00\00\00\06\00\00\00a\00\c2\03 ")
 (data (i32.const 15916) "\1c")
 (data (i32.const 15928) "\01\00\00\00\06\00\00\00a\00\a3\03\n")
 (data (i32.const 15948) "\1c")
 (data (i32.const 15960) "\01\00\00\00\06\00\00\00a\00\c2\03\n")
 (data (i32.const 15980) "\1c")
 (data (i32.const 15992) "\01\00\00\00\04\00\00\00a\00\a3\03")
 (data (i32.const 16012) "\1c")
 (data (i32.const 16024) "\01\00\00\00\04\00\00\00a\00\c2\03")
 (data (i32.const 16044) "\1c")
 (data (i32.const 16056) "\01\00\00\00\06\00\00\00a\00\a3\03b")
 (data (i32.const 16076) "\1c")
 (data (i32.const 16088) "\01\00\00\00\06\00\00\00a\00\c3\03b")
 (data (i32.const 16108) "\1c")
 (data (i32.const 16120) "\01\00\00\00\06\00\00\00\a3\03\a3\03 ")
 (data (i32.const 16140) "\1c")
 (data (i32.const 16152) "\01\00\00\00\06\00\00\00\c3\03\c2\03 ")
 (data (i32.const 16172) "\1c")
 (data (i32.const 16184) "\01\00\00\00\06\00\00\001\00\a3\03 ")
 (data (i32.const 16204) "\1c")
 (data (i32.const 16216) "\01\00\00\00\06\00\00\001\00\c3\03 ")
 (data (i32.const 16236) "\1c")
 (data (i32.const 16248) "\01\00\00\00\06\00\00\00;\00\a3\03 ")
 (data (i32.const 16268) "\1c")
 (data (i32.const 16280) "\01\00\00\00\06\00\00\00;\00\c3\03 ")
 (data (i32.const 16300) "\1c")
 (data (i32.const 16312) "\01\00\00\00\06\00\00\00\01\03\a3\03 ")
 (data (i32.const 16332) "\1c")
 (data (i32.const 16344) "\01\00\00\00\06\00\00\00\01\03\c3\03 ")
 (data (i32.const 16364) "\1c")
 (data (i32.const 16376) "\01\00\00\00\n\00\00\00\a3\03\01\03\a3\03\01\03 ")
 (data (i32.const 16396) "\1c")
 (data (i32.const 16408) "\01\00\00\00\n\00\00\00\c3\03\01\03\c2\03\01\03 ")
 (data (i32.const 16428) "\1c")
 (data (i32.const 16440) "\01\00\00\00\06\00\00\00\a3\03\a3\03-")
 (data (i32.const 16460) "\1c")
 (data (i32.const 16472) "\01\00\00\00\06\00\00\00\c3\03\c2\03-")
 (data (i32.const 16492) "\1c")
 (data (i32.const 16504) "\01\00\00\00\n\00\00\00\a3\03\01\03\a3\03\01\03-")
 (data (i32.const 16524) "\1c")
 (data (i32.const 16536) "\01\00\00\00\n\00\00\00\c3\03\01\03\c2\03\01\03-")
 (data (i32.const 16556) "\1c")
 (data (i32.const 16568) "\01\00\00\00\n\00\00\00\a3\03\01\03\a3\03\01\03*s")
 (data (i32.const 16588) "\1c")
 (data (i32.const 16600) "\01\00\00\00\n\00\00\00\c3\03\01\03\c2\03\01\03*s")
 (data (i32.const 16620) "\1c")
 (data (i32.const 16632) "\01\00\00\00\06\00\00\005\d8\a2\dc\a3\03")
 (data (i32.const 16652) "\1c")
 (data (i32.const 16664) "\01\00\00\00\06\00\00\005\d8\a2\dc\c2\03")
 (data (i32.const 16684) "\1c")
 (data (i32.const 16696) "\01\00\00\00\06\00\00\00A\00.\00\a3\03")
 (data (i32.const 16716) "\1c")
 (data (i32.const 16728) "\01\00\00\00\06\00\00\00a\00.\00\c2\03")
 (data (i32.const 16748) "\1c")
 (data (i32.const 16760) "\01\00\00\00\06\00\00\00A\00\ad\00\a3\03")
 (data (i32.const 16780) "\1c")
 (data (i32.const 16792) "\01\00\00\00\06\00\00\00a\00\ad\00\c2\03")
 (data (i32.const 16812) "\1c")
 (data (i32.const 16824) "\01\00\00\00\08\00\00\00A\004\d8B\de\a3\03")
 (data (i32.const 16844) "\1c")
 (data (i32.const 16856) "\01\00\00\00\08\00\00\00a\004\d8B\de\c2\03")
 (data (i32.const 16876) "\1c")
 (data (i32.const 16888) "\01\00\00\00\04\00\00\00E\03\a3\03")
 (data (i32.const 16908) "\1c")
 (data (i32.const 16920) "\01\00\00\00\04\00\00\00E\03\c3\03")
 (data (i32.const 16940) "\1c")
 (data (i32.const 16952) "\01\00\00\00\06\00\00\00\91\03E\03\a3\03")
 (data (i32.const 16972) "\1c")
 (data (i32.const 16984) "\01\00\00\00\06\00\00\00\b1\03E\03\c2\03")
 (data (i32.const 17004) "\1c")
 (data (i32.const 17016) "\01\00\00\00\06\00\00\00A\00\a3\03B")
 (data (i32.const 17036) "\1c")
 (data (i32.const 17048) "\01\00\00\00\08\00\00\00A\00\a3\035\d8\a2\dc")
 (data (i32.const 17068) "\1c")
 (data (i32.const 17080) "\01\00\00\00\08\00\00\00a\00\c3\035\d8\a2\dc")
 (data (i32.const 17100) "\1c")
 (data (i32.const 17112) "\01\00\00\00\08\00\00\00A\00\a3\03.\00b")
 (data (i32.const 17132) "\1c")
 (data (i32.const 17144) "\01\00\00\00\08\00\00\00a\00\c3\03.\00b")
 (data (i32.const 17164) "\1c")
 (data (i32.const 17176) "\01\00\00\00\08\00\00\00A\00\a3\03\ad\00B")
 (data (i32.const 17196) "\1c")
 (data (i32.const 17208) "\01\00\00\00\08\00\00\00a\00\c3\03\ad\00b")
 (data (i32.const 17228) "\1c")
 (data (i32.const 17240) "\01\00\00\00\n\00\00\00A\00\a3\034\d8B\deB")
 (data (i32.const 17260) "\1c")
 (data (i32.const 17272) "\01\00\00\00\n\00\00\00a\00\c3\034\d8B\deb")
 (data (i32.const 17292) "\1c")
 (data (i32.const 17304) "\01\00\00\00\06\00\00\00A\00\a3\03E\03")
 (data (i32.const 17324) "\1c")
 (data (i32.const 17336) "\01\00\00\00\06\00\00\00a\00\c2\03E\03")
 (data (i32.const 17356) "\1c")
 (data (i32.const 17368) "\01\00\00\00\08\00\00\00A\00\a3\03E\03\91\03")
 (data (i32.const 17388) "\1c")
 (data (i32.const 17400) "\01\00\00\00\08\00\00\00a\00\c3\03E\03\b1\03")
 (data (i32.const 17420) "\1c")
 (data (i32.const 17432) "\01\00\00\00\06\00\00\00A\00\0e\18\a3\03")
 (data (i32.const 17452) "\1c")
 (data (i32.const 17464) "\01\00\00\00\06\00\00\00a\00\0e\18\c2\03")
 (data (i32.const 17484) "\1c")
 (data (i32.const 17496) "\01\00\00\00\08\00\00\00A\00\0e\18\a3\03B")
 (data (i32.const 17516) "\1c")
 (data (i32.const 17528) "\01\00\00\00\08\00\00\00a\00\0e\18\c3\03b")
 (data (i32.const 17548) "\1c")
 (data (i32.const 17560) "\01\00\00\00\06\00\00\00A\00\a3\03\0e\18")
 (data (i32.const 17580) "\1c")
 (data (i32.const 17592) "\01\00\00\00\06\00\00\00a\00\c2\03\0e\18")
 (data (i32.const 17612) "\1c")
 (data (i32.const 17624) "\01\00\00\00\08\00\00\00A\00\a3\03\0e\18B")
 (data (i32.const 17644) "\1c")
 (data (i32.const 17656) "\01\00\00\00\08\00\00\00a\00\c3\03\0e\18b")
 (data (i32.const 17676) "\1c")
 (data (i32.const 17688) "\01\00\00\00\08\00\00\00A\00\0e\18\a3\03\0e\18")
 (data (i32.const 17708) "\1c")
 (data (i32.const 17720) "\01\00\00\00\08\00\00\00a\00\0e\18\c2\03\0e\18")
 (data (i32.const 17740) "\1c")
 (data (i32.const 17752) "\01\00\00\00\n\00\00\00A\00\0e\18\a3\03\0e\18B")
 (data (i32.const 17772) "\1c")
 (data (i32.const 17784) "\01\00\00\00\n\00\00\00a\00\0e\18\c3\03\0e\18b")
 (data (i32.const 17804) "\1c")
 (data (i32.const 17816) "\01\00\00\00\02\00\00\00\00\fb")
 (data (i32.const 17836) "\1c")
 (data (i32.const 17848) "\01\00\00\00\04\00\00\00F\00F")
 (data (i32.const 17868) "\1c")
 (data (i32.const 17880) "\01\00\00\00\04\00\00\00F\00I")
 (data (i32.const 17900) "\1c")
 (data (i32.const 17912) "\01\00\00\00\02\00\00\00\02\fb")
 (data (i32.const 17932) "\1c")
 (data (i32.const 17944) "\01\00\00\00\04\00\00\00F\00L")
 (data (i32.const 17964) "\1c")
 (data (i32.const 17976) "\01\00\00\00\02\00\00\00\03\fb")
 (data (i32.const 17996) "\1c")
 (data (i32.const 18008) "\01\00\00\00\06\00\00\00F\00F\00I")
 (data (i32.const 18028) "\1c")
 (data (i32.const 18040) "\01\00\00\00\02\00\00\00\04\fb")
 (data (i32.const 18060) "\1c")
 (data (i32.const 18072) "\01\00\00\00\06\00\00\00F\00F\00L")
 (data (i32.const 18092) "\1c")
 (data (i32.const 18104) "\01\00\00\00\02\00\00\00\05\fb")
 (data (i32.const 18124) "\1c")
 (data (i32.const 18136) "\01\00\00\00\04\00\00\00S\00T")
 (data (i32.const 18156) "\1c")
 (data (i32.const 18168) "\01\00\00\00\02\00\00\00\06\fb")
 (data (i32.const 18188) "\1c")
 (data (i32.const 18200) "\01\00\00\00\02\00\00\00\f0\01")
 (data (i32.const 18220) "\1c")
 (data (i32.const 18232) "\01\00\00\00\04\00\00\00J\00\0c\03")
 (data (i32.const 18252) "\1c")
 (data (i32.const 18264) "\01\00\00\00\02\00\00\00\96\1e")
 (data (i32.const 18284) "\1c")
 (data (i32.const 18296) "\01\00\00\00\04\00\00\00H\001\03")
 (data (i32.const 18316) "\1c")
 (data (i32.const 18328) "\01\00\00\00\02\00\00\00\97\1e")
 (data (i32.const 18348) "\1c")
 (data (i32.const 18360) "\01\00\00\00\04\00\00\00T\00\08\03")
 (data (i32.const 18380) "\1c")
 (data (i32.const 18392) "\01\00\00\00\02\00\00\00\98\1e")
 (data (i32.const 18412) "\1c")
 (data (i32.const 18424) "\01\00\00\00\04\00\00\00W\00\n\03")
 (data (i32.const 18444) "\1c")
 (data (i32.const 18456) "\01\00\00\00\02\00\00\00\99\1e")
 (data (i32.const 18476) "\1c")
 (data (i32.const 18488) "\01\00\00\00\04\00\00\00Y\00\n\03")
 (data (i32.const 18508) "\1c")
 (data (i32.const 18520) "\01\00\00\00\02\00\00\00\9a\1e")
 (data (i32.const 18540) "\1c")
 (data (i32.const 18552) "\01\00\00\00\04\00\00\00A\00\be\02")
 (data (i32.const 18572) "\\")
 (data (i32.const 18584) "\01\00\00\00@\00\00\00o\00r\00i\00g\00L\00o\00w\00e\00r\00C\00o\00d\00e\00 \00!\00=\00 \00e\00x\00p\00e\00c\00t\00L\00o\00w\00e\00r\00C\00o\00d\00e")
 (data (i32.const 18668) "<")
 (data (i32.const 18680) "\01\00\00\00\"\00\00\00 \00o\00r\00i\00g\00L\00o\00w\00e\00r\00C\00o\00d\00e\00 \00=\00 ")
 (data (i32.const 18732) "|")
 (data (i32.const 18744) "\01\00\00\00d\00\00\00t\00o\00S\00t\00r\00i\00n\00g\00(\00)\00 \00r\00a\00d\00i\00x\00 \00a\00r\00g\00u\00m\00e\00n\00t\00 \00m\00u\00s\00t\00 \00b\00e\00 \00b\00e\00t\00w\00e\00e\00n\00 \002\00 \00a\00n\00d\00 \003\006")
 (data (i32.const 18860) "<")
 (data (i32.const 18872) "\01\00\00\00&\00\00\00~\00l\00i\00b\00/\00u\00t\00i\00l\00/\00n\00u\00m\00b\00e\00r\00.\00t\00s")
 (data (i32.const 18924) "\1c")
 (data (i32.const 18936) "\01\00\00\00\02\00\00\000")
 (data (i32.const 18956) "\\")
 (data (i32.const 18968) "\01\00\00\00H\00\00\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data (i32.const 19052) "<")
 (data (i32.const 19064) "\01\00\00\00&\00\00\00 \00e\00x\00p\00e\00c\00t\00L\00o\00w\00e\00r\00C\00o\00d\00e\00 \00=\00 ")
 (data (i32.const 19116) "\\")
 (data (i32.const 19128) "\01\00\00\00@\00\00\00o\00r\00i\00g\00U\00p\00p\00e\00r\00C\00o\00d\00e\00 \00!\00=\00 \00e\00x\00p\00e\00c\00t\00U\00p\00p\00e\00r\00C\00o\00d\00e")
 (data (i32.const 19212) "<")
 (data (i32.const 19224) "\01\00\00\00\"\00\00\00 \00o\00r\00i\00g\00U\00p\00p\00e\00r\00C\00o\00d\00e\00 \00=\00 ")
 (data (i32.const 19276) "<")
 (data (i32.const 19288) "\01\00\00\00&\00\00\00 \00e\00x\00p\00e\00c\00t\00U\00p\00p\00e\00r\00C\00o\00d\00e\00 \00=\00 ")
 (data (i32.const 19344) "\04\00\00\00 \00\00\00\00\00\00\00 ")
 (data (i32.const 19372) "\a4")
 (global $~lib/rt/itcms/total (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/threshold (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/state (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/visitCount (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/pinSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/iter (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/toSpace (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/white (mut i32) (i32.const 0))
 (global $~lib/rt/itcms/fromSpace (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/memory/__stack_pointer (mut i32) (i32.const 35764))
 (export "memory" (memory $0))
 (start $~start)
 (func $~lib/rt/itcms/initLazy (param $0 i32) (result i32)
  local.get $0
  local.get $0
  i32.store offset=4
  local.get $0
  local.get $0
  i32.store offset=8
  local.get $0
 )
 (func $~lib/rt/itcms/visitRoots
  (local $0 i32)
  (local $1 i32)
  i32.const 1280
  call $~lib/rt/itcms/__visit
  i32.const 1088
  call $~lib/rt/itcms/__visit
  i32.const 18976
  call $~lib/rt/itcms/__visit
  i32.const 1488
  call $~lib/rt/itcms/__visit
  global.get $~lib/rt/itcms/pinSpace
  local.tee $1
  i32.load offset=4
  i32.const -4
  i32.and
  local.set $0
  loop $while-continue|0
   local.get $0
   local.get $1
   i32.ne
   if
    local.get $0
    i32.load offset=4
    i32.const 3
    i32.and
    i32.const 3
    i32.ne
    if
     i32.const 0
     i32.const 1152
     i32.const 159
     i32.const 16
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    i32.const 20
    i32.add
    call $~lib/rt/__visit_members
    local.get $0
    i32.load offset=4
    i32.const -4
    i32.and
    local.set $0
    br $while-continue|0
   end
  end
 )
 (func $~lib/rt/itcms/Object#set:color (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  local.get $0
  i32.load offset=4
  i32.const -4
  i32.and
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/itcms/Object#set:next (param $0 i32) (param $1 i32)
  local.get $0
  local.get $1
  local.get $0
  i32.load offset=4
  i32.const 3
  i32.and
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/itcms/Object#linkTo (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  local.get $1
  i32.load offset=8
  local.set $3
  local.get $0
  local.get $1
  local.get $2
  i32.or
  i32.store offset=4
  local.get $0
  local.get $3
  i32.store offset=8
  local.get $3
  local.get $0
  call $~lib/rt/itcms/Object#set:next
  local.get $1
  local.get $0
  i32.store offset=8
 )
 (func $~lib/rt/itcms/Object#makeGray (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  global.get $~lib/rt/itcms/iter
  i32.eq
  if
   local.get $0
   i32.load offset=8
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 1152
    i32.const 147
    i32.const 30
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   global.set $~lib/rt/itcms/iter
  end
  block $__inlined_func$~lib/rt/itcms/Object#unlink
   local.get $0
   i32.load offset=4
   i32.const -4
   i32.and
   local.tee $1
   i32.eqz
   if
    i32.const 0
    local.get $0
    i32.const 35764
    i32.lt_u
    local.get $0
    i32.load offset=8
    select
    i32.eqz
    if
     i32.const 0
     i32.const 1152
     i32.const 127
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    br $__inlined_func$~lib/rt/itcms/Object#unlink
   end
   local.get $0
   i32.load offset=8
   local.tee $2
   i32.eqz
   if
    i32.const 0
    i32.const 1152
    i32.const 131
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   local.get $2
   i32.store offset=8
   local.get $2
   local.get $1
   call $~lib/rt/itcms/Object#set:next
  end
  local.get $0
  global.get $~lib/rt/itcms/toSpace
  local.get $0
  i32.load offset=12
  local.tee $1
  i32.const 1
  i32.le_u
  if (result i32)
   i32.const 1
  else
   local.get $1
   i32.const 19344
   i32.load
   i32.gt_u
   if
    i32.const 1280
    i32.const 1344
    i32.const 22
    i32.const 28
    call $~lib/builtins/abort
    unreachable
   end
   local.get $1
   i32.const 3
   i32.shl
   i32.const 19348
   i32.add
   i32.load
   i32.const 32
   i32.and
  end
  if (result i32)
   global.get $~lib/rt/itcms/white
   i32.eqz
  else
   i32.const 2
  end
  call $~lib/rt/itcms/Object#linkTo
 )
 (func $~lib/rt/itcms/__visit (param $0 i32)
  local.get $0
  i32.eqz
  if
   return
  end
  global.get $~lib/rt/itcms/white
  local.get $0
  i32.const 20
  i32.sub
  local.tee $0
  i32.load offset=4
  i32.const 3
  i32.and
  i32.eq
  if
   local.get $0
   call $~lib/rt/itcms/Object#makeGray
   global.get $~lib/rt/itcms/visitCount
   i32.const 1
   i32.add
   global.set $~lib/rt/itcms/visitCount
  end
 )
 (func $~lib/rt/tlsf/removeBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1424
   i32.const 273
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const -4
  i32.and
  local.tee $2
  i32.const 1073741820
  i32.lt_u
  i32.const 0
  local.get $2
  i32.const 12
  i32.ge_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 1424
   i32.const 275
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 256
  i32.lt_u
  if
   local.get $2
   i32.const 4
   i32.shr_u
   local.set $2
  else
   local.get $2
   i32.const 31
   local.get $2
   i32.clz
   i32.sub
   local.tee $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $2
   local.get $3
   i32.const 7
   i32.sub
   local.set $3
  end
  local.get $2
  i32.const 16
  i32.lt_u
  i32.const 0
  local.get $3
  i32.const 23
  i32.lt_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 1424
   i32.const 288
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=8
  local.set $4
  local.get $1
  i32.load offset=4
  local.tee $5
  if
   local.get $5
   local.get $4
   i32.store offset=8
  end
  local.get $4
  if
   local.get $4
   local.get $5
   i32.store offset=4
  end
  local.get $1
  local.get $0
  local.get $2
  local.get $3
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  i32.eq
  if
   local.get $0
   local.get $2
   local.get $3
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $4
   i32.store offset=96
   local.get $4
   i32.eqz
   if
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    local.tee $4
    i32.load offset=4
    i32.const -2
    local.get $2
    i32.rotl
    i32.and
    local.set $1
    local.get $4
    local.get $1
    i32.store offset=4
    local.get $1
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load
     i32.const -2
     local.get $3
     i32.rotl
     i32.and
     i32.store
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 1424
   i32.const 201
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load
  local.tee $4
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 1424
   i32.const 203
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 4
  i32.add
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.add
  local.tee $5
  i32.load
  local.tee $2
  i32.const 1
  i32.and
  if
   local.get $4
   i32.const -4
   i32.and
   i32.const 4
   i32.add
   local.get $2
   i32.const -4
   i32.and
   i32.add
   local.tee $3
   i32.const 1073741820
   i32.lt_u
   if
    local.get $0
    local.get $5
    call $~lib/rt/tlsf/removeBlock
    local.get $1
    local.get $3
    local.get $4
    i32.const 3
    i32.and
    i32.or
    local.tee $4
    i32.store
    local.get $1
    i32.const 4
    i32.add
    local.get $1
    i32.load
    i32.const -4
    i32.and
    i32.add
    local.tee $5
    i32.load
    local.set $2
   end
  end
  local.get $4
  i32.const 2
  i32.and
  if
   local.get $1
   i32.const 4
   i32.sub
   i32.load
   local.tee $3
   i32.load
   local.tee $7
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 1424
    i32.const 224
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $7
   i32.const -4
   i32.and
   i32.const 4
   i32.add
   local.get $4
   i32.const -4
   i32.and
   i32.add
   local.tee $8
   i32.const 1073741820
   i32.lt_u
   if (result i32)
    local.get $0
    local.get $3
    call $~lib/rt/tlsf/removeBlock
    local.get $3
    local.get $8
    local.get $7
    i32.const 3
    i32.and
    i32.or
    local.tee $4
    i32.store
    local.get $3
   else
    local.get $1
   end
   local.set $1
  end
  local.get $5
  local.get $2
  i32.const 2
  i32.or
  i32.store
  local.get $4
  i32.const -4
  i32.and
  local.tee $3
  i32.const 1073741820
  i32.lt_u
  i32.const 0
  local.get $3
  i32.const 12
  i32.ge_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 1424
   i32.const 239
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  local.get $3
  local.get $1
  i32.const 4
  i32.add
  i32.add
  i32.ne
  if
   i32.const 0
   i32.const 1424
   i32.const 240
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $5
  i32.const 4
  i32.sub
  local.get $1
  i32.store
  local.get $3
  i32.const 256
  i32.lt_u
  if
   local.get $3
   i32.const 4
   i32.shr_u
   local.set $3
  else
   local.get $3
   i32.const 31
   local.get $3
   i32.clz
   i32.sub
   local.tee $4
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $3
   local.get $4
   i32.const 7
   i32.sub
   local.set $6
  end
  local.get $3
  i32.const 16
  i32.lt_u
  i32.const 0
  local.get $6
  i32.const 23
  i32.lt_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 1424
   i32.const 256
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $3
  local.get $6
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  local.set $4
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  local.get $4
  i32.store offset=8
  local.get $4
  if
   local.get $4
   local.get $1
   i32.store offset=4
  end
  local.get $0
  local.get $3
  local.get $6
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store offset=96
  local.get $0
  local.get $0
  i32.load
  i32.const 1
  local.get $6
  i32.shl
  i32.or
  i32.store
  local.get $0
  local.get $6
  i32.const 2
  i32.shl
  i32.add
  local.tee $0
  local.get $0
  i32.load offset=4
  i32.const 1
  local.get $3
  i32.shl
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  local.get $2
  i32.gt_u
  if
   i32.const 0
   i32.const 1424
   i32.const 381
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.set $1
  local.get $2
  i32.const -16
  i32.and
  local.get $0
  i32.load offset=1568
  local.tee $2
  if
   local.get $1
   local.get $2
   i32.const 4
   i32.add
   i32.lt_u
   if
    i32.const 0
    i32.const 1424
    i32.const 388
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
   local.get $2
   local.get $1
   i32.const 16
   i32.sub
   i32.eq
   if
    local.get $2
    i32.load
    local.set $4
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
   end
  else
   local.get $1
   local.get $0
   i32.const 1572
   i32.add
   i32.lt_u
   if
    i32.const 0
    i32.const 1424
    i32.const 401
    i32.const 5
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $1
  i32.sub
  local.tee $2
  i32.const 20
  i32.lt_u
  if
   return
  end
  local.get $1
  local.get $4
  i32.const 2
  i32.and
  local.get $2
  i32.const 8
  i32.sub
  local.tee $2
  i32.const 1
  i32.or
  i32.or
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=4
  local.get $1
  i32.const 0
  i32.store offset=8
  local.get $2
  local.get $1
  i32.const 4
  i32.add
  i32.add
  local.tee $2
  i32.const 2
  i32.store
  local.get $0
  local.get $2
  i32.store offset=1568
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/initialize
  (local $0 i32)
  (local $1 i32)
  memory.size
  local.tee $0
  i32.const 1
  i32.lt_s
  if (result i32)
   i32.const 1
   local.get $0
   i32.sub
   memory.grow
   i32.const 0
   i32.lt_s
  else
   i32.const 0
  end
  if
   unreachable
  end
  i32.const 35776
  i32.const 0
  i32.store
  i32.const 37344
  i32.const 0
  i32.store
  loop $for-loop|0
   local.get $1
   i32.const 23
   i32.lt_u
   if
    local.get $1
    i32.const 2
    i32.shl
    i32.const 35776
    i32.add
    i32.const 0
    i32.store offset=4
    i32.const 0
    local.set $0
    loop $for-loop|1
     local.get $0
     i32.const 16
     i32.lt_u
     if
      local.get $0
      local.get $1
      i32.const 4
      i32.shl
      i32.add
      i32.const 2
      i32.shl
      i32.const 35776
      i32.add
      i32.const 0
      i32.store offset=96
      local.get $0
      i32.const 1
      i32.add
      local.set $0
      br $for-loop|1
     end
    end
    local.get $1
    i32.const 1
    i32.add
    local.set $1
    br $for-loop|0
   end
  end
  i32.const 35776
  i32.const 37348
  memory.size
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
  i32.const 35776
  global.set $~lib/rt/tlsf/ROOT
 )
 (func $~lib/rt/itcms/step (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  block $folding-inner0
   block $break|0
    block $case2|0
     block $case1|0
      block $case0|0
       global.get $~lib/rt/itcms/state
       br_table $case0|0 $case1|0 $case2|0 $break|0
      end
      i32.const 1
      global.set $~lib/rt/itcms/state
      i32.const 0
      global.set $~lib/rt/itcms/visitCount
      call $~lib/rt/itcms/visitRoots
      global.get $~lib/rt/itcms/toSpace
      global.set $~lib/rt/itcms/iter
      br $folding-inner0
     end
     global.get $~lib/rt/itcms/white
     i32.eqz
     local.set $1
     global.get $~lib/rt/itcms/iter
     i32.load offset=4
     i32.const -4
     i32.and
     local.set $0
     loop $while-continue|1
      local.get $0
      global.get $~lib/rt/itcms/toSpace
      i32.ne
      if
       local.get $0
       global.set $~lib/rt/itcms/iter
       local.get $1
       local.get $0
       i32.load offset=4
       i32.const 3
       i32.and
       i32.ne
       if
        local.get $0
        local.get $1
        call $~lib/rt/itcms/Object#set:color
        i32.const 0
        global.set $~lib/rt/itcms/visitCount
        local.get $0
        i32.const 20
        i32.add
        call $~lib/rt/__visit_members
        br $folding-inner0
       end
       local.get $0
       i32.load offset=4
       i32.const -4
       i32.and
       local.set $0
       br $while-continue|1
      end
     end
     i32.const 0
     global.set $~lib/rt/itcms/visitCount
     call $~lib/rt/itcms/visitRoots
     global.get $~lib/rt/itcms/toSpace
     global.get $~lib/rt/itcms/iter
     i32.load offset=4
     i32.const -4
     i32.and
     i32.eq
     if
      global.get $~lib/memory/__stack_pointer
      local.set $0
      loop $while-continue|0
       local.get $0
       i32.const 35764
       i32.lt_u
       if
        local.get $0
        i32.load
        call $~lib/rt/itcms/__visit
        local.get $0
        i32.const 4
        i32.add
        local.set $0
        br $while-continue|0
       end
      end
      global.get $~lib/rt/itcms/iter
      i32.load offset=4
      i32.const -4
      i32.and
      local.set $0
      loop $while-continue|2
       local.get $0
       global.get $~lib/rt/itcms/toSpace
       i32.ne
       if
        local.get $1
        local.get $0
        i32.load offset=4
        i32.const 3
        i32.and
        i32.ne
        if
         local.get $0
         local.get $1
         call $~lib/rt/itcms/Object#set:color
         local.get $0
         i32.const 20
         i32.add
         call $~lib/rt/__visit_members
        end
        local.get $0
        i32.load offset=4
        i32.const -4
        i32.and
        local.set $0
        br $while-continue|2
       end
      end
      global.get $~lib/rt/itcms/fromSpace
      local.set $0
      global.get $~lib/rt/itcms/toSpace
      global.set $~lib/rt/itcms/fromSpace
      local.get $0
      global.set $~lib/rt/itcms/toSpace
      local.get $1
      global.set $~lib/rt/itcms/white
      local.get $0
      i32.load offset=4
      i32.const -4
      i32.and
      global.set $~lib/rt/itcms/iter
      i32.const 2
      global.set $~lib/rt/itcms/state
     end
     br $folding-inner0
    end
    global.get $~lib/rt/itcms/iter
    local.tee $0
    global.get $~lib/rt/itcms/toSpace
    i32.ne
    if
     local.get $0
     i32.load offset=4
     i32.const -4
     i32.and
     global.set $~lib/rt/itcms/iter
     global.get $~lib/rt/itcms/white
     i32.eqz
     local.get $0
     i32.load offset=4
     i32.const 3
     i32.and
     i32.ne
     if
      i32.const 0
      i32.const 1152
      i32.const 228
      i32.const 20
      call $~lib/builtins/abort
      unreachable
     end
     local.get $0
     i32.const 35764
     i32.lt_u
     if
      local.get $0
      i32.const 0
      i32.store offset=4
      local.get $0
      i32.const 0
      i32.store offset=8
     else
      global.get $~lib/rt/itcms/total
      local.get $0
      i32.load
      i32.const -4
      i32.and
      i32.const 4
      i32.add
      i32.sub
      global.set $~lib/rt/itcms/total
      local.get $0
      i32.const 4
      i32.add
      local.tee $1
      i32.const 35764
      i32.ge_u
      if
       global.get $~lib/rt/tlsf/ROOT
       i32.eqz
       if
        call $~lib/rt/tlsf/initialize
       end
       global.get $~lib/rt/tlsf/ROOT
       local.get $1
       i32.const 4
       i32.sub
       local.set $0
       local.get $1
       i32.const 15
       i32.and
       i32.eqz
       i32.const 0
       local.get $1
       select
       if (result i32)
        local.get $0
        i32.load
        i32.const 1
        i32.and
        i32.eqz
       else
        i32.const 0
       end
       i32.eqz
       if
        i32.const 0
        i32.const 1424
        i32.const 565
        i32.const 3
        call $~lib/builtins/abort
        unreachable
       end
       local.get $0
       local.get $0
       i32.load
       i32.const 1
       i32.or
       i32.store
       local.get $0
       call $~lib/rt/tlsf/insertBlock
      end
     end
     i32.const 10
     return
    end
    global.get $~lib/rt/itcms/toSpace
    global.get $~lib/rt/itcms/toSpace
    i32.store offset=4
    global.get $~lib/rt/itcms/toSpace
    global.get $~lib/rt/itcms/toSpace
    i32.store offset=8
    i32.const 0
    global.set $~lib/rt/itcms/state
   end
   i32.const 0
   return
  end
  global.get $~lib/rt/itcms/visitCount
 )
 (func $~lib/rt/tlsf/searchBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if
   local.get $1
   i32.const 4
   i32.shr_u
   local.set $1
  else
   i32.const 31
   local.get $1
   i32.const 1
   i32.const 27
   local.get $1
   i32.clz
   i32.sub
   i32.shl
   i32.add
   i32.const 1
   i32.sub
   local.get $1
   local.get $1
   i32.const 536870910
   i32.lt_u
   select
   local.tee $1
   i32.clz
   i32.sub
   local.set $2
   local.get $1
   local.get $2
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $1
   local.get $2
   i32.const 7
   i32.sub
   local.set $2
  end
  local.get $1
  i32.const 16
  i32.lt_u
  i32.const 0
  local.get $2
  i32.const 23
  i32.lt_u
  select
  i32.eqz
  if
   i32.const 0
   i32.const 1424
   i32.const 334
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const -1
  local.get $1
  i32.shl
  i32.and
  local.tee $1
  if (result i32)
   local.get $0
   local.get $1
   i32.ctz
   local.get $2
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
  else
   local.get $0
   i32.load
   i32.const -1
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.tee $1
   if (result i32)
    local.get $0
    local.get $1
    i32.ctz
    local.tee $1
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.tee $2
    i32.eqz
    if
     i32.const 0
     i32.const 1424
     i32.const 347
     i32.const 18
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.ctz
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=96
   else
    i32.const 0
   end
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i32.const 1073741820
  i32.ge_u
  if
   i32.const 1088
   i32.const 1424
   i32.const 462
   i32.const 30
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 12
  local.get $1
  i32.const 19
  i32.add
  i32.const -16
  i32.and
  i32.const 4
  i32.sub
  local.get $1
  i32.const 12
  i32.le_u
  select
  local.tee $2
  call $~lib/rt/tlsf/searchBlock
  local.tee $1
  i32.eqz
  if
   i32.const 4
   memory.size
   local.tee $1
   i32.const 16
   i32.shl
   i32.const 4
   i32.sub
   local.get $0
   i32.load offset=1568
   i32.ne
   i32.shl
   local.get $2
   i32.const 1
   i32.const 27
   local.get $2
   i32.clz
   i32.sub
   i32.shl
   i32.const 1
   i32.sub
   i32.add
   local.get $2
   local.get $2
   i32.const 536870910
   i32.lt_u
   select
   i32.add
   i32.const 65535
   i32.add
   i32.const -65536
   i32.and
   i32.const 16
   i32.shr_u
   local.set $3
   local.get $1
   local.get $3
   local.get $1
   local.get $3
   i32.gt_s
   select
   memory.grow
   i32.const 0
   i32.lt_s
   if
    local.get $3
    memory.grow
    i32.const 0
    i32.lt_s
    if
     unreachable
    end
   end
   local.get $0
   local.get $1
   i32.const 16
   i32.shl
   memory.size
   i32.const 16
   i32.shl
   call $~lib/rt/tlsf/addMemory
   local.get $0
   local.get $2
   call $~lib/rt/tlsf/searchBlock
   local.tee $1
   i32.eqz
   if
    i32.const 0
    i32.const 1424
    i32.const 500
    i32.const 16
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.gt_u
  if
   i32.const 0
   i32.const 1424
   i32.const 502
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/removeBlock
  local.get $1
  i32.load
  local.set $3
  local.get $2
  i32.const 4
  i32.add
  i32.const 15
  i32.and
  if
   i32.const 0
   i32.const 1424
   i32.const 361
   i32.const 14
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const -4
  i32.and
  local.get $2
  i32.sub
  local.tee $4
  i32.const 16
  i32.ge_u
  if
   local.get $1
   local.get $2
   local.get $3
   i32.const 2
   i32.and
   i32.or
   i32.store
   local.get $2
   local.get $1
   i32.const 4
   i32.add
   i32.add
   local.tee $2
   local.get $4
   i32.const 4
   i32.sub
   i32.const 1
   i32.or
   i32.store
   local.get $0
   local.get $2
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $1
   local.get $3
   i32.const -2
   i32.and
   i32.store
   local.get $1
   i32.const 4
   i32.add
   local.tee $0
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.get $0
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   i32.load
   i32.const -3
   i32.and
   i32.store
  end
  local.get $1
 )
 (func $~lib/memory/memory.fill (param $0 i32) (param $1 i32)
  (local $2 i32)
  block $~lib/util/memory/memset|inlined.0
   local.get $1
   i32.eqz
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store8
   local.get $0
   local.get $1
   i32.add
   i32.const 4
   i32.sub
   local.tee $2
   i32.const 0
   i32.store8 offset=3
   local.get $1
   i32.const 2
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store8 offset=1
   local.get $0
   i32.const 0
   i32.store8 offset=2
   local.get $2
   i32.const 0
   i32.store8 offset=2
   local.get $2
   i32.const 0
   i32.store8 offset=1
   local.get $1
   i32.const 6
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store8 offset=3
   local.get $2
   i32.const 0
   i32.store8
   local.get $1
   i32.const 8
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   local.get $0
   i32.sub
   i32.const 3
   i32.and
   local.tee $2
   i32.add
   local.tee $0
   i32.const 0
   i32.store
   local.get $0
   local.get $1
   local.get $2
   i32.sub
   i32.const -4
   i32.and
   local.tee $2
   i32.add
   i32.const 28
   i32.sub
   local.tee $1
   i32.const 0
   i32.store offset=24
   local.get $2
   i32.const 8
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store offset=4
   local.get $0
   i32.const 0
   i32.store offset=8
   local.get $1
   i32.const 0
   i32.store offset=16
   local.get $1
   i32.const 0
   i32.store offset=20
   local.get $2
   i32.const 24
   i32.le_u
   br_if $~lib/util/memory/memset|inlined.0
   local.get $0
   i32.const 0
   i32.store offset=12
   local.get $0
   i32.const 0
   i32.store offset=16
   local.get $0
   i32.const 0
   i32.store offset=20
   local.get $0
   i32.const 0
   i32.store offset=24
   local.get $1
   i32.const 0
   i32.store
   local.get $1
   i32.const 0
   i32.store offset=4
   local.get $1
   i32.const 0
   i32.store offset=8
   local.get $1
   i32.const 0
   i32.store offset=12
   local.get $0
   local.get $0
   i32.const 4
   i32.and
   i32.const 24
   i32.add
   local.tee $1
   i32.add
   local.set $0
   local.get $2
   local.get $1
   i32.sub
   local.set $1
   loop $while-continue|0
    local.get $1
    i32.const 32
    i32.ge_u
    if
     local.get $0
     i64.const 0
     i64.store
     local.get $0
     i64.const 0
     i64.store offset=8
     local.get $0
     i64.const 0
     i64.store offset=16
     local.get $0
     i64.const 0
     i64.store offset=24
     local.get $1
     i32.const 32
     i32.sub
     local.set $1
     local.get $0
     i32.const 32
     i32.add
     local.set $0
     br $while-continue|0
    end
   end
  end
 )
 (func $~lib/rt/itcms/__new (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  i32.const 1073741804
  i32.ge_u
  if
   i32.const 1088
   i32.const 1152
   i32.const 260
   i32.const 31
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/rt/itcms/total
  global.get $~lib/rt/itcms/threshold
  i32.ge_u
  if
   block $__inlined_func$~lib/rt/itcms/interrupt
    i32.const 2048
    local.set $2
    loop $do-continue|0
     local.get $2
     call $~lib/rt/itcms/step
     i32.sub
     local.set $2
     global.get $~lib/rt/itcms/state
     i32.eqz
     if
      global.get $~lib/rt/itcms/total
      i64.extend_i32_u
      i64.const 200
      i64.mul
      i64.const 100
      i64.div_u
      i32.wrap_i64
      i32.const 1024
      i32.add
      global.set $~lib/rt/itcms/threshold
      br $__inlined_func$~lib/rt/itcms/interrupt
     end
     local.get $2
     i32.const 0
     i32.gt_s
     br_if $do-continue|0
    end
    global.get $~lib/rt/itcms/total
    global.get $~lib/rt/itcms/total
    global.get $~lib/rt/itcms/threshold
    i32.sub
    i32.const 1024
    i32.lt_u
    i32.const 10
    i32.shl
    i32.add
    global.set $~lib/rt/itcms/threshold
   end
  end
  local.get $0
  i32.const 16
  i32.add
  local.set $2
  global.get $~lib/rt/tlsf/ROOT
  i32.eqz
  if
   call $~lib/rt/tlsf/initialize
  end
  global.get $~lib/rt/tlsf/ROOT
  local.get $2
  call $~lib/rt/tlsf/allocateBlock
  local.tee $2
  local.get $1
  i32.store offset=12
  local.get $2
  local.get $0
  i32.store offset=16
  local.get $2
  global.get $~lib/rt/itcms/fromSpace
  global.get $~lib/rt/itcms/white
  call $~lib/rt/itcms/Object#linkTo
  global.get $~lib/rt/itcms/total
  local.get $2
  i32.load
  i32.const -4
  i32.and
  i32.const 4
  i32.add
  i32.add
  global.set $~lib/rt/itcms/total
  local.get $2
  i32.const 20
  i32.add
  local.tee $1
  local.get $0
  call $~lib/memory/memory.fill
  local.get $1
 )
 (func $~lib/util/casemap/casemap (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  block $folding-inner0
   local.get $0
   i32.const 8
   i32.shr_u
   local.tee $2
   i32.const 5956
   i32.add
   i32.load8_u
   local.get $2
   i32.const 2316
   i32.add
   i32.load8_u
   i32.const 86
   i32.mul
   i32.const 2316
   i32.add
   local.get $0
   i32.const 255
   i32.and
   local.tee $5
   i32.const 3
   i32.div_u
   i32.add
   i32.load8_u
   local.get $5
   i32.const 3
   i32.rem_u
   i32.const 2
   i32.shl
   i32.const 4984
   i32.add
   i32.load
   i32.mul
   i32.const 11
   i32.shr_u
   i32.const 6
   i32.rem_u
   i32.add
   i32.const 2
   i32.shl
   i32.const 4996
   i32.add
   i32.load
   local.tee $2
   i32.const 8
   i32.shr_s
   local.set $3
   local.get $2
   i32.const 255
   i32.and
   local.tee $2
   i32.const 2
   i32.lt_u
   br_if $folding-inner0
   local.get $3
   i32.const 255
   i32.and
   local.set $2
   local.get $3
   i32.const 8
   i32.shr_u
   local.set $4
   loop $while-continue|0
    local.get $2
    if
     local.get $5
     local.get $2
     i32.const 1
     i32.shr_u
     local.tee $3
     local.get $4
     i32.add
     i32.const 1
     i32.shl
     i32.const 6468
     i32.add
     i32.load8_u
     local.tee $6
     i32.eq
     if (result i32)
      local.get $3
      local.get $4
      i32.add
      i32.const 1
      i32.shl
      i32.const 6468
      i32.add
      i32.load8_u offset=1
      i32.const 2
      i32.shl
      i32.const 4996
      i32.add
      i32.load
      local.tee $2
      i32.const 8
      i32.shr_s
      local.set $3
      local.get $2
      i32.const 255
      i32.and
      local.tee $2
      i32.const 2
      i32.lt_u
      br_if $folding-inner0
      local.get $0
      i32.const 1
      i32.add
      local.get $1
      i32.const 1
      i32.shl
      i32.sub
      return
     else
      local.get $5
      local.get $6
      i32.lt_u
      if (result i32)
       local.get $3
      else
       local.get $3
       local.get $4
       i32.add
       local.set $4
       local.get $2
       local.get $3
       i32.sub
      end
     end
     local.set $2
     br $while-continue|0
    end
   end
   local.get $0
   return
  end
  local.get $0
  local.get $3
  i32.const 0
  local.get $1
  local.get $2
  i32.xor
  i32.sub
  i32.and
  i32.add
 )
 (func $~lib/memory/memory.copy (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  block $~lib/util/memory/memmove|inlined.0
   local.get $2
   local.set $4
   local.get $0
   local.get $1
   i32.eq
   br_if $~lib/util/memory/memmove|inlined.0
   local.get $0
   local.get $1
   i32.lt_u
   if
    local.get $1
    i32.const 7
    i32.and
    local.get $0
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|0
      local.get $0
      i32.const 7
      i32.and
      if
       local.get $4
       i32.eqz
       br_if $~lib/util/memory/memmove|inlined.0
       local.get $4
       i32.const 1
       i32.sub
       local.set $4
       local.get $0
       local.tee $2
       i32.const 1
       i32.add
       local.set $0
       local.get $1
       local.tee $3
       i32.const 1
       i32.add
       local.set $1
       local.get $2
       local.get $3
       i32.load8_u
       i32.store8
       br $while-continue|0
      end
     end
     loop $while-continue|1
      local.get $4
      i32.const 8
      i32.ge_u
      if
       local.get $0
       local.get $1
       i64.load
       i64.store
       local.get $4
       i32.const 8
       i32.sub
       local.set $4
       local.get $0
       i32.const 8
       i32.add
       local.set $0
       local.get $1
       i32.const 8
       i32.add
       local.set $1
       br $while-continue|1
      end
     end
    end
    loop $while-continue|2
     local.get $4
     if
      local.get $0
      local.tee $2
      i32.const 1
      i32.add
      local.set $0
      local.get $1
      local.tee $3
      i32.const 1
      i32.add
      local.set $1
      local.get $2
      local.get $3
      i32.load8_u
      i32.store8
      local.get $4
      i32.const 1
      i32.sub
      local.set $4
      br $while-continue|2
     end
    end
   else
    local.get $1
    i32.const 7
    i32.and
    local.get $0
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|3
      local.get $0
      local.get $4
      i32.add
      i32.const 7
      i32.and
      if
       local.get $4
       i32.eqz
       br_if $~lib/util/memory/memmove|inlined.0
       local.get $4
       i32.const 1
       i32.sub
       local.tee $4
       local.get $0
       i32.add
       local.get $1
       local.get $4
       i32.add
       i32.load8_u
       i32.store8
       br $while-continue|3
      end
     end
     loop $while-continue|4
      local.get $4
      i32.const 8
      i32.ge_u
      if
       local.get $4
       i32.const 8
       i32.sub
       local.tee $4
       local.get $0
       i32.add
       local.get $1
       local.get $4
       i32.add
       i64.load
       i64.store
       br $while-continue|4
      end
     end
    end
    loop $while-continue|5
     local.get $4
     if
      local.get $4
      i32.const 1
      i32.sub
      local.tee $4
      local.get $0
      i32.add
      local.get $1
      local.get $4
      i32.add
      i32.load8_u
      i32.store8
      br $while-continue|5
     end
    end
   end
  end
 )
 (func $~lib/rt/itcms/__renew (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  local.get $0
  i32.const 20
  i32.sub
  local.tee $2
  i32.load
  i32.const -4
  i32.and
  i32.const 16
  i32.sub
  i32.le_u
  if
   local.get $2
   local.get $1
   i32.store offset=16
   local.get $0
   return
  end
  local.get $1
  local.get $2
  i32.load offset=12
  call $~lib/rt/itcms/__new
  local.tee $3
  local.get $0
  local.get $1
  local.get $2
  i32.load offset=16
  local.tee $0
  local.get $0
  local.get $1
  i32.gt_u
  select
  call $~lib/memory/memory.copy
  local.get $3
 )
 (func $~lib/string/String.__eq (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   return
  end
  local.get $1
  i32.eqz
  i32.const 1
  local.get $0
  select
  if
   i32.const 0
   return
  end
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $2
  local.get $1
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  i32.ne
  if
   i32.const 0
   return
  end
  block $__inlined_func$~lib/util/string/compareImpl (result i32)
   local.get $0
   local.tee $3
   i32.const 7
   i32.and
   local.get $1
   i32.const 7
   i32.and
   i32.or
   i32.eqz
   i32.const 0
   local.get $2
   local.tee $0
   i32.const 4
   i32.ge_u
   select
   if
    loop $do-continue|0
     local.get $3
     i64.load
     local.get $1
     i64.load
     i64.eq
     if
      local.get $3
      i32.const 8
      i32.add
      local.set $3
      local.get $1
      i32.const 8
      i32.add
      local.set $1
      local.get $0
      i32.const 4
      i32.sub
      local.tee $0
      i32.const 4
      i32.ge_u
      br_if $do-continue|0
     end
    end
   end
   loop $while-continue|1
    local.get $0
    local.tee $2
    i32.const 1
    i32.sub
    local.set $0
    local.get $2
    if
     local.get $3
     i32.load16_u
     local.tee $2
     local.get $1
     i32.load16_u
     local.tee $4
     i32.ne
     if
      local.get $2
      local.get $4
      i32.sub
      br $__inlined_func$~lib/util/string/compareImpl
     end
     local.get $3
     i32.const 2
     i32.add
     local.set $3
     local.get $1
     i32.const 2
     i32.add
     local.set $1
     br $while-continue|1
    end
   end
   i32.const 0
  end
  i32.eqz
 )
 (func $~lib/util/string/stagedBinaryLookup (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $0
  local.get $1
  i32.const 8
  i32.shr_u
  i32.add
  i32.load8_u
  i32.const 5
  i32.shl
  i32.add
  local.get $1
  i32.const 255
  i32.and
  i32.const 3
  i32.shr_u
  i32.add
  i32.load8_u
  local.get $1
  i32.const 7
  i32.and
  i32.shr_u
  i32.const 1
  i32.and
 )
 (func $~lib/string/String#codePointAt (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $2
  local.set $3
  local.get $1
  local.get $2
  i32.ge_u
  if
   i32.const -1
   return
  end
  i32.const 1
  local.get $3
  local.get $1
  i32.const 1
  i32.add
  i32.eq
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
  local.tee $2
  i32.const 64512
  i32.and
  i32.const 55296
  i32.ne
  select
  if
   local.get $2
   return
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u offset=2
  local.tee $0
  i32.const 64512
  i32.and
  i32.const 56320
  i32.ne
  if
   local.get $2
   return
  end
  local.get $0
  local.get $2
  i32.const 10
  i32.shl
  i32.add
  i32.const 56613888
  i32.sub
 )
 (func $~lib/string/String.__concat (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  block $__inlined_func$~lib/string/String#concat
   local.get $1
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 1
   i32.shl
   local.tee $4
   local.get $0
   local.tee $2
   i32.const 20
   i32.sub
   i32.load offset=16
   i32.const 1
   i32.shr_u
   i32.const 1
   i32.shl
   local.tee $3
   i32.add
   local.tee $0
   i32.eqz
   if
    global.get $~lib/memory/__stack_pointer
    i32.const 4
    i32.add
    global.set $~lib/memory/__stack_pointer
    i32.const 1056
    local.set $0
    br $__inlined_func$~lib/string/String#concat
   end
   global.get $~lib/memory/__stack_pointer
   local.get $0
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $0
   i32.store
   local.get $0
   local.get $2
   local.get $3
   call $~lib/memory/memory.copy
   local.get $0
   local.get $3
   i32.add
   local.get $1
   local.get $4
   call $~lib/memory/memory.copy
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
  end
  local.get $0
 )
 (func $~lib/rt/__visit_members (param $0 i32)
  block $invalid
   block $~lib/staticarray/StaticArray<u16>
    block $~lib/arraybuffer/ArrayBufferView
     block $~lib/string/String
      block $~lib/arraybuffer/ArrayBuffer
       local.get $0
       i32.const 8
       i32.sub
       i32.load
       br_table $~lib/arraybuffer/ArrayBuffer $~lib/string/String $~lib/arraybuffer/ArrayBufferView $~lib/staticarray/StaticArray<u16> $invalid
      end
      return
     end
     return
    end
    local.get $0
    i32.load
    local.tee $0
    if
     local.get $0
     call $~lib/rt/itcms/__visit
    end
    return
   end
   return
  end
  unreachable
 )
 (func $~start
  call $start:std/string-casemapping
 )
 (func $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 19380
  i32.lt_s
  if
   i32.const 35792
   i32.const 35840
   i32.const 1
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/string/String#toUpperCase (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $8
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 8
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.const 6
  i32.mul
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 1488
  i32.store offset=4
  i32.const 1484
  i32.load
  i32.const 1
  i32.shr_u
  local.set $3
  loop $for-loop|0
   local.get $7
   local.get $8
   i32.lt_u
   if
    local.get $0
    local.get $7
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    local.tee $2
    i32.const 7
    i32.shr_u
    if
     block $for-continue|0
      local.get $7
      local.get $8
      i32.const 1
      i32.sub
      i32.lt_u
      i32.const 0
      local.get $2
      i32.const 55295
      i32.sub
      i32.const 1025
      i32.lt_u
      select
      if
       local.get $0
       local.get $7
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u offset=2
       local.tee $4
       i32.const 56319
       i32.sub
       i32.const 1025
       i32.lt_u
       if
        local.get $7
        i32.const 1
        i32.add
        local.set $7
        local.get $4
        i32.const 1023
        i32.and
        local.get $2
        local.tee $1
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.or
        i32.const 65536
        i32.add
        local.tee $2
        i32.const 131072
        i32.ge_u
        if
         local.get $6
         local.get $5
         i32.const 1
         i32.shl
         i32.add
         local.get $1
         local.get $4
         i32.const 16
         i32.shl
         i32.or
         i32.store
         local.get $5
         i32.const 1
         i32.add
         local.set $5
         br $for-continue|0
        end
       end
      end
      local.get $2
      i32.const 9424
      i32.sub
      i32.const 25
      i32.le_u
      if
       local.get $6
       local.get $5
       i32.const 1
       i32.shl
       i32.add
       local.get $2
       i32.const 26
       i32.sub
       i32.store16
      else
       local.get $2
       i32.const 223
       i32.sub
       i32.const 64056
       i32.le_u
       if (result i32)
        local.get $3
        local.set $1
        i32.const 0
        local.set $9
        block $~lib/util/casemap/bsearch|inlined.0
         loop $while-continue|1
          local.get $1
          local.get $9
          i32.ge_s
          if
           local.get $1
           local.get $9
           i32.add
           i32.const 3
           i32.shr_u
           i32.const 2
           i32.shl
           local.tee $4
           i32.const 1
           i32.shl
           i32.const 1488
           i32.add
           i32.load16_u
           local.get $2
           i32.sub
           local.tee $10
           i32.eqz
           br_if $~lib/util/casemap/bsearch|inlined.0
           local.get $10
           i32.const 31
           i32.shr_u
           if
            local.get $4
            i32.const 4
            i32.add
            local.set $9
           else
            local.get $4
            i32.const 4
            i32.sub
            local.set $1
           end
           br $while-continue|1
          end
         end
         i32.const -1
         local.set $4
        end
        local.get $4
       else
        i32.const -1
       end
       local.tee $1
       i32.const -1
       i32.xor
       if
        local.get $1
        i32.const 1
        i32.shl
        i32.const 1488
        i32.add
        local.tee $2
        i32.load16_u offset=6
        local.set $1
        local.get $6
        local.get $5
        i32.const 1
        i32.shl
        i32.add
        local.tee $4
        local.get $2
        i32.load offset=2
        i32.store
        local.get $4
        local.get $1
        i32.store16 offset=4
        local.get $5
        local.get $1
        i32.const 0
        i32.ne
        i32.const 1
        i32.add
        i32.add
        local.set $5
       else
        local.get $2
        i32.const 1
        call $~lib/util/casemap/casemap
        i32.const 2097151
        i32.and
        local.tee $1
        i32.const 65536
        i32.lt_u
        if
         local.get $6
         local.get $5
         i32.const 1
         i32.shl
         i32.add
         local.get $1
         i32.store16
        else
         local.get $6
         local.get $5
         i32.const 1
         i32.shl
         i32.add
         local.get $1
         i32.const 65536
         i32.sub
         local.tee $1
         i32.const 1023
         i32.and
         i32.const 56320
         i32.or
         i32.const 16
         i32.shl
         local.get $1
         i32.const 10
         i32.shr_u
         i32.const 55296
         i32.or
         i32.or
         i32.store
         local.get $5
         i32.const 1
         i32.add
         local.set $5
        end
       end
      end
     end
    else
     local.get $6
     local.get $5
     i32.const 1
     i32.shl
     i32.add
     local.get $2
     local.get $2
     i32.const 97
     i32.sub
     i32.const 26
     i32.lt_u
     i32.const 5
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     i32.store16
    end
    local.get $7
    i32.const 1
    i32.add
    local.set $7
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $6
  local.get $5
  i32.const 1
  i32.shl
  call $~lib/rt/itcms/__renew
  global.get $~lib/memory/__stack_pointer
  i32.const 8
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $start:std/string-casemapping
  (local $0 i64)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=8
  global.get $~lib/memory/__stack_pointer
  i64.const 0
  i64.store offset=16
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store offset=24
  memory.size
  i32.const 16
  i32.shl
  i32.const 35764
  i32.sub
  i32.const 1
  i32.shr_u
  global.set $~lib/rt/itcms/threshold
  i32.const 1200
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/pinSpace
  i32.const 1232
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/toSpace
  i32.const 1376
  call $~lib/rt/itcms/initLazy
  global.set $~lib/rt/itcms/fromSpace
  global.get $~lib/memory/__stack_pointer
  i32.const 1056
  i32.store offset=8
  i32.const 1056
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 1056
  i32.store offset=4
  local.get $7
  i32.const 1056
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 8
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 1056
  i32.store offset=8
  i32.const 1056
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 1056
  i32.store offset=4
  local.get $7
  i32.const 1056
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 9
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 11552
  i32.store offset=8
  i32.const 11552
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 11600
  i32.store offset=4
  local.get $7
  i32.const 11600
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 10
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 11648
  i32.store offset=8
  i32.const 11648
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 11696
  i32.store offset=4
  local.get $7
  i32.const 11696
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 11
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 11744
  i32.store offset=8
  i32.const 11744
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 11840
  i32.store offset=4
  local.get $7
  i32.const 11840
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 12
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 11840
  i32.store offset=8
  i32.const 11840
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 11936
  i32.store offset=4
  local.get $7
  i32.const 11936
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 13
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12032
  i32.store offset=8
  i32.const 12032
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 12096
  i32.store offset=4
  local.get $7
  i32.const 12096
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 14
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12096
  i32.store offset=8
  i32.const 12096
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 12160
  i32.store offset=4
  local.get $7
  i32.const 12160
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 15
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12224
  i32.store offset=8
  i32.const 12224
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 12320
  i32.store offset=4
  local.get $7
  i32.const 12320
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 16
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12320
  i32.store offset=8
  i32.const 12320
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 12416
  i32.store offset=4
  local.get $7
  i32.const 12416
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 17
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12512
  i32.store offset=8
  i32.const 12512
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 12608
  i32.store offset=4
  local.get $7
  i32.const 12608
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 18
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12608
  i32.store offset=8
  i32.const 12608
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 12704
  i32.store offset=4
  local.get $7
  i32.const 12704
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 19
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12800
  i32.store offset=8
  i32.const 12800
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 12880
  i32.store offset=4
  local.get $7
  i32.const 12880
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 20
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 12960
  i32.store offset=8
  i32.const 12960
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13040
  i32.store offset=4
  local.get $7
  i32.const 13040
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 21
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 13120
  i32.store offset=8
  i32.const 13120
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13184
  i32.store offset=4
  local.get $7
  i32.const 13184
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 22
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 13248
  i32.store offset=8
  i32.const 13248
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13328
  i32.store offset=4
  local.get $7
  i32.const 13328
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 23
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 13408
  i32.store offset=8
  i32.const 13408
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13488
  i32.store offset=4
  local.get $7
  i32.const 13488
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 24
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 13568
  i32.store offset=8
  i32.const 13568
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13632
  i32.store offset=4
  local.get $7
  i32.const 13632
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 25
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 13696
  i32.store offset=8
  i32.const 13696
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13776
  i32.store offset=4
  local.get $7
  i32.const 13776
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 26
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 13856
  i32.store offset=8
  i32.const 13856
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 13936
  i32.store offset=4
  local.get $7
  i32.const 13936
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 27
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 14016
  i32.store offset=8
  i32.const 14016
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 14176
  i32.store offset=4
  local.get $7
  i32.const 14176
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 28
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 14016
  i32.store offset=8
  i32.const 14016
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 14336
  i32.store offset=4
  local.get $7
  i32.const 14336
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 32
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 14496
  i32.store offset=8
  i32.const 14496
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 14528
  i32.store offset=4
  local.get $7
  i32.const 14528
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 36
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 14560
  i32.store offset=8
  i32.const 14560
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 14592
  i32.store offset=4
  local.get $7
  i32.const 14592
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 37
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 14624
  i32.store offset=8
  i32.const 14624
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 14832
  i32.store offset=4
  local.get $7
  i32.const 14832
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 38
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 14496
  i32.store offset=12
  i32.const 14496
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=8
  local.get $7
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 15040
  i32.store offset=4
  local.get $7
  i32.const 15040
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 42
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 15072
  i32.store offset=12
  i32.const 15072
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=8
  local.get $7
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 15104
  i32.store offset=4
  local.get $7
  i32.const 15104
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 43
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 15136
  i32.store offset=12
  i32.const 15136
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=8
  local.get $7
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 15136
  i32.store offset=4
  local.get $7
  i32.const 15136
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 44
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 65536
  call $~lib/string/String.fromCodePoint
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=8
  local.get $7
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 15392
  i32.store offset=4
  local.get $7
  i32.const 15392
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 50
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 65536
  call $~lib/string/String.fromCodePoint
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store offset=8
  local.get $7
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 15392
  i32.store offset=4
  local.get $7
  i32.const 15392
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 51
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 15424
  i32.store offset=8
  i32.const 15424
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 15456
  i32.store offset=4
  local.get $7
  i32.const 15456
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 54
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 15488
  i32.store offset=8
  i32.const 15488
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 15520
  i32.store offset=4
  local.get $7
  i32.const 15520
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 55
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 15552
  i32.store offset=8
  i32.const 15552
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 15584
  i32.store offset=4
  local.get $7
  i32.const 15584
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 56
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 15616
  i32.store offset=8
  i32.const 15616
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 15648
  i32.store offset=4
  local.get $7
  i32.const 15648
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 59
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 15680
  i32.store offset=8
  i32.const 15680
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 15712
  i32.store offset=4
  local.get $7
  i32.const 15712
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 60
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 15744
  i32.store offset=8
  i32.const 15744
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 15776
  i32.store offset=4
  local.get $7
  i32.const 15776
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 61
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 15808
  i32.store offset=8
  i32.const 15808
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 15840
  i32.store offset=4
  local.get $7
  i32.const 15840
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 62
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 15872
  i32.store offset=8
  i32.const 15872
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 15904
  i32.store offset=4
  local.get $7
  i32.const 15904
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 63
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 15936
  i32.store offset=8
  i32.const 15936
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 15968
  i32.store offset=4
  local.get $7
  i32.const 15968
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 64
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16000
  i32.store offset=8
  i32.const 16000
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16032
  i32.store offset=4
  local.get $7
  i32.const 16032
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 65
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16064
  i32.store offset=8
  i32.const 16064
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16096
  i32.store offset=4
  local.get $7
  i32.const 16096
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 66
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16128
  i32.store offset=8
  i32.const 16128
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16160
  i32.store offset=4
  local.get $7
  i32.const 16160
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 67
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16192
  i32.store offset=8
  i32.const 16192
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16224
  i32.store offset=4
  local.get $7
  i32.const 16224
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 68
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16256
  i32.store offset=8
  i32.const 16256
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16288
  i32.store offset=4
  local.get $7
  i32.const 16288
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 69
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16320
  i32.store offset=8
  i32.const 16320
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16352
  i32.store offset=4
  local.get $7
  i32.const 16352
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 70
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16384
  i32.store offset=8
  i32.const 16384
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16416
  i32.store offset=4
  local.get $7
  i32.const 16416
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 72
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16448
  i32.store offset=8
  i32.const 16448
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16480
  i32.store offset=4
  local.get $7
  i32.const 16480
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 73
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16512
  i32.store offset=8
  i32.const 16512
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16544
  i32.store offset=4
  local.get $7
  i32.const 16544
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 74
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16576
  i32.store offset=8
  i32.const 16576
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16608
  i32.store offset=4
  local.get $7
  i32.const 16608
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 75
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16640
  i32.store offset=8
  i32.const 16640
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16672
  i32.store offset=4
  local.get $7
  i32.const 16672
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 78
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16704
  i32.store offset=8
  i32.const 16704
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16736
  i32.store offset=4
  local.get $7
  i32.const 16736
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 79
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16768
  i32.store offset=8
  i32.const 16768
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16800
  i32.store offset=4
  local.get $7
  i32.const 16800
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 80
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16832
  i32.store offset=8
  i32.const 16832
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16864
  i32.store offset=4
  local.get $7
  i32.const 16864
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 81
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16896
  i32.store offset=8
  i32.const 16896
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16928
  i32.store offset=4
  local.get $7
  i32.const 16928
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 82
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 16960
  i32.store offset=8
  i32.const 16960
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16992
  i32.store offset=4
  local.get $7
  i32.const 16992
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 83
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17024
  i32.store offset=8
  i32.const 17024
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 16096
  i32.store offset=4
  local.get $7
  i32.const 16096
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 84
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17056
  i32.store offset=8
  i32.const 17056
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17088
  i32.store offset=4
  local.get $7
  i32.const 17088
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 85
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17120
  i32.store offset=8
  i32.const 17120
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17152
  i32.store offset=4
  local.get $7
  i32.const 17152
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 86
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17184
  i32.store offset=8
  i32.const 17184
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17216
  i32.store offset=4
  local.get $7
  i32.const 17216
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 87
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17248
  i32.store offset=8
  i32.const 17248
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17280
  i32.store offset=4
  local.get $7
  i32.const 17280
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 88
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17312
  i32.store offset=8
  i32.const 17312
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17344
  i32.store offset=4
  local.get $7
  i32.const 17344
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 89
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17376
  i32.store offset=8
  i32.const 17376
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17408
  i32.store offset=4
  local.get $7
  i32.const 17408
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 90
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17440
  i32.store offset=8
  i32.const 17440
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17472
  i32.store offset=4
  local.get $7
  i32.const 17472
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 91
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17504
  i32.store offset=8
  i32.const 17504
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17536
  i32.store offset=4
  local.get $7
  i32.const 17536
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 92
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17568
  i32.store offset=8
  i32.const 17568
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17600
  i32.store offset=4
  local.get $7
  i32.const 17600
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 93
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17632
  i32.store offset=8
  i32.const 17632
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17664
  i32.store offset=4
  local.get $7
  i32.const 17664
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 94
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17696
  i32.store offset=8
  i32.const 17696
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17728
  i32.store offset=4
  local.get $7
  i32.const 17728
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 95
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17760
  i32.store offset=8
  i32.const 17760
  call $~lib/string/String#toLowerCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17792
  i32.store offset=4
  local.get $7
  i32.const 17792
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 96
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17824
  i32.store offset=8
  i32.const 17824
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17856
  i32.store offset=4
  local.get $7
  i32.const 17856
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 99
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 15072
  i32.store offset=8
  i32.const 15072
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17888
  i32.store offset=4
  local.get $7
  i32.const 17888
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 100
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17920
  i32.store offset=8
  i32.const 17920
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 17952
  i32.store offset=4
  local.get $7
  i32.const 17952
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 101
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 17984
  i32.store offset=8
  i32.const 17984
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 18016
  i32.store offset=4
  local.get $7
  i32.const 18016
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 102
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 18048
  i32.store offset=8
  i32.const 18048
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 18080
  i32.store offset=4
  local.get $7
  i32.const 18080
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 103
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 18112
  i32.store offset=8
  i32.const 18112
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 18144
  i32.store offset=4
  local.get $7
  i32.const 18144
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 104
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 18176
  i32.store offset=8
  i32.const 18176
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 18144
  i32.store offset=4
  local.get $7
  i32.const 18144
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 105
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 18208
  i32.store offset=8
  i32.const 18208
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 18240
  i32.store offset=4
  local.get $7
  i32.const 18240
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 106
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 18272
  i32.store offset=8
  i32.const 18272
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 18304
  i32.store offset=4
  local.get $7
  i32.const 18304
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 107
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 18336
  i32.store offset=8
  i32.const 18336
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 18368
  i32.store offset=4
  local.get $7
  i32.const 18368
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 108
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 18400
  i32.store offset=8
  i32.const 18400
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 18432
  i32.store offset=4
  local.get $7
  i32.const 18432
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 109
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 18464
  i32.store offset=8
  i32.const 18464
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 18496
  i32.store offset=4
  local.get $7
  i32.const 18496
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 110
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 18528
  i32.store offset=8
  i32.const 18528
  call $~lib/string/String#toUpperCase
  local.set $7
  global.get $~lib/memory/__stack_pointer
  local.get $7
  i32.store
  global.get $~lib/memory/__stack_pointer
  i32.const 18560
  i32.store offset=4
  local.get $7
  i32.const 18560
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 6896
   i32.const 111
   i32.const 1
   call $~lib/builtins/abort
   unreachable
  end
  loop $for-loop|0
   local.get $6
   i32.const 1114111
   i32.le_s
   if
    global.get $~lib/memory/__stack_pointer
    local.get $6
    call $~lib/string/String.fromCodePoint
    local.tee $5
    i32.store offset=16
    global.get $~lib/memory/__stack_pointer
    local.get $5
    call $~lib/string/String#toLowerCase
    local.tee $7
    i32.store offset=20
    global.get $~lib/memory/__stack_pointer
    local.get $5
    call $~lib/string/String#toUpperCase
    local.tee $5
    i32.store offset=24
    local.get $7
    i32.const 0
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.set $0
    local.get $7
    i32.const 1
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.tee $3
    i64.const 0
    i64.ge_s
    if
     local.get $0
     local.get $3
     i64.const 16
     i64.shl
     i64.add
     local.set $0
    end
    local.get $7
    i32.const 2
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.tee $3
    i64.const 0
    i64.ge_s
    if
     local.get $0
     local.get $3
     i64.const 32
     i64.shl
     i64.add
     local.set $0
    end
    local.get $5
    i32.const 0
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.set $3
    local.get $5
    i32.const 1
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.tee $2
    i64.const 0
    i64.ge_s
    if
     local.get $3
     local.get $2
     i64.const 16
     i64.shl
     i64.add
     local.set $3
    end
    local.get $5
    i32.const 2
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.tee $2
    i64.const 0
    i64.ge_s
    if
     local.get $3
     local.get $2
     i64.const 32
     i64.shl
     i64.add
     local.set $3
    end
    local.get $6
    i32.const 0
    call $std/string-casemapping/toLowerCaseFromIndex
    i64.extend_i32_s
    local.set $2
    local.get $6
    i32.const 1
    call $std/string-casemapping/toLowerCaseFromIndex
    i64.extend_i32_s
    local.tee $1
    i64.const 0
    i64.ge_s
    if
     local.get $2
     local.get $1
     i64.const 16
     i64.shl
     i64.add
     local.set $2
    end
    local.get $6
    i32.const 2
    call $std/string-casemapping/toLowerCaseFromIndex
    i64.extend_i32_s
    local.tee $1
    i64.const 0
    i64.ge_s
    if
     local.get $2
     local.get $1
     i64.const 32
     i64.shl
     i64.add
     local.set $2
    end
    local.get $6
    i32.const 0
    call $std/string-casemapping/toUpperCaseFromIndex
    i64.extend_i32_s
    local.set $1
    local.get $6
    i32.const 1
    call $std/string-casemapping/toUpperCaseFromIndex
    i64.extend_i32_s
    local.tee $4
    i64.const 0
    i64.ge_s
    if
     local.get $1
     local.get $4
     i64.const 16
     i64.shl
     i64.add
     local.set $1
    end
    local.get $6
    i32.const 2
    call $std/string-casemapping/toUpperCaseFromIndex
    i64.extend_i32_s
    local.tee $4
    i64.const 0
    i64.ge_s
    if
     local.get $1
     local.get $4
     i64.const 32
     i64.shl
     i64.add
     local.set $1
    end
    local.get $0
    local.get $2
    i64.ne
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 18592
     i32.store
     i32.const 18592
     i32.const 1
     local.get $6
     f64.convert_i32_s
     f64.const 0
     f64.const 0
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     global.get $~lib/memory/__stack_pointer
     i32.const 18688
     i32.store offset=4
     local.get $0
     call $~lib/util/number/itoa64
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=8
     i32.const 18688
     local.get $7
     call $~lib/string/String.__concat
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store
     local.get $7
     i32.const 0
     f64.const 0
     f64.const 0
     f64.const 0
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     global.get $~lib/memory/__stack_pointer
     i32.const 19072
     i32.store offset=4
     local.get $2
     call $~lib/util/number/itoa64
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=8
     i32.const 19072
     local.get $7
     call $~lib/string/String.__concat
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store
     local.get $7
     i32.const 0
     f64.const 0
     f64.const 0
     f64.const 0
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
    end
    local.get $1
    local.get $3
    i64.ne
    if
     global.get $~lib/memory/__stack_pointer
     i32.const 19136
     i32.store
     i32.const 19136
     i32.const 1
     local.get $6
     f64.convert_i32_s
     f64.const 0
     f64.const 0
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     global.get $~lib/memory/__stack_pointer
     i32.const 19232
     i32.store offset=4
     local.get $3
     call $~lib/util/number/itoa64
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=8
     i32.const 19232
     local.get $7
     call $~lib/string/String.__concat
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store
     local.get $7
     i32.const 0
     f64.const 0
     f64.const 0
     f64.const 0
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
     global.get $~lib/memory/__stack_pointer
     i32.const 19296
     i32.store offset=4
     local.get $1
     call $~lib/util/number/itoa64
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store offset=8
     i32.const 19296
     local.get $7
     call $~lib/string/String.__concat
     local.set $7
     global.get $~lib/memory/__stack_pointer
     local.get $7
     i32.store
     local.get $7
     i32.const 0
     f64.const 0
     f64.const 0
     f64.const 0
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
    end
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    br $for-loop|0
   end
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 28
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/string/String#toLowerCase (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 20
  i32.sub
  i32.load offset=16
  i32.const 1
  i32.shr_u
  local.tee $8
  i32.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   local.get $0
   return
  end
  global.get $~lib/memory/__stack_pointer
  local.get $8
  i32.const 2
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $6
  i32.store
  loop $for-loop|0
   local.get $4
   local.get $8
   i32.lt_u
   if
    local.get $0
    local.get $4
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    local.tee $1
    i32.const 7
    i32.shr_u
    if
     block $for-continue|0
      local.get $4
      local.get $8
      i32.const 1
      i32.sub
      i32.lt_u
      i32.const 0
      local.get $1
      i32.const 55295
      i32.sub
      i32.const 1025
      i32.lt_u
      select
      if
       local.get $0
       local.get $4
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u offset=2
       local.tee $7
       i32.const 56319
       i32.sub
       i32.const 1025
       i32.lt_u
       if
        local.get $4
        i32.const 1
        i32.add
        local.set $4
        local.get $7
        i32.const 1023
        i32.and
        local.get $1
        local.tee $3
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.or
        i32.const 65536
        i32.add
        local.tee $1
        i32.const 131072
        i32.ge_u
        if
         local.get $6
         local.get $5
         i32.const 1
         i32.shl
         i32.add
         local.get $3
         local.get $7
         i32.const 16
         i32.shl
         i32.or
         i32.store
         local.get $5
         i32.const 1
         i32.add
         local.set $5
         br $for-continue|0
        end
       end
      end
      local.get $1
      i32.const 304
      i32.eq
      if
       local.get $6
       local.get $5
       i32.const 1
       i32.shl
       i32.add
       i32.const 50790505
       i32.store
       local.get $5
       i32.const 1
       i32.add
       local.set $5
      else
       local.get $1
       i32.const 931
       i32.eq
       if
        local.get $6
        local.get $5
        i32.const 1
        i32.shl
        i32.add
        i32.const 962
        i32.const 963
        local.get $8
        i32.const 1
        i32.gt_u
        if (result i32)
         block $~lib/util/string/isFinalSigma|inlined.0 (result i32)
          i32.const 0
          local.set $2
          i32.const 0
          local.get $4
          local.tee $3
          i32.const 30
          i32.sub
          local.tee $1
          local.get $1
          i32.const 0
          i32.lt_s
          select
          local.set $9
          loop $while-continue|1
           local.get $3
           local.get $9
           i32.gt_s
           if
            i32.const -1
            local.set $1
            block $~lib/util/string/codePointBefore|inlined.0
             local.get $3
             i32.const 0
             i32.le_s
             br_if $~lib/util/string/codePointBefore|inlined.0
             local.get $0
             local.get $3
             i32.const 1
             i32.sub
             i32.const 1
             i32.shl
             i32.add
             i32.load16_u
             local.tee $7
             i32.const 64512
             i32.and
             i32.const 56320
             i32.eq
             local.get $3
             i32.const 2
             i32.sub
             i32.const 0
             i32.ge_s
             i32.and
             if
              local.get $7
              i32.const 1023
              i32.and
              local.get $0
              local.get $3
              i32.const 2
              i32.sub
              i32.const 1
              i32.shl
              i32.add
              i32.load16_u
              local.tee $10
              i32.const 1023
              i32.and
              i32.const 10
              i32.shl
              i32.add
              i32.const 65536
              i32.add
              local.set $1
              local.get $10
              i32.const 64512
              i32.and
              i32.const 55296
              i32.eq
              br_if $~lib/util/string/codePointBefore|inlined.0
             end
             i32.const 65533
             local.get $7
             local.get $7
             i32.const 63488
             i32.and
             i32.const 55296
             i32.eq
             select
             local.set $1
            end
            local.get $1
            i32.const 918000
            i32.lt_u
            if (result i32)
             i32.const 6956
             local.get $1
             call $~lib/util/string/stagedBinaryLookup
            else
             i32.const 0
            end
            i32.eqz
            if
             i32.const 0
             local.get $1
             i32.const 127370
             i32.lt_u
             if (result i32)
              i32.const 9964
              local.get $1
              call $~lib/util/string/stagedBinaryLookup
             else
              i32.const 0
             end
             i32.eqz
             br_if $~lib/util/string/isFinalSigma|inlined.0
             drop
             i32.const 1
             local.set $2
            end
            local.get $3
            local.get $1
            i32.const 65536
            i32.ge_s
            i32.const 1
            i32.add
            i32.sub
            local.set $3
            br $while-continue|1
           end
          end
          i32.const 0
          local.get $2
          i32.eqz
          br_if $~lib/util/string/isFinalSigma|inlined.0
          drop
          local.get $4
          i32.const 1
          i32.add
          local.tee $3
          i32.const 30
          i32.add
          local.tee $1
          local.get $8
          local.get $1
          local.get $8
          i32.lt_s
          select
          local.set $2
          loop $while-continue|2
           local.get $2
           local.get $3
           i32.gt_s
           if
            local.get $0
            local.get $3
            i32.const 1
            i32.shl
            i32.add
            i32.load16_u
            local.tee $1
            i32.const 64512
            i32.and
            i32.const 55296
            i32.eq
            local.get $8
            local.get $3
            i32.const 1
            i32.add
            i32.ne
            i32.and
            if
             local.get $0
             local.get $3
             i32.const 1
             i32.shl
             i32.add
             i32.load16_u offset=2
             local.tee $7
             i32.const 64512
             i32.and
             i32.const 56320
             i32.eq
             if
              local.get $7
              local.get $1
              i32.const 10
              i32.shl
              i32.add
              i32.const 56613888
              i32.sub
              local.set $1
             end
            end
            local.get $1
            i32.const 918000
            i32.lt_u
            if (result i32)
             i32.const 6956
             local.get $1
             call $~lib/util/string/stagedBinaryLookup
            else
             i32.const 0
            end
            i32.eqz
            if
             local.get $1
             i32.const 127370
             i32.lt_u
             if (result i32)
              i32.const 9964
              local.get $1
              call $~lib/util/string/stagedBinaryLookup
             else
              i32.const 0
             end
             i32.eqz
             br $~lib/util/string/isFinalSigma|inlined.0
            end
            local.get $3
            local.get $1
            i32.const 65536
            i32.ge_u
            i32.const 1
            i32.add
            i32.add
            local.set $3
            br $while-continue|2
           end
          end
          i32.const 1
         end
        else
         i32.const 0
        end
        select
        i32.store16
       else
        local.get $1
        i32.const 9398
        i32.sub
        i32.const 25
        i32.le_u
        if
         local.get $6
         local.get $5
         i32.const 1
         i32.shl
         i32.add
         local.get $1
         i32.const 26
         i32.add
         i32.store16
        else
         local.get $1
         i32.const 0
         call $~lib/util/casemap/casemap
         i32.const 2097151
         i32.and
         local.tee $3
         i32.const 65536
         i32.lt_u
         if
          local.get $6
          local.get $5
          i32.const 1
          i32.shl
          i32.add
          local.get $3
          i32.store16
         else
          local.get $6
          local.get $5
          i32.const 1
          i32.shl
          i32.add
          local.get $3
          i32.const 65536
          i32.sub
          local.tee $3
          i32.const 10
          i32.shr_u
          i32.const 55296
          i32.or
          local.get $3
          i32.const 1023
          i32.and
          i32.const 56320
          i32.or
          i32.const 16
          i32.shl
          i32.or
          i32.store
          local.get $5
          i32.const 1
          i32.add
          local.set $5
         end
        end
       end
      end
     end
    else
     local.get $6
     local.get $5
     i32.const 1
     i32.shl
     i32.add
     local.get $1
     local.get $1
     i32.const 65
     i32.sub
     i32.const 26
     i32.lt_u
     i32.const 5
     i32.shl
     i32.or
     i32.store16
    end
    local.get $4
    i32.const 1
    i32.add
    local.set $4
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    br $for-loop|0
   end
  end
  local.get $6
  local.get $5
  i32.const 1
  i32.shl
  call $~lib/rt/itcms/__renew
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
 )
 (func $~lib/string/String.fromCodePoint (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i32.const 1114111
  i32.gt_u
  if
   i32.const 0
   i32.const 15344
   i32.const 33
   i32.const 5
   call $~lib/builtins/abort
   unreachable
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 2
  local.get $0
  i32.const 65535
  i32.gt_s
  local.tee $2
  i32.shl
  i32.const 1
  call $~lib/rt/itcms/__new
  local.tee $1
  i32.store
  local.get $2
  if
   local.get $1
   local.get $0
   i32.const 65536
   i32.sub
   local.tee $0
   i32.const 10
   i32.shr_u
   i32.const 55296
   i32.or
   local.get $0
   i32.const 1023
   i32.and
   i32.const 56320
   i32.or
   i32.const 16
   i32.shl
   i32.or
   i32.store
  else
   local.get $1
   local.get $0
   i32.store16
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $1
 )
 (func $~lib/util/number/itoa64 (param $0 i64) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.sub
  global.set $~lib/memory/__stack_pointer
  call $~stack_check
  global.get $~lib/memory/__stack_pointer
  i32.const 0
  i32.store
  local.get $0
  i64.eqz
  if
   global.get $~lib/memory/__stack_pointer
   i32.const 4
   i32.add
   global.set $~lib/memory/__stack_pointer
   i32.const 18944
   return
  end
  i64.const 0
  local.get $0
  i64.sub
  local.get $0
  local.get $0
  i64.const 63
  i64.shr_u
  i32.wrap_i64
  local.tee $4
  select
  local.tee $0
  i64.const 4294967295
  i64.le_u
  if
   global.get $~lib/memory/__stack_pointer
   local.get $4
   local.get $0
   i32.wrap_i64
   local.tee $1
   i32.const 10
   i32.ge_u
   i32.const 1
   i32.add
   local.get $1
   i32.const 10000
   i32.ge_u
   i32.const 3
   i32.add
   local.get $1
   i32.const 1000
   i32.ge_u
   i32.add
   local.get $1
   i32.const 100
   i32.lt_u
   select
   local.get $1
   i32.const 1000000
   i32.ge_u
   i32.const 6
   i32.add
   local.get $1
   i32.const 1000000000
   i32.ge_u
   i32.const 8
   i32.add
   local.get $1
   i32.const 100000000
   i32.ge_u
   i32.add
   local.get $1
   i32.const 10000000
   i32.lt_u
   select
   local.get $1
   i32.const 100000
   i32.lt_u
   select
   i32.add
   local.tee $2
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store
   loop $do-continue|0
    local.get $3
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $1
    i32.const 10
    i32.rem_u
    i32.const 48
    i32.add
    i32.store16
    local.get $1
    i32.const 10
    i32.div_u
    local.tee $1
    br_if $do-continue|0
   end
  else
   global.get $~lib/memory/__stack_pointer
   local.get $4
   local.get $0
   i64.const 100000000000
   i64.ge_u
   i32.const 10
   i32.add
   local.get $0
   i64.const 10000000000
   i64.ge_u
   i32.add
   local.get $0
   i64.const 100000000000000
   i64.ge_u
   i32.const 13
   i32.add
   local.get $0
   i64.const 10000000000000
   i64.ge_u
   i32.add
   local.get $0
   i64.const 1000000000000
   i64.lt_u
   select
   local.get $0
   i64.const 10000000000000000
   i64.ge_u
   i32.const 16
   i32.add
   local.get $0
   i64.const -8446744073709551616
   i64.ge_u
   i32.const 18
   i32.add
   local.get $0
   i64.const 1000000000000000000
   i64.ge_u
   i32.add
   local.get $0
   i64.const 100000000000000000
   i64.lt_u
   select
   local.get $0
   i64.const 1000000000000000
   i64.lt_u
   select
   i32.add
   local.tee $2
   i32.const 1
   i32.shl
   i32.const 1
   call $~lib/rt/itcms/__new
   local.tee $3
   i32.store
   loop $do-continue|00
    local.get $3
    local.get $2
    i32.const 1
    i32.sub
    local.tee $2
    i32.const 1
    i32.shl
    i32.add
    local.get $0
    i64.const 10
    i64.rem_u
    i32.wrap_i64
    i32.const 48
    i32.add
    i32.store16
    local.get $0
    i64.const 10
    i64.div_u
    local.tee $0
    i64.const 0
    i64.ne
    br_if $do-continue|00
   end
  end
  local.get $4
  if
   local.get $3
   i32.const 45
   i32.store16
  end
  global.get $~lib/memory/__stack_pointer
  i32.const 4
  i32.add
  global.set $~lib/memory/__stack_pointer
  local.get $3
 )
)

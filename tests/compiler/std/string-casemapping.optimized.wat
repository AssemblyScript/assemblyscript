(module
 (type $i32_=>_none (func (param i32)))
 (type $i32_=>_i32 (func (param i32) (result i32)))
 (type $i32_i32_=>_i32 (func (param i32 i32) (result i32)))
 (type $i32_i32_=>_none (func (param i32 i32)))
 (type $i32_i32_i32_=>_none (func (param i32 i32 i32)))
 (type $i32_i32_i32_=>_i32 (func (param i32 i32 i32) (result i32)))
 (type $none_=>_none (func))
 (type $i32_i32_i32_i32_=>_none (func (param i32 i32 i32 i32)))
 (type $i32_i32_f64_f64_f64_f64_f64_=>_none (func (param i32 i32 f64 f64 f64 f64 f64)))
 (type $none_=>_i32 (func (result i32)))
 (import "env" "abort" (func $~lib/builtins/abort (param i32 i32 i32 i32)))
 (import "rtrace" "onincrement" (func $~lib/rt/rtrace/onincrement (param i32)))
 (import "rtrace" "onalloc" (func $~lib/rt/rtrace/onalloc (param i32)))
 (import "rtrace" "onrealloc" (func $~lib/rt/rtrace/onrealloc (param i32 i32)))
 (import "rtrace" "onfree" (func $~lib/rt/rtrace/onfree (param i32)))
 (import "string_casemapping" "toLowerCaseFromIndex" (func $std/string-casemapping/toLowerCaseFromIndex (param i32 i32) (result i32)))
 (import "string_casemapping" "toUpperCaseFromIndex" (func $std/string-casemapping/toUpperCaseFromIndex (param i32 i32) (result i32)))
 (import "env" "trace" (func $~lib/builtins/trace (param i32 i32 f64 f64 f64 f64 f64)))
 (import "rtrace" "ondecrement" (func $~lib/rt/rtrace/ondecrement (param i32)))
 (memory $0 1)
 (data (i32.const 20) "\01\00\00\00\01")
 (data (i32.const 32) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00p\00u\00r\00e\00.\00t\00s")
 (data (i32.const 80) "\1e\00\00\00\01\00\00\00\01\00\00\00\1e\00\00\00~\00l\00i\00b\00/\00r\00t\00/\00t\00l\00s\00f\00.\00t\00s")
 (data (i32.const 128) "(\00\00\00\01\00\00\00\01\00\00\00(\00\00\00a\00l\00l\00o\00c\00a\00t\00i\00o\00n\00 \00t\00o\00o\00 \00l\00a\00r\00g\00e")
 (data (i32.const 192) "0\03\00\00\01\00\00\00\03\00\00\000\03\00\00\df\00S\00S\00\00\00I\01\bc\02N\00\00\00\f0\01J\00\0c\03\00\00\90\03\99\03\08\03\01\03\b0\03\a5\03\08\03\01\03\87\055\05R\05\00\00\96\1eH\001\03\00\00\97\1eT\00\08\03\00\00\98\1eW\00\n\03\00\00\99\1eY\00\n\03\00\00\9a\1eA\00\be\02\00\00P\1f\a5\03\13\03\00\00R\1f\a5\03\13\03\00\03T\1f\a5\03\13\03\01\03V\1f\a5\03\13\03B\03\80\1f\08\1f\99\03\00\00\81\1f\t\1f\99\03\00\00\82\1f\n\1f\99\03\00\00\83\1f\0b\1f\99\03\00\00\84\1f\0c\1f\99\03\00\00\85\1f\0d\1f\99\03\00\00\86\1f\0e\1f\99\03\00\00\87\1f\0f\1f\99\03\00\00\88\1f\08\1f\99\03\00\00\89\1f\t\1f\99\03\00\00\8a\1f\n\1f\99\03\00\00\8b\1f\0b\1f\99\03\00\00\8c\1f\0c\1f\99\03\00\00\8d\1f\0d\1f\99\03\00\00\8e\1f\0e\1f\99\03\00\00\8f\1f\0f\1f\99\03\00\00\90\1f(\1f\99\03\00\00\91\1f)\1f\99\03\00\00\92\1f*\1f\99\03\00\00\93\1f+\1f\99\03\00\00\94\1f,\1f\99\03\00\00\95\1f-\1f\99\03\00\00\96\1f.\1f\99\03\00\00\97\1f/\1f\99\03\00\00\98\1f(\1f\99\03\00\00\99\1f)\1f\99\03\00\00\9a\1f*\1f\99\03\00\00\9b\1f+\1f\99\03\00\00\9c\1f,\1f\99\03\00\00\9d\1f-\1f\99\03\00\00\9e\1f.\1f\99\03\00\00\9f\1f/\1f\99\03\00\00\a0\1fh\1f\99\03\00\00\a1\1fi\1f\99\03\00\00\a2\1fj\1f\99\03\00\00\a3\1fk\1f\99\03\00\00\a4\1fl\1f\99\03\00\00\a5\1fm\1f\99\03\00\00\a6\1fn\1f\99\03\00\00\a7\1fo\1f\99\03\00\00\a8\1fh\1f\99\03\00\00\a9\1fi\1f\99\03\00\00\aa\1fj\1f\99\03\00\00\ab\1fk\1f\99\03\00\00\ac\1fl\1f\99\03\00\00\ad\1fm\1f\99\03\00\00\ae\1fn\1f\99\03\00\00\af\1fo\1f\99\03\00\00\b2\1f\ba\1f\99\03\00\00\b3\1f\91\03\99\03\00\00\b4\1f\86\03\99\03\00\00\b6\1f\91\03B\03\00\00\b7\1f\91\03B\03\99\03\bc\1f\91\03\99\03\00\00\c2\1f\ca\1f\99\03\00\00\c3\1f\97\03\99\03\00\00\c4\1f\89\03\99\03\00\00\c6\1f\97\03B\03\00\00\c7\1f\97\03B\03\99\03\cc\1f\97\03\99\03\00\00\d2\1f\99\03\08\03\00\03\d3\1f\99\03\08\03\01\03\d6\1f\99\03B\03\00\00\d7\1f\99\03\08\03B\03\e2\1f\a5\03\08\03\00\03\e3\1f\a5\03\08\03\01\03\e4\1f\a1\03\13\03\00\00\e6\1f\a5\03B\03\00\00\e7\1f\a5\03\08\03B\03\f2\1f\fa\1f\99\03\00\00\f3\1f\a9\03\99\03\00\00\f4\1f\8f\03\99\03\00\00\f6\1f\a9\03B\03\00\00\f7\1f\a9\03B\03\99\03\fc\1f\a9\03\99\03\00\00\00\fbF\00F\00\00\00\01\fbF\00I\00\00\00\02\fbF\00L\00\00\00\03\fbF\00F\00I\00\04\fbF\00F\00L\00\05\fbS\00T\00\00\00\06\fbS\00T\00\00\00\13\fbD\05F\05\00\00\14\fbD\055\05\00\00\15\fbD\05;\05\00\00\16\fbN\05F\05\00\00\17\fbD\05=\05")
 (data (i32.const 1024) "j\n\00\00\01\00\00\00\04\00\00\00j\n\00\00\07\08\t\n\0b\0c\06\06\06\06\06\06\06\06\06\06\0d\06\06\0e\06\06\06\06\06\06\06\06\0f\10\11\12\06\13\06\06\06\06\06\06\06\06\06\06\14\15\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\16\17\06\06\06\18\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\19\06\06\06\06\1a\06\06\06\06\06\06\06\1b\06\06\06\06\06\06\06\06\06\06\06\1c\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1d\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\1e\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06\06")
 (data (i32.const 1663) "$++++++++\01\00TVVVVVVVV")
 (data (i32.const 1702) "\18\00\00\00+++++++\07++[VVVVVVVJVV\051P1P1P1P1P1P1P1P$Py1P1P18P1P1P1P1P1P1P1PN1\02N\0d\0dN\03N\00$n\00N1&nQN$PN9\14\81\1b\1d\1dS1P1P\0d1P1P1P\1bS$P1\02\\{\\{\\{\\{\\{\14y\\{\\{\\-+I\03H\03x\\{\14\00\96\n\01+(\06\06\00*\06**+\07\bb\b5+\1e\00+\07+++\01++++++++++++++++++++++++++++++++\01+++++++++++++++++++++++*+++++++++++++\cdF\cd+\00%+\07\01\06\01UVVVVVUVV\02$\81\81\81\81\81\15\81\81\81\00\00+\00\b2\d1\b2\d1\b2\d1\b2\d1\00\00\cd\cc\01\00\d7\d7\d7\d7\d7\83\81\81\81\81\81\81\81\81\81\81\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\1c\00\00\00\00\001P1P1P1P1P1\02\00\001P1P1P1P1P1P1P1P1PN1P1PN1P1P1P1P1P1P1P1\02\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6\87\a6*++++++++++++\00\00\00TVVVVVVVVVVVV")
 (data (i32.const 2211) "TVVVVVVVVVVVV\0c\00\0c*+++++++++++++\07*\01")
 (data (i32.const 2297) "*++++++++++++++++++++++++++VVl\81\15\00++++++++++++++++++++++++++++++++++++++++++\07l\03A++VVVVVVVVVVVVVV,V+++++++++++++++++++++\01")
 (data (i32.const 2456) "\0cl\00\00\00\00\00\06")
 (data (i32.const 2502) "\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%Vz\9e&\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06%\06\01++OVV,+\7fVV9++UVV++OVV,+\7fVV\817u[{\\++OVV\02\ac\04\00\009++UVV++OVV,++VV2\13\81W\00o\81~\c9\d7~-\81\81\0e~9\7foW\00\81\81~\15\00~\03++++++++++++\07+$+\97+++++++++*+++++VVVVV\80\81\81\81\819\bb*++++++++++++++++++++++++++++++++++++++++\01\81\81\81\81\81\81\81\81\81\81\81\81\81\81\81\c9\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\ac\d0\0d\00N1\02\b4\c1\c1\d7\d7$P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P1P\d7\d7S\c1G\d4\d7\d7\d7\05++++++++++++\07\01\00\01")
 (data (i32.const 2953) "N1P1P1P1P1P1P1P\0d\00\00\00\00\00$P1P1P1P1P")
 (data (i32.const 3018) "+++++++++++y\\{\\{O{\\{\\{\\{\\{\\{\\{\\{\\{\\{\\-++y\14\\{\\-y*\\\'\\{\\{\\{\a4\00\n\b4\\{\\{O\03*++++++++++++++++++\01")
 (data (i32.const 3131) "H")
 (data (i32.const 3141) "*++++++++++++++++++++++++++")
 (data (i32.const 3201) "++++++++\07\00HVVVVVVVV\02")
 (data (i32.const 3276) "+++++++++++++UVVVVVVVVVVVV\0e")
 (data (i32.const 3334) "$+++++++++++\07\00VVVVVVVVVVVV")
 (data (i32.const 3404) "$++++++++++++++++\07\00\00\00\00VVVVVVVVVVVVVVVVV")
 (data (i32.const 3501) "*++++++++++VVVVVVVVVV\0e")
 (data (i32.const 3555) "*++++++++++VVVVVVVVVV\0e")
 (data (i32.const 3620) "+++++++++++UVVVVVVVVVV\0e")
 (data (i32.const 3712) "\0c\00\00\00\01\00\00\00\05\00\00\00\0c\00\00\00\00\08\00\00V\01\00\009")
 (data (i32.const 3744) "\c0\03\00\00\01\00\00\00\05\00\00\00\c0\03\00\00\00\00\00\00\01 \00\00\00\e0\ff\ff\00\bf\1d\00\00\e7\02\00\00y\00\00\02$\00\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\01\02\00\00\00\fe\ff\ff\019\ff\ff\00\18\ff\ff\01\87\ff\ff\00\d4\fe\ff\00\c3\00\00\01\d2\00\00\01\ce\00\00\01\cd\00\00\01O\00\00\01\ca\00\00\01\cb\00\00\01\cf\00\00\00a\00\00\01\d3\00\00\01\d1\00\00\00\a3\00\00\01\d5\00\00\00\82\00\00\01\d6\00\00\01\da\00\00\01\d9\00\00\01\db\00\00\008\00\00\03\00\00\00\00\b1\ff\ff\01\9f\ff\ff\01\c8\ff\ff\02($\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\003\ff\ff\00&\ff\ff\01~\ff\ff\01+*\00\01]\ff\ff\01(*\00\00?*\00\01=\ff\ff\01E\00\00\01G\00\00\00\1f*\00\00\1c*\00\00\1e*\00\00.\ff\ff\002\ff\ff\006\ff\ff\005\ff\ff\00O\a5\00\00K\a5\00\001\ff\ff\00(\a5\00\00D\a5\00\00/\ff\ff\00-\ff\ff\00\f7)\00\00A\a5\00\00\fd)\00\00+\ff\ff\00*\ff\ff\00\e7)\00\00C\a5\00\00*\a5\00\00\bb\ff\ff\00\'\ff\ff\00\b9\ff\ff\00%\ff\ff\00\15\a5\00\00\12\a5\00\02$L\00\00\00\00\00\01 \00\00\00\e0\ff\ff\01\01\00\00\00\ff\ff\ff\00T\00\00\01t\00\00\01&\00\00\01%\00\00\01@\00\00\01?\00\00\00\da\ff\ff\00\db\ff\ff\00\e1\ff\ff\00\c0\ff\ff\00\c1\ff\ff\01\08\00\00\00\c2\ff\ff\00\c7\ff\ff\00\d1\ff\ff\00\ca\ff\ff\00\f8\ff\ff\00\aa\ff\ff\00\b0\ff\ff\00\07\00\00\00\8c\ff\ff\01\c4\ff\ff\00\a0\ff\ff\01\f9\ff\ff\02\1ap\00\01\01\00\00\00\ff\ff\ff\01 \00\00\00\e0\ff\ff\01P\00\00\01\0f\00\00\00\f1\ff\ff\00\00\00\00\010\00\00\00\d0\ff\ff\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c0\0b\00\01`\1c\00\00\00\00\00\01\d0\97\00\01\08\00\00\00\f8\ff\ff\02\05\8a\00\00\00\00\00\01@\f4\ff\00\9e\e7\ff\00\c2\89\00\00\db\e7\ff\00\92\e7\ff\00\93\e7\ff\00\9c\e7\ff\00\9d\e7\ff\00\a4\e7\ff\00\00\00\00\008\8a\00\00\04\8a\00\00\e6\0e\00\01\01\00\00\00\ff\ff\ff\00\00\00\00\00\c5\ff\ff\01A\e2\ff\02\1d\8f\00\00\08\00\00\01\f8\ff\ff\00\00\00\00\00V\00\00\01\aa\ff\ff\00J\00\00\00d\00\00\00\80\00\00\00p\00\00\00~\00\00\00\t\00\00\01\b6\ff\ff\01\f7\ff\ff\00\db\e3\ff\01\9c\ff\ff\01\90\ff\ff\01\80\ff\ff\01\82\ff\ff\02\05\ac\00\00\00\00\00\01\10\00\00\00\f0\ff\ff\01\1c\00\00\01\01\00\00\01\a3\e2\ff\01A\df\ff\01\ba\df\ff\00\e4\ff\ff\02\0b\b1\00\01\01\00\00\00\ff\ff\ff\010\00\00\00\d0\ff\ff\00\00\00\00\01\t\d6\ff\01\1a\f1\ff\01\19\d6\ff\00\d5\d5\ff\00\d8\d5\ff\01\e4\d5\ff\01\03\d6\ff\01\e1\d5\ff\01\e2\d5\ff\01\c1\d5\ff\00\00\00\00\00\a0\e3\ff\00\00\00\00\01\01\00\00\00\ff\ff\ff\02\0c\bc\00\00\00\00\00\01\01\00\00\00\ff\ff\ff\01\bcZ\ff\01\a0\03\00\01\fcu\ff\01\d8Z\ff\000\00\00\01\b1Z\ff\01\b5Z\ff\01\bfZ\ff\01\eeZ\ff\01\d6Z\ff\01\ebZ\ff\01\d0\ff\ff\01\bdZ\ff\01\c8u\ff\00\00\00\00\000h\ff\00`\fc\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01(\00\00\00\d8\ff\ff\00\00\00\00\01@\00\00\00\c0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01 \00\00\00\e0\ff\ff\00\00\00\00\01\"\00\00\00\de\ff\ff")
 (data (i32.const 4721) "\02\00\00\01\00\00\00\04\00\00\00\00\02\00\00\00\06\'Qow")
 (data (i32.const 4752) "|\00\00\7f\00\00\00\00\00\00\00\00\83\8e\92\97\00\aa")
 (data (i32.const 4780) "\b4\c4")
 (data (i32.const 4902) "\c6\c9\00\00\00\db")
 (data (i32.const 4991) "\de\00\00\00\00\e1\00\00\00\00\00\00\00\e4")
 (data (i32.const 5016) "\e7")
 (data (i32.const 5102) "\ea")
 (data (i32.const 5225) "\ed")
 (data (i32.const 5248) "\90\01\00\00\01\00\00\00\04\00\00\00\90\01\00\000\0c1\0dx\0e\7f\0f\80\10\81\11\86\12\89\13\8a\13\8e\14\8f\15\90\16\93\13\94\17\95\18\96\19\97\1a\9a\1b\9c\19\9d\1c\9e\1d\9f\1e\a6\1f\a9\1f\ae\1f\b1 \b2 \b7!\bf\"\c5#\c8#\cb#\dd$\f2#\f6%\f7& -:.=/>0?1@1C2D3E4P5Q6R7S8T9Y:[;\\<a=c>e?f@hAiBj@kClDoBqErFuG}H\82I\87J\89K\8aL\8bL\8cM\92N\9dO\9ePEW{\1d|\1d}\1d\7fX\86Y\88Z\89Z\8aZ\8c[\8e\\\8f\\\ac]\ad^\ae^\af^\c2_\cc`\cda\cea\cfb\d0c\d1d\d5e\d6f\d7g\f0h\f1i\f2j\f3k\f4l\f5m\f9n\fd-\fe-\ff-PiQiRiSiTiUiViWiXiYiZi[i\\i]i^i_i\82\00\83\00\84\00\85\00\86\00\87\00\88\00\89\00\c0u\cfv\80\89\81\8a\82\8b\85\8c\86\8dp\9dq\9dv\9ew\9ex\9fy\9fz\a0{\a0|\a1}\a1\b3\a2\ba\a3\bb\a3\bc\a4\be\a5\c3\a2\cc\a4\da\a6\db\a6\e5j\ea\a7\eb\a7\ecn\f3\a2\f8\a8\f9\a8\fa\a9\fb\a9\fc\a4&\b0*\b1+\b2N\b3\84\08b\bac\bbd\bce\bdf\bem\bfn\c0o\c1p\c2~\c3\7f\c3}\cf\8d\d0\94\d1\ab\d2\ac\d3\ad\d4\b0\d5\b1\d6\b2\d7\c4\d8\c5\d9\c6\da")
 (data (i32.const 5664) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00s\00t\00d\00/\00s\00t\00r\00i\00n\00g\00-\00c\00a\00s\00e\00m\00a\00p\00p\00i\00n\00g\00.\00t\00s")
 (data (i32.const 5744) "\a0\0b\00\00\01\00\00\00\04\00\00\00\a0\0b\00\00\12\10\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\10\10\"\10\10\10#$%&\'()\10*+\10\10\10\10\10\10\10\10\10\10\10,-.\10/\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\100\10\10\101\10234567\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\108\10\109:\10;<=\10\10\10\10\10\10>\10\10?\10@ABCDEFGHIJK\10LMN\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10O\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10PQ\10\10\10R\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10S\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10\10TU\10\10\10\10\10\10\10V\10\10\10\10\10WXY\10\10\10\10\10Z[\10\10\10\10\10\10\10\10\10\\\10\10\10\10\10\10\10\10\10\10\10\10")
 (data (i32.const 6304) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\80@\00\04\00\00\00@\01\00\00\00\00\00\00\00\00\a1\90\01")
 (data (i32.const 6390) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff0\04\b0")
 (data (i32.const 6448) "\f8\03")
 (data (i32.const 6475) "\02\00\00\00\00\00\00\fe\ff\ff\ff\ff\bf\b6\00\00\00\00\00\10\00?\00\ff\17\00\00\00\00\01\f8\ff\ff\00\00\01")
 (data (i32.const 6522) "\c0\bf\ff=\00\00\00\80\02\00\00\00\ff\ff\ff\07")
 (data (i32.const 6548) "\c0\ff\01\00\00\00\00\00\00\f8?$\00\00\c0\ff\ff?\00\00\00\00\00\0e")
 (data (i32.const 6586) "\f8\ff\ff\ff\ff\ff\07\00\00\00\00\00\00\14\fe!\fe\00\0c\00\02\00\02\00\00\00\00\00\00\10\1e \00\00\0c\00\00@\06\00\00\00\00\00\00\10\869\02\00\00\00#\00\06\00\00\00\00\00\00\10\be!\00\00\0c\00\00\fc\02\00\00\00\00\00\00\90\1e @\00\0c\00\00\00\04\00\00\00\00\00\00\00\01 \00\00\00\00\00\00\11\00\00\00\00\00\00\c0\c1=`\00\0c\00\00\00\02\00\00\00\00\00\00\90@0\00\00\0c\00\00\00\03\00\00\00\00\00\00\18\1e \00\00\0c")
 (data (i32.const 6745) "\04\\")
 (data (i32.const 6758) "\f2\07\c0\7f")
 (data (i32.const 6774) "\f2\1f@?")
 (data (i32.const 6787) "\03\00\00\a0\02\00\00\00\00\00\00\fe\7f\df\e0\ff\fe\ff\ff\ff\1f@")
 (data (i32.const 6821) "\e0\fdf\00\00\00\c3\01\00\1e\00d \00 ")
 (data (i32.const 6847) "\10")
 (data (i32.const 6859) "\e0")
 (data (i32.const 6882) "\1c\00\00\00\1c\00\00\00\0c\00\00\00\0c\00\00\00\00\00\00\00\b0?@\fe\8f \00\00\00\00\00x\00\00\00\00\00\00\08\00\00\00\00\00\00\00`\00\00\00\00\02")
 (data (i32.const 6948) "\87\01\04\0e")
 (data (i32.const 6978) "\80\t\00\00\00\00\00\00@\7f\e5\1f\f8\9f\00\00\00\00\80\00\ff\7f\00\00\00\00\00\00\00\00\0f\00\00\00\00\00\d0\17\04\00\00\00\00\f8\0f\00\03\00\00\00<;\00\00\00\00\00\00@\a3\03\00\00\00\00\00\00\f0\cf\00\00\00\00\00\00\00\00?")
 (data (i32.const 7066) "\f7\ff\fd!\10\03\00\00\00\00\00\f0\ff\ff\ff\ff\ff\ff\ff\07\00\01\00\00\00\f8\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fb")
 (data (i32.const 7127) "\a0\03\e0\00\e0\00\e0\00`\00\f8\00\03\90|\00\00\00\00\00\00\df\ff\02\80\00\00\ff\1f\00\00\00\00\00\00\ff\ff\ff\ff\01")
 (data (i32.const 7183) "0")
 (data (i32.const 7197) "\80\03")
 (data (i32.const 7213) "\80\00\80")
 (data (i32.const 7228) "\ff\ff\ff\ff\00\00\00\00\00\80")
 (data (i32.const 7264) " \00\00\00\00<>\08")
 (data (i32.const 7283) "~")
 (data (i32.const 7295) "p\00\00 ")
 (data (i32.const 7359) "?\00\10")
 (data (i32.const 7373) "\80\f7\bf\00\00\00\f0")
 (data (i32.const 7390) "\03\00\ff\ff\ff\ff\03")
 (data (i32.const 7406) "\01\00\00\07")
 (data (i32.const 7423) "\03D\08\00\00`")
 (data (i32.const 7448) "0\00\00\00\ff\ff\03\80\00\00\00\00\c0?\00\00\80\ff\03\00\00\00\00\00\07\00\00\00\00\00\c83\00\80\00\00`\00\00\00\00\00\00\00\00~f\00\08\10\00\00\00\00\01\10\00\00\00\00\00\00\9d\c1\02\00\00 \000X")
 (data (i32.const 7531) "\f8")
 (data (i32.const 7548) " !\00\00\00\00\00@")
 (data (i32.const 7574) "\fc\ff\03\00\00\00\00\00\00\00\ff\ff\08\00\ff\ff\00\00\00\00$")
 (data (i32.const 7615) "\80\80@\00\04\00\00\00@\01\00\00\00\00\00\01\00\00\00\00\c0\00\00\00\00\00\00\00\00\08\00\00\0e")
 (data (i32.const 7679) " ")
 (data (i32.const 7708) "\01")
 (data (i32.const 7726) "\c0\07")
 (data (i32.const 7744) "n\f0\00\00\00\00\00\87")
 (data (i32.const 7772) "`\00\00\00\00\00\00\00\f0")
 (data (i32.const 7816) "\c0\ff\01")
 (data (i32.const 7840) "\02\00\00\00\00\00\00\ff\7f\00\00\00\00\00\00\80\03\00\00\00\00\00x&\00 \00\00\00\00\00\00\07\00\00\00\80\ef\1f\00\00\00\00\00\00\00\08\00\03\00\00\00\00\00\c0\7f\00\1e")
 (data (i32.const 7909) "\80\d3@")
 (data (i32.const 7931) "\80\f8\07\00\00\03\00\00\00\00\00\00\18\01\00\00\00\c0\1f\1f")
 (data (i32.const 7975) "\ff\\\00\00@")
 (data (i32.const 7990) "\f8\85\0d")
 (data (i32.const 8022) "<\b0\01\00\000")
 (data (i32.const 8038) "\f8\a7\01")
 (data (i32.const 8053) "(\bf")
 (data (i32.const 8067) "\e0\bc\0f")
 (data (i32.const 8101) "\80\ff\06")
 (data (i32.const 8154) "\f0\0c\01\00\00\00\fe\07\00\00\00\00\f8y\80\00~\0e\00\00\00\00\00\fc\7f\03")
 (data (i32.const 8198) "\7f\bf")
 (data (i32.const 8210) "\fc\ff\ff\fcm")
 (data (i32.const 8230) "~\b4\bf")
 (data (i32.const 8242) "\a3")
 (data (i32.const 8286) "\18\00\00\00\00\00\00\00\ff\01")
 (data (i32.const 8350) "\1f\00\00\00\00\00\00\00\7f\00\0f")
 (data (i32.const 8393) "\80\00\00\00\00\00\00\00\80\ff\ff\00\00\00\00\00\00\00\00\0b")
 (data (i32.const 8435) "`\0f")
 (data (i32.const 8460) "\80\03\f8\ff\e7\0f\00\00\00<")
 (data (i32.const 8488) "\1c")
 (data (i32.const 8512) "\ff\ff\ff\ff\ff\ff\7f\f8\ff\ff\ff\ff\ff\1f \00\10\00\00\f8\fe\ff")
 (data (i32.const 8544) "\7f\ff\ff\f9\db\07")
 (data (i32.const 8582) "\ff?")
 (data (i32.const 8637) "\f0")
 (data (i32.const 8666) "\7f")
 (data (i32.const 8680) "\f0\0f")
 (data (i32.const 8735) "\f8")
 (data (i32.const 8736) " \06\00\00\01\00\00\00\04\00\00\00 \06\00\00\12\13\14\15\16\17\10\10\10\10\10\10\10\10\10\10\18\10\10\19\10\10\10\10\10\10\10\10\1a\1b\11\1c\1d\1e\10\10\1f
 (data (i32.const 9296) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\fe\ff\ff\07\fe\ff\ff\07\00\00\00\00\00\04 \04\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\f7\f0\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ef\ff\ff\ff\ff\01\03\00\00\00\1f")
 (data (i32.const 9432) " \00\00\00\00\00\cf\bc@\d7\ff\ff\fb\ff\ff\ff\ff\ff\ff\ff\ff\ff\bf\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\03\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\fe\ff\ff\ff\7f\00\ff\ff\ff\ff\ff\01")
 (data (i32.const 9540) "\ff\ff\ff\ff\bf \ff\ff\ff\ff\ff\e7")
 (data (i32.const 9572) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff??")
 (data (i32.const 9600) "\ff\01\ff\ff\ff\ff\ff\e7\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\ff\ff??\ff\ff\ff\ff??\ff\aa\ff\ff\ff?\ff\ff\ff\ff\ff\ff\df_\dc\1f\cf\0f\ff\1f\dc\1f")
 (data (i32.const 9694) "\02\80\00\00\ff\1f")
 (data (i32.const 9712) "\84\fc/>P\bd\1f\f2\e0C\00\00\ff\ff\ff\ff\18")
 (data (i32.const 9766) "\c0\ff\ff\ff\ff\ff\ff\03\00\00\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\7f\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\1fx\0c\00\ff\ff\ff\ff\bf ")
 (data (i32.const 9848) "\ff\ff\ff\ff\ff?\00\00\ff\ff\ff?")
 (data (i32.const 9876) "\fc\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ffx\ff\ff\ff\ff\ff\ff|\00\00\00\00\00\00\07\00\00\00\00\00\00\ff\ff\ff\ff\ff\f7\ff\00\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\7f\00\f8")
 (data (i32.const 9972) "\fe\ff\ff\07\fe\ff\ff\07")
 (data (i32.const 10000) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 10022) "\ff\ff\ff\ff\0f\ff\ff\ff\ff\0f")
 (data (i32.const 10048) "\ff\ff\ff\ff\ff\ff\07\00\ff\ff\ff\ff\ff\ff\07")
 (data (i32.const 10084) "\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 10104) "\ff\ff\ff\ff\ff\ff\ff\ff")
 (data (i32.const 10128) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\df\ff\ff\ff\ff\ff\ff\ff\ff\dfd\de\ff\eb\ef\ff\ff\ff\ff\ff\ff\ff\bf\e7\df\df\ff\ff\ff{_\fc\fd\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff?\ff\ff\ff\fd\ff\ff\f7\ff\ff\ff\f7\ff\ff\df\ff\ff\ff\df\ff\ff\7f\ff\ff\ff\7f\ff\ff\ff\fd\ff\ff\ff\fd\ff\ff\f7\0f\00\00\00\00\00\00\ff\ff\ff\ff\ff\ff\ff\ff\0f")
 (data (i32.const 10294) "\ff\ff\ff\03\ff\ff\ff\03\ff\ff\ff\03")
 (data (i32.const 10320) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\000\009\00_\00A\00Z\00 \00a\00z\00.\00!\00\n")
 (data (i32.const 10368) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\000\009\00_\00A\00Z\00 \00A\00Z\00.\00!\00\n")
 (data (i32.const 10416) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\000\009\00_\00A\00Z\00 \00a\00z\00.\00!\00\t")
 (data (i32.const 10464) "\16\00\00\00\01\00\00\00\01\00\00\00\16\00\00\000\009\00_\00a\00z\00 \00a\00z\00.\00!\00\t")
 (data (i32.const 10512) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00D\00e\00r\00 \00W\00e\00c\00h\00s\00e\00l\00 \00a\00l\00l\00e\00i\00n\00 \00i\00s\00t\00 \00d\00a\00s\00 \00B\00e\00s\00t\00\e4\00n\00d\00i\00g\00e")
 (data (i32.const 10608) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00D\00E\00R\00 \00W\00E\00C\00H\00S\00E\00L\00 \00A\00L\00L\00E\00I\00N\00 \00I\00S\00T\00 \00D\00A\00S\00 \00B\00E\00S\00T\00\c4\00N\00D\00I\00G\00E")
 (data (i32.const 10704) "J\00\00\00\01\00\00\00\01\00\00\00J\00\00\00d\00e\00r\00 \00w\00e\00c\00h\00s\00e\00l\00 \00a\00l\00l\00e\00i\00n\00 \00i\00s\00t\00 \00d\00a\00s\00 \00b\00e\00s\00t\00\e4\00n\00d\00i\00g\00e")
 (data (i32.const 10800) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00@\00 \00\14  \00\14\04@\04C\043\04 \00G\045\04;\04>\042\045\04:\040\04!")
 (data (i32.const 10864) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00@\00 \00\14  \00\14\04 \04#\04\13\04 \00\'\04\15\04\1b\04\1e\04\12\04\15\04\1a\04\10\04!")
 (data (i32.const 10928) "$\00\00\00\01\00\00\00\01\00\00\00$\00\00\00@\00 \00\14  \004\04@\04C\043\04 \00G\045\04;\04>\042\045\04:\040\04!")
 (data (i32.const 10992) "D\00\00\00\01\00\00\00\01\00\00\00D\00\00\00.\" \00E\00\c5\"d\00a\00 \00=\00 \00Q\00,\00 \00n\00 \00\92! \00\1e\",\00 \00\11\" \00f\00(\00i\00)\00 \00=\00 \00\0f\" \00g\00(\00i\00)")
 (data (i32.const 11088) "D\00\00\00\01\00\00\00\01\00\00\00D\00\00\00.\" \00E\00\c5\"D\00A\00 \00=\00 \00Q\00,\00 \00N\00 \00\92! \00\1e\",\00 \00\11\" \00F\00(\00I\00)\00 \00=\00 \00\0f\" \00G\00(\00I\00)")
 (data (i32.const 11184) "D\00\00\00\01\00\00\00\01\00\00\00D\00\00\00.\" \00e\00\c5\"d\00a\00 \00=\00 \00q\00,\00 \00n\00 \00\92! \00\1e\",\00 \00\11\" \00f\00(\00i\00)\00 \00=\00 \00\0f\" \00g\00(\00i\00)")
 (data (i32.const 11280) "H\00\00\00\01\00\00\00\01\00\00\00H\00\00\00\f0\00i\00 \001\01n\00t\00Y\02\c8\02n\00\e6\00\83\02Y\02n\00Y\02l\00 \00f\00Y\02\c8\02n\00[\02t\001\01k\00 \00Y\02s\00o\00\8a\02s\00i\00\c8\02e\001\01\83\02n")
 (data (i32.const 11376) "H\00\00\00\01\00\00\00\01\00\00\00H\00\00\00\d0\00I\00 \00I\00N\00T\00\8f\01\c8\02N\00\c6\00\a9\01\8f\01N\00\8f\01L\00 \00F\00\8f\01\c8\02N\00\90\01T\00I\00K\00 \00\8f\01S\00O\00\b1\01S\00I\00\c8\02E\00I\00\a9\01N")
 (data (i32.const 11472) "H\00\00\00\01\00\00\00\01\00\00\00H\00\00\00\f0\00i\00 \00i\00n\00t\00Y\02\c8\02n\00\e6\00\83\02Y\02n\00Y\02l\00 \00f\00Y\02\c8\02n\00[\02t\00i\00k\00 \00Y\02s\00o\00\8a\02s\00i\00\c8\02e\00i\00\83\02n")
 (data (i32.const 11568) ".\00\00\00\01\00\00\00\01\00\00\00.\00\00\00\a3\03r\1f \00\b3\03\bd\03\c9\03\c1\03\af\03\b6\03\c9\03 \00\00\1f\c0\03x\1f \00\c4\03t\1f\bd\03 \00\ba\03\cc\03\c8\03\b7\03")
 (data (i32.const 11632) ".\00\00\00\01\00\00\00\01\00\00\00.\00\00\00\a3\03\c8\1f \00\93\03\9d\03\a9\03\a1\03\8a\03\96\03\a9\03 \00\08\1f\a0\03\f8\1f \00\a4\03\ca\1f\9d\03 \00\9a\03\8c\03\a8\03\97\03")
 (data (i32.const 11696) "0\00\00\00\01\00\00\00\01\00\00\000\00\00\00\c4\03\bf\03\e6\1f \00\c3\03\c0\03\b1\03\b8\03\b9\03\bf\03\e6\1f \00\c4\03t\1f\bd\03 \00\c4\03\c1\03\bf\03\bc\03\b5\03\c1\03\ae\03,")
 (data (i32.const 11760) "4\00\00\00\01\00\00\00\01\00\00\004\00\00\00\a4\03\9f\03\a5\03B\03 \00\a3\03\a0\03\91\03\98\03\99\03\9f\03\a5\03B\03 \00\a4\03\ca\1f\9d\03 \00\a4\03\a1\03\9f\03\9c\03\95\03\a1\03\89\03,")
 (data (i32.const 11840) ",\00\00\00\01\00\00\00\01\00\00\00,\00\00\00\c3\03r\1f \00\b3\03\bd\03\c9\03\c1\03\af\03\b6\03\c9\03 \00\00\1f\c0\03x\1f \00\c4\03t\1f\bd\03 \00D\1f\c8\03\b7\03")
 (data (i32.const 11904) ",\00\00\00\01\00\00\00\01\00\00\00,\00\00\00\a3\03\c8\1f \00\93\03\9d\03\a9\03\a1\03\8a\03\96\03\a9\03 \00\08\1f\a0\03\f8\1f \00\a4\03\ca\1f\9d\03 \00L\1f\a8\03\97\03")
 (data (i32.const 11968) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00\c0\03\bf\03z\1f \00\bc\03r\1f \00\b2\03\af\03\b1\03 \00\bc\03\b5\03\c4\03\c1\03\ac\03\b5\03\b9\03 \00\c4\03t\1f \00\b3\03\c6\1f.")
 (data (i32.const 12048) "4\00\00\00\01\00\00\00\01\00\00\004\00\00\00\a0\03\9f\03\ea\1f \00\9c\03\c8\1f \00\92\03\8a\03\91\03 \00\9c\03\95\03\a4\03\a1\03\86\03\95\03\99\03 \00\a4\03\ca\1f \00\93\03\97\03B\03.")
 (data (i32.const 12128) ".\00\00\00\01\00\00\00\01\00\00\00.\00\00\00\91\03\c0\03\bf\1f \00\c4\03p\1f \00\ba\03\cc\03\ba\03\ba\03\b1\03\bb\03\b1\03 \00\b2\03\b3\03\b1\03\bb\03\bc\03\ad\03\bd\03\b7\03")
 (data (i32.const 12192) ".\00\00\00\01\00\00\00\01\00\00\00.\00\00\00\91\03\a0\03\bf\1f \00\a4\03\ba\1f \00\9a\03\8c\03\9a\03\9a\03\91\03\9b\03\91\03 \00\92\03\93\03\91\03\9b\03\9c\03\88\03\9d\03\97\03")
 (data (i32.const 12256) "(\00\00\00\01\00\00\00\01\00\00\00(\00\00\00\c4\03\f6\1f\bd\03 \00\fe\1f\95\03\bb\03\bb\03\ae\03\bd\03\c9\03\bd\03 \00\c4\03p\1f \001\1f\b5\03\c1\03\ac\03")
 (data (i32.const 12320) "*\00\00\00\01\00\00\00\01\00\00\00*\00\00\00\a4\03\a9\03B\03\9d\03 \00\fe\1f\95\03\9b\03\9b\03\89\03\9d\03\a9\03\9d\03 \00\a4\03\ba\1f \009\1f\95\03\a1\03\86\03")
 (data (i32.const 12384) "2\00\00\00\01\00\00\00\01\00\00\002\00\00\00\ba\03\b1\03v\1f \00\c3\03p\1f\bd\03 \00\c0\03\c1\03\f6\1f\c4\03\b1\03 \00\00\1f\bd\03\b4\03\c1\03\b5\03\b9\03\c9\03\bc\03\ad\03\bd\03\b7\03")
 (data (i32.const 12464) "4\00\00\00\01\00\00\00\01\00\00\004\00\00\00\9a\03\91\03\da\1f \00\a3\03\ba\1f\9d\03 \00\a0\03\a1\03\a9\03B\03\a4\03\91\03 \00\08\1f\9d\03\94\03\a1\03\95\03\99\03\a9\03\9c\03\88\03\9d\03\97\03")
 (data (i32.const 12544) "6\00\00\00\01\00\00\00\01\00\00\006\00\00\00\c7\03\b1\03\d6\1f\c1\03\b5\03,\00 \00f\1f \00\c7\03\b1\03\d6\1f\c1\03\b5\03,\00 \00\bf\1f\95\03\bb\03\b5\03\c5\03\b8\03\b5\03\c1\03\b9\03\ac\03!")
 (data (i32.const 12624) ":\00\00\00\01\00\00\00\01\00\00\00:\00\00\00\a7\03\91\03\99\03B\03\a1\03\95\03,\00 \00n\1f \00\a7\03\91\03\99\03B\03\a1\03\95\03,\00 \00\bf\1f\95\03\9b\03\95\03\a5\03\98\03\95\03\a1\03\99\03\86\03!")
 (data (i32.const 12704) "\80\00\00\00\01\00\00\00\01\00\00\00\80\00\00\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z\00 \00/\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data (i32.const 12848) "\80\00\00\00\01\00\00\00\01\00\00\00\80\00\00\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z\00 \00/\000\001\002\003\004\005\006\007\008\009\00A\00B\00C\00D\00E\00F\00G\00H\00I\00J\00K\00L\00M\00N\00O\00P\00Q\00R\00S\00T\00U\00V\00W\00X\00Y\00Z")
 (data (i32.const 12992) "\80\00\00\00\01\00\00\00\01\00\00\00\80\00\00\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z\00 \00/\000\001\002\003\004\005\006\007\008\009\00a\00b\00c\00d\00e\00f\00g\00h\00i\00j\00k\00l\00m\00n\00o\00p\00q\00r\00s\00t\00u\00v\00w\00x\00y\00z")
 (data (i32.const 13136) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\df")
 (data (i32.const 13168) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00S\00S")
 (data (i32.const 13200) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\000\01")
 (data (i32.const 13232) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00i\00\07\03")
 (data (i32.const 13264) "\ae\00\00\00\01\00\00\00\01\00\00\00\ae\00\00\00\a3\00\a9\00\b5\00\c0\00\c6\00\d6\00\de\00\df\00\e9\00\f6\00\ff\00\13 \14 \18 \1c \1d \1e   \" & 0 \"!S\01`\01x\01~\01\ac  \00\91\03\92\03\93\03\94\03\a9\03\b1\03\b2\03\b3\03\b4\03\c9\03 \00\10\04\11\04\12\04\13\04\14\040\041\042\043\044\04\00\"\02\"\08\"\1d!\'\"*\"a\"\1e\" \00\91!\97!\a8!\bb!\e3! \00\10%<%T%X%\91%\ba%:&@& \00\01\fb\fd\ff@$\82  \1f\02\1e\e5\04\84\1eP\02\d0\02N#\d0\051\05\d0\10")
 (data (i32.const 13456) "\b2\00\00\00\01\00\00\00\01\00\00\00\b2\00\00\00\a3\00\a9\00\9c\03\c0\00\c6\00\d6\00\de\00S\00S\00\c9\00\d6\00x\01\13 \14 \18 \1c \1d \1e   \" & 0 \"!R\01`\01x\01}\01\ac  \00\91\03\92\03\93\03\94\03\a9\03\91\03\92\03\93\03\94\03\a9\03 \00\10\04\11\04\12\04\13\04\14\04\10\04\11\04\12\04\13\04\14\04\00\"\02\"\08\"\1d!\'\"*\"a\"\1e\" \00\91!\97!\a8!\bb!\e3! \00\10%<%T%X%\91%\ba%:&@& \00F\00I\00\fd\ff@$\82 (\1f\02\1e\e4\04\84\1eo,\d0\02N#\d0\051\05\90\1c")
 (data (i32.const 13664) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00s\00s")
 (data (i32.const 13696) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\01\fb")
 (data (i32.const 13728) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00f\00i")
 (data (i32.const 13760) "\b8\00\00\00\01\00\00\00\01\00\00\00\b8\00\00\00A\d8\0e\df \00A\d81\df \00A\d8y\df \00C\d8S\dc \00C\d8x\dc \00C\d8\96\dc \00C\d8\cf\dc \00C\d8\d5\dc \00C\d8\15\dd \00C\d8|\dd \00C\d8\7f\dd \00C\d8\0e\de \00C\d8\0f\de \00C\d8w\de \00C\d8\9d\de \00C\d8\a2\de \00C\d8\d7\de \00C\d8\f9\de \00C\d8\fa\de \00C\d8-\df \00C\d8.\df \00C\d8L\df \00C\d8\b4\df \00C\d8\bc\df \00C\d8\ea\df \00D\d8\\\dc \00D\d8o\dc \00D\d8u\dc \00D\d8v\dc \00D\d8{\dc \00D\d8\c1\dc")
 (data (i32.const 13968) "\1c\00\00\00\01\00\00\00\01\00\00\00\1c\00\00\00~\00l\00i\00b\00/\00s\00t\00r\00i\00n\00g\00.\00t\00s")
 (data (i32.const 14016) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\00\d8\00\dc")
 (data (i32.const 14048) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\88\1f")
 (data (i32.const 14080) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\80\1f")
 (data (i32.const 14112) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\8f\1f")
 (data (i32.const 14144) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\87\1f")
 (data (i32.const 14176) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\fc\1f")
 (data (i32.const 14208) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\f3\1f")
 (data (i32.const 14240) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\a3\03")
 (data (i32.const 14272) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\c3\03")
 (data (i32.const 14304) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00 \00\a3\03")
 (data (i32.const 14336) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00 \00\c3\03")
 (data (i32.const 14368) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\a3\03 ")
 (data (i32.const 14400) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00\c3\03 ")
 (data (i32.const 14432) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00 \00\a3\03 ")
 (data (i32.const 14464) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00 \00\c3\03 ")
 (data (i32.const 14496) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\a3\03 ")
 (data (i32.const 14528) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\c2\03 ")
 (data (i32.const 14560) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\a3\03\n")
 (data (i32.const 14592) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\c2\03\n")
 (data (i32.const 14624) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00a\00\a3\03")
 (data (i32.const 14656) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00a\00\c2\03")
 (data (i32.const 14688) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\a3\03b")
 (data (i32.const 14720) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\c3\03b")
 (data (i32.const 14752) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\a3\03\a3\03 ")
 (data (i32.const 14784) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\c3\03\c2\03 ")
 (data (i32.const 14816) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\001\00\a3\03 ")
 (data (i32.const 14848) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\001\00\c3\03 ")
 (data (i32.const 14880) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00;\00\a3\03 ")
 (data (i32.const 14912) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00;\00\c3\03 ")
 (data (i32.const 14944) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\01\03\a3\03 ")
 (data (i32.const 14976) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\01\03\c3\03 ")
 (data (i32.const 15008) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00\a3\03\01\03\a3\03\01\03 ")
 (data (i32.const 15040) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00\c3\03\01\03\c2\03\01\03 ")
 (data (i32.const 15072) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\a3\03\a3\03-")
 (data (i32.const 15104) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\c3\03\c2\03-")
 (data (i32.const 15136) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00\a3\03\01\03\a3\03\01\03-")
 (data (i32.const 15168) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00\c3\03\01\03\c2\03\01\03-")
 (data (i32.const 15200) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00\a3\03\01\03\a3\03\01\03*s")
 (data (i32.const 15232) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00\c3\03\01\03\c2\03\01\03*s")
 (data (i32.const 15264) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\005\d8\a2\dc\a3\03")
 (data (i32.const 15296) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\005\d8\a2\dc\c2\03")
 (data (i32.const 15328) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00A\00.\00\a3\03")
 (data (i32.const 15360) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00.\00\c2\03")
 (data (i32.const 15392) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00A\00\ad\00\a3\03")
 (data (i32.const 15424) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\ad\00\c2\03")
 (data (i32.const 15456) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\004\d8B\de\a3\03")
 (data (i32.const 15488) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\004\d8B\de\c2\03")
 (data (i32.const 15520) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00E\03\a3\03")
 (data (i32.const 15552) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00E\03\c3\03")
 (data (i32.const 15584) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\91\03E\03\a3\03")
 (data (i32.const 15616) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00\b1\03E\03\c2\03")
 (data (i32.const 15648) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00A\00\a3\03B")
 (data (i32.const 15680) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\00\a3\035\d8\a2\dc")
 (data (i32.const 15712) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\00\c3\035\d8\a2\dc")
 (data (i32.const 15744) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\00\a3\03.\00b")
 (data (i32.const 15776) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\00\c3\03.\00b")
 (data (i32.const 15808) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\00\a3\03\ad\00B")
 (data (i32.const 15840) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\00\c3\03\ad\00b")
 (data (i32.const 15872) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00A\00\a3\034\d8B\deB")
 (data (i32.const 15904) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00a\00\c3\034\d8B\deb")
 (data (i32.const 15936) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00A\00\a3\03E\03")
 (data (i32.const 15968) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\c2\03E\03")
 (data (i32.const 16000) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\00\a3\03E\03\91\03")
 (data (i32.const 16032) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\00\c3\03E\03\b1\03")
 (data (i32.const 16064) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00A\00\0e\18\a3\03")
 (data (i32.const 16096) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\0e\18\c2\03")
 (data (i32.const 16128) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\00\0e\18\a3\03B")
 (data (i32.const 16160) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\00\0e\18\c3\03b")
 (data (i32.const 16192) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00A\00\a3\03\0e\18")
 (data (i32.const 16224) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00a\00\c2\03\0e\18")
 (data (i32.const 16256) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\00\a3\03\0e\18B")
 (data (i32.const 16288) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\00\c3\03\0e\18b")
 (data (i32.const 16320) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00A\00\0e\18\a3\03\0e\18")
 (data (i32.const 16352) "\08\00\00\00\01\00\00\00\01\00\00\00\08\00\00\00a\00\0e\18\c2\03\0e\18")
 (data (i32.const 16384) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00A\00\0e\18\a3\03\0e\18B")
 (data (i32.const 16416) "\n\00\00\00\01\00\00\00\01\00\00\00\n\00\00\00a\00\0e\18\c3\03\0e\18b")
 (data (i32.const 16448) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\00\fb")
 (data (i32.const 16480) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00F\00F")
 (data (i32.const 16512) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00F\00I")
 (data (i32.const 16544) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\02\fb")
 (data (i32.const 16576) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00F\00L")
 (data (i32.const 16608) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\03\fb")
 (data (i32.const 16640) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00F\00F\00I")
 (data (i32.const 16672) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\04\fb")
 (data (i32.const 16704) "\06\00\00\00\01\00\00\00\01\00\00\00\06\00\00\00F\00F\00L")
 (data (i32.const 16736) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\05\fb")
 (data (i32.const 16768) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00S\00T")
 (data (i32.const 16800) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\06\fb")
 (data (i32.const 16832) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\f0\01")
 (data (i32.const 16864) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00J\00\0c\03")
 (data (i32.const 16896) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\96\1e")
 (data (i32.const 16928) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00H\001\03")
 (data (i32.const 16960) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\97\1e")
 (data (i32.const 16992) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00T\00\08\03")
 (data (i32.const 17024) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\98\1e")
 (data (i32.const 17056) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00W\00\n\03")
 (data (i32.const 17088) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\99\1e")
 (data (i32.const 17120) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00Y\00\n\03")
 (data (i32.const 17152) "\02\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\9a\1e")
 (data (i32.const 17184) "\04\00\00\00\01\00\00\00\01\00\00\00\04\00\00\00A\00\be\02")
 (data (i32.const 17216) "@\00\00\00\01\00\00\00\01\00\00\00@\00\00\00o\00r\00i\00g\00L\00o\00w\00e\00r\00C\00o\00d\00e\00 \00!\00=\00 \00e\00x\00p\00e\00c\00t\00L\00o\00w\00e\00r\00C\00o\00d\00e")
 (data (i32.const 17296) "@\00\00\00\01\00\00\00\01\00\00\00@\00\00\00o\00r\00i\00g\00U\00p\00p\00e\00r\00C\00o\00d\00e\00 \00!\00=\00 \00e\00x\00p\00e\00c\00t\00U\00p\00p\00e\00r\00C\00o\00d\00e")
 (global $~lib/rt/tlsf/ROOT (mut i32) (i32.const 0))
 (global $~lib/rt/tlsf/collectLock (mut i32) (i32.const 0))
 (global $~started (mut i32) (i32.const 0))
 (export "_start" (func $~start))
 (export "memory" (memory $0))
 (func $~lib/string/String#get:length (; 9 ;) (param $0 i32) (result i32)
  local.get $0
  i32.const 16
  i32.sub
  i32.load offset=12
  i32.const 1
  i32.shr_u
 )
 (func $~lib/rt/pure/increment (; 10 ;) (param $0 i32)
  (local $1 i32)
  local.get $0
  i32.load offset=4
  local.tee $1
  i32.const -268435456
  i32.and
  local.get $1
  i32.const 1
  i32.add
  i32.const -268435456
  i32.and
  i32.ne
  if
   i32.const 0
   i32.const 48
   i32.const 109
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.add
  i32.store offset=4
  local.get $0
  call $~lib/rt/rtrace/onincrement
  local.get $0
  i32.load
  i32.const 1
  i32.and
  if
   i32.const 0
   i32.const 48
   i32.const 112
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
 )
 (func $~lib/rt/pure/__retain (; 11 ;) (param $0 i32) (result i32)
  local.get $0
  i32.const 17376
  i32.gt_u
  if
   local.get $0
   i32.const 16
   i32.sub
   call $~lib/rt/pure/increment
  end
  local.get $0
 )
 (func $~lib/rt/tlsf/removeBlock (; 12 ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  local.get $1
  i32.load
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 96
   i32.const 277
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const -4
  i32.and
  local.tee $2
  i32.const 16
  i32.ge_u
  if (result i32)
   local.get $2
   i32.const 1073741808
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 96
   i32.const 279
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
   local.set $2
   i32.const 0
  else
   local.get $2
   i32.const 31
   local.get $2
   i32.clz
   i32.sub
   local.tee $3
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $2
   local.get $3
   i32.const 7
   i32.sub
  end
  local.tee $3
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 96
   i32.const 292
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load offset=20
  local.set $4
  local.get $1
  i32.load offset=16
  local.tee $5
  if
   local.get $5
   local.get $4
   i32.store offset=20
  end
  local.get $4
  if
   local.get $4
   local.get $5
   i32.store offset=16
  end
  local.get $1
  local.get $0
  local.get $2
  local.get $3
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  i32.eq
  if
   local.get $0
   local.get $2
   local.get $3
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   local.get $4
   i32.store offset=96
   local.get $4
   i32.eqz
   if
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    local.get $0
    local.get $3
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    i32.const 1
    local.get $2
    i32.shl
    i32.const -1
    i32.xor
    i32.and
    local.tee $1
    i32.store offset=4
    local.get $1
    i32.eqz
    if
     local.get $0
     local.get $0
     i32.load
     i32.const 1
     local.get $3
     i32.shl
     i32.const -1
     i32.xor
     i32.and
     i32.store
    end
   end
  end
 )
 (func $~lib/rt/tlsf/insertBlock (; 13 ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  local.get $1
  i32.eqz
  if
   i32.const 0
   i32.const 96
   i32.const 205
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.load
  local.tee $3
  i32.const 1
  i32.and
  i32.eqz
  if
   i32.const 0
   i32.const 96
   i32.const 207
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 16
  i32.add
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.add
  local.tee $4
  i32.load
  local.tee $5
  i32.const 1
  i32.and
  if
   local.get $3
   i32.const -4
   i32.and
   i32.const 16
   i32.add
   local.get $5
   i32.const -4
   i32.and
   i32.add
   local.tee $2
   i32.const 1073741808
   i32.lt_u
   if
    local.get $0
    local.get $4
    call $~lib/rt/tlsf/removeBlock
    local.get $1
    local.get $2
    local.get $3
    i32.const 3
    i32.and
    i32.or
    local.tee $3
    i32.store
    local.get $1
    i32.const 16
    i32.add
    local.get $1
    i32.load
    i32.const -4
    i32.and
    i32.add
    local.tee $4
    i32.load
    local.set $5
   end
  end
  local.get $3
  i32.const 2
  i32.and
  if
   local.get $1
   i32.const 4
   i32.sub
   i32.load
   local.tee $2
   i32.load
   local.tee $6
   i32.const 1
   i32.and
   i32.eqz
   if
    i32.const 0
    i32.const 96
    i32.const 228
    i32.const 15
    call $~lib/builtins/abort
    unreachable
   end
   local.get $6
   i32.const -4
   i32.and
   i32.const 16
   i32.add
   local.get $3
   i32.const -4
   i32.and
   i32.add
   local.tee $7
   i32.const 1073741808
   i32.lt_u
   if
    local.get $0
    local.get $2
    call $~lib/rt/tlsf/removeBlock
    local.get $2
    local.get $7
    local.get $6
    i32.const 3
    i32.and
    i32.or
    local.tee $3
    i32.store
    local.get $2
    local.set $1
   end
  end
  local.get $4
  local.get $5
  i32.const 2
  i32.or
  i32.store
  local.get $3
  i32.const -4
  i32.and
  local.tee $2
  i32.const 16
  i32.ge_u
  if (result i32)
   local.get $2
   i32.const 1073741808
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 96
   i32.const 243
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $2
  local.get $1
  i32.const 16
  i32.add
  i32.add
  local.get $4
  i32.ne
  if
   i32.const 0
   i32.const 96
   i32.const 244
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $4
  i32.const 4
  i32.sub
  local.get $1
  i32.store
  local.get $2
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $2
   i32.const 4
   i32.shr_u
   local.set $4
   i32.const 0
  else
   local.get $2
   i32.const 31
   local.get $2
   i32.clz
   i32.sub
   local.tee $2
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $4
   local.get $2
   i32.const 7
   i32.sub
  end
  local.tee $3
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $4
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 96
   i32.const 260
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $4
  local.get $3
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=96
  local.set $2
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $1
  local.get $2
  i32.store offset=20
  local.get $2
  if
   local.get $2
   local.get $1
   i32.store offset=16
  end
  local.get $0
  local.get $4
  local.get $3
  i32.const 4
  i32.shl
  i32.add
  i32.const 2
  i32.shl
  i32.add
  local.get $1
  i32.store offset=96
  local.get $0
  local.get $0
  i32.load
  i32.const 1
  local.get $3
  i32.shl
  i32.or
  i32.store
  local.get $0
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  local.get $0
  local.get $3
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const 1
  local.get $4
  i32.shl
  i32.or
  i32.store offset=4
 )
 (func $~lib/rt/tlsf/addMemory (; 14 ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $2
  i32.const 15
  i32.and
  i32.eqz
  i32.const 0
  local.get $1
  i32.const 15
  i32.and
  i32.eqz
  i32.const 0
  local.get $1
  local.get $2
  i32.le_u
  select
  select
  i32.eqz
  if
   i32.const 0
   i32.const 96
   i32.const 386
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.load offset=1568
  local.tee $3
  if
   local.get $1
   local.get $3
   i32.const 16
   i32.add
   i32.lt_u
   if
    i32.const 0
    i32.const 96
    i32.const 396
    i32.const 15
    call $~lib/builtins/abort
    unreachable
   end
   local.get $3
   local.get $1
   i32.const 16
   i32.sub
   i32.eq
   if
    local.get $3
    i32.load
    local.set $4
    local.get $1
    i32.const 16
    i32.sub
    local.set $1
   end
  else
   local.get $1
   local.get $0
   i32.const 1572
   i32.add
   i32.lt_u
   if
    i32.const 0
    i32.const 96
    i32.const 408
    i32.const 4
    call $~lib/builtins/abort
    unreachable
   end
  end
  local.get $2
  local.get $1
  i32.sub
  local.tee $2
  i32.const 48
  i32.lt_u
  if
   return
  end
  local.get $1
  local.get $4
  i32.const 2
  i32.and
  local.get $2
  i32.const 32
  i32.sub
  i32.const 1
  i32.or
  i32.or
  i32.store
  local.get $1
  i32.const 0
  i32.store offset=16
  local.get $1
  i32.const 0
  i32.store offset=20
  local.get $1
  local.get $2
  i32.add
  i32.const 16
  i32.sub
  local.tee $2
  i32.const 2
  i32.store
  local.get $0
  local.get $2
  i32.store offset=1568
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
 )
 (func $~lib/rt/tlsf/maybeInitialize (; 15 ;) (result i32)
  (local $0 i32)
  (local $1 i32)
  (local $2 i32)
  global.get $~lib/rt/tlsf/ROOT
  local.tee $0
  i32.eqz
  if
   i32.const 1
   memory.size
   local.tee $0
   i32.gt_s
   if (result i32)
    i32.const 1
    local.get $0
    i32.sub
    memory.grow
    i32.const 0
    i32.lt_s
   else
    i32.const 0
   end
   if
    unreachable
   end
   i32.const 17376
   local.tee $0
   i32.const 0
   i32.store
   i32.const 18944
   i32.const 0
   i32.store
   loop $for-loop|0
    local.get $1
    i32.const 23
    i32.lt_u
    if
     local.get $1
     i32.const 2
     i32.shl
     i32.const 17376
     i32.add
     i32.const 0
     i32.store offset=4
     i32.const 0
     local.set $2
     loop $for-loop|1
      local.get $2
      i32.const 16
      i32.lt_u
      if
       local.get $1
       i32.const 4
       i32.shl
       local.get $2
       i32.add
       i32.const 2
       i32.shl
       i32.const 17376
       i32.add
       i32.const 0
       i32.store offset=96
       local.get $2
       i32.const 1
       i32.add
       local.set $2
       br $for-loop|1
      end
     end
     local.get $1
     i32.const 1
     i32.add
     local.set $1
     br $for-loop|0
    end
   end
   i32.const 17376
   i32.const 18960
   memory.size
   i32.const 16
   i32.shl
   call $~lib/rt/tlsf/addMemory
   i32.const 17376
   global.set $~lib/rt/tlsf/ROOT
  end
  local.get $0
 )
 (func $~lib/rt/tlsf/prepareSize (; 16 ;) (param $0 i32) (result i32)
  local.get $0
  i32.const 1073741808
  i32.ge_u
  if
   i32.const 144
   i32.const 96
   i32.const 457
   i32.const 29
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  i32.const 15
  i32.add
  i32.const -16
  i32.and
  local.tee $0
  i32.const 16
  local.get $0
  i32.const 16
  i32.gt_u
  select
 )
 (func $~lib/rt/tlsf/searchBlock (; 17 ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $1
  i32.const 256
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 4
   i32.shr_u
   local.set $1
   i32.const 0
  else
   local.get $1
   i32.const 536870904
   i32.lt_u
   if
    local.get $1
    i32.const 1
    i32.const 27
    local.get $1
    i32.clz
    i32.sub
    i32.shl
    i32.add
    i32.const 1
    i32.sub
    local.set $1
   end
   local.get $1
   i32.const 31
   local.get $1
   i32.clz
   i32.sub
   local.tee $2
   i32.const 4
   i32.sub
   i32.shr_u
   i32.const 16
   i32.xor
   local.set $1
   local.get $2
   i32.const 7
   i32.sub
  end
  local.tee $2
  i32.const 23
  i32.lt_u
  if (result i32)
   local.get $1
   i32.const 16
   i32.lt_u
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 96
   i32.const 338
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $2
  i32.const 2
  i32.shl
  i32.add
  i32.load offset=4
  i32.const -1
  local.get $1
  i32.shl
  i32.and
  local.tee $1
  if (result i32)
   local.get $0
   local.get $1
   i32.ctz
   local.get $2
   i32.const 4
   i32.shl
   i32.add
   i32.const 2
   i32.shl
   i32.add
   i32.load offset=96
  else
   local.get $0
   i32.load
   i32.const -1
   local.get $2
   i32.const 1
   i32.add
   i32.shl
   i32.and
   local.tee $1
   if (result i32)
    local.get $0
    local.get $1
    i32.ctz
    local.tee $1
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=4
    local.tee $2
    i32.eqz
    if
     i32.const 0
     i32.const 96
     i32.const 351
     i32.const 17
     call $~lib/builtins/abort
     unreachable
    end
    local.get $0
    local.get $2
    i32.ctz
    local.get $1
    i32.const 4
    i32.shl
    i32.add
    i32.const 2
    i32.shl
    i32.add
    i32.load offset=96
   else
    i32.const 0
   end
  end
 )
 (func $~lib/rt/tlsf/growMemory (; 18 ;) (param $0 i32) (param $1 i32)
  (local $2 i32)
  memory.size
  local.tee $2
  i32.const 16
  local.get $0
  i32.load offset=1568
  local.get $2
  i32.const 16
  i32.shl
  i32.const 16
  i32.sub
  i32.ne
  i32.shl
  local.get $1
  i32.const 1
  i32.const 27
  local.get $1
  i32.clz
  i32.sub
  i32.shl
  i32.const 1
  i32.sub
  i32.add
  local.get $1
  local.get $1
  i32.const 536870904
  i32.lt_u
  select
  i32.add
  i32.const 65535
  i32.add
  i32.const -65536
  i32.and
  i32.const 16
  i32.shr_u
  local.tee $1
  local.get $2
  local.get $1
  i32.gt_s
  select
  memory.grow
  i32.const 0
  i32.lt_s
  if
   local.get $1
   memory.grow
   i32.const 0
   i32.lt_s
   if
    unreachable
   end
  end
  local.get $0
  local.get $2
  i32.const 16
  i32.shl
  memory.size
  i32.const 16
  i32.shl
  call $~lib/rt/tlsf/addMemory
 )
 (func $~lib/rt/tlsf/prepareBlock (; 19 ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  local.get $1
  i32.load
  local.set $3
  local.get $2
  i32.const 15
  i32.and
  if
   i32.const 0
   i32.const 96
   i32.const 365
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const -4
  i32.and
  local.get $2
  i32.sub
  local.tee $4
  i32.const 32
  i32.ge_u
  if
   local.get $1
   local.get $2
   local.get $3
   i32.const 2
   i32.and
   i32.or
   i32.store
   local.get $2
   local.get $1
   i32.const 16
   i32.add
   i32.add
   local.tee $1
   local.get $4
   i32.const 16
   i32.sub
   i32.const 1
   i32.or
   i32.store
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/insertBlock
  else
   local.get $1
   local.get $3
   i32.const -2
   i32.and
   i32.store
   local.get $1
   i32.const 16
   i32.add
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   local.get $1
   i32.const 16
   i32.add
   local.get $1
   i32.load
   i32.const -4
   i32.and
   i32.add
   i32.load
   i32.const -3
   i32.and
   i32.store
  end
 )
 (func $~lib/rt/tlsf/allocateBlock (; 20 ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  global.get $~lib/rt/tlsf/collectLock
  if
   i32.const 0
   i32.const 96
   i32.const 490
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/prepareSize
  local.tee $4
  call $~lib/rt/tlsf/searchBlock
  local.tee $3
  i32.eqz
  if
   i32.const 1
   global.set $~lib/rt/tlsf/collectLock
   i32.const 0
   global.set $~lib/rt/tlsf/collectLock
   local.get $0
   local.get $4
   call $~lib/rt/tlsf/searchBlock
   local.tee $3
   i32.eqz
   if
    local.get $0
    local.get $4
    call $~lib/rt/tlsf/growMemory
    local.get $0
    local.get $4
    call $~lib/rt/tlsf/searchBlock
    local.tee $3
    i32.eqz
    if
     i32.const 0
     i32.const 96
     i32.const 502
     i32.const 19
     call $~lib/builtins/abort
     unreachable
    end
   end
  end
  local.get $3
  i32.load
  i32.const -4
  i32.and
  local.get $4
  i32.lt_u
  if
   i32.const 0
   i32.const 96
   i32.const 510
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $3
  i32.const 0
  i32.store offset=4
  local.get $3
  local.get $2
  i32.store offset=8
  local.get $3
  local.get $1
  i32.store offset=12
  local.get $0
  local.get $3
  call $~lib/rt/tlsf/removeBlock
  local.get $0
  local.get $3
  local.get $4
  call $~lib/rt/tlsf/prepareBlock
  local.get $3
  call $~lib/rt/rtrace/onalloc
  local.get $3
 )
 (func $~lib/rt/tlsf/__alloc (; 21 ;) (param $0 i32) (result i32)
  call $~lib/rt/tlsf/maybeInitialize
  local.get $0
  i32.const 1
  call $~lib/rt/tlsf/allocateBlock
  i32.const 16
  i32.add
 )
 (func $~lib/util/casemap/casemap (; 22 ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $0
  i32.const 8
  i32.shr_u
  local.tee $2
  i32.const 1040
  i32.add
  i32.load8_u
  i32.const 86
  i32.mul
  i32.const 1040
  i32.add
  local.get $0
  i32.const 255
  i32.and
  local.tee $5
  i32.const 3
  i32.div_u
  i32.add
  i32.load8_u
  local.get $5
  i32.const 3
  i32.rem_u
  i32.const 2
  i32.shl
  i32.const 3728
  i32.add
  i32.load
  i32.mul
  i32.const 11
  i32.shr_u
  i32.const 6
  i32.rem_u
  local.get $2
  i32.const 4736
  i32.add
  i32.load8_u
  i32.add
  i32.const 2
  i32.shl
  i32.const 3760
  i32.add
  i32.load
  local.tee $2
  i32.const 8
  i32.shr_s
  local.set $3
  block $folding-inner0
   local.get $2
   i32.const 255
   i32.and
   local.tee $2
   i32.const 2
   i32.lt_u
   br_if $folding-inner0
   local.get $3
   i32.const 255
   i32.and
   local.set $2
   local.get $3
   i32.const 8
   i32.shr_u
   local.set $4
   loop $while-continue|0
    local.get $2
    if
     local.get $4
     local.get $2
     i32.const 1
     i32.shr_u
     local.tee $3
     i32.add
     i32.const 1
     i32.shl
     i32.const 5264
     i32.add
     i32.load8_u
     local.tee $6
     local.get $5
     i32.eq
     if (result i32)
      local.get $3
      local.get $4
      i32.add
      i32.const 1
      i32.shl
      i32.const 5264
      i32.add
      i32.load8_u offset=1
      i32.const 2
      i32.shl
      i32.const 3760
      i32.add
      i32.load
      local.tee $2
      i32.const 8
      i32.shr_s
      local.set $3
      local.get $2
      i32.const 255
      i32.and
      local.tee $2
      i32.const 2
      i32.lt_u
      br_if $folding-inner0
      local.get $0
      i32.const 1
      i32.add
      local.get $1
      i32.const 1
      i32.shl
      i32.sub
      return
     else
      local.get $6
      local.get $5
      i32.gt_u
      if (result i32)
       local.get $3
      else
       local.get $3
       local.get $4
       i32.add
       local.set $4
       local.get $2
       local.get $3
       i32.sub
      end
     end
     local.set $2
     br $while-continue|0
    end
   end
   local.get $0
   return
  end
  local.get $0
  local.get $3
  i32.const 0
  local.get $1
  local.get $2
  i32.xor
  i32.sub
  i32.and
  i32.add
 )
 (func $~lib/rt/tlsf/checkUsedBlock (; 23 ;) (param $0 i32) (result i32)
  (local $1 i32)
  local.get $0
  i32.const 16
  i32.sub
  local.set $1
  local.get $0
  i32.const 15
  i32.and
  i32.eqz
  i32.const 0
  local.get $0
  select
  if (result i32)
   local.get $1
   i32.load
   i32.const 1
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  if (result i32)
   local.get $1
   i32.load offset=4
   i32.const -268435456
   i32.and
   i32.eqz
  else
   i32.const 0
  end
  i32.eqz
  if
   i32.const 0
   i32.const 96
   i32.const 570
   i32.const 2
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
 )
 (func $~lib/memory/memory.copy (; 24 ;) (param $0 i32) (param $1 i32) (param $2 i32)
  (local $3 i32)
  (local $4 i32)
  block $~lib/util/memory/memmove|inlined.0
   local.get $2
   local.set $3
   local.get $0
   local.get $1
   i32.eq
   br_if $~lib/util/memory/memmove|inlined.0
   local.get $0
   local.get $1
   i32.lt_u
   if
    local.get $1
    i32.const 7
    i32.and
    local.get $0
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|0
      local.get $0
      i32.const 7
      i32.and
      if
       local.get $3
       i32.eqz
       br_if $~lib/util/memory/memmove|inlined.0
       local.get $3
       i32.const 1
       i32.sub
       local.set $3
       local.get $0
       local.tee $2
       i32.const 1
       i32.add
       local.set $0
       local.get $1
       local.tee $4
       i32.const 1
       i32.add
       local.set $1
       local.get $2
       local.get $4
       i32.load8_u
       i32.store8
       br $while-continue|0
      end
     end
     loop $while-continue|1
      local.get $3
      i32.const 8
      i32.ge_u
      if
       local.get $0
       local.get $1
       i64.load
       i64.store
       local.get $3
       i32.const 8
       i32.sub
       local.set $3
       local.get $0
       i32.const 8
       i32.add
       local.set $0
       local.get $1
       i32.const 8
       i32.add
       local.set $1
       br $while-continue|1
      end
     end
    end
    loop $while-continue|2
     local.get $3
     if
      local.get $0
      local.tee $2
      i32.const 1
      i32.add
      local.set $0
      local.get $1
      local.tee $4
      i32.const 1
      i32.add
      local.set $1
      local.get $2
      local.get $4
      i32.load8_u
      i32.store8
      local.get $3
      i32.const 1
      i32.sub
      local.set $3
      br $while-continue|2
     end
    end
   else
    local.get $1
    i32.const 7
    i32.and
    local.get $0
    i32.const 7
    i32.and
    i32.eq
    if
     loop $while-continue|3
      local.get $0
      local.get $3
      i32.add
      i32.const 7
      i32.and
      if
       local.get $3
       i32.eqz
       br_if $~lib/util/memory/memmove|inlined.0
       local.get $3
       i32.const 1
       i32.sub
       local.tee $3
       local.get $0
       i32.add
       local.get $1
       local.get $3
       i32.add
       i32.load8_u
       i32.store8
       br $while-continue|3
      end
     end
     loop $while-continue|4
      local.get $3
      i32.const 8
      i32.ge_u
      if
       local.get $3
       i32.const 8
       i32.sub
       local.tee $3
       local.get $0
       i32.add
       local.get $1
       local.get $3
       i32.add
       i64.load
       i64.store
       br $while-continue|4
      end
     end
    end
    loop $while-continue|5
     local.get $3
     if
      local.get $3
      i32.const 1
      i32.sub
      local.tee $3
      local.get $0
      i32.add
      local.get $1
      local.get $3
      i32.add
      i32.load8_u
      i32.store8
      br $while-continue|5
     end
    end
   end
  end
 )
 (func $~lib/rt/tlsf/freeBlock (; 25 ;) (param $0 i32) (param $1 i32)
  local.get $1
  local.get $1
  i32.load
  i32.const 1
  i32.or
  i32.store
  local.get $0
  local.get $1
  call $~lib/rt/tlsf/insertBlock
  local.get $1
  call $~lib/rt/rtrace/onfree
 )
 (func $~lib/rt/tlsf/reallocateBlock (; 26 ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  local.get $2
  call $~lib/rt/tlsf/prepareSize
  local.tee $3
  local.get $1
  i32.load
  local.tee $5
  i32.const -4
  i32.and
  i32.le_u
  if
   local.get $0
   local.get $1
   local.get $3
   call $~lib/rt/tlsf/prepareBlock
   local.get $1
   local.get $2
   i32.store offset=12
   local.get $1
   return
  end
  local.get $1
  i32.const 16
  i32.add
  local.get $1
  i32.load
  i32.const -4
  i32.and
  i32.add
  local.tee $6
  i32.load
  local.tee $4
  i32.const 1
  i32.and
  if
   local.get $5
   i32.const -4
   i32.and
   i32.const 16
   i32.add
   local.get $4
   i32.const -4
   i32.and
   i32.add
   local.tee $4
   local.get $3
   i32.ge_u
   if
    local.get $0
    local.get $6
    call $~lib/rt/tlsf/removeBlock
    local.get $1
    local.get $5
    i32.const 3
    i32.and
    local.get $4
    i32.or
    i32.store
    local.get $1
    local.get $2
    i32.store offset=12
    local.get $0
    local.get $1
    local.get $3
    call $~lib/rt/tlsf/prepareBlock
    local.get $1
    return
   end
  end
  local.get $0
  local.get $2
  local.get $1
  i32.load offset=8
  call $~lib/rt/tlsf/allocateBlock
  local.tee $3
  local.get $1
  i32.load offset=4
  i32.store offset=4
  local.get $3
  i32.const 16
  i32.add
  local.get $1
  i32.const 16
  i32.add
  local.get $2
  call $~lib/memory/memory.copy
  local.get $1
  i32.const 17376
  i32.ge_u
  if
   local.get $1
   local.get $3
   call $~lib/rt/rtrace/onrealloc
   local.get $0
   local.get $1
   call $~lib/rt/tlsf/freeBlock
  end
  local.get $3
 )
 (func $~lib/rt/tlsf/__realloc (; 27 ;) (param $0 i32) (param $1 i32) (result i32)
  call $~lib/rt/tlsf/maybeInitialize
  local.get $0
  call $~lib/rt/tlsf/checkUsedBlock
  local.get $1
  call $~lib/rt/tlsf/reallocateBlock
  i32.const 16
  i32.add
 )
 (func $~lib/string/String#toUpperCase (; 28 ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  local.get $0
  call $~lib/string/String#get:length
  local.tee $7
  i32.eqz
  if
   local.get $0
   call $~lib/rt/pure/__retain
   return
  end
  local.get $7
  i32.const 3
  i32.mul
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $5
  i32.const 208
  call $~lib/string/String#get:length
  local.set $9
  loop $for-loop|0
   local.get $6
   local.get $7
   i32.lt_u
   if
    local.get $6
    i32.const 1
    i32.shl
    local.get $0
    i32.add
    i32.load16_u
    local.tee $1
    i32.const 7
    i32.shr_u
    if
     block $for-continue|0
      local.get $6
      local.get $7
      i32.const 1
      i32.sub
      i32.lt_u
      i32.const 0
      local.get $1
      i32.const 55295
      i32.sub
      i32.const 1025
      i32.lt_u
      select
      if
       local.get $6
       i32.const 1
       i32.shl
       local.get $0
       i32.add
       i32.load16_u offset=2
       local.tee $4
       i32.const 56319
       i32.sub
       i32.const 1025
       i32.lt_u
       if
        local.get $6
        i32.const 1
        i32.add
        local.set $6
        local.get $4
        i32.const 1023
        i32.and
        local.get $1
        local.tee $3
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.or
        i32.const 65536
        i32.add
        local.tee $1
        i32.const 131072
        i32.ge_u
        if
         local.get $2
         i32.const 1
         i32.shl
         local.get $5
         i32.add
         local.get $4
         i32.const 16
         i32.shl
         local.get $3
         i32.or
         i32.store
         local.get $2
         i32.const 1
         i32.add
         local.set $2
         br $for-continue|0
        end
       end
      end
      local.get $1
      i32.const 9424
      i32.sub
      i32.const 25
      i32.le_u
      if
       local.get $2
       i32.const 1
       i32.shl
       local.get $5
       i32.add
       local.get $1
       i32.const 26
       i32.sub
       i32.store16
      else
       i32.const -1
       local.set $3
       local.get $1
       i32.const 223
       i32.sub
       i32.const 64056
       i32.le_u
       if
        block $~lib/util/casemap/bsearch|inlined.0 (result i32)
         local.get $9
         local.set $3
         i32.const 0
         local.set $8
         loop $while-continue|1
          local.get $8
          local.get $3
          i32.le_s
          if
           local.get $3
           local.get $8
           i32.add
           i32.const 3
           i32.shr_u
           i32.const 2
           i32.shl
           local.tee $4
           i32.const 1
           i32.shl
           i32.const 208
           i32.add
           i32.load16_u
           local.get $1
           i32.sub
           local.tee $10
           if
            local.get $10
            i32.const 31
            i32.shr_u
            if
             local.get $4
             i32.const 4
             i32.add
             local.set $8
            else
             local.get $4
             i32.const 4
             i32.sub
             local.set $3
            end
           else
            local.get $4
            br $~lib/util/casemap/bsearch|inlined.0
           end
           br $while-continue|1
          end
         end
         i32.const -1
        end
        local.set $3
       end
       local.get $3
       i32.const -1
       i32.xor
       if
        local.get $3
        i32.const 1
        i32.shl
        i32.const 208
        i32.add
        local.tee $1
        i32.load offset=2
        local.set $3
        local.get $1
        i32.load16_u offset=6
        local.set $1
        local.get $2
        i32.const 1
        i32.shl
        local.get $5
        i32.add
        local.tee $4
        local.get $3
        i32.store
        local.get $4
        local.get $1
        i32.store16 offset=4
        local.get $1
        i32.const 0
        i32.ne
        i32.const 1
        i32.add
        local.get $2
        i32.add
        local.set $2
       else
        local.get $1
        i32.const 1
        call $~lib/util/casemap/casemap
        i32.const 2097151
        i32.and
        local.tee $1
        i32.const 65536
        i32.lt_s
        if
         local.get $2
         i32.const 1
         i32.shl
         local.get $5
         i32.add
         local.get $1
         i32.store16
        else
         local.get $2
         i32.const 1
         i32.shl
         local.get $5
         i32.add
         local.get $1
         i32.const 65536
         i32.sub
         local.tee $1
         i32.const 10
         i32.shr_u
         i32.const 55296
         i32.or
         local.get $1
         i32.const 1023
         i32.and
         i32.const 56320
         i32.or
         i32.const 16
         i32.shl
         i32.or
         i32.store
         local.get $2
         i32.const 1
         i32.add
         local.set $2
        end
       end
      end
     end
    else
     local.get $2
     i32.const 1
     i32.shl
     local.get $5
     i32.add
     local.get $1
     i32.const 97
     i32.sub
     i32.const 26
     i32.lt_u
     i32.const 0
     i32.ne
     i32.const 5
     i32.shl
     i32.const -1
     i32.xor
     local.get $1
     i32.and
     i32.store16
    end
    local.get $6
    i32.const 1
    i32.add
    local.set $6
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $5
  local.get $2
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__realloc
  call $~lib/rt/pure/__retain
 )
 (func $~lib/rt/pure/__release (; 29 ;) (param $0 i32)
  local.get $0
  i32.const 17376
  i32.gt_u
  if
   local.get $0
   i32.const 16
   i32.sub
   call $~lib/rt/pure/decrement
  end
 )
 (func $~lib/util/string/compareImpl (; 30 ;) (param $0 i32) (param $1 i32) (param $2 i32) (result i32)
  (local $3 i32)
  (local $4 i32)
  local.get $0
  i32.const 7
  i32.and
  local.get $1
  i32.const 7
  i32.and
  i32.or
  i32.eqz
  i32.const 0
  local.get $2
  i32.const 4
  i32.ge_u
  select
  if
   loop $do-continue|0
    local.get $0
    i64.load
    local.get $1
    i64.load
    i64.eq
    if
     local.get $0
     i32.const 8
     i32.add
     local.set $0
     local.get $1
     i32.const 8
     i32.add
     local.set $1
     local.get $2
     i32.const 4
     i32.sub
     local.tee $2
     i32.const 4
     i32.ge_u
     br_if $do-continue|0
    end
   end
  end
  loop $while-continue|1
   local.get $2
   local.tee $3
   i32.const 1
   i32.sub
   local.set $2
   local.get $3
   if
    local.get $0
    i32.load16_u
    local.tee $3
    local.get $1
    i32.load16_u
    local.tee $4
    i32.ne
    if
     local.get $3
     local.get $4
     i32.sub
     return
    end
    local.get $0
    i32.const 2
    i32.add
    local.set $0
    local.get $1
    i32.const 2
    i32.add
    local.set $1
    br $while-continue|1
   end
  end
  i32.const 0
 )
 (func $~lib/string/String.__eq (; 31 ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  local.get $0
  local.get $1
  i32.eq
  if
   i32.const 1
   return
  end
  local.get $1
  i32.eqz
  i32.const 1
  local.get $0
  select
  if
   i32.const 0
   return
  end
  local.get $0
  call $~lib/string/String#get:length
  local.tee $2
  local.get $1
  call $~lib/string/String#get:length
  i32.ne
  if
   i32.const 0
   return
  end
  local.get $0
  local.get $1
  local.get $2
  call $~lib/util/string/compareImpl
  i32.eqz
 )
 (func $~lib/util/string/stagedBinaryLookup (; 32 ;) (param $0 i32) (param $1 i32) (result i32)
  local.get $0
  local.get $0
  local.get $1
  i32.const 8
  i32.shr_u
  i32.add
  i32.load8_u
  i32.const 5
  i32.shl
  i32.add
  local.get $1
  i32.const 255
  i32.and
  i32.const 3
  i32.shr_u
  i32.add
  i32.load8_u
  local.get $1
  i32.const 7
  i32.and
  i32.shr_u
  i32.const 1
  i32.and
 )
 (func $~lib/string/String#toLowerCase (; 33 ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  (local $3 i32)
  (local $4 i32)
  (local $5 i32)
  (local $6 i32)
  (local $7 i32)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  local.get $0
  call $~lib/string/String#get:length
  local.tee $7
  i32.eqz
  if
   local.get $0
   call $~lib/rt/pure/__retain
   return
  end
  local.get $7
  i32.const 2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $4
  loop $for-loop|0
   local.get $5
   local.get $7
   i32.lt_u
   if
    local.get $0
    local.get $5
    i32.const 1
    i32.shl
    i32.add
    i32.load16_u
    local.tee $1
    i32.const 7
    i32.shr_u
    if
     block $for-continue|0
      local.get $5
      local.get $7
      i32.const 1
      i32.sub
      i32.lt_u
      i32.const 0
      local.get $1
      i32.const 55295
      i32.sub
      i32.const 1025
      i32.lt_u
      select
      if
       local.get $0
       local.get $5
       i32.const 1
       i32.shl
       i32.add
       i32.load16_u offset=2
       local.tee $3
       i32.const 56319
       i32.sub
       i32.const 1025
       i32.lt_u
       if
        local.get $5
        i32.const 1
        i32.add
        local.set $5
        local.get $3
        i32.const 1023
        i32.and
        local.get $1
        local.tee $8
        i32.const 1023
        i32.and
        i32.const 10
        i32.shl
        i32.or
        i32.const 65536
        i32.add
        local.tee $1
        i32.const 131072
        i32.ge_u
        if
         local.get $4
         local.get $2
         i32.const 1
         i32.shl
         i32.add
         local.get $8
         local.get $3
         i32.const 16
         i32.shl
         i32.or
         i32.store
         local.get $2
         i32.const 1
         i32.add
         local.set $2
         br $for-continue|0
        end
       end
      end
      local.get $1
      i32.const 304
      i32.eq
      if
       local.get $4
       local.get $2
       i32.const 1
       i32.shl
       i32.add
       i32.const 50790505
       i32.store
       local.get $2
       i32.const 1
       i32.add
       local.set $2
      else
       local.get $1
       i32.const 931
       i32.eq
       if
        local.get $4
        local.get $2
        i32.const 1
        i32.shl
        i32.add
        local.get $7
        i32.const 1
        i32.gt_u
        if (result i32)
         block $~lib/util/string/isFinalSigma|inlined.0 (result i32)
          local.get $0
          local.set $8
          i32.const 0
          local.set $9
          i32.const 0
          local.get $5
          local.tee $3
          local.tee $1
          i32.const 30
          i32.sub
          local.tee $6
          i32.const 0
          local.get $6
          i32.gt_s
          select
          local.set $11
          loop $while-continue|1
           local.get $1
           local.get $11
           i32.gt_s
           if
            block $~lib/util/string/codePointBefore|inlined.0
             local.get $1
             local.tee $6
             i32.const 0
             i32.le_s
             if
              i32.const -1
              local.set $1
              br $~lib/util/string/codePointBefore|inlined.0
             end
             local.get $8
             local.get $6
             i32.const 1
             i32.sub
             i32.const 1
             i32.shl
             i32.add
             i32.load16_u
             local.tee $1
             i32.const 64512
             i32.and
             i32.const 56320
             i32.eq
             local.get $6
             i32.const 2
             i32.sub
             i32.const 0
             i32.ge_s
             i32.and
             if
              local.get $8
              local.get $6
              i32.const 2
              i32.sub
              i32.const 1
              i32.shl
              i32.add
              i32.load16_u
              local.tee $10
              i32.const 64512
              i32.and
              i32.const 55296
              i32.eq
              if
               local.get $1
               i32.const 1023
               i32.and
               local.get $10
               i32.const 1023
               i32.and
               i32.const 10
               i32.shl
               i32.add
               i32.const 65536
               i32.add
               local.set $1
               br $~lib/util/string/codePointBefore|inlined.0
              end
             end
             local.get $1
             i32.const 63488
             i32.and
             i32.const 55296
             i32.eq
             if
              i32.const 65533
              local.set $1
             end
            end
            local.get $1
            local.set $10
            local.get $1
            i32.const 918000
            i32.lt_u
            if (result i32)
             i32.const 5760
             local.get $10
             call $~lib/util/string/stagedBinaryLookup
            else
             i32.const 0
            end
            i32.eqz
            if
             local.get $1
             i32.const 127370
             i32.lt_u
             if (result i32)
              i32.const 8752
              local.get $1
              call $~lib/util/string/stagedBinaryLookup
             else
              i32.const 0
             end
             if (result i32)
              i32.const 1
             else
              i32.const 0
              br $~lib/util/string/isFinalSigma|inlined.0
             end
             local.set $9
            end
            local.get $6
            local.get $1
            i32.const 65536
            i32.ge_s
            i32.const 1
            i32.add
            i32.sub
            local.set $1
            br $while-continue|1
           end
          end
          i32.const 0
          local.get $9
          i32.eqz
          br_if $~lib/util/string/isFinalSigma|inlined.0
          drop
          local.get $3
          i32.const 1
          i32.add
          local.tee $1
          i32.const 30
          i32.add
          local.tee $3
          local.get $7
          local.get $3
          local.get $7
          i32.lt_s
          select
          local.set $9
          loop $while-continue|2
           local.get $1
           local.get $9
           i32.lt_s
           if
            local.get $8
            local.get $1
            i32.const 1
            i32.shl
            i32.add
            i32.load16_u
            local.tee $3
            i32.const 64512
            i32.and
            i32.const 55296
            i32.eq
            local.get $7
            local.get $1
            i32.const 1
            i32.add
            i32.ne
            i32.and
            if
             local.get $8
             local.get $1
             i32.const 1
             i32.shl
             i32.add
             i32.load16_u offset=2
             local.tee $6
             i32.const 64512
             i32.and
             i32.const 56320
             i32.eq
             if
              local.get $3
              i32.const 10
              i32.shl
              local.get $6
              i32.add
              i32.const -56613888
              i32.add
              local.set $3
             end
            end
            local.get $3
            i32.const 918000
            i32.lt_u
            if (result i32)
             i32.const 5760
             local.get $3
             call $~lib/util/string/stagedBinaryLookup
            else
             i32.const 0
            end
            i32.eqz
            if
             local.get $3
             i32.const 127370
             i32.lt_u
             if (result i32)
              i32.const 8752
              local.get $3
              call $~lib/util/string/stagedBinaryLookup
             else
              i32.const 0
             end
             i32.eqz
             br $~lib/util/string/isFinalSigma|inlined.0
            end
            local.get $1
            local.get $3
            i32.const 65536
            i32.ge_u
            i32.const 1
            i32.add
            i32.add
            local.set $1
            br $while-continue|2
           end
          end
          i32.const 1
         end
        else
         i32.const 0
        end
        if (result i32)
         i32.const 962
        else
         i32.const 963
        end
        i32.store16
       else
        local.get $1
        i32.const 9398
        i32.sub
        i32.const 25
        i32.le_u
        if
         local.get $4
         local.get $2
         i32.const 1
         i32.shl
         i32.add
         local.get $1
         i32.const 26
         i32.add
         i32.store16
        else
         local.get $1
         i32.const 0
         call $~lib/util/casemap/casemap
         i32.const 2097151
         i32.and
         local.tee $1
         i32.const 65536
         i32.lt_s
         if
          local.get $4
          local.get $2
          i32.const 1
          i32.shl
          i32.add
          local.get $1
          i32.store16
         else
          local.get $4
          local.get $2
          i32.const 1
          i32.shl
          i32.add
          local.get $1
          i32.const 65536
          i32.sub
          local.tee $1
          i32.const 10
          i32.shr_u
          i32.const 55296
          i32.or
          local.get $1
          i32.const 1023
          i32.and
          i32.const 56320
          i32.or
          i32.const 16
          i32.shl
          i32.or
          i32.store
          local.get $2
          i32.const 1
          i32.add
          local.set $2
         end
        end
       end
      end
     end
    else
     local.get $4
     local.get $2
     i32.const 1
     i32.shl
     i32.add
     local.get $1
     local.get $1
     i32.const 65
     i32.sub
     i32.const 26
     i32.lt_u
     i32.const 0
     i32.ne
     i32.const 5
     i32.shl
     i32.or
     i32.store16
    end
    local.get $5
    i32.const 1
    i32.add
    local.set $5
    local.get $2
    i32.const 1
    i32.add
    local.set $2
    br $for-loop|0
   end
  end
  local.get $4
  local.get $2
  i32.const 1
  i32.shl
  call $~lib/rt/tlsf/__realloc
  call $~lib/rt/pure/__retain
 )
 (func $~lib/string/String.fromCodePoint (; 34 ;) (param $0 i32) (result i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.const 1114111
  i32.gt_u
  if
   i32.const 0
   i32.const 13984
   i32.const 33
   i32.const 4
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 2
  local.get $0
  i32.const 65535
  i32.gt_s
  local.tee $2
  i32.shl
  call $~lib/rt/tlsf/__alloc
  local.set $1
  local.get $2
  if
   local.get $1
   local.get $0
   i32.const 65536
   i32.sub
   local.tee $0
   i32.const 10
   i32.shr_u
   i32.const 55296
   i32.or
   local.get $0
   i32.const 1023
   i32.and
   i32.const 56320
   i32.or
   i32.const 16
   i32.shl
   i32.or
   i32.store
  else
   local.get $1
   local.get $0
   i32.store16
  end
  local.get $1
  call $~lib/rt/pure/__retain
 )
 (func $~lib/string/String#codePointAt (; 35 ;) (param $0 i32) (param $1 i32) (result i32)
  (local $2 i32)
  (local $3 i32)
  local.get $1
  local.get $0
  call $~lib/string/String#get:length
  local.tee $3
  i32.ge_u
  if
   i32.const -1
   return
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u
  local.tee $2
  i32.const 64512
  i32.and
  i32.const 55296
  i32.ne
  if (result i32)
   i32.const 1
  else
   local.get $3
   local.get $1
   i32.const 1
   i32.add
   i32.eq
  end
  if
   local.get $2
   return
  end
  local.get $0
  local.get $1
  i32.const 1
  i32.shl
  i32.add
  i32.load16_u offset=2
  local.tee $0
  i32.const 64512
  i32.and
  i32.const 56320
  i32.ne
  if
   local.get $2
   return
  end
  local.get $2
  i32.const 10
  i32.shl
  local.get $0
  i32.add
  i32.const -56613888
  i32.add
 )
 (func $start:std/string-casemapping (; 36 ;)
  (local $0 i32)
  (local $1 i64)
  (local $2 i64)
  (local $3 i64)
  (local $4 i64)
  (local $5 i32)
  (local $6 i32)
  (local $7 i64)
  (local $8 i32)
  (local $9 i32)
  (local $10 i32)
  (local $11 i32)
  (local $12 i32)
  (local $13 i32)
  (local $14 i32)
  (local $15 i32)
  (local $16 i32)
  (local $17 i32)
  (local $18 i32)
  (local $19 i32)
  (local $20 i32)
  (local $21 i32)
  (local $22 i32)
  (local $23 i32)
  (local $24 i32)
  (local $25 i32)
  (local $26 i32)
  (local $27 i32)
  (local $28 i32)
  (local $29 i32)
  (local $30 i32)
  (local $31 i32)
  (local $32 i32)
  (local $33 i32)
  (local $34 i32)
  (local $35 i32)
  (local $36 i32)
  (local $37 i32)
  (local $38 i32)
  (local $39 i32)
  (local $40 i32)
  (local $41 i32)
  (local $42 i32)
  (local $43 i32)
  (local $44 i32)
  (local $45 i32)
  (local $46 i32)
  (local $47 i32)
  (local $48 i32)
  (local $49 i32)
  (local $50 i32)
  (local $51 i32)
  (local $52 i32)
  (local $53 i32)
  (local $54 i32)
  (local $55 i32)
  (local $56 i32)
  (local $57 i32)
  (local $58 i32)
  (local $59 i32)
  (local $60 i32)
  (local $61 i32)
  (local $62 i32)
  (local $63 i32)
  (local $64 i32)
  (local $65 i32)
  (local $66 i32)
  (local $67 i32)
  (local $68 i32)
  (local $69 i32)
  (local $70 i32)
  (local $71 i32)
  (local $72 i32)
  (local $73 i32)
  (local $74 i32)
  (local $75 i32)
  (local $76 i32)
  (local $77 i32)
  (local $78 i32)
  (local $79 i32)
  (local $80 i32)
  (local $81 i32)
  (local $82 i32)
  (local $83 i32)
  (local $84 i32)
  (local $85 i32)
  (local $86 i32)
  (local $87 i32)
  (local $88 i32)
  (local $89 i32)
  (local $90 i32)
  (local $91 i32)
  (local $92 i32)
  (local $93 i32)
  (local $94 i32)
  i32.const 32
  call $~lib/string/String#toUpperCase
  local.tee $9
  i32.const 32
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 8
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 32
  call $~lib/string/String#toLowerCase
  local.tee $10
  i32.const 32
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 9
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 10336
  call $~lib/string/String#toUpperCase
  local.tee $11
  i32.const 10384
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 10
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 10432
  call $~lib/string/String#toLowerCase
  local.tee $12
  i32.const 10480
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 11
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 10528
  call $~lib/string/String#toUpperCase
  local.tee $13
  i32.const 10624
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 12
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 10624
  call $~lib/string/String#toLowerCase
  local.tee $14
  i32.const 10720
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 13
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 10816
  call $~lib/string/String#toUpperCase
  local.tee $15
  i32.const 10880
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 14
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 10880
  call $~lib/string/String#toLowerCase
  local.tee $16
  i32.const 10944
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 15
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 11008
  call $~lib/string/String#toUpperCase
  local.tee $17
  i32.const 11104
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 16
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 11104
  call $~lib/string/String#toLowerCase
  local.tee $18
  i32.const 11200
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 17
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 11296
  call $~lib/string/String#toUpperCase
  local.tee $19
  i32.const 11392
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 18
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 11392
  call $~lib/string/String#toLowerCase
  local.tee $20
  i32.const 11488
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 19
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 11584
  call $~lib/string/String#toUpperCase
  local.tee $21
  i32.const 11648
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 20
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 11712
  call $~lib/string/String#toUpperCase
  local.tee $22
  i32.const 11776
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 21
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 11856
  call $~lib/string/String#toUpperCase
  local.tee $23
  i32.const 11920
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 22
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 11984
  call $~lib/string/String#toUpperCase
  local.tee $24
  i32.const 12064
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 23
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12144
  call $~lib/string/String#toUpperCase
  local.tee $25
  i32.const 12208
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 24
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12272
  call $~lib/string/String#toUpperCase
  local.tee $26
  i32.const 12336
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 25
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12400
  call $~lib/string/String#toUpperCase
  local.tee $27
  i32.const 12480
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 26
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12560
  call $~lib/string/String#toUpperCase
  local.tee $28
  i32.const 12640
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 27
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12720
  call $~lib/string/String#toUpperCase
  local.tee $29
  i32.const 12864
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 28
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 12720
  call $~lib/string/String#toLowerCase
  local.tee $30
  i32.const 13008
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 32
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 13152
  call $~lib/string/String#toUpperCase
  local.tee $31
  i32.const 13184
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 36
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 13216
  call $~lib/string/String#toLowerCase
  local.tee $32
  i32.const 13248
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 37
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 13280
  call $~lib/string/String#toUpperCase
  local.tee $33
  i32.const 13472
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 38
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 13152
  call $~lib/string/String#toUpperCase
  local.tee $34
  call $~lib/string/String#toLowerCase
  local.tee $35
  i32.const 13680
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 42
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 13712
  call $~lib/string/String#toUpperCase
  local.tee $36
  call $~lib/string/String#toLowerCase
  local.tee $37
  i32.const 13744
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 43
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 13776
  call $~lib/string/String#toUpperCase
  local.tee $38
  call $~lib/string/String#toLowerCase
  local.tee $39
  i32.const 13776
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 44
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 65536
  call $~lib/string/String.fromCodePoint
  local.tee $40
  call $~lib/string/String#toLowerCase
  local.tee $41
  i32.const 14032
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 50
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 65536
  call $~lib/string/String.fromCodePoint
  local.tee $42
  call $~lib/string/String#toUpperCase
  local.tee $43
  i32.const 14032
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 51
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14064
  call $~lib/string/String#toLowerCase
  local.tee $44
  i32.const 14096
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 54
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14128
  call $~lib/string/String#toLowerCase
  local.tee $45
  i32.const 14160
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 55
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14192
  call $~lib/string/String#toLowerCase
  local.tee $46
  i32.const 14224
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 56
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14256
  call $~lib/string/String#toLowerCase
  local.tee $47
  i32.const 14288
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 59
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14320
  call $~lib/string/String#toLowerCase
  local.tee $48
  i32.const 14352
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 60
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14384
  call $~lib/string/String#toLowerCase
  local.tee $49
  i32.const 14416
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 61
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14448
  call $~lib/string/String#toLowerCase
  local.tee $50
  i32.const 14480
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 62
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14512
  call $~lib/string/String#toLowerCase
  local.tee $51
  i32.const 14544
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 63
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14576
  call $~lib/string/String#toLowerCase
  local.tee $52
  i32.const 14608
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 64
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14640
  call $~lib/string/String#toLowerCase
  local.tee $53
  i32.const 14672
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 65
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14704
  call $~lib/string/String#toLowerCase
  local.tee $54
  i32.const 14736
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 66
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14768
  call $~lib/string/String#toLowerCase
  local.tee $55
  i32.const 14800
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 67
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14832
  call $~lib/string/String#toLowerCase
  local.tee $56
  i32.const 14864
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 68
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14896
  call $~lib/string/String#toLowerCase
  local.tee $57
  i32.const 14928
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 69
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 14960
  call $~lib/string/String#toLowerCase
  local.tee $58
  i32.const 14992
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 70
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15024
  call $~lib/string/String#toLowerCase
  local.tee $59
  i32.const 15056
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 72
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15088
  call $~lib/string/String#toLowerCase
  local.tee $60
  i32.const 15120
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 73
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15152
  call $~lib/string/String#toLowerCase
  local.tee $61
  i32.const 15184
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 74
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15216
  call $~lib/string/String#toLowerCase
  local.tee $62
  i32.const 15248
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 75
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15280
  call $~lib/string/String#toLowerCase
  local.tee $63
  i32.const 15312
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 78
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15344
  call $~lib/string/String#toLowerCase
  local.tee $64
  i32.const 15376
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 79
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15408
  call $~lib/string/String#toLowerCase
  local.tee $65
  i32.const 15440
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 80
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15472
  call $~lib/string/String#toLowerCase
  local.tee $66
  i32.const 15504
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 81
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15536
  call $~lib/string/String#toLowerCase
  local.tee $67
  i32.const 15568
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 82
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15600
  call $~lib/string/String#toLowerCase
  local.tee $68
  i32.const 15632
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 83
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15664
  call $~lib/string/String#toLowerCase
  local.tee $69
  i32.const 14736
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 84
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15696
  call $~lib/string/String#toLowerCase
  local.tee $70
  i32.const 15728
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 85
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15760
  call $~lib/string/String#toLowerCase
  local.tee $71
  i32.const 15792
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 86
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15824
  call $~lib/string/String#toLowerCase
  local.tee $72
  i32.const 15856
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 87
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15888
  call $~lib/string/String#toLowerCase
  local.tee $73
  i32.const 15920
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 88
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 15952
  call $~lib/string/String#toLowerCase
  local.tee $74
  i32.const 15984
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 89
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16016
  call $~lib/string/String#toLowerCase
  local.tee $75
  i32.const 16048
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 90
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16080
  call $~lib/string/String#toLowerCase
  local.tee $76
  i32.const 16112
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 91
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16144
  call $~lib/string/String#toLowerCase
  local.tee $77
  i32.const 16176
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 92
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16208
  call $~lib/string/String#toLowerCase
  local.tee $78
  i32.const 16240
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 93
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16272
  call $~lib/string/String#toLowerCase
  local.tee $79
  i32.const 16304
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 94
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16336
  call $~lib/string/String#toLowerCase
  local.tee $80
  i32.const 16368
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 95
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16400
  call $~lib/string/String#toLowerCase
  local.tee $81
  i32.const 16432
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 96
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16464
  call $~lib/string/String#toUpperCase
  local.tee $82
  i32.const 16496
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 99
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 13712
  call $~lib/string/String#toUpperCase
  local.tee $83
  i32.const 16528
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 100
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16560
  call $~lib/string/String#toUpperCase
  local.tee $84
  i32.const 16592
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 101
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16624
  call $~lib/string/String#toUpperCase
  local.tee $85
  i32.const 16656
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 102
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16688
  call $~lib/string/String#toUpperCase
  local.tee $86
  i32.const 16720
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 103
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16752
  call $~lib/string/String#toUpperCase
  local.tee $87
  i32.const 16784
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 104
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16816
  call $~lib/string/String#toUpperCase
  local.tee $88
  i32.const 16784
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 105
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16848
  call $~lib/string/String#toUpperCase
  local.tee $89
  i32.const 16880
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 106
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16912
  call $~lib/string/String#toUpperCase
  local.tee $90
  i32.const 16944
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 107
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 16976
  call $~lib/string/String#toUpperCase
  local.tee $91
  i32.const 17008
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 108
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17040
  call $~lib/string/String#toUpperCase
  local.tee $92
  i32.const 17072
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 109
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17104
  call $~lib/string/String#toUpperCase
  local.tee $93
  i32.const 17136
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 110
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  i32.const 17168
  call $~lib/string/String#toUpperCase
  local.tee $94
  i32.const 17200
  call $~lib/string/String.__eq
  i32.eqz
  if
   i32.const 0
   i32.const 5680
   i32.const 111
   i32.const 0
   call $~lib/builtins/abort
   unreachable
  end
  loop $for-loop|0
   local.get $0
   i32.const 1114111
   i32.le_s
   if
    local.get $0
    call $~lib/string/String.fromCodePoint
    local.tee $8
    call $~lib/string/String#toLowerCase
    local.set $5
    local.get $8
    call $~lib/string/String#toUpperCase
    local.set $6
    local.get $5
    i32.const 0
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.set $4
    local.get $5
    i32.const 1
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.tee $1
    i64.const 0
    i64.ge_u
    if
     local.get $4
     local.get $1
     i64.const 16
     i64.shl
     i64.add
     local.set $4
    end
    local.get $5
    i32.const 2
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.tee $1
    i64.const 0
    i64.ge_u
    if
     local.get $4
     local.get $1
     i64.const 32
     i64.shl
     i64.add
     local.set $4
    end
    local.get $6
    i32.const 0
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.set $1
    local.get $6
    i32.const 1
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.tee $2
    i64.const 0
    i64.ge_u
    if
     local.get $1
     local.get $2
     i64.const 16
     i64.shl
     i64.add
     local.set $1
    end
    local.get $6
    i32.const 2
    call $~lib/string/String#codePointAt
    i64.extend_i32_s
    local.tee $2
    i64.const 0
    i64.ge_u
    if
     local.get $1
     local.get $2
     i64.const 32
     i64.shl
     i64.add
     local.set $1
    end
    local.get $0
    i32.const 0
    call $std/string-casemapping/toLowerCaseFromIndex
    i64.extend_i32_s
    local.set $2
    local.get $0
    i32.const 1
    call $std/string-casemapping/toLowerCaseFromIndex
    i64.extend_i32_s
    local.tee $3
    i64.const 0
    i64.ge_u
    if
     local.get $2
     local.get $3
     i64.const 16
     i64.shl
     i64.add
     local.set $2
    end
    local.get $0
    i32.const 2
    call $std/string-casemapping/toLowerCaseFromIndex
    i64.extend_i32_s
    local.tee $3
    i64.const 0
    i64.ge_u
    if
     local.get $2
     local.get $3
     i64.const 32
     i64.shl
     i64.add
     local.set $2
    end
    local.get $0
    i32.const 0
    call $std/string-casemapping/toUpperCaseFromIndex
    i64.extend_i32_s
    local.set $3
    local.get $0
    i32.const 1
    call $std/string-casemapping/toUpperCaseFromIndex
    i64.extend_i32_s
    local.tee $7
    i64.const 0
    i64.ge_u
    if
     local.get $3
     local.get $7
     i64.const 16
     i64.shl
     i64.add
     local.set $3
    end
    local.get $0
    i32.const 2
    call $std/string-casemapping/toUpperCaseFromIndex
    i64.extend_i32_s
    local.tee $7
    i64.const 0
    i64.ge_u
    if
     local.get $3
     local.get $7
     i64.const 32
     i64.shl
     i64.add
     local.set $3
    end
    local.get $2
    local.get $4
    i64.ne
    if
     i32.const 17232
     i32.const 3
     local.get $0
     f64.convert_i32_s
     local.get $4
     f64.convert_i64_u
     local.get $2
     f64.convert_i64_u
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
    end
    local.get $1
    local.get $3
    i64.ne
    if
     i32.const 17312
     i32.const 3
     local.get $0
     f64.convert_i32_s
     local.get $1
     f64.convert_i64_u
     local.get $3
     f64.convert_i64_u
     f64.const 0
     f64.const 0
     call $~lib/builtins/trace
    end
    local.get $2
    local.get $4
    i64.ne
    if
     i32.const 0
     i32.const 5680
     i32.const 148
     i32.const 2
     call $~lib/builtins/abort
     unreachable
    end
    local.get $1
    local.get $3
    i64.ne
    if
     i32.const 0
     i32.const 5680
     i32.const 149
     i32.const 2
     call $~lib/builtins/abort
     unreachable
    end
    local.get $8
    call $~lib/rt/pure/__release
    local.get $5
    call $~lib/rt/pure/__release
    local.get $6
    call $~lib/rt/pure/__release
    local.get $0
    i32.const 1
    i32.add
    local.set $0
    br $for-loop|0
   end
  end
  local.get $9
  call $~lib/rt/pure/__release
  local.get $10
  call $~lib/rt/pure/__release
  local.get $11
  call $~lib/rt/pure/__release
  local.get $12
  call $~lib/rt/pure/__release
  local.get $13
  call $~lib/rt/pure/__release
  local.get $14
  call $~lib/rt/pure/__release
  local.get $15
  call $~lib/rt/pure/__release
  local.get $16
  call $~lib/rt/pure/__release
  local.get $17
  call $~lib/rt/pure/__release
  local.get $18
  call $~lib/rt/pure/__release
  local.get $19
  call $~lib/rt/pure/__release
  local.get $20
  call $~lib/rt/pure/__release
  local.get $21
  call $~lib/rt/pure/__release
  local.get $22
  call $~lib/rt/pure/__release
  local.get $23
  call $~lib/rt/pure/__release
  local.get $24
  call $~lib/rt/pure/__release
  local.get $25
  call $~lib/rt/pure/__release
  local.get $26
  call $~lib/rt/pure/__release
  local.get $27
  call $~lib/rt/pure/__release
  local.get $28
  call $~lib/rt/pure/__release
  local.get $29
  call $~lib/rt/pure/__release
  local.get $30
  call $~lib/rt/pure/__release
  local.get $31
  call $~lib/rt/pure/__release
  local.get $32
  call $~lib/rt/pure/__release
  local.get $33
  call $~lib/rt/pure/__release
  local.get $34
  call $~lib/rt/pure/__release
  local.get $35
  call $~lib/rt/pure/__release
  local.get $36
  call $~lib/rt/pure/__release
  local.get $37
  call $~lib/rt/pure/__release
  local.get $38
  call $~lib/rt/pure/__release
  local.get $39
  call $~lib/rt/pure/__release
  local.get $40
  call $~lib/rt/pure/__release
  local.get $41
  call $~lib/rt/pure/__release
  local.get $42
  call $~lib/rt/pure/__release
  local.get $43
  call $~lib/rt/pure/__release
  local.get $44
  call $~lib/rt/pure/__release
  local.get $45
  call $~lib/rt/pure/__release
  local.get $46
  call $~lib/rt/pure/__release
  local.get $47
  call $~lib/rt/pure/__release
  local.get $48
  call $~lib/rt/pure/__release
  local.get $49
  call $~lib/rt/pure/__release
  local.get $50
  call $~lib/rt/pure/__release
  local.get $51
  call $~lib/rt/pure/__release
  local.get $52
  call $~lib/rt/pure/__release
  local.get $53
  call $~lib/rt/pure/__release
  local.get $54
  call $~lib/rt/pure/__release
  local.get $55
  call $~lib/rt/pure/__release
  local.get $56
  call $~lib/rt/pure/__release
  local.get $57
  call $~lib/rt/pure/__release
  local.get $58
  call $~lib/rt/pure/__release
  local.get $59
  call $~lib/rt/pure/__release
  local.get $60
  call $~lib/rt/pure/__release
  local.get $61
  call $~lib/rt/pure/__release
  local.get $62
  call $~lib/rt/pure/__release
  local.get $63
  call $~lib/rt/pure/__release
  local.get $64
  call $~lib/rt/pure/__release
  local.get $65
  call $~lib/rt/pure/__release
  local.get $66
  call $~lib/rt/pure/__release
  local.get $67
  call $~lib/rt/pure/__release
  local.get $68
  call $~lib/rt/pure/__release
  local.get $69
  call $~lib/rt/pure/__release
  local.get $70
  call $~lib/rt/pure/__release
  local.get $71
  call $~lib/rt/pure/__release
  local.get $72
  call $~lib/rt/pure/__release
  local.get $73
  call $~lib/rt/pure/__release
  local.get $74
  call $~lib/rt/pure/__release
  local.get $75
  call $~lib/rt/pure/__release
  local.get $76
  call $~lib/rt/pure/__release
  local.get $77
  call $~lib/rt/pure/__release
  local.get $78
  call $~lib/rt/pure/__release
  local.get $79
  call $~lib/rt/pure/__release
  local.get $80
  call $~lib/rt/pure/__release
  local.get $81
  call $~lib/rt/pure/__release
  local.get $82
  call $~lib/rt/pure/__release
  local.get $83
  call $~lib/rt/pure/__release
  local.get $84
  call $~lib/rt/pure/__release
  local.get $85
  call $~lib/rt/pure/__release
  local.get $86
  call $~lib/rt/pure/__release
  local.get $87
  call $~lib/rt/pure/__release
  local.get $88
  call $~lib/rt/pure/__release
  local.get $89
  call $~lib/rt/pure/__release
  local.get $90
  call $~lib/rt/pure/__release
  local.get $91
  call $~lib/rt/pure/__release
  local.get $92
  call $~lib/rt/pure/__release
  local.get $93
  call $~lib/rt/pure/__release
  local.get $94
  call $~lib/rt/pure/__release
 )
 (func $~start (; 37 ;)
  global.get $~started
  if
   return
  else
   i32.const 1
   global.set $~started
  end
  call $start:std/string-casemapping
 )
 (func $~lib/rt/pure/decrement (; 38 ;) (param $0 i32)
  (local $1 i32)
  (local $2 i32)
  local.get $0
  i32.load offset=4
  local.tee $2
  i32.const 268435455
  i32.and
  local.set $1
  local.get $0
  call $~lib/rt/rtrace/ondecrement
  local.get $0
  i32.load
  i32.const 1
  i32.and
  if
   i32.const 0
   i32.const 48
   i32.const 122
   i32.const 13
   call $~lib/builtins/abort
   unreachable
  end
  local.get $1
  i32.const 1
  i32.eq
  if
   local.get $0
   i32.const 16
   i32.add
   call $~lib/rt/__visit_members
   local.get $2
   i32.const -2147483648
   i32.and
   if
    i32.const 0
    i32.const 48
    i32.const 126
    i32.const 17
    call $~lib/builtins/abort
    unreachable
   end
   global.get $~lib/rt/tlsf/ROOT
   local.get $0
   call $~lib/rt/tlsf/freeBlock
  else
   local.get $1
   i32.const 0
   i32.le_u
   if
    i32.const 0
    i32.const 48
    i32.const 136
    i32.const 15
    call $~lib/builtins/abort
    unreachable
   end
   local.get $0
   local.get $1
   i32.const 1
   i32.sub
   local.get $2
   i32.const -268435456
   i32.and
   i32.or
   i32.store offset=4
  end
 )
 (func $~lib/rt/__visit_members (; 39 ;) (param $0 i32)
  block $folding-inner0
   block $switch$1$default
    block $switch$1$case$4
     block $switch$1$case$2
      local.get $0
      i32.const 8
      i32.sub
      i32.load
      br_table $switch$1$case$2 $switch$1$case$2 $switch$1$case$4 $folding-inner0 $folding-inner0 $folding-inner0 $switch$1$default
     end
     return
    end
    local.get $0
    i32.load
    local.tee $0
    if
     local.get $0
     i32.const 17376
     i32.ge_u
     if
      local.get $0
      i32.const 16
      i32.sub
      call $~lib/rt/pure/decrement
     end
    end
    return
   end
   unreachable
  end
 )
)

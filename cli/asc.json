{
  "version": {
    "description": "Prints just the compiler's version and exits.",
    "type": "b",
    "alias": "v"
  },
  "help": {
    "description": "Prints this message and exits.",
    "type": "b",
    "alias": "h"
  },
  "optimize": {
    "description": [
      "Optimizes the module. Also has the usual shorthands:",
      "",
      " -O     Uses defaults. Equivalent to -O3s",
      " -O0    Equivalent to --optimizeLevel 0",
      " -O1    Equivalent to --optimizeLevel 1",
      " -O2    Equivalent to --optimizeLevel 2",
      " -O3    Equivalent to --optimizeLevel 3",
      " -Oz    Equivalent to -O but with --shrinkLevel 2",
      " -O3s   Equivalent to -O3 with --shrinkLevel 1 etc.",
      ""
    ],
    "type": "b",
    "alias": "O"
  },
  "optimizeLevel": {
    "description": "How much to focus on optimizing code. [0-3]",
    "type": "i"
  },
  "shrinkLevel": {
    "description": "How much to focus on shrinking code size. [0-2, s=1, z=2]",
    "type": "i"
  },
  "converge": {
    "description": "Re-optimizes until no further improvements can be made.",
    "type": "b",
    "default": false
  },
  "validate": {
    "description": "Validates the module using Binaryen. Exits if invalid.",
    "type": "b",
    "alias": "c",
    "default": false
  },
  "baseDir": {
    "description": "Specifies the base directory of input and output files.",
    "type": "s",
    "default": "."
  },
  "outFile": {
    "description": "Specifies the output file. File extension indicates format.",
    "type": "s",
    "alias": "o"
  },
  "binaryFile": {
    "description": "Specifies the binary output file (.wasm).",
    "type": "s",
    "alias": "b"
  },
  "textFile": {
    "description": "Specifies the text output file (.wat).",
    "type": "s",
    "alias": "t"
  },
  "asmjsFile": {
    "description": "Specifies the asm.js output file (.js).",
    "type": "s",
    "alias": "a"
  },
  "idlFile": {
    "description": "Specifies the WebIDL output file (.webidl).",
    "type": "s",
    "alias": "i"
  },
  "tsdFile": {
    "description": "Specifies the TypeScript definition output file (.d.ts).",
    "type": "s",
    "alias": "d"
  },
  "sourceMap": {
    "description": [
      "Enables source map generation. Optionally takes the URL",
      "used to reference the source map from the binary file."
    ],
    "type": "s"
  },
  "runtime": {
    "description": [
      "Specifies the runtime variant to include in the program.",
      "",
      " full  Default runtime based on TLSF and reference counting.",
      " half  Same as 'full', but not exported to the host.",
      " stub  Minimal stub implementation without free/GC support.",
      " none  Same as 'stub', but not exported to the host.",
      ""
    ],
    "type": "s",
    "default": "full"
  },
  "noUnsafe": {
    "description": [
      "Disallows the use of unsafe features in user code.",
      "Does not affect library files and external modules."
    ],
    "type": "b",
    "default": false
  },
  "debug": {
    "description": "Enables debug information in emitted binaries.",
    "type": "b",
    "default": false
  },
  "noAssert": {
    "description": "Replaces assertions with just their value without trapping.",
    "type": "b",
    "default": false
  },
  "noEmit": {
    "description": "Performs compilation as usual but does not emit code.",
    "type": "b",
    "default": false
  },
  "importMemory": {
    "description": "Imports the memory provided as 'env.memory'.",
    "type": "b",
    "default": false
  },
  "sharedMemory": {
    "description": "Declare memory as shared by settings the max shared memory.",
    "type": "i",
    "default": 0
  },
  "memoryBase": {
    "description": "Sets the start offset of compiler-generated static memory.",
    "type": "i",
    "default": 0
  },
  "importTable": {
    "description": "Imports the function table provided as 'env.table'.",
    "type": "b",
    "default": false
  },
  "exportTable": {
    "description": "Exports the function table as 'table'.",
    "type": "b",
    "default": false
  },
  "explicitStart": {
    "description": "Exports an explicit start function to be called manually.",
    "type": "b",
    "default": false
  },
  "lib": {
    "description": [
      "Adds one or multiple paths to custom library components and",
      "uses exports of all top-level files at this path as globals."
    ],
    "type": "s"
  },
  "path": {
    "description": [
      "Adds one or multiple paths to package resolution, similar",
      "to node_modules. Prefers an 'ascMain' entry in a package's",
      "package.json and falls back to an inner 'assembly/' folder."
    ],
    "type": "S"
  },
  "use": {
    "description": [
      "Aliases a global object under another name, e.g., to switch",
      "the default 'Math' implementation used: --use Math=JSMath"
    ],
    "type": "S",
    "alias": "u"
  },
  "trapMode": {
    "description": [
      "Sets the trap mode to use.",
      "",
      " allow  Allow trapping operations. This is the default.",
      " clamp  Replace trapping operations with clamping semantics.",
      " js     Replace trapping operations with JS semantics.",
      ""
    ],
    "type": "s",
    "default": "allow"
  },
  "runPasses": {
    "description":  [
      "Specifies additional Binaryen passes to run after other",
      "optimizations, if any. See: Binaryen/src/passes/pass.cpp"
    ],
    "type": "s"
  },
  "enable": {
    "description": [
      "Enables WebAssembly features that are disabled by default.",
      "",
      " sign-extension      Sign-extension operations",
      " bulk-memory         Bulk memory operations.",
      " simd                SIMD types and operations.",
      " threads             Threading and atomic operations.",
      " reference-types     Reference types and operations.",
      ""
    ],
    "TODO_doesNothingYet": [
      " nontrapping-f2i     Non-trapping float to integer ops.",
      " exception-handling  Exception handling.",
      " tail-calls          Tail call operations."
    ],
    "type": "s"
  },
  "disable": {
    "description": [
      "Disables WebAssembly features that are enabled by default.",
      "",
      " mutable-globals     Mutable global imports and exports.",
      ""
    ]
  },
  "transform": {
    "description": "Specifies the path to a custom transform to 'require'.",
    "type": "S"
  },
  "pedantic": {
    "description": "Make yourself sad for no good reason.",
    "type": "b",
    "default": false
  },
  "traceResolution": {
    "description": "Enables tracing of package resolution.",
    "type": "b",
    "default": false
  },
  "listFiles": {
    "description": "Lists files to be compiled and exits.",
    "type": "b",
    "default": false
  },
  "measure": {
    "description": "Prints measuring information on I/O and compile times.",
    "type": "b",
    "default": false
  },
  "printrtti": {
    "description": "Prints the module's runtime type information to stderr.",
    "type": "b",
    "default": false
  },
  "noColors": {
    "description": "Disables terminal colors.",
    "type": "b",
    "default": false
  },
  " ...": {
    "description": "Specifies node.js options (CLI only). See: node --help"
  },
  "-Os": { "value": { "optimize": true, "shrinkLevel": 1 } },
  "-Oz": { "value": { "optimize": true, "shrinkLevel": 2 } },
  "-O0": { "value": { "optimizeLevel": 0, "shrinkLevel": 0 } },
  "-O1": { "value": { "optimizeLevel": 1, "shrinkLevel": 0 } },
  "-O2": { "value": { "optimizeLevel": 2, "shrinkLevel": 0 } },
  "-O3": { "value": { "optimizeLevel": 3, "shrinkLevel": 0 } },
  "-O0s": { "value": { "optimizeLevel": 0, "shrinkLevel": 1 } },
  "-O1s": { "value": { "optimizeLevel": 1, "shrinkLevel": 1 } },
  "-O2s": { "value": { "optimizeLevel": 2, "shrinkLevel": 1 } },
  "-O3s": { "value": { "optimizeLevel": 3, "shrinkLevel": 1 } },
  "-O0z": { "value": { "optimizeLevel": 0, "shrinkLevel": 2 } },
  "-O1z": { "value": { "optimizeLevel": 1, "shrinkLevel": 2 } },
  "-O2z": { "value": { "optimizeLevel": 2, "shrinkLevel": 2 } },
  "-O3z": { "value": { "optimizeLevel": 3, "shrinkLevel": 2 } }
}
